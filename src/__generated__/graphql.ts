/* eslint-disable */
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  jsonb: { input: any; output: any; }
  smallint: { input: any; output: any; }
  timestamptz: { input: any; output: any; }
};

/** Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'. */
export type Boolean_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['Boolean']['input']>;
  _gt?: InputMaybe<Scalars['Boolean']['input']>;
  _gte?: InputMaybe<Scalars['Boolean']['input']>;
  _in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['Boolean']['input']>;
  _lte?: InputMaybe<Scalars['Boolean']['input']>;
  _neq?: InputMaybe<Scalars['Boolean']['input']>;
  _nin?: InputMaybe<Array<Scalars['Boolean']['input']>>;
};

/** Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'. */
export type Int_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['Int']['input']>;
  _gt?: InputMaybe<Scalars['Int']['input']>;
  _gte?: InputMaybe<Scalars['Int']['input']>;
  _in?: InputMaybe<Array<Scalars['Int']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['Int']['input']>;
  _lte?: InputMaybe<Scalars['Int']['input']>;
  _neq?: InputMaybe<Scalars['Int']['input']>;
  _nin?: InputMaybe<Array<Scalars['Int']['input']>>;
};

/** Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'. */
export type String_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['String']['input']>;
  _gt?: InputMaybe<Scalars['String']['input']>;
  _gte?: InputMaybe<Scalars['String']['input']>;
  /** does the column match the given case-insensitive pattern */
  _ilike?: InputMaybe<Scalars['String']['input']>;
  _in?: InputMaybe<Array<Scalars['String']['input']>>;
  /** does the column match the given POSIX regular expression, case insensitive */
  _iregex?: InputMaybe<Scalars['String']['input']>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  /** does the column match the given pattern */
  _like?: InputMaybe<Scalars['String']['input']>;
  _lt?: InputMaybe<Scalars['String']['input']>;
  _lte?: InputMaybe<Scalars['String']['input']>;
  _neq?: InputMaybe<Scalars['String']['input']>;
  /** does the column NOT match the given case-insensitive pattern */
  _nilike?: InputMaybe<Scalars['String']['input']>;
  _nin?: InputMaybe<Array<Scalars['String']['input']>>;
  /** does the column NOT match the given POSIX regular expression, case insensitive */
  _niregex?: InputMaybe<Scalars['String']['input']>;
  /** does the column NOT match the given pattern */
  _nlike?: InputMaybe<Scalars['String']['input']>;
  /** does the column NOT match the given POSIX regular expression, case sensitive */
  _nregex?: InputMaybe<Scalars['String']['input']>;
  /** does the column NOT match the given SQL regular expression */
  _nsimilar?: InputMaybe<Scalars['String']['input']>;
  /** does the column match the given POSIX regular expression, case sensitive */
  _regex?: InputMaybe<Scalars['String']['input']>;
  /** does the column match the given SQL regular expression */
  _similar?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "auth_group" */
export type Auth_Group = {
  __typename?: 'auth_group';
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
};

/** aggregated selection of "auth_group" */
export type Auth_Group_Aggregate = {
  __typename?: 'auth_group_aggregate';
  aggregate?: Maybe<Auth_Group_Aggregate_Fields>;
  nodes: Array<Auth_Group>;
};

/** aggregate fields of "auth_group" */
export type Auth_Group_Aggregate_Fields = {
  __typename?: 'auth_group_aggregate_fields';
  avg?: Maybe<Auth_Group_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Auth_Group_Max_Fields>;
  min?: Maybe<Auth_Group_Min_Fields>;
  stddev?: Maybe<Auth_Group_Stddev_Fields>;
  stddev_pop?: Maybe<Auth_Group_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Auth_Group_Stddev_Samp_Fields>;
  sum?: Maybe<Auth_Group_Sum_Fields>;
  var_pop?: Maybe<Auth_Group_Var_Pop_Fields>;
  var_samp?: Maybe<Auth_Group_Var_Samp_Fields>;
  variance?: Maybe<Auth_Group_Variance_Fields>;
};


/** aggregate fields of "auth_group" */
export type Auth_Group_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Auth_Group_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Auth_Group_Avg_Fields = {
  __typename?: 'auth_group_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "auth_group". All fields are combined with a logical 'AND'. */
export type Auth_Group_Bool_Exp = {
  _and?: InputMaybe<Array<Auth_Group_Bool_Exp>>;
  _not?: InputMaybe<Auth_Group_Bool_Exp>;
  _or?: InputMaybe<Array<Auth_Group_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "auth_group" */
export enum Auth_Group_Constraint {
  /** unique or primary key constraint on columns "name" */
  AuthGroupNameKey = 'auth_group_name_key',
  /** unique or primary key constraint on columns "id" */
  AuthGroupPkey = 'auth_group_pkey'
}

/** input type for incrementing numeric columns in table "auth_group" */
export type Auth_Group_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "auth_group" */
export type Auth_Group_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Auth_Group_Max_Fields = {
  __typename?: 'auth_group_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Auth_Group_Min_Fields = {
  __typename?: 'auth_group_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "auth_group" */
export type Auth_Group_Mutation_Response = {
  __typename?: 'auth_group_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Auth_Group>;
};

/** on_conflict condition type for table "auth_group" */
export type Auth_Group_On_Conflict = {
  constraint: Auth_Group_Constraint;
  update_columns?: Array<Auth_Group_Update_Column>;
  where?: InputMaybe<Auth_Group_Bool_Exp>;
};

/** Ordering options when selecting data from "auth_group". */
export type Auth_Group_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** columns and relationships of "auth_group_permissions" */
export type Auth_Group_Permissions = {
  __typename?: 'auth_group_permissions';
  group_id: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  permission_id: Scalars['Int']['output'];
};

/** aggregated selection of "auth_group_permissions" */
export type Auth_Group_Permissions_Aggregate = {
  __typename?: 'auth_group_permissions_aggregate';
  aggregate?: Maybe<Auth_Group_Permissions_Aggregate_Fields>;
  nodes: Array<Auth_Group_Permissions>;
};

/** aggregate fields of "auth_group_permissions" */
export type Auth_Group_Permissions_Aggregate_Fields = {
  __typename?: 'auth_group_permissions_aggregate_fields';
  avg?: Maybe<Auth_Group_Permissions_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Auth_Group_Permissions_Max_Fields>;
  min?: Maybe<Auth_Group_Permissions_Min_Fields>;
  stddev?: Maybe<Auth_Group_Permissions_Stddev_Fields>;
  stddev_pop?: Maybe<Auth_Group_Permissions_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Auth_Group_Permissions_Stddev_Samp_Fields>;
  sum?: Maybe<Auth_Group_Permissions_Sum_Fields>;
  var_pop?: Maybe<Auth_Group_Permissions_Var_Pop_Fields>;
  var_samp?: Maybe<Auth_Group_Permissions_Var_Samp_Fields>;
  variance?: Maybe<Auth_Group_Permissions_Variance_Fields>;
};


/** aggregate fields of "auth_group_permissions" */
export type Auth_Group_Permissions_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Auth_Group_Permissions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Auth_Group_Permissions_Avg_Fields = {
  __typename?: 'auth_group_permissions_avg_fields';
  group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  permission_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "auth_group_permissions". All fields are combined with a logical 'AND'. */
export type Auth_Group_Permissions_Bool_Exp = {
  _and?: InputMaybe<Array<Auth_Group_Permissions_Bool_Exp>>;
  _not?: InputMaybe<Auth_Group_Permissions_Bool_Exp>;
  _or?: InputMaybe<Array<Auth_Group_Permissions_Bool_Exp>>;
  group_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  permission_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "auth_group_permissions" */
export enum Auth_Group_Permissions_Constraint {
  /** unique or primary key constraint on columns "permission_id", "group_id" */
  AuthGroupPermissionsGroupIdPermissionId_0cd325b0Uniq = 'auth_group_permissions_group_id_permission_id_0cd325b0_uniq',
  /** unique or primary key constraint on columns "id" */
  AuthGroupPermissionsPkey = 'auth_group_permissions_pkey'
}

/** input type for incrementing numeric columns in table "auth_group_permissions" */
export type Auth_Group_Permissions_Inc_Input = {
  group_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  permission_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "auth_group_permissions" */
export type Auth_Group_Permissions_Insert_Input = {
  group_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  permission_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Auth_Group_Permissions_Max_Fields = {
  __typename?: 'auth_group_permissions_max_fields';
  group_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  permission_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Auth_Group_Permissions_Min_Fields = {
  __typename?: 'auth_group_permissions_min_fields';
  group_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  permission_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "auth_group_permissions" */
export type Auth_Group_Permissions_Mutation_Response = {
  __typename?: 'auth_group_permissions_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Auth_Group_Permissions>;
};

/** on_conflict condition type for table "auth_group_permissions" */
export type Auth_Group_Permissions_On_Conflict = {
  constraint: Auth_Group_Permissions_Constraint;
  update_columns?: Array<Auth_Group_Permissions_Update_Column>;
  where?: InputMaybe<Auth_Group_Permissions_Bool_Exp>;
};

/** Ordering options when selecting data from "auth_group_permissions". */
export type Auth_Group_Permissions_Order_By = {
  group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  permission_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: auth_group_permissions */
export type Auth_Group_Permissions_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "auth_group_permissions" */
export enum Auth_Group_Permissions_Select_Column {
  /** column name */
  GroupId = 'group_id',
  /** column name */
  Id = 'id',
  /** column name */
  PermissionId = 'permission_id'
}

/** input type for updating data in table "auth_group_permissions" */
export type Auth_Group_Permissions_Set_Input = {
  group_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  permission_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Auth_Group_Permissions_Stddev_Fields = {
  __typename?: 'auth_group_permissions_stddev_fields';
  group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  permission_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Auth_Group_Permissions_Stddev_Pop_Fields = {
  __typename?: 'auth_group_permissions_stddev_pop_fields';
  group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  permission_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Auth_Group_Permissions_Stddev_Samp_Fields = {
  __typename?: 'auth_group_permissions_stddev_samp_fields';
  group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  permission_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "auth_group_permissions" */
export type Auth_Group_Permissions_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Auth_Group_Permissions_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Auth_Group_Permissions_Stream_Cursor_Value_Input = {
  group_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  permission_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Auth_Group_Permissions_Sum_Fields = {
  __typename?: 'auth_group_permissions_sum_fields';
  group_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  permission_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "auth_group_permissions" */
export enum Auth_Group_Permissions_Update_Column {
  /** column name */
  GroupId = 'group_id',
  /** column name */
  Id = 'id',
  /** column name */
  PermissionId = 'permission_id'
}

export type Auth_Group_Permissions_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Auth_Group_Permissions_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Auth_Group_Permissions_Set_Input>;
  /** filter the rows which have to be updated */
  where: Auth_Group_Permissions_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Auth_Group_Permissions_Var_Pop_Fields = {
  __typename?: 'auth_group_permissions_var_pop_fields';
  group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  permission_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Auth_Group_Permissions_Var_Samp_Fields = {
  __typename?: 'auth_group_permissions_var_samp_fields';
  group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  permission_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Auth_Group_Permissions_Variance_Fields = {
  __typename?: 'auth_group_permissions_variance_fields';
  group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  permission_id?: Maybe<Scalars['Float']['output']>;
};

/** primary key columns input for table: auth_group */
export type Auth_Group_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "auth_group" */
export enum Auth_Group_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "auth_group" */
export type Auth_Group_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Auth_Group_Stddev_Fields = {
  __typename?: 'auth_group_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Auth_Group_Stddev_Pop_Fields = {
  __typename?: 'auth_group_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Auth_Group_Stddev_Samp_Fields = {
  __typename?: 'auth_group_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "auth_group" */
export type Auth_Group_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Auth_Group_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Auth_Group_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Auth_Group_Sum_Fields = {
  __typename?: 'auth_group_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "auth_group" */
export enum Auth_Group_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

export type Auth_Group_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Auth_Group_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Auth_Group_Set_Input>;
  /** filter the rows which have to be updated */
  where: Auth_Group_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Auth_Group_Var_Pop_Fields = {
  __typename?: 'auth_group_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Auth_Group_Var_Samp_Fields = {
  __typename?: 'auth_group_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Auth_Group_Variance_Fields = {
  __typename?: 'auth_group_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "auth_permission" */
export type Auth_Permission = {
  __typename?: 'auth_permission';
  codename: Scalars['String']['output'];
  content_type_id: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
};

/** aggregated selection of "auth_permission" */
export type Auth_Permission_Aggregate = {
  __typename?: 'auth_permission_aggregate';
  aggregate?: Maybe<Auth_Permission_Aggregate_Fields>;
  nodes: Array<Auth_Permission>;
};

/** aggregate fields of "auth_permission" */
export type Auth_Permission_Aggregate_Fields = {
  __typename?: 'auth_permission_aggregate_fields';
  avg?: Maybe<Auth_Permission_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Auth_Permission_Max_Fields>;
  min?: Maybe<Auth_Permission_Min_Fields>;
  stddev?: Maybe<Auth_Permission_Stddev_Fields>;
  stddev_pop?: Maybe<Auth_Permission_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Auth_Permission_Stddev_Samp_Fields>;
  sum?: Maybe<Auth_Permission_Sum_Fields>;
  var_pop?: Maybe<Auth_Permission_Var_Pop_Fields>;
  var_samp?: Maybe<Auth_Permission_Var_Samp_Fields>;
  variance?: Maybe<Auth_Permission_Variance_Fields>;
};


/** aggregate fields of "auth_permission" */
export type Auth_Permission_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Auth_Permission_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Auth_Permission_Avg_Fields = {
  __typename?: 'auth_permission_avg_fields';
  content_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "auth_permission". All fields are combined with a logical 'AND'. */
export type Auth_Permission_Bool_Exp = {
  _and?: InputMaybe<Array<Auth_Permission_Bool_Exp>>;
  _not?: InputMaybe<Auth_Permission_Bool_Exp>;
  _or?: InputMaybe<Array<Auth_Permission_Bool_Exp>>;
  codename?: InputMaybe<String_Comparison_Exp>;
  content_type_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "auth_permission" */
export enum Auth_Permission_Constraint {
  /** unique or primary key constraint on columns "codename", "content_type_id" */
  AuthPermissionContentTypeIdCodename_01ab375aUniq = 'auth_permission_content_type_id_codename_01ab375a_uniq',
  /** unique or primary key constraint on columns "id" */
  AuthPermissionPkey = 'auth_permission_pkey'
}

/** input type for incrementing numeric columns in table "auth_permission" */
export type Auth_Permission_Inc_Input = {
  content_type_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "auth_permission" */
export type Auth_Permission_Insert_Input = {
  codename?: InputMaybe<Scalars['String']['input']>;
  content_type_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Auth_Permission_Max_Fields = {
  __typename?: 'auth_permission_max_fields';
  codename?: Maybe<Scalars['String']['output']>;
  content_type_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Auth_Permission_Min_Fields = {
  __typename?: 'auth_permission_min_fields';
  codename?: Maybe<Scalars['String']['output']>;
  content_type_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "auth_permission" */
export type Auth_Permission_Mutation_Response = {
  __typename?: 'auth_permission_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Auth_Permission>;
};

/** on_conflict condition type for table "auth_permission" */
export type Auth_Permission_On_Conflict = {
  constraint: Auth_Permission_Constraint;
  update_columns?: Array<Auth_Permission_Update_Column>;
  where?: InputMaybe<Auth_Permission_Bool_Exp>;
};

/** Ordering options when selecting data from "auth_permission". */
export type Auth_Permission_Order_By = {
  codename?: InputMaybe<Order_By>;
  content_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: auth_permission */
export type Auth_Permission_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "auth_permission" */
export enum Auth_Permission_Select_Column {
  /** column name */
  Codename = 'codename',
  /** column name */
  ContentTypeId = 'content_type_id',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "auth_permission" */
export type Auth_Permission_Set_Input = {
  codename?: InputMaybe<Scalars['String']['input']>;
  content_type_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Auth_Permission_Stddev_Fields = {
  __typename?: 'auth_permission_stddev_fields';
  content_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Auth_Permission_Stddev_Pop_Fields = {
  __typename?: 'auth_permission_stddev_pop_fields';
  content_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Auth_Permission_Stddev_Samp_Fields = {
  __typename?: 'auth_permission_stddev_samp_fields';
  content_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "auth_permission" */
export type Auth_Permission_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Auth_Permission_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Auth_Permission_Stream_Cursor_Value_Input = {
  codename?: InputMaybe<Scalars['String']['input']>;
  content_type_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Auth_Permission_Sum_Fields = {
  __typename?: 'auth_permission_sum_fields';
  content_type_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "auth_permission" */
export enum Auth_Permission_Update_Column {
  /** column name */
  Codename = 'codename',
  /** column name */
  ContentTypeId = 'content_type_id',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

export type Auth_Permission_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Auth_Permission_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Auth_Permission_Set_Input>;
  /** filter the rows which have to be updated */
  where: Auth_Permission_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Auth_Permission_Var_Pop_Fields = {
  __typename?: 'auth_permission_var_pop_fields';
  content_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Auth_Permission_Var_Samp_Fields = {
  __typename?: 'auth_permission_var_samp_fields';
  content_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Auth_Permission_Variance_Fields = {
  __typename?: 'auth_permission_variance_fields';
  content_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "auth_user" */
export type Auth_User = {
  __typename?: 'auth_user';
  date_joined: Scalars['timestamptz']['output'];
  email: Scalars['String']['output'];
  first_name: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  is_active: Scalars['Boolean']['output'];
  is_staff: Scalars['Boolean']['output'];
  is_superuser: Scalars['Boolean']['output'];
  last_login?: Maybe<Scalars['timestamptz']['output']>;
  last_name: Scalars['String']['output'];
  password: Scalars['String']['output'];
  username: Scalars['String']['output'];
};

/** aggregated selection of "auth_user" */
export type Auth_User_Aggregate = {
  __typename?: 'auth_user_aggregate';
  aggregate?: Maybe<Auth_User_Aggregate_Fields>;
  nodes: Array<Auth_User>;
};

/** aggregate fields of "auth_user" */
export type Auth_User_Aggregate_Fields = {
  __typename?: 'auth_user_aggregate_fields';
  avg?: Maybe<Auth_User_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Auth_User_Max_Fields>;
  min?: Maybe<Auth_User_Min_Fields>;
  stddev?: Maybe<Auth_User_Stddev_Fields>;
  stddev_pop?: Maybe<Auth_User_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Auth_User_Stddev_Samp_Fields>;
  sum?: Maybe<Auth_User_Sum_Fields>;
  var_pop?: Maybe<Auth_User_Var_Pop_Fields>;
  var_samp?: Maybe<Auth_User_Var_Samp_Fields>;
  variance?: Maybe<Auth_User_Variance_Fields>;
};


/** aggregate fields of "auth_user" */
export type Auth_User_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Auth_User_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Auth_User_Avg_Fields = {
  __typename?: 'auth_user_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "auth_user". All fields are combined with a logical 'AND'. */
export type Auth_User_Bool_Exp = {
  _and?: InputMaybe<Array<Auth_User_Bool_Exp>>;
  _not?: InputMaybe<Auth_User_Bool_Exp>;
  _or?: InputMaybe<Array<Auth_User_Bool_Exp>>;
  date_joined?: InputMaybe<Timestamptz_Comparison_Exp>;
  email?: InputMaybe<String_Comparison_Exp>;
  first_name?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  is_active?: InputMaybe<Boolean_Comparison_Exp>;
  is_staff?: InputMaybe<Boolean_Comparison_Exp>;
  is_superuser?: InputMaybe<Boolean_Comparison_Exp>;
  last_login?: InputMaybe<Timestamptz_Comparison_Exp>;
  last_name?: InputMaybe<String_Comparison_Exp>;
  password?: InputMaybe<String_Comparison_Exp>;
  username?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "auth_user" */
export enum Auth_User_Constraint {
  /** unique or primary key constraint on columns "id" */
  AuthUserPkey = 'auth_user_pkey',
  /** unique or primary key constraint on columns "username" */
  AuthUserUsernameKey = 'auth_user_username_key'
}

/** columns and relationships of "auth_user_groups" */
export type Auth_User_Groups = {
  __typename?: 'auth_user_groups';
  group_id: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  user_id: Scalars['Int']['output'];
};

/** aggregated selection of "auth_user_groups" */
export type Auth_User_Groups_Aggregate = {
  __typename?: 'auth_user_groups_aggregate';
  aggregate?: Maybe<Auth_User_Groups_Aggregate_Fields>;
  nodes: Array<Auth_User_Groups>;
};

/** aggregate fields of "auth_user_groups" */
export type Auth_User_Groups_Aggregate_Fields = {
  __typename?: 'auth_user_groups_aggregate_fields';
  avg?: Maybe<Auth_User_Groups_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Auth_User_Groups_Max_Fields>;
  min?: Maybe<Auth_User_Groups_Min_Fields>;
  stddev?: Maybe<Auth_User_Groups_Stddev_Fields>;
  stddev_pop?: Maybe<Auth_User_Groups_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Auth_User_Groups_Stddev_Samp_Fields>;
  sum?: Maybe<Auth_User_Groups_Sum_Fields>;
  var_pop?: Maybe<Auth_User_Groups_Var_Pop_Fields>;
  var_samp?: Maybe<Auth_User_Groups_Var_Samp_Fields>;
  variance?: Maybe<Auth_User_Groups_Variance_Fields>;
};


/** aggregate fields of "auth_user_groups" */
export type Auth_User_Groups_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Auth_User_Groups_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Auth_User_Groups_Avg_Fields = {
  __typename?: 'auth_user_groups_avg_fields';
  group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "auth_user_groups". All fields are combined with a logical 'AND'. */
export type Auth_User_Groups_Bool_Exp = {
  _and?: InputMaybe<Array<Auth_User_Groups_Bool_Exp>>;
  _not?: InputMaybe<Auth_User_Groups_Bool_Exp>;
  _or?: InputMaybe<Array<Auth_User_Groups_Bool_Exp>>;
  group_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  user_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "auth_user_groups" */
export enum Auth_User_Groups_Constraint {
  /** unique or primary key constraint on columns "id" */
  AuthUserGroupsPkey = 'auth_user_groups_pkey',
  /** unique or primary key constraint on columns "user_id", "group_id" */
  AuthUserGroupsUserIdGroupId_94350c0cUniq = 'auth_user_groups_user_id_group_id_94350c0c_uniq'
}

/** input type for incrementing numeric columns in table "auth_user_groups" */
export type Auth_User_Groups_Inc_Input = {
  group_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "auth_user_groups" */
export type Auth_User_Groups_Insert_Input = {
  group_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Auth_User_Groups_Max_Fields = {
  __typename?: 'auth_user_groups_max_fields';
  group_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Auth_User_Groups_Min_Fields = {
  __typename?: 'auth_user_groups_min_fields';
  group_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "auth_user_groups" */
export type Auth_User_Groups_Mutation_Response = {
  __typename?: 'auth_user_groups_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Auth_User_Groups>;
};

/** on_conflict condition type for table "auth_user_groups" */
export type Auth_User_Groups_On_Conflict = {
  constraint: Auth_User_Groups_Constraint;
  update_columns?: Array<Auth_User_Groups_Update_Column>;
  where?: InputMaybe<Auth_User_Groups_Bool_Exp>;
};

/** Ordering options when selecting data from "auth_user_groups". */
export type Auth_User_Groups_Order_By = {
  group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: auth_user_groups */
export type Auth_User_Groups_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "auth_user_groups" */
export enum Auth_User_Groups_Select_Column {
  /** column name */
  GroupId = 'group_id',
  /** column name */
  Id = 'id',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "auth_user_groups" */
export type Auth_User_Groups_Set_Input = {
  group_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Auth_User_Groups_Stddev_Fields = {
  __typename?: 'auth_user_groups_stddev_fields';
  group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Auth_User_Groups_Stddev_Pop_Fields = {
  __typename?: 'auth_user_groups_stddev_pop_fields';
  group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Auth_User_Groups_Stddev_Samp_Fields = {
  __typename?: 'auth_user_groups_stddev_samp_fields';
  group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "auth_user_groups" */
export type Auth_User_Groups_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Auth_User_Groups_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Auth_User_Groups_Stream_Cursor_Value_Input = {
  group_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Auth_User_Groups_Sum_Fields = {
  __typename?: 'auth_user_groups_sum_fields';
  group_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "auth_user_groups" */
export enum Auth_User_Groups_Update_Column {
  /** column name */
  GroupId = 'group_id',
  /** column name */
  Id = 'id',
  /** column name */
  UserId = 'user_id'
}

export type Auth_User_Groups_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Auth_User_Groups_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Auth_User_Groups_Set_Input>;
  /** filter the rows which have to be updated */
  where: Auth_User_Groups_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Auth_User_Groups_Var_Pop_Fields = {
  __typename?: 'auth_user_groups_var_pop_fields';
  group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Auth_User_Groups_Var_Samp_Fields = {
  __typename?: 'auth_user_groups_var_samp_fields';
  group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Auth_User_Groups_Variance_Fields = {
  __typename?: 'auth_user_groups_variance_fields';
  group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** input type for incrementing numeric columns in table "auth_user" */
export type Auth_User_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "auth_user" */
export type Auth_User_Insert_Input = {
  date_joined?: InputMaybe<Scalars['timestamptz']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  first_name?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_active?: InputMaybe<Scalars['Boolean']['input']>;
  is_staff?: InputMaybe<Scalars['Boolean']['input']>;
  is_superuser?: InputMaybe<Scalars['Boolean']['input']>;
  last_login?: InputMaybe<Scalars['timestamptz']['input']>;
  last_name?: InputMaybe<Scalars['String']['input']>;
  password?: InputMaybe<Scalars['String']['input']>;
  username?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Auth_User_Max_Fields = {
  __typename?: 'auth_user_max_fields';
  date_joined?: Maybe<Scalars['timestamptz']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  first_name?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  last_login?: Maybe<Scalars['timestamptz']['output']>;
  last_name?: Maybe<Scalars['String']['output']>;
  password?: Maybe<Scalars['String']['output']>;
  username?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Auth_User_Min_Fields = {
  __typename?: 'auth_user_min_fields';
  date_joined?: Maybe<Scalars['timestamptz']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  first_name?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  last_login?: Maybe<Scalars['timestamptz']['output']>;
  last_name?: Maybe<Scalars['String']['output']>;
  password?: Maybe<Scalars['String']['output']>;
  username?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "auth_user" */
export type Auth_User_Mutation_Response = {
  __typename?: 'auth_user_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Auth_User>;
};

/** on_conflict condition type for table "auth_user" */
export type Auth_User_On_Conflict = {
  constraint: Auth_User_Constraint;
  update_columns?: Array<Auth_User_Update_Column>;
  where?: InputMaybe<Auth_User_Bool_Exp>;
};

/** Ordering options when selecting data from "auth_user". */
export type Auth_User_Order_By = {
  date_joined?: InputMaybe<Order_By>;
  email?: InputMaybe<Order_By>;
  first_name?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  is_active?: InputMaybe<Order_By>;
  is_staff?: InputMaybe<Order_By>;
  is_superuser?: InputMaybe<Order_By>;
  last_login?: InputMaybe<Order_By>;
  last_name?: InputMaybe<Order_By>;
  password?: InputMaybe<Order_By>;
  username?: InputMaybe<Order_By>;
};

/** primary key columns input for table: auth_user */
export type Auth_User_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "auth_user" */
export enum Auth_User_Select_Column {
  /** column name */
  DateJoined = 'date_joined',
  /** column name */
  Email = 'email',
  /** column name */
  FirstName = 'first_name',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  IsStaff = 'is_staff',
  /** column name */
  IsSuperuser = 'is_superuser',
  /** column name */
  LastLogin = 'last_login',
  /** column name */
  LastName = 'last_name',
  /** column name */
  Password = 'password',
  /** column name */
  Username = 'username'
}

/** input type for updating data in table "auth_user" */
export type Auth_User_Set_Input = {
  date_joined?: InputMaybe<Scalars['timestamptz']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  first_name?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_active?: InputMaybe<Scalars['Boolean']['input']>;
  is_staff?: InputMaybe<Scalars['Boolean']['input']>;
  is_superuser?: InputMaybe<Scalars['Boolean']['input']>;
  last_login?: InputMaybe<Scalars['timestamptz']['input']>;
  last_name?: InputMaybe<Scalars['String']['input']>;
  password?: InputMaybe<Scalars['String']['input']>;
  username?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Auth_User_Stddev_Fields = {
  __typename?: 'auth_user_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Auth_User_Stddev_Pop_Fields = {
  __typename?: 'auth_user_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Auth_User_Stddev_Samp_Fields = {
  __typename?: 'auth_user_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "auth_user" */
export type Auth_User_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Auth_User_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Auth_User_Stream_Cursor_Value_Input = {
  date_joined?: InputMaybe<Scalars['timestamptz']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  first_name?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_active?: InputMaybe<Scalars['Boolean']['input']>;
  is_staff?: InputMaybe<Scalars['Boolean']['input']>;
  is_superuser?: InputMaybe<Scalars['Boolean']['input']>;
  last_login?: InputMaybe<Scalars['timestamptz']['input']>;
  last_name?: InputMaybe<Scalars['String']['input']>;
  password?: InputMaybe<Scalars['String']['input']>;
  username?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Auth_User_Sum_Fields = {
  __typename?: 'auth_user_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "auth_user" */
export enum Auth_User_Update_Column {
  /** column name */
  DateJoined = 'date_joined',
  /** column name */
  Email = 'email',
  /** column name */
  FirstName = 'first_name',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  IsStaff = 'is_staff',
  /** column name */
  IsSuperuser = 'is_superuser',
  /** column name */
  LastLogin = 'last_login',
  /** column name */
  LastName = 'last_name',
  /** column name */
  Password = 'password',
  /** column name */
  Username = 'username'
}

export type Auth_User_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Auth_User_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Auth_User_Set_Input>;
  /** filter the rows which have to be updated */
  where: Auth_User_Bool_Exp;
};

/** columns and relationships of "auth_user_user_permissions" */
export type Auth_User_User_Permissions = {
  __typename?: 'auth_user_user_permissions';
  id: Scalars['Int']['output'];
  permission_id: Scalars['Int']['output'];
  user_id: Scalars['Int']['output'];
};

/** aggregated selection of "auth_user_user_permissions" */
export type Auth_User_User_Permissions_Aggregate = {
  __typename?: 'auth_user_user_permissions_aggregate';
  aggregate?: Maybe<Auth_User_User_Permissions_Aggregate_Fields>;
  nodes: Array<Auth_User_User_Permissions>;
};

/** aggregate fields of "auth_user_user_permissions" */
export type Auth_User_User_Permissions_Aggregate_Fields = {
  __typename?: 'auth_user_user_permissions_aggregate_fields';
  avg?: Maybe<Auth_User_User_Permissions_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Auth_User_User_Permissions_Max_Fields>;
  min?: Maybe<Auth_User_User_Permissions_Min_Fields>;
  stddev?: Maybe<Auth_User_User_Permissions_Stddev_Fields>;
  stddev_pop?: Maybe<Auth_User_User_Permissions_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Auth_User_User_Permissions_Stddev_Samp_Fields>;
  sum?: Maybe<Auth_User_User_Permissions_Sum_Fields>;
  var_pop?: Maybe<Auth_User_User_Permissions_Var_Pop_Fields>;
  var_samp?: Maybe<Auth_User_User_Permissions_Var_Samp_Fields>;
  variance?: Maybe<Auth_User_User_Permissions_Variance_Fields>;
};


/** aggregate fields of "auth_user_user_permissions" */
export type Auth_User_User_Permissions_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Auth_User_User_Permissions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Auth_User_User_Permissions_Avg_Fields = {
  __typename?: 'auth_user_user_permissions_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  permission_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "auth_user_user_permissions". All fields are combined with a logical 'AND'. */
export type Auth_User_User_Permissions_Bool_Exp = {
  _and?: InputMaybe<Array<Auth_User_User_Permissions_Bool_Exp>>;
  _not?: InputMaybe<Auth_User_User_Permissions_Bool_Exp>;
  _or?: InputMaybe<Array<Auth_User_User_Permissions_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  permission_id?: InputMaybe<Int_Comparison_Exp>;
  user_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "auth_user_user_permissions" */
export enum Auth_User_User_Permissions_Constraint {
  /** unique or primary key constraint on columns "id" */
  AuthUserUserPermissionsPkey = 'auth_user_user_permissions_pkey',
  /** unique or primary key constraint on columns "permission_id", "user_id" */
  AuthUserUserPermissionsUserIdPermissionId_14a6b632Uniq = 'auth_user_user_permissions_user_id_permission_id_14a6b632_uniq'
}

/** input type for incrementing numeric columns in table "auth_user_user_permissions" */
export type Auth_User_User_Permissions_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  permission_id?: InputMaybe<Scalars['Int']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "auth_user_user_permissions" */
export type Auth_User_User_Permissions_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  permission_id?: InputMaybe<Scalars['Int']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Auth_User_User_Permissions_Max_Fields = {
  __typename?: 'auth_user_user_permissions_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  permission_id?: Maybe<Scalars['Int']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Auth_User_User_Permissions_Min_Fields = {
  __typename?: 'auth_user_user_permissions_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  permission_id?: Maybe<Scalars['Int']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "auth_user_user_permissions" */
export type Auth_User_User_Permissions_Mutation_Response = {
  __typename?: 'auth_user_user_permissions_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Auth_User_User_Permissions>;
};

/** on_conflict condition type for table "auth_user_user_permissions" */
export type Auth_User_User_Permissions_On_Conflict = {
  constraint: Auth_User_User_Permissions_Constraint;
  update_columns?: Array<Auth_User_User_Permissions_Update_Column>;
  where?: InputMaybe<Auth_User_User_Permissions_Bool_Exp>;
};

/** Ordering options when selecting data from "auth_user_user_permissions". */
export type Auth_User_User_Permissions_Order_By = {
  id?: InputMaybe<Order_By>;
  permission_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: auth_user_user_permissions */
export type Auth_User_User_Permissions_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "auth_user_user_permissions" */
export enum Auth_User_User_Permissions_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  PermissionId = 'permission_id',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "auth_user_user_permissions" */
export type Auth_User_User_Permissions_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  permission_id?: InputMaybe<Scalars['Int']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Auth_User_User_Permissions_Stddev_Fields = {
  __typename?: 'auth_user_user_permissions_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  permission_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Auth_User_User_Permissions_Stddev_Pop_Fields = {
  __typename?: 'auth_user_user_permissions_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  permission_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Auth_User_User_Permissions_Stddev_Samp_Fields = {
  __typename?: 'auth_user_user_permissions_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  permission_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "auth_user_user_permissions" */
export type Auth_User_User_Permissions_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Auth_User_User_Permissions_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Auth_User_User_Permissions_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  permission_id?: InputMaybe<Scalars['Int']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Auth_User_User_Permissions_Sum_Fields = {
  __typename?: 'auth_user_user_permissions_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  permission_id?: Maybe<Scalars['Int']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "auth_user_user_permissions" */
export enum Auth_User_User_Permissions_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  PermissionId = 'permission_id',
  /** column name */
  UserId = 'user_id'
}

export type Auth_User_User_Permissions_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Auth_User_User_Permissions_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Auth_User_User_Permissions_Set_Input>;
  /** filter the rows which have to be updated */
  where: Auth_User_User_Permissions_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Auth_User_User_Permissions_Var_Pop_Fields = {
  __typename?: 'auth_user_user_permissions_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  permission_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Auth_User_User_Permissions_Var_Samp_Fields = {
  __typename?: 'auth_user_user_permissions_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  permission_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Auth_User_User_Permissions_Variance_Fields = {
  __typename?: 'auth_user_user_permissions_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  permission_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_pop on columns */
export type Auth_User_Var_Pop_Fields = {
  __typename?: 'auth_user_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Auth_User_Var_Samp_Fields = {
  __typename?: 'auth_user_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Auth_User_Variance_Fields = {
  __typename?: 'auth_user_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** ordering argument of a cursor */
export enum Cursor_Ordering {
  /** ascending ordering of the cursor */
  Asc = 'ASC',
  /** descending ordering of the cursor */
  Desc = 'DESC'
}

/** columns and relationships of "django_admin_log" */
export type Django_Admin_Log = {
  __typename?: 'django_admin_log';
  action_flag: Scalars['smallint']['output'];
  action_time: Scalars['timestamptz']['output'];
  change_message: Scalars['String']['output'];
  content_type_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  object_id?: Maybe<Scalars['String']['output']>;
  object_repr: Scalars['String']['output'];
  user_id: Scalars['Int']['output'];
};

/** aggregated selection of "django_admin_log" */
export type Django_Admin_Log_Aggregate = {
  __typename?: 'django_admin_log_aggregate';
  aggregate?: Maybe<Django_Admin_Log_Aggregate_Fields>;
  nodes: Array<Django_Admin_Log>;
};

/** aggregate fields of "django_admin_log" */
export type Django_Admin_Log_Aggregate_Fields = {
  __typename?: 'django_admin_log_aggregate_fields';
  avg?: Maybe<Django_Admin_Log_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Django_Admin_Log_Max_Fields>;
  min?: Maybe<Django_Admin_Log_Min_Fields>;
  stddev?: Maybe<Django_Admin_Log_Stddev_Fields>;
  stddev_pop?: Maybe<Django_Admin_Log_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Django_Admin_Log_Stddev_Samp_Fields>;
  sum?: Maybe<Django_Admin_Log_Sum_Fields>;
  var_pop?: Maybe<Django_Admin_Log_Var_Pop_Fields>;
  var_samp?: Maybe<Django_Admin_Log_Var_Samp_Fields>;
  variance?: Maybe<Django_Admin_Log_Variance_Fields>;
};


/** aggregate fields of "django_admin_log" */
export type Django_Admin_Log_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Django_Admin_Log_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Django_Admin_Log_Avg_Fields = {
  __typename?: 'django_admin_log_avg_fields';
  action_flag?: Maybe<Scalars['Float']['output']>;
  content_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "django_admin_log". All fields are combined with a logical 'AND'. */
export type Django_Admin_Log_Bool_Exp = {
  _and?: InputMaybe<Array<Django_Admin_Log_Bool_Exp>>;
  _not?: InputMaybe<Django_Admin_Log_Bool_Exp>;
  _or?: InputMaybe<Array<Django_Admin_Log_Bool_Exp>>;
  action_flag?: InputMaybe<Smallint_Comparison_Exp>;
  action_time?: InputMaybe<Timestamptz_Comparison_Exp>;
  change_message?: InputMaybe<String_Comparison_Exp>;
  content_type_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  object_id?: InputMaybe<String_Comparison_Exp>;
  object_repr?: InputMaybe<String_Comparison_Exp>;
  user_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "django_admin_log" */
export enum Django_Admin_Log_Constraint {
  /** unique or primary key constraint on columns "id" */
  DjangoAdminLogPkey = 'django_admin_log_pkey'
}

/** input type for incrementing numeric columns in table "django_admin_log" */
export type Django_Admin_Log_Inc_Input = {
  action_flag?: InputMaybe<Scalars['smallint']['input']>;
  content_type_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "django_admin_log" */
export type Django_Admin_Log_Insert_Input = {
  action_flag?: InputMaybe<Scalars['smallint']['input']>;
  action_time?: InputMaybe<Scalars['timestamptz']['input']>;
  change_message?: InputMaybe<Scalars['String']['input']>;
  content_type_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  object_id?: InputMaybe<Scalars['String']['input']>;
  object_repr?: InputMaybe<Scalars['String']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Django_Admin_Log_Max_Fields = {
  __typename?: 'django_admin_log_max_fields';
  action_flag?: Maybe<Scalars['smallint']['output']>;
  action_time?: Maybe<Scalars['timestamptz']['output']>;
  change_message?: Maybe<Scalars['String']['output']>;
  content_type_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  object_id?: Maybe<Scalars['String']['output']>;
  object_repr?: Maybe<Scalars['String']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Django_Admin_Log_Min_Fields = {
  __typename?: 'django_admin_log_min_fields';
  action_flag?: Maybe<Scalars['smallint']['output']>;
  action_time?: Maybe<Scalars['timestamptz']['output']>;
  change_message?: Maybe<Scalars['String']['output']>;
  content_type_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  object_id?: Maybe<Scalars['String']['output']>;
  object_repr?: Maybe<Scalars['String']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "django_admin_log" */
export type Django_Admin_Log_Mutation_Response = {
  __typename?: 'django_admin_log_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Django_Admin_Log>;
};

/** on_conflict condition type for table "django_admin_log" */
export type Django_Admin_Log_On_Conflict = {
  constraint: Django_Admin_Log_Constraint;
  update_columns?: Array<Django_Admin_Log_Update_Column>;
  where?: InputMaybe<Django_Admin_Log_Bool_Exp>;
};

/** Ordering options when selecting data from "django_admin_log". */
export type Django_Admin_Log_Order_By = {
  action_flag?: InputMaybe<Order_By>;
  action_time?: InputMaybe<Order_By>;
  change_message?: InputMaybe<Order_By>;
  content_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  object_id?: InputMaybe<Order_By>;
  object_repr?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: django_admin_log */
export type Django_Admin_Log_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "django_admin_log" */
export enum Django_Admin_Log_Select_Column {
  /** column name */
  ActionFlag = 'action_flag',
  /** column name */
  ActionTime = 'action_time',
  /** column name */
  ChangeMessage = 'change_message',
  /** column name */
  ContentTypeId = 'content_type_id',
  /** column name */
  Id = 'id',
  /** column name */
  ObjectId = 'object_id',
  /** column name */
  ObjectRepr = 'object_repr',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "django_admin_log" */
export type Django_Admin_Log_Set_Input = {
  action_flag?: InputMaybe<Scalars['smallint']['input']>;
  action_time?: InputMaybe<Scalars['timestamptz']['input']>;
  change_message?: InputMaybe<Scalars['String']['input']>;
  content_type_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  object_id?: InputMaybe<Scalars['String']['input']>;
  object_repr?: InputMaybe<Scalars['String']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Django_Admin_Log_Stddev_Fields = {
  __typename?: 'django_admin_log_stddev_fields';
  action_flag?: Maybe<Scalars['Float']['output']>;
  content_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Django_Admin_Log_Stddev_Pop_Fields = {
  __typename?: 'django_admin_log_stddev_pop_fields';
  action_flag?: Maybe<Scalars['Float']['output']>;
  content_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Django_Admin_Log_Stddev_Samp_Fields = {
  __typename?: 'django_admin_log_stddev_samp_fields';
  action_flag?: Maybe<Scalars['Float']['output']>;
  content_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "django_admin_log" */
export type Django_Admin_Log_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Django_Admin_Log_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Django_Admin_Log_Stream_Cursor_Value_Input = {
  action_flag?: InputMaybe<Scalars['smallint']['input']>;
  action_time?: InputMaybe<Scalars['timestamptz']['input']>;
  change_message?: InputMaybe<Scalars['String']['input']>;
  content_type_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  object_id?: InputMaybe<Scalars['String']['input']>;
  object_repr?: InputMaybe<Scalars['String']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Django_Admin_Log_Sum_Fields = {
  __typename?: 'django_admin_log_sum_fields';
  action_flag?: Maybe<Scalars['smallint']['output']>;
  content_type_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "django_admin_log" */
export enum Django_Admin_Log_Update_Column {
  /** column name */
  ActionFlag = 'action_flag',
  /** column name */
  ActionTime = 'action_time',
  /** column name */
  ChangeMessage = 'change_message',
  /** column name */
  ContentTypeId = 'content_type_id',
  /** column name */
  Id = 'id',
  /** column name */
  ObjectId = 'object_id',
  /** column name */
  ObjectRepr = 'object_repr',
  /** column name */
  UserId = 'user_id'
}

export type Django_Admin_Log_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Django_Admin_Log_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Django_Admin_Log_Set_Input>;
  /** filter the rows which have to be updated */
  where: Django_Admin_Log_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Django_Admin_Log_Var_Pop_Fields = {
  __typename?: 'django_admin_log_var_pop_fields';
  action_flag?: Maybe<Scalars['Float']['output']>;
  content_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Django_Admin_Log_Var_Samp_Fields = {
  __typename?: 'django_admin_log_var_samp_fields';
  action_flag?: Maybe<Scalars['Float']['output']>;
  content_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Django_Admin_Log_Variance_Fields = {
  __typename?: 'django_admin_log_variance_fields';
  action_flag?: Maybe<Scalars['Float']['output']>;
  content_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "django_content_type" */
export type Django_Content_Type = {
  __typename?: 'django_content_type';
  app_label: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  model: Scalars['String']['output'];
};

/** aggregated selection of "django_content_type" */
export type Django_Content_Type_Aggregate = {
  __typename?: 'django_content_type_aggregate';
  aggregate?: Maybe<Django_Content_Type_Aggregate_Fields>;
  nodes: Array<Django_Content_Type>;
};

/** aggregate fields of "django_content_type" */
export type Django_Content_Type_Aggregate_Fields = {
  __typename?: 'django_content_type_aggregate_fields';
  avg?: Maybe<Django_Content_Type_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Django_Content_Type_Max_Fields>;
  min?: Maybe<Django_Content_Type_Min_Fields>;
  stddev?: Maybe<Django_Content_Type_Stddev_Fields>;
  stddev_pop?: Maybe<Django_Content_Type_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Django_Content_Type_Stddev_Samp_Fields>;
  sum?: Maybe<Django_Content_Type_Sum_Fields>;
  var_pop?: Maybe<Django_Content_Type_Var_Pop_Fields>;
  var_samp?: Maybe<Django_Content_Type_Var_Samp_Fields>;
  variance?: Maybe<Django_Content_Type_Variance_Fields>;
};


/** aggregate fields of "django_content_type" */
export type Django_Content_Type_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Django_Content_Type_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Django_Content_Type_Avg_Fields = {
  __typename?: 'django_content_type_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "django_content_type". All fields are combined with a logical 'AND'. */
export type Django_Content_Type_Bool_Exp = {
  _and?: InputMaybe<Array<Django_Content_Type_Bool_Exp>>;
  _not?: InputMaybe<Django_Content_Type_Bool_Exp>;
  _or?: InputMaybe<Array<Django_Content_Type_Bool_Exp>>;
  app_label?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  model?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "django_content_type" */
export enum Django_Content_Type_Constraint {
  /** unique or primary key constraint on columns "app_label", "model" */
  DjangoContentTypeAppLabelModel_76bd3d3bUniq = 'django_content_type_app_label_model_76bd3d3b_uniq',
  /** unique or primary key constraint on columns "id" */
  DjangoContentTypePkey = 'django_content_type_pkey'
}

/** input type for incrementing numeric columns in table "django_content_type" */
export type Django_Content_Type_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "django_content_type" */
export type Django_Content_Type_Insert_Input = {
  app_label?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  model?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Django_Content_Type_Max_Fields = {
  __typename?: 'django_content_type_max_fields';
  app_label?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  model?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Django_Content_Type_Min_Fields = {
  __typename?: 'django_content_type_min_fields';
  app_label?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  model?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "django_content_type" */
export type Django_Content_Type_Mutation_Response = {
  __typename?: 'django_content_type_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Django_Content_Type>;
};

/** on_conflict condition type for table "django_content_type" */
export type Django_Content_Type_On_Conflict = {
  constraint: Django_Content_Type_Constraint;
  update_columns?: Array<Django_Content_Type_Update_Column>;
  where?: InputMaybe<Django_Content_Type_Bool_Exp>;
};

/** Ordering options when selecting data from "django_content_type". */
export type Django_Content_Type_Order_By = {
  app_label?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  model?: InputMaybe<Order_By>;
};

/** primary key columns input for table: django_content_type */
export type Django_Content_Type_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "django_content_type" */
export enum Django_Content_Type_Select_Column {
  /** column name */
  AppLabel = 'app_label',
  /** column name */
  Id = 'id',
  /** column name */
  Model = 'model'
}

/** input type for updating data in table "django_content_type" */
export type Django_Content_Type_Set_Input = {
  app_label?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  model?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Django_Content_Type_Stddev_Fields = {
  __typename?: 'django_content_type_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Django_Content_Type_Stddev_Pop_Fields = {
  __typename?: 'django_content_type_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Django_Content_Type_Stddev_Samp_Fields = {
  __typename?: 'django_content_type_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "django_content_type" */
export type Django_Content_Type_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Django_Content_Type_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Django_Content_Type_Stream_Cursor_Value_Input = {
  app_label?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  model?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Django_Content_Type_Sum_Fields = {
  __typename?: 'django_content_type_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "django_content_type" */
export enum Django_Content_Type_Update_Column {
  /** column name */
  AppLabel = 'app_label',
  /** column name */
  Id = 'id',
  /** column name */
  Model = 'model'
}

export type Django_Content_Type_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Django_Content_Type_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Django_Content_Type_Set_Input>;
  /** filter the rows which have to be updated */
  where: Django_Content_Type_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Django_Content_Type_Var_Pop_Fields = {
  __typename?: 'django_content_type_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Django_Content_Type_Var_Samp_Fields = {
  __typename?: 'django_content_type_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Django_Content_Type_Variance_Fields = {
  __typename?: 'django_content_type_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "django_migrations" */
export type Django_Migrations = {
  __typename?: 'django_migrations';
  app: Scalars['String']['output'];
  applied: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
};

/** aggregated selection of "django_migrations" */
export type Django_Migrations_Aggregate = {
  __typename?: 'django_migrations_aggregate';
  aggregate?: Maybe<Django_Migrations_Aggregate_Fields>;
  nodes: Array<Django_Migrations>;
};

/** aggregate fields of "django_migrations" */
export type Django_Migrations_Aggregate_Fields = {
  __typename?: 'django_migrations_aggregate_fields';
  avg?: Maybe<Django_Migrations_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Django_Migrations_Max_Fields>;
  min?: Maybe<Django_Migrations_Min_Fields>;
  stddev?: Maybe<Django_Migrations_Stddev_Fields>;
  stddev_pop?: Maybe<Django_Migrations_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Django_Migrations_Stddev_Samp_Fields>;
  sum?: Maybe<Django_Migrations_Sum_Fields>;
  var_pop?: Maybe<Django_Migrations_Var_Pop_Fields>;
  var_samp?: Maybe<Django_Migrations_Var_Samp_Fields>;
  variance?: Maybe<Django_Migrations_Variance_Fields>;
};


/** aggregate fields of "django_migrations" */
export type Django_Migrations_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Django_Migrations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Django_Migrations_Avg_Fields = {
  __typename?: 'django_migrations_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "django_migrations". All fields are combined with a logical 'AND'. */
export type Django_Migrations_Bool_Exp = {
  _and?: InputMaybe<Array<Django_Migrations_Bool_Exp>>;
  _not?: InputMaybe<Django_Migrations_Bool_Exp>;
  _or?: InputMaybe<Array<Django_Migrations_Bool_Exp>>;
  app?: InputMaybe<String_Comparison_Exp>;
  applied?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "django_migrations" */
export enum Django_Migrations_Constraint {
  /** unique or primary key constraint on columns "id" */
  DjangoMigrationsPkey = 'django_migrations_pkey'
}

/** input type for incrementing numeric columns in table "django_migrations" */
export type Django_Migrations_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "django_migrations" */
export type Django_Migrations_Insert_Input = {
  app?: InputMaybe<Scalars['String']['input']>;
  applied?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Django_Migrations_Max_Fields = {
  __typename?: 'django_migrations_max_fields';
  app?: Maybe<Scalars['String']['output']>;
  applied?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Django_Migrations_Min_Fields = {
  __typename?: 'django_migrations_min_fields';
  app?: Maybe<Scalars['String']['output']>;
  applied?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "django_migrations" */
export type Django_Migrations_Mutation_Response = {
  __typename?: 'django_migrations_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Django_Migrations>;
};

/** on_conflict condition type for table "django_migrations" */
export type Django_Migrations_On_Conflict = {
  constraint: Django_Migrations_Constraint;
  update_columns?: Array<Django_Migrations_Update_Column>;
  where?: InputMaybe<Django_Migrations_Bool_Exp>;
};

/** Ordering options when selecting data from "django_migrations". */
export type Django_Migrations_Order_By = {
  app?: InputMaybe<Order_By>;
  applied?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: django_migrations */
export type Django_Migrations_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "django_migrations" */
export enum Django_Migrations_Select_Column {
  /** column name */
  App = 'app',
  /** column name */
  Applied = 'applied',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "django_migrations" */
export type Django_Migrations_Set_Input = {
  app?: InputMaybe<Scalars['String']['input']>;
  applied?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Django_Migrations_Stddev_Fields = {
  __typename?: 'django_migrations_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Django_Migrations_Stddev_Pop_Fields = {
  __typename?: 'django_migrations_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Django_Migrations_Stddev_Samp_Fields = {
  __typename?: 'django_migrations_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "django_migrations" */
export type Django_Migrations_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Django_Migrations_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Django_Migrations_Stream_Cursor_Value_Input = {
  app?: InputMaybe<Scalars['String']['input']>;
  applied?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Django_Migrations_Sum_Fields = {
  __typename?: 'django_migrations_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "django_migrations" */
export enum Django_Migrations_Update_Column {
  /** column name */
  App = 'app',
  /** column name */
  Applied = 'applied',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

export type Django_Migrations_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Django_Migrations_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Django_Migrations_Set_Input>;
  /** filter the rows which have to be updated */
  where: Django_Migrations_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Django_Migrations_Var_Pop_Fields = {
  __typename?: 'django_migrations_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Django_Migrations_Var_Samp_Fields = {
  __typename?: 'django_migrations_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Django_Migrations_Variance_Fields = {
  __typename?: 'django_migrations_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "django_session" */
export type Django_Session = {
  __typename?: 'django_session';
  expire_date: Scalars['timestamptz']['output'];
  session_data: Scalars['String']['output'];
  session_key: Scalars['String']['output'];
};

/** aggregated selection of "django_session" */
export type Django_Session_Aggregate = {
  __typename?: 'django_session_aggregate';
  aggregate?: Maybe<Django_Session_Aggregate_Fields>;
  nodes: Array<Django_Session>;
};

/** aggregate fields of "django_session" */
export type Django_Session_Aggregate_Fields = {
  __typename?: 'django_session_aggregate_fields';
  count: Scalars['Int']['output'];
  max?: Maybe<Django_Session_Max_Fields>;
  min?: Maybe<Django_Session_Min_Fields>;
};


/** aggregate fields of "django_session" */
export type Django_Session_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Django_Session_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** Boolean expression to filter rows from the table "django_session". All fields are combined with a logical 'AND'. */
export type Django_Session_Bool_Exp = {
  _and?: InputMaybe<Array<Django_Session_Bool_Exp>>;
  _not?: InputMaybe<Django_Session_Bool_Exp>;
  _or?: InputMaybe<Array<Django_Session_Bool_Exp>>;
  expire_date?: InputMaybe<Timestamptz_Comparison_Exp>;
  session_data?: InputMaybe<String_Comparison_Exp>;
  session_key?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "django_session" */
export enum Django_Session_Constraint {
  /** unique or primary key constraint on columns "session_key" */
  DjangoSessionPkey = 'django_session_pkey'
}

/** input type for inserting data into table "django_session" */
export type Django_Session_Insert_Input = {
  expire_date?: InputMaybe<Scalars['timestamptz']['input']>;
  session_data?: InputMaybe<Scalars['String']['input']>;
  session_key?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Django_Session_Max_Fields = {
  __typename?: 'django_session_max_fields';
  expire_date?: Maybe<Scalars['timestamptz']['output']>;
  session_data?: Maybe<Scalars['String']['output']>;
  session_key?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Django_Session_Min_Fields = {
  __typename?: 'django_session_min_fields';
  expire_date?: Maybe<Scalars['timestamptz']['output']>;
  session_data?: Maybe<Scalars['String']['output']>;
  session_key?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "django_session" */
export type Django_Session_Mutation_Response = {
  __typename?: 'django_session_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Django_Session>;
};

/** on_conflict condition type for table "django_session" */
export type Django_Session_On_Conflict = {
  constraint: Django_Session_Constraint;
  update_columns?: Array<Django_Session_Update_Column>;
  where?: InputMaybe<Django_Session_Bool_Exp>;
};

/** Ordering options when selecting data from "django_session". */
export type Django_Session_Order_By = {
  expire_date?: InputMaybe<Order_By>;
  session_data?: InputMaybe<Order_By>;
  session_key?: InputMaybe<Order_By>;
};

/** primary key columns input for table: django_session */
export type Django_Session_Pk_Columns_Input = {
  session_key: Scalars['String']['input'];
};

/** select columns of table "django_session" */
export enum Django_Session_Select_Column {
  /** column name */
  ExpireDate = 'expire_date',
  /** column name */
  SessionData = 'session_data',
  /** column name */
  SessionKey = 'session_key'
}

/** input type for updating data in table "django_session" */
export type Django_Session_Set_Input = {
  expire_date?: InputMaybe<Scalars['timestamptz']['input']>;
  session_data?: InputMaybe<Scalars['String']['input']>;
  session_key?: InputMaybe<Scalars['String']['input']>;
};

/** Streaming cursor of the table "django_session" */
export type Django_Session_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Django_Session_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Django_Session_Stream_Cursor_Value_Input = {
  expire_date?: InputMaybe<Scalars['timestamptz']['input']>;
  session_data?: InputMaybe<Scalars['String']['input']>;
  session_key?: InputMaybe<Scalars['String']['input']>;
};

/** update columns of table "django_session" */
export enum Django_Session_Update_Column {
  /** column name */
  ExpireDate = 'expire_date',
  /** column name */
  SessionData = 'session_data',
  /** column name */
  SessionKey = 'session_key'
}

export type Django_Session_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Django_Session_Set_Input>;
  /** filter the rows which have to be updated */
  where: Django_Session_Bool_Exp;
};

/** columns and relationships of "django_site" */
export type Django_Site = {
  __typename?: 'django_site';
  domain: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
};

/** aggregated selection of "django_site" */
export type Django_Site_Aggregate = {
  __typename?: 'django_site_aggregate';
  aggregate?: Maybe<Django_Site_Aggregate_Fields>;
  nodes: Array<Django_Site>;
};

/** aggregate fields of "django_site" */
export type Django_Site_Aggregate_Fields = {
  __typename?: 'django_site_aggregate_fields';
  avg?: Maybe<Django_Site_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Django_Site_Max_Fields>;
  min?: Maybe<Django_Site_Min_Fields>;
  stddev?: Maybe<Django_Site_Stddev_Fields>;
  stddev_pop?: Maybe<Django_Site_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Django_Site_Stddev_Samp_Fields>;
  sum?: Maybe<Django_Site_Sum_Fields>;
  var_pop?: Maybe<Django_Site_Var_Pop_Fields>;
  var_samp?: Maybe<Django_Site_Var_Samp_Fields>;
  variance?: Maybe<Django_Site_Variance_Fields>;
};


/** aggregate fields of "django_site" */
export type Django_Site_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Django_Site_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Django_Site_Avg_Fields = {
  __typename?: 'django_site_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "django_site". All fields are combined with a logical 'AND'. */
export type Django_Site_Bool_Exp = {
  _and?: InputMaybe<Array<Django_Site_Bool_Exp>>;
  _not?: InputMaybe<Django_Site_Bool_Exp>;
  _or?: InputMaybe<Array<Django_Site_Bool_Exp>>;
  domain?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "django_site" */
export enum Django_Site_Constraint {
  /** unique or primary key constraint on columns "domain" */
  DjangoSiteDomainA2e37b91Uniq = 'django_site_domain_a2e37b91_uniq',
  /** unique or primary key constraint on columns "id" */
  DjangoSitePkey = 'django_site_pkey'
}

/** input type for incrementing numeric columns in table "django_site" */
export type Django_Site_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "django_site" */
export type Django_Site_Insert_Input = {
  domain?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Django_Site_Max_Fields = {
  __typename?: 'django_site_max_fields';
  domain?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Django_Site_Min_Fields = {
  __typename?: 'django_site_min_fields';
  domain?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "django_site" */
export type Django_Site_Mutation_Response = {
  __typename?: 'django_site_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Django_Site>;
};

/** on_conflict condition type for table "django_site" */
export type Django_Site_On_Conflict = {
  constraint: Django_Site_Constraint;
  update_columns?: Array<Django_Site_Update_Column>;
  where?: InputMaybe<Django_Site_Bool_Exp>;
};

/** Ordering options when selecting data from "django_site". */
export type Django_Site_Order_By = {
  domain?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: django_site */
export type Django_Site_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "django_site" */
export enum Django_Site_Select_Column {
  /** column name */
  Domain = 'domain',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "django_site" */
export type Django_Site_Set_Input = {
  domain?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Django_Site_Stddev_Fields = {
  __typename?: 'django_site_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Django_Site_Stddev_Pop_Fields = {
  __typename?: 'django_site_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Django_Site_Stddev_Samp_Fields = {
  __typename?: 'django_site_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "django_site" */
export type Django_Site_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Django_Site_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Django_Site_Stream_Cursor_Value_Input = {
  domain?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Django_Site_Sum_Fields = {
  __typename?: 'django_site_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "django_site" */
export enum Django_Site_Update_Column {
  /** column name */
  Domain = 'domain',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

export type Django_Site_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Django_Site_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Django_Site_Set_Input>;
  /** filter the rows which have to be updated */
  where: Django_Site_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Django_Site_Var_Pop_Fields = {
  __typename?: 'django_site_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Django_Site_Var_Samp_Fields = {
  __typename?: 'django_site_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Django_Site_Variance_Fields = {
  __typename?: 'django_site_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

export type Jsonb_Cast_Exp = {
  String?: InputMaybe<String_Comparison_Exp>;
};

/** Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'. */
export type Jsonb_Comparison_Exp = {
  _cast?: InputMaybe<Jsonb_Cast_Exp>;
  /** is the column contained in the given json value */
  _contained_in?: InputMaybe<Scalars['jsonb']['input']>;
  /** does the column contain the given json value at the top level */
  _contains?: InputMaybe<Scalars['jsonb']['input']>;
  _eq?: InputMaybe<Scalars['jsonb']['input']>;
  _gt?: InputMaybe<Scalars['jsonb']['input']>;
  _gte?: InputMaybe<Scalars['jsonb']['input']>;
  /** does the string exist as a top-level key in the column */
  _has_key?: InputMaybe<Scalars['String']['input']>;
  /** do all of these strings exist as top-level keys in the column */
  _has_keys_all?: InputMaybe<Array<Scalars['String']['input']>>;
  /** do any of these strings exist as top-level keys in the column */
  _has_keys_any?: InputMaybe<Array<Scalars['String']['input']>>;
  _in?: InputMaybe<Array<Scalars['jsonb']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['jsonb']['input']>;
  _lte?: InputMaybe<Scalars['jsonb']['input']>;
  _neq?: InputMaybe<Scalars['jsonb']['input']>;
  _nin?: InputMaybe<Array<Scalars['jsonb']['input']>>;
};

/** mutation root */
export type Mutation_Root = {
  __typename?: 'mutation_root';
  /** delete data from the table: "auth_group" */
  delete_auth_group?: Maybe<Auth_Group_Mutation_Response>;
  /** delete single row from the table: "auth_group" */
  delete_auth_group_by_pk?: Maybe<Auth_Group>;
  /** delete data from the table: "auth_group_permissions" */
  delete_auth_group_permissions?: Maybe<Auth_Group_Permissions_Mutation_Response>;
  /** delete single row from the table: "auth_group_permissions" */
  delete_auth_group_permissions_by_pk?: Maybe<Auth_Group_Permissions>;
  /** delete data from the table: "auth_permission" */
  delete_auth_permission?: Maybe<Auth_Permission_Mutation_Response>;
  /** delete single row from the table: "auth_permission" */
  delete_auth_permission_by_pk?: Maybe<Auth_Permission>;
  /** delete data from the table: "auth_user" */
  delete_auth_user?: Maybe<Auth_User_Mutation_Response>;
  /** delete single row from the table: "auth_user" */
  delete_auth_user_by_pk?: Maybe<Auth_User>;
  /** delete data from the table: "auth_user_groups" */
  delete_auth_user_groups?: Maybe<Auth_User_Groups_Mutation_Response>;
  /** delete single row from the table: "auth_user_groups" */
  delete_auth_user_groups_by_pk?: Maybe<Auth_User_Groups>;
  /** delete data from the table: "auth_user_user_permissions" */
  delete_auth_user_user_permissions?: Maybe<Auth_User_User_Permissions_Mutation_Response>;
  /** delete single row from the table: "auth_user_user_permissions" */
  delete_auth_user_user_permissions_by_pk?: Maybe<Auth_User_User_Permissions>;
  /** delete data from the table: "django_admin_log" */
  delete_django_admin_log?: Maybe<Django_Admin_Log_Mutation_Response>;
  /** delete single row from the table: "django_admin_log" */
  delete_django_admin_log_by_pk?: Maybe<Django_Admin_Log>;
  /** delete data from the table: "django_content_type" */
  delete_django_content_type?: Maybe<Django_Content_Type_Mutation_Response>;
  /** delete single row from the table: "django_content_type" */
  delete_django_content_type_by_pk?: Maybe<Django_Content_Type>;
  /** delete data from the table: "django_migrations" */
  delete_django_migrations?: Maybe<Django_Migrations_Mutation_Response>;
  /** delete single row from the table: "django_migrations" */
  delete_django_migrations_by_pk?: Maybe<Django_Migrations>;
  /** delete data from the table: "django_session" */
  delete_django_session?: Maybe<Django_Session_Mutation_Response>;
  /** delete single row from the table: "django_session" */
  delete_django_session_by_pk?: Maybe<Django_Session>;
  /** delete data from the table: "django_site" */
  delete_django_site?: Maybe<Django_Site_Mutation_Response>;
  /** delete single row from the table: "django_site" */
  delete_django_site_by_pk?: Maybe<Django_Site>;
  /** delete data from the table: "pokemon_v2_ability" */
  delete_pokemon_v2_ability?: Maybe<Pokemon_V2_Ability_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_ability" */
  delete_pokemon_v2_ability_by_pk?: Maybe<Pokemon_V2_Ability>;
  /** delete data from the table: "pokemon_v2_abilitychange" */
  delete_pokemon_v2_abilitychange?: Maybe<Pokemon_V2_Abilitychange_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_abilitychange" */
  delete_pokemon_v2_abilitychange_by_pk?: Maybe<Pokemon_V2_Abilitychange>;
  /** delete data from the table: "pokemon_v2_abilitychangeeffecttext" */
  delete_pokemon_v2_abilitychangeeffecttext?: Maybe<Pokemon_V2_Abilitychangeeffecttext_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_abilitychangeeffecttext" */
  delete_pokemon_v2_abilitychangeeffecttext_by_pk?: Maybe<Pokemon_V2_Abilitychangeeffecttext>;
  /** delete data from the table: "pokemon_v2_abilityeffecttext" */
  delete_pokemon_v2_abilityeffecttext?: Maybe<Pokemon_V2_Abilityeffecttext_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_abilityeffecttext" */
  delete_pokemon_v2_abilityeffecttext_by_pk?: Maybe<Pokemon_V2_Abilityeffecttext>;
  /** delete data from the table: "pokemon_v2_abilityflavortext" */
  delete_pokemon_v2_abilityflavortext?: Maybe<Pokemon_V2_Abilityflavortext_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_abilityflavortext" */
  delete_pokemon_v2_abilityflavortext_by_pk?: Maybe<Pokemon_V2_Abilityflavortext>;
  /** delete data from the table: "pokemon_v2_abilityname" */
  delete_pokemon_v2_abilityname?: Maybe<Pokemon_V2_Abilityname_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_abilityname" */
  delete_pokemon_v2_abilityname_by_pk?: Maybe<Pokemon_V2_Abilityname>;
  /** delete data from the table: "pokemon_v2_berry" */
  delete_pokemon_v2_berry?: Maybe<Pokemon_V2_Berry_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_berry" */
  delete_pokemon_v2_berry_by_pk?: Maybe<Pokemon_V2_Berry>;
  /** delete data from the table: "pokemon_v2_berryfirmness" */
  delete_pokemon_v2_berryfirmness?: Maybe<Pokemon_V2_Berryfirmness_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_berryfirmness" */
  delete_pokemon_v2_berryfirmness_by_pk?: Maybe<Pokemon_V2_Berryfirmness>;
  /** delete data from the table: "pokemon_v2_berryfirmnessname" */
  delete_pokemon_v2_berryfirmnessname?: Maybe<Pokemon_V2_Berryfirmnessname_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_berryfirmnessname" */
  delete_pokemon_v2_berryfirmnessname_by_pk?: Maybe<Pokemon_V2_Berryfirmnessname>;
  /** delete data from the table: "pokemon_v2_berryflavor" */
  delete_pokemon_v2_berryflavor?: Maybe<Pokemon_V2_Berryflavor_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_berryflavor" */
  delete_pokemon_v2_berryflavor_by_pk?: Maybe<Pokemon_V2_Berryflavor>;
  /** delete data from the table: "pokemon_v2_berryflavormap" */
  delete_pokemon_v2_berryflavormap?: Maybe<Pokemon_V2_Berryflavormap_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_berryflavormap" */
  delete_pokemon_v2_berryflavormap_by_pk?: Maybe<Pokemon_V2_Berryflavormap>;
  /** delete data from the table: "pokemon_v2_berryflavorname" */
  delete_pokemon_v2_berryflavorname?: Maybe<Pokemon_V2_Berryflavorname_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_berryflavorname" */
  delete_pokemon_v2_berryflavorname_by_pk?: Maybe<Pokemon_V2_Berryflavorname>;
  /** delete data from the table: "pokemon_v2_characteristic" */
  delete_pokemon_v2_characteristic?: Maybe<Pokemon_V2_Characteristic_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_characteristic" */
  delete_pokemon_v2_characteristic_by_pk?: Maybe<Pokemon_V2_Characteristic>;
  /** delete data from the table: "pokemon_v2_characteristicdescription" */
  delete_pokemon_v2_characteristicdescription?: Maybe<Pokemon_V2_Characteristicdescription_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_characteristicdescription" */
  delete_pokemon_v2_characteristicdescription_by_pk?: Maybe<Pokemon_V2_Characteristicdescription>;
  /** delete data from the table: "pokemon_v2_contestcombo" */
  delete_pokemon_v2_contestcombo?: Maybe<Pokemon_V2_Contestcombo_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_contestcombo" */
  delete_pokemon_v2_contestcombo_by_pk?: Maybe<Pokemon_V2_Contestcombo>;
  /** delete data from the table: "pokemon_v2_contesteffect" */
  delete_pokemon_v2_contesteffect?: Maybe<Pokemon_V2_Contesteffect_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_contesteffect" */
  delete_pokemon_v2_contesteffect_by_pk?: Maybe<Pokemon_V2_Contesteffect>;
  /** delete data from the table: "pokemon_v2_contesteffecteffecttext" */
  delete_pokemon_v2_contesteffecteffecttext?: Maybe<Pokemon_V2_Contesteffecteffecttext_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_contesteffecteffecttext" */
  delete_pokemon_v2_contesteffecteffecttext_by_pk?: Maybe<Pokemon_V2_Contesteffecteffecttext>;
  /** delete data from the table: "pokemon_v2_contesteffectflavortext" */
  delete_pokemon_v2_contesteffectflavortext?: Maybe<Pokemon_V2_Contesteffectflavortext_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_contesteffectflavortext" */
  delete_pokemon_v2_contesteffectflavortext_by_pk?: Maybe<Pokemon_V2_Contesteffectflavortext>;
  /** delete data from the table: "pokemon_v2_contesttype" */
  delete_pokemon_v2_contesttype?: Maybe<Pokemon_V2_Contesttype_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_contesttype" */
  delete_pokemon_v2_contesttype_by_pk?: Maybe<Pokemon_V2_Contesttype>;
  /** delete data from the table: "pokemon_v2_contesttypename" */
  delete_pokemon_v2_contesttypename?: Maybe<Pokemon_V2_Contesttypename_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_contesttypename" */
  delete_pokemon_v2_contesttypename_by_pk?: Maybe<Pokemon_V2_Contesttypename>;
  /** delete data from the table: "pokemon_v2_egggroup" */
  delete_pokemon_v2_egggroup?: Maybe<Pokemon_V2_Egggroup_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_egggroup" */
  delete_pokemon_v2_egggroup_by_pk?: Maybe<Pokemon_V2_Egggroup>;
  /** delete data from the table: "pokemon_v2_egggroupname" */
  delete_pokemon_v2_egggroupname?: Maybe<Pokemon_V2_Egggroupname_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_egggroupname" */
  delete_pokemon_v2_egggroupname_by_pk?: Maybe<Pokemon_V2_Egggroupname>;
  /** delete data from the table: "pokemon_v2_encounter" */
  delete_pokemon_v2_encounter?: Maybe<Pokemon_V2_Encounter_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_encounter" */
  delete_pokemon_v2_encounter_by_pk?: Maybe<Pokemon_V2_Encounter>;
  /** delete data from the table: "pokemon_v2_encountercondition" */
  delete_pokemon_v2_encountercondition?: Maybe<Pokemon_V2_Encountercondition_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_encountercondition" */
  delete_pokemon_v2_encountercondition_by_pk?: Maybe<Pokemon_V2_Encountercondition>;
  /** delete data from the table: "pokemon_v2_encounterconditionname" */
  delete_pokemon_v2_encounterconditionname?: Maybe<Pokemon_V2_Encounterconditionname_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_encounterconditionname" */
  delete_pokemon_v2_encounterconditionname_by_pk?: Maybe<Pokemon_V2_Encounterconditionname>;
  /** delete data from the table: "pokemon_v2_encounterconditionvalue" */
  delete_pokemon_v2_encounterconditionvalue?: Maybe<Pokemon_V2_Encounterconditionvalue_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_encounterconditionvalue" */
  delete_pokemon_v2_encounterconditionvalue_by_pk?: Maybe<Pokemon_V2_Encounterconditionvalue>;
  /** delete data from the table: "pokemon_v2_encounterconditionvaluemap" */
  delete_pokemon_v2_encounterconditionvaluemap?: Maybe<Pokemon_V2_Encounterconditionvaluemap_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_encounterconditionvaluemap" */
  delete_pokemon_v2_encounterconditionvaluemap_by_pk?: Maybe<Pokemon_V2_Encounterconditionvaluemap>;
  /** delete data from the table: "pokemon_v2_encounterconditionvaluename" */
  delete_pokemon_v2_encounterconditionvaluename?: Maybe<Pokemon_V2_Encounterconditionvaluename_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_encounterconditionvaluename" */
  delete_pokemon_v2_encounterconditionvaluename_by_pk?: Maybe<Pokemon_V2_Encounterconditionvaluename>;
  /** delete data from the table: "pokemon_v2_encountermethod" */
  delete_pokemon_v2_encountermethod?: Maybe<Pokemon_V2_Encountermethod_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_encountermethod" */
  delete_pokemon_v2_encountermethod_by_pk?: Maybe<Pokemon_V2_Encountermethod>;
  /** delete data from the table: "pokemon_v2_encountermethodname" */
  delete_pokemon_v2_encountermethodname?: Maybe<Pokemon_V2_Encountermethodname_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_encountermethodname" */
  delete_pokemon_v2_encountermethodname_by_pk?: Maybe<Pokemon_V2_Encountermethodname>;
  /** delete data from the table: "pokemon_v2_encounterslot" */
  delete_pokemon_v2_encounterslot?: Maybe<Pokemon_V2_Encounterslot_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_encounterslot" */
  delete_pokemon_v2_encounterslot_by_pk?: Maybe<Pokemon_V2_Encounterslot>;
  /** delete data from the table: "pokemon_v2_evolutionchain" */
  delete_pokemon_v2_evolutionchain?: Maybe<Pokemon_V2_Evolutionchain_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_evolutionchain" */
  delete_pokemon_v2_evolutionchain_by_pk?: Maybe<Pokemon_V2_Evolutionchain>;
  /** delete data from the table: "pokemon_v2_evolutiontrigger" */
  delete_pokemon_v2_evolutiontrigger?: Maybe<Pokemon_V2_Evolutiontrigger_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_evolutiontrigger" */
  delete_pokemon_v2_evolutiontrigger_by_pk?: Maybe<Pokemon_V2_Evolutiontrigger>;
  /** delete data from the table: "pokemon_v2_evolutiontriggername" */
  delete_pokemon_v2_evolutiontriggername?: Maybe<Pokemon_V2_Evolutiontriggername_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_evolutiontriggername" */
  delete_pokemon_v2_evolutiontriggername_by_pk?: Maybe<Pokemon_V2_Evolutiontriggername>;
  /** delete data from the table: "pokemon_v2_experience" */
  delete_pokemon_v2_experience?: Maybe<Pokemon_V2_Experience_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_experience" */
  delete_pokemon_v2_experience_by_pk?: Maybe<Pokemon_V2_Experience>;
  /** delete data from the table: "pokemon_v2_gender" */
  delete_pokemon_v2_gender?: Maybe<Pokemon_V2_Gender_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_gender" */
  delete_pokemon_v2_gender_by_pk?: Maybe<Pokemon_V2_Gender>;
  /** delete data from the table: "pokemon_v2_generation" */
  delete_pokemon_v2_generation?: Maybe<Pokemon_V2_Generation_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_generation" */
  delete_pokemon_v2_generation_by_pk?: Maybe<Pokemon_V2_Generation>;
  /** delete data from the table: "pokemon_v2_generationname" */
  delete_pokemon_v2_generationname?: Maybe<Pokemon_V2_Generationname_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_generationname" */
  delete_pokemon_v2_generationname_by_pk?: Maybe<Pokemon_V2_Generationname>;
  /** delete data from the table: "pokemon_v2_growthrate" */
  delete_pokemon_v2_growthrate?: Maybe<Pokemon_V2_Growthrate_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_growthrate" */
  delete_pokemon_v2_growthrate_by_pk?: Maybe<Pokemon_V2_Growthrate>;
  /** delete data from the table: "pokemon_v2_growthratedescription" */
  delete_pokemon_v2_growthratedescription?: Maybe<Pokemon_V2_Growthratedescription_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_growthratedescription" */
  delete_pokemon_v2_growthratedescription_by_pk?: Maybe<Pokemon_V2_Growthratedescription>;
  /** delete data from the table: "pokemon_v2_item" */
  delete_pokemon_v2_item?: Maybe<Pokemon_V2_Item_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_item" */
  delete_pokemon_v2_item_by_pk?: Maybe<Pokemon_V2_Item>;
  /** delete data from the table: "pokemon_v2_itemattribute" */
  delete_pokemon_v2_itemattribute?: Maybe<Pokemon_V2_Itemattribute_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_itemattribute" */
  delete_pokemon_v2_itemattribute_by_pk?: Maybe<Pokemon_V2_Itemattribute>;
  /** delete data from the table: "pokemon_v2_itemattributedescription" */
  delete_pokemon_v2_itemattributedescription?: Maybe<Pokemon_V2_Itemattributedescription_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_itemattributedescription" */
  delete_pokemon_v2_itemattributedescription_by_pk?: Maybe<Pokemon_V2_Itemattributedescription>;
  /** delete data from the table: "pokemon_v2_itemattributemap" */
  delete_pokemon_v2_itemattributemap?: Maybe<Pokemon_V2_Itemattributemap_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_itemattributemap" */
  delete_pokemon_v2_itemattributemap_by_pk?: Maybe<Pokemon_V2_Itemattributemap>;
  /** delete data from the table: "pokemon_v2_itemattributename" */
  delete_pokemon_v2_itemattributename?: Maybe<Pokemon_V2_Itemattributename_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_itemattributename" */
  delete_pokemon_v2_itemattributename_by_pk?: Maybe<Pokemon_V2_Itemattributename>;
  /** delete data from the table: "pokemon_v2_itemcategory" */
  delete_pokemon_v2_itemcategory?: Maybe<Pokemon_V2_Itemcategory_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_itemcategory" */
  delete_pokemon_v2_itemcategory_by_pk?: Maybe<Pokemon_V2_Itemcategory>;
  /** delete data from the table: "pokemon_v2_itemcategoryname" */
  delete_pokemon_v2_itemcategoryname?: Maybe<Pokemon_V2_Itemcategoryname_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_itemcategoryname" */
  delete_pokemon_v2_itemcategoryname_by_pk?: Maybe<Pokemon_V2_Itemcategoryname>;
  /** delete data from the table: "pokemon_v2_itemeffecttext" */
  delete_pokemon_v2_itemeffecttext?: Maybe<Pokemon_V2_Itemeffecttext_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_itemeffecttext" */
  delete_pokemon_v2_itemeffecttext_by_pk?: Maybe<Pokemon_V2_Itemeffecttext>;
  /** delete data from the table: "pokemon_v2_itemflavortext" */
  delete_pokemon_v2_itemflavortext?: Maybe<Pokemon_V2_Itemflavortext_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_itemflavortext" */
  delete_pokemon_v2_itemflavortext_by_pk?: Maybe<Pokemon_V2_Itemflavortext>;
  /** delete data from the table: "pokemon_v2_itemflingeffect" */
  delete_pokemon_v2_itemflingeffect?: Maybe<Pokemon_V2_Itemflingeffect_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_itemflingeffect" */
  delete_pokemon_v2_itemflingeffect_by_pk?: Maybe<Pokemon_V2_Itemflingeffect>;
  /** delete data from the table: "pokemon_v2_itemflingeffecteffecttext" */
  delete_pokemon_v2_itemflingeffecteffecttext?: Maybe<Pokemon_V2_Itemflingeffecteffecttext_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_itemflingeffecteffecttext" */
  delete_pokemon_v2_itemflingeffecteffecttext_by_pk?: Maybe<Pokemon_V2_Itemflingeffecteffecttext>;
  /** delete data from the table: "pokemon_v2_itemgameindex" */
  delete_pokemon_v2_itemgameindex?: Maybe<Pokemon_V2_Itemgameindex_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_itemgameindex" */
  delete_pokemon_v2_itemgameindex_by_pk?: Maybe<Pokemon_V2_Itemgameindex>;
  /** delete data from the table: "pokemon_v2_itemname" */
  delete_pokemon_v2_itemname?: Maybe<Pokemon_V2_Itemname_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_itemname" */
  delete_pokemon_v2_itemname_by_pk?: Maybe<Pokemon_V2_Itemname>;
  /** delete data from the table: "pokemon_v2_itempocket" */
  delete_pokemon_v2_itempocket?: Maybe<Pokemon_V2_Itempocket_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_itempocket" */
  delete_pokemon_v2_itempocket_by_pk?: Maybe<Pokemon_V2_Itempocket>;
  /** delete data from the table: "pokemon_v2_itempocketname" */
  delete_pokemon_v2_itempocketname?: Maybe<Pokemon_V2_Itempocketname_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_itempocketname" */
  delete_pokemon_v2_itempocketname_by_pk?: Maybe<Pokemon_V2_Itempocketname>;
  /** delete data from the table: "pokemon_v2_itemsprites" */
  delete_pokemon_v2_itemsprites?: Maybe<Pokemon_V2_Itemsprites_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_itemsprites" */
  delete_pokemon_v2_itemsprites_by_pk?: Maybe<Pokemon_V2_Itemsprites>;
  /** delete data from the table: "pokemon_v2_language" */
  delete_pokemon_v2_language?: Maybe<Pokemon_V2_Language_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_language" */
  delete_pokemon_v2_language_by_pk?: Maybe<Pokemon_V2_Language>;
  /** delete data from the table: "pokemon_v2_languagename" */
  delete_pokemon_v2_languagename?: Maybe<Pokemon_V2_Languagename_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_languagename" */
  delete_pokemon_v2_languagename_by_pk?: Maybe<Pokemon_V2_Languagename>;
  /** delete data from the table: "pokemon_v2_location" */
  delete_pokemon_v2_location?: Maybe<Pokemon_V2_Location_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_location" */
  delete_pokemon_v2_location_by_pk?: Maybe<Pokemon_V2_Location>;
  /** delete data from the table: "pokemon_v2_locationarea" */
  delete_pokemon_v2_locationarea?: Maybe<Pokemon_V2_Locationarea_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_locationarea" */
  delete_pokemon_v2_locationarea_by_pk?: Maybe<Pokemon_V2_Locationarea>;
  /** delete data from the table: "pokemon_v2_locationareaencounterrate" */
  delete_pokemon_v2_locationareaencounterrate?: Maybe<Pokemon_V2_Locationareaencounterrate_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_locationareaencounterrate" */
  delete_pokemon_v2_locationareaencounterrate_by_pk?: Maybe<Pokemon_V2_Locationareaencounterrate>;
  /** delete data from the table: "pokemon_v2_locationareaname" */
  delete_pokemon_v2_locationareaname?: Maybe<Pokemon_V2_Locationareaname_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_locationareaname" */
  delete_pokemon_v2_locationareaname_by_pk?: Maybe<Pokemon_V2_Locationareaname>;
  /** delete data from the table: "pokemon_v2_locationgameindex" */
  delete_pokemon_v2_locationgameindex?: Maybe<Pokemon_V2_Locationgameindex_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_locationgameindex" */
  delete_pokemon_v2_locationgameindex_by_pk?: Maybe<Pokemon_V2_Locationgameindex>;
  /** delete data from the table: "pokemon_v2_locationname" */
  delete_pokemon_v2_locationname?: Maybe<Pokemon_V2_Locationname_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_locationname" */
  delete_pokemon_v2_locationname_by_pk?: Maybe<Pokemon_V2_Locationname>;
  /** delete data from the table: "pokemon_v2_machine" */
  delete_pokemon_v2_machine?: Maybe<Pokemon_V2_Machine_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_machine" */
  delete_pokemon_v2_machine_by_pk?: Maybe<Pokemon_V2_Machine>;
  /** delete data from the table: "pokemon_v2_move" */
  delete_pokemon_v2_move?: Maybe<Pokemon_V2_Move_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_move" */
  delete_pokemon_v2_move_by_pk?: Maybe<Pokemon_V2_Move>;
  /** delete data from the table: "pokemon_v2_moveattribute" */
  delete_pokemon_v2_moveattribute?: Maybe<Pokemon_V2_Moveattribute_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_moveattribute" */
  delete_pokemon_v2_moveattribute_by_pk?: Maybe<Pokemon_V2_Moveattribute>;
  /** delete data from the table: "pokemon_v2_moveattributedescription" */
  delete_pokemon_v2_moveattributedescription?: Maybe<Pokemon_V2_Moveattributedescription_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_moveattributedescription" */
  delete_pokemon_v2_moveattributedescription_by_pk?: Maybe<Pokemon_V2_Moveattributedescription>;
  /** delete data from the table: "pokemon_v2_moveattributemap" */
  delete_pokemon_v2_moveattributemap?: Maybe<Pokemon_V2_Moveattributemap_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_moveattributemap" */
  delete_pokemon_v2_moveattributemap_by_pk?: Maybe<Pokemon_V2_Moveattributemap>;
  /** delete data from the table: "pokemon_v2_moveattributename" */
  delete_pokemon_v2_moveattributename?: Maybe<Pokemon_V2_Moveattributename_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_moveattributename" */
  delete_pokemon_v2_moveattributename_by_pk?: Maybe<Pokemon_V2_Moveattributename>;
  /** delete data from the table: "pokemon_v2_movebattlestyle" */
  delete_pokemon_v2_movebattlestyle?: Maybe<Pokemon_V2_Movebattlestyle_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_movebattlestyle" */
  delete_pokemon_v2_movebattlestyle_by_pk?: Maybe<Pokemon_V2_Movebattlestyle>;
  /** delete data from the table: "pokemon_v2_movebattlestylename" */
  delete_pokemon_v2_movebattlestylename?: Maybe<Pokemon_V2_Movebattlestylename_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_movebattlestylename" */
  delete_pokemon_v2_movebattlestylename_by_pk?: Maybe<Pokemon_V2_Movebattlestylename>;
  /** delete data from the table: "pokemon_v2_movechange" */
  delete_pokemon_v2_movechange?: Maybe<Pokemon_V2_Movechange_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_movechange" */
  delete_pokemon_v2_movechange_by_pk?: Maybe<Pokemon_V2_Movechange>;
  /** delete data from the table: "pokemon_v2_movedamageclass" */
  delete_pokemon_v2_movedamageclass?: Maybe<Pokemon_V2_Movedamageclass_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_movedamageclass" */
  delete_pokemon_v2_movedamageclass_by_pk?: Maybe<Pokemon_V2_Movedamageclass>;
  /** delete data from the table: "pokemon_v2_movedamageclassdescription" */
  delete_pokemon_v2_movedamageclassdescription?: Maybe<Pokemon_V2_Movedamageclassdescription_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_movedamageclassdescription" */
  delete_pokemon_v2_movedamageclassdescription_by_pk?: Maybe<Pokemon_V2_Movedamageclassdescription>;
  /** delete data from the table: "pokemon_v2_movedamageclassname" */
  delete_pokemon_v2_movedamageclassname?: Maybe<Pokemon_V2_Movedamageclassname_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_movedamageclassname" */
  delete_pokemon_v2_movedamageclassname_by_pk?: Maybe<Pokemon_V2_Movedamageclassname>;
  /** delete data from the table: "pokemon_v2_moveeffect" */
  delete_pokemon_v2_moveeffect?: Maybe<Pokemon_V2_Moveeffect_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_moveeffect" */
  delete_pokemon_v2_moveeffect_by_pk?: Maybe<Pokemon_V2_Moveeffect>;
  /** delete data from the table: "pokemon_v2_moveeffectchange" */
  delete_pokemon_v2_moveeffectchange?: Maybe<Pokemon_V2_Moveeffectchange_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_moveeffectchange" */
  delete_pokemon_v2_moveeffectchange_by_pk?: Maybe<Pokemon_V2_Moveeffectchange>;
  /** delete data from the table: "pokemon_v2_moveeffectchangeeffecttext" */
  delete_pokemon_v2_moveeffectchangeeffecttext?: Maybe<Pokemon_V2_Moveeffectchangeeffecttext_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_moveeffectchangeeffecttext" */
  delete_pokemon_v2_moveeffectchangeeffecttext_by_pk?: Maybe<Pokemon_V2_Moveeffectchangeeffecttext>;
  /** delete data from the table: "pokemon_v2_moveeffecteffecttext" */
  delete_pokemon_v2_moveeffecteffecttext?: Maybe<Pokemon_V2_Moveeffecteffecttext_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_moveeffecteffecttext" */
  delete_pokemon_v2_moveeffecteffecttext_by_pk?: Maybe<Pokemon_V2_Moveeffecteffecttext>;
  /** delete data from the table: "pokemon_v2_moveflavortext" */
  delete_pokemon_v2_moveflavortext?: Maybe<Pokemon_V2_Moveflavortext_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_moveflavortext" */
  delete_pokemon_v2_moveflavortext_by_pk?: Maybe<Pokemon_V2_Moveflavortext>;
  /** delete data from the table: "pokemon_v2_movelearnmethod" */
  delete_pokemon_v2_movelearnmethod?: Maybe<Pokemon_V2_Movelearnmethod_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_movelearnmethod" */
  delete_pokemon_v2_movelearnmethod_by_pk?: Maybe<Pokemon_V2_Movelearnmethod>;
  /** delete data from the table: "pokemon_v2_movelearnmethoddescription" */
  delete_pokemon_v2_movelearnmethoddescription?: Maybe<Pokemon_V2_Movelearnmethoddescription_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_movelearnmethoddescription" */
  delete_pokemon_v2_movelearnmethoddescription_by_pk?: Maybe<Pokemon_V2_Movelearnmethoddescription>;
  /** delete data from the table: "pokemon_v2_movelearnmethodname" */
  delete_pokemon_v2_movelearnmethodname?: Maybe<Pokemon_V2_Movelearnmethodname_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_movelearnmethodname" */
  delete_pokemon_v2_movelearnmethodname_by_pk?: Maybe<Pokemon_V2_Movelearnmethodname>;
  /** delete data from the table: "pokemon_v2_movemeta" */
  delete_pokemon_v2_movemeta?: Maybe<Pokemon_V2_Movemeta_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_movemeta" */
  delete_pokemon_v2_movemeta_by_pk?: Maybe<Pokemon_V2_Movemeta>;
  /** delete data from the table: "pokemon_v2_movemetaailment" */
  delete_pokemon_v2_movemetaailment?: Maybe<Pokemon_V2_Movemetaailment_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_movemetaailment" */
  delete_pokemon_v2_movemetaailment_by_pk?: Maybe<Pokemon_V2_Movemetaailment>;
  /** delete data from the table: "pokemon_v2_movemetaailmentname" */
  delete_pokemon_v2_movemetaailmentname?: Maybe<Pokemon_V2_Movemetaailmentname_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_movemetaailmentname" */
  delete_pokemon_v2_movemetaailmentname_by_pk?: Maybe<Pokemon_V2_Movemetaailmentname>;
  /** delete data from the table: "pokemon_v2_movemetacategory" */
  delete_pokemon_v2_movemetacategory?: Maybe<Pokemon_V2_Movemetacategory_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_movemetacategory" */
  delete_pokemon_v2_movemetacategory_by_pk?: Maybe<Pokemon_V2_Movemetacategory>;
  /** delete data from the table: "pokemon_v2_movemetacategorydescription" */
  delete_pokemon_v2_movemetacategorydescription?: Maybe<Pokemon_V2_Movemetacategorydescription_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_movemetacategorydescription" */
  delete_pokemon_v2_movemetacategorydescription_by_pk?: Maybe<Pokemon_V2_Movemetacategorydescription>;
  /** delete data from the table: "pokemon_v2_movemetastatchange" */
  delete_pokemon_v2_movemetastatchange?: Maybe<Pokemon_V2_Movemetastatchange_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_movemetastatchange" */
  delete_pokemon_v2_movemetastatchange_by_pk?: Maybe<Pokemon_V2_Movemetastatchange>;
  /** delete data from the table: "pokemon_v2_movename" */
  delete_pokemon_v2_movename?: Maybe<Pokemon_V2_Movename_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_movename" */
  delete_pokemon_v2_movename_by_pk?: Maybe<Pokemon_V2_Movename>;
  /** delete data from the table: "pokemon_v2_movetarget" */
  delete_pokemon_v2_movetarget?: Maybe<Pokemon_V2_Movetarget_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_movetarget" */
  delete_pokemon_v2_movetarget_by_pk?: Maybe<Pokemon_V2_Movetarget>;
  /** delete data from the table: "pokemon_v2_movetargetdescription" */
  delete_pokemon_v2_movetargetdescription?: Maybe<Pokemon_V2_Movetargetdescription_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_movetargetdescription" */
  delete_pokemon_v2_movetargetdescription_by_pk?: Maybe<Pokemon_V2_Movetargetdescription>;
  /** delete data from the table: "pokemon_v2_movetargetname" */
  delete_pokemon_v2_movetargetname?: Maybe<Pokemon_V2_Movetargetname_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_movetargetname" */
  delete_pokemon_v2_movetargetname_by_pk?: Maybe<Pokemon_V2_Movetargetname>;
  /** delete data from the table: "pokemon_v2_nature" */
  delete_pokemon_v2_nature?: Maybe<Pokemon_V2_Nature_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_nature" */
  delete_pokemon_v2_nature_by_pk?: Maybe<Pokemon_V2_Nature>;
  /** delete data from the table: "pokemon_v2_naturebattlestylepreference" */
  delete_pokemon_v2_naturebattlestylepreference?: Maybe<Pokemon_V2_Naturebattlestylepreference_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_naturebattlestylepreference" */
  delete_pokemon_v2_naturebattlestylepreference_by_pk?: Maybe<Pokemon_V2_Naturebattlestylepreference>;
  /** delete data from the table: "pokemon_v2_naturename" */
  delete_pokemon_v2_naturename?: Maybe<Pokemon_V2_Naturename_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_naturename" */
  delete_pokemon_v2_naturename_by_pk?: Maybe<Pokemon_V2_Naturename>;
  /** delete data from the table: "pokemon_v2_naturepokeathlonstat" */
  delete_pokemon_v2_naturepokeathlonstat?: Maybe<Pokemon_V2_Naturepokeathlonstat_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_naturepokeathlonstat" */
  delete_pokemon_v2_naturepokeathlonstat_by_pk?: Maybe<Pokemon_V2_Naturepokeathlonstat>;
  /** delete data from the table: "pokemon_v2_palpark" */
  delete_pokemon_v2_palpark?: Maybe<Pokemon_V2_Palpark_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_palpark" */
  delete_pokemon_v2_palpark_by_pk?: Maybe<Pokemon_V2_Palpark>;
  /** delete data from the table: "pokemon_v2_palparkarea" */
  delete_pokemon_v2_palparkarea?: Maybe<Pokemon_V2_Palparkarea_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_palparkarea" */
  delete_pokemon_v2_palparkarea_by_pk?: Maybe<Pokemon_V2_Palparkarea>;
  /** delete data from the table: "pokemon_v2_palparkareaname" */
  delete_pokemon_v2_palparkareaname?: Maybe<Pokemon_V2_Palparkareaname_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_palparkareaname" */
  delete_pokemon_v2_palparkareaname_by_pk?: Maybe<Pokemon_V2_Palparkareaname>;
  /** delete data from the table: "pokemon_v2_pokeathlonstat" */
  delete_pokemon_v2_pokeathlonstat?: Maybe<Pokemon_V2_Pokeathlonstat_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_pokeathlonstat" */
  delete_pokemon_v2_pokeathlonstat_by_pk?: Maybe<Pokemon_V2_Pokeathlonstat>;
  /** delete data from the table: "pokemon_v2_pokeathlonstatname" */
  delete_pokemon_v2_pokeathlonstatname?: Maybe<Pokemon_V2_Pokeathlonstatname_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_pokeathlonstatname" */
  delete_pokemon_v2_pokeathlonstatname_by_pk?: Maybe<Pokemon_V2_Pokeathlonstatname>;
  /** delete data from the table: "pokemon_v2_pokedex" */
  delete_pokemon_v2_pokedex?: Maybe<Pokemon_V2_Pokedex_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_pokedex" */
  delete_pokemon_v2_pokedex_by_pk?: Maybe<Pokemon_V2_Pokedex>;
  /** delete data from the table: "pokemon_v2_pokedexdescription" */
  delete_pokemon_v2_pokedexdescription?: Maybe<Pokemon_V2_Pokedexdescription_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_pokedexdescription" */
  delete_pokemon_v2_pokedexdescription_by_pk?: Maybe<Pokemon_V2_Pokedexdescription>;
  /** delete data from the table: "pokemon_v2_pokedexname" */
  delete_pokemon_v2_pokedexname?: Maybe<Pokemon_V2_Pokedexname_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_pokedexname" */
  delete_pokemon_v2_pokedexname_by_pk?: Maybe<Pokemon_V2_Pokedexname>;
  /** delete data from the table: "pokemon_v2_pokedexversiongroup" */
  delete_pokemon_v2_pokedexversiongroup?: Maybe<Pokemon_V2_Pokedexversiongroup_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_pokedexversiongroup" */
  delete_pokemon_v2_pokedexversiongroup_by_pk?: Maybe<Pokemon_V2_Pokedexversiongroup>;
  /** delete data from the table: "pokemon_v2_pokemon" */
  delete_pokemon_v2_pokemon?: Maybe<Pokemon_V2_Pokemon_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_pokemon" */
  delete_pokemon_v2_pokemon_by_pk?: Maybe<Pokemon_V2_Pokemon>;
  /** delete data from the table: "pokemon_v2_pokemonability" */
  delete_pokemon_v2_pokemonability?: Maybe<Pokemon_V2_Pokemonability_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_pokemonability" */
  delete_pokemon_v2_pokemonability_by_pk?: Maybe<Pokemon_V2_Pokemonability>;
  /** delete data from the table: "pokemon_v2_pokemonabilitypast" */
  delete_pokemon_v2_pokemonabilitypast?: Maybe<Pokemon_V2_Pokemonabilitypast_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_pokemonabilitypast" */
  delete_pokemon_v2_pokemonabilitypast_by_pk?: Maybe<Pokemon_V2_Pokemonabilitypast>;
  /** delete data from the table: "pokemon_v2_pokemoncolor" */
  delete_pokemon_v2_pokemoncolor?: Maybe<Pokemon_V2_Pokemoncolor_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_pokemoncolor" */
  delete_pokemon_v2_pokemoncolor_by_pk?: Maybe<Pokemon_V2_Pokemoncolor>;
  /** delete data from the table: "pokemon_v2_pokemoncolorname" */
  delete_pokemon_v2_pokemoncolorname?: Maybe<Pokemon_V2_Pokemoncolorname_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_pokemoncolorname" */
  delete_pokemon_v2_pokemoncolorname_by_pk?: Maybe<Pokemon_V2_Pokemoncolorname>;
  /** delete data from the table: "pokemon_v2_pokemoncries" */
  delete_pokemon_v2_pokemoncries?: Maybe<Pokemon_V2_Pokemoncries_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_pokemoncries" */
  delete_pokemon_v2_pokemoncries_by_pk?: Maybe<Pokemon_V2_Pokemoncries>;
  /** delete data from the table: "pokemon_v2_pokemondexnumber" */
  delete_pokemon_v2_pokemondexnumber?: Maybe<Pokemon_V2_Pokemondexnumber_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_pokemondexnumber" */
  delete_pokemon_v2_pokemondexnumber_by_pk?: Maybe<Pokemon_V2_Pokemondexnumber>;
  /** delete data from the table: "pokemon_v2_pokemonegggroup" */
  delete_pokemon_v2_pokemonegggroup?: Maybe<Pokemon_V2_Pokemonegggroup_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_pokemonegggroup" */
  delete_pokemon_v2_pokemonegggroup_by_pk?: Maybe<Pokemon_V2_Pokemonegggroup>;
  /** delete data from the table: "pokemon_v2_pokemonevolution" */
  delete_pokemon_v2_pokemonevolution?: Maybe<Pokemon_V2_Pokemonevolution_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_pokemonevolution" */
  delete_pokemon_v2_pokemonevolution_by_pk?: Maybe<Pokemon_V2_Pokemonevolution>;
  /** delete data from the table: "pokemon_v2_pokemonform" */
  delete_pokemon_v2_pokemonform?: Maybe<Pokemon_V2_Pokemonform_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_pokemonform" */
  delete_pokemon_v2_pokemonform_by_pk?: Maybe<Pokemon_V2_Pokemonform>;
  /** delete data from the table: "pokemon_v2_pokemonformgeneration" */
  delete_pokemon_v2_pokemonformgeneration?: Maybe<Pokemon_V2_Pokemonformgeneration_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_pokemonformgeneration" */
  delete_pokemon_v2_pokemonformgeneration_by_pk?: Maybe<Pokemon_V2_Pokemonformgeneration>;
  /** delete data from the table: "pokemon_v2_pokemonformname" */
  delete_pokemon_v2_pokemonformname?: Maybe<Pokemon_V2_Pokemonformname_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_pokemonformname" */
  delete_pokemon_v2_pokemonformname_by_pk?: Maybe<Pokemon_V2_Pokemonformname>;
  /** delete data from the table: "pokemon_v2_pokemonformsprites" */
  delete_pokemon_v2_pokemonformsprites?: Maybe<Pokemon_V2_Pokemonformsprites_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_pokemonformsprites" */
  delete_pokemon_v2_pokemonformsprites_by_pk?: Maybe<Pokemon_V2_Pokemonformsprites>;
  /** delete data from the table: "pokemon_v2_pokemonformtype" */
  delete_pokemon_v2_pokemonformtype?: Maybe<Pokemon_V2_Pokemonformtype_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_pokemonformtype" */
  delete_pokemon_v2_pokemonformtype_by_pk?: Maybe<Pokemon_V2_Pokemonformtype>;
  /** delete data from the table: "pokemon_v2_pokemongameindex" */
  delete_pokemon_v2_pokemongameindex?: Maybe<Pokemon_V2_Pokemongameindex_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_pokemongameindex" */
  delete_pokemon_v2_pokemongameindex_by_pk?: Maybe<Pokemon_V2_Pokemongameindex>;
  /** delete data from the table: "pokemon_v2_pokemonhabitat" */
  delete_pokemon_v2_pokemonhabitat?: Maybe<Pokemon_V2_Pokemonhabitat_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_pokemonhabitat" */
  delete_pokemon_v2_pokemonhabitat_by_pk?: Maybe<Pokemon_V2_Pokemonhabitat>;
  /** delete data from the table: "pokemon_v2_pokemonhabitatname" */
  delete_pokemon_v2_pokemonhabitatname?: Maybe<Pokemon_V2_Pokemonhabitatname_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_pokemonhabitatname" */
  delete_pokemon_v2_pokemonhabitatname_by_pk?: Maybe<Pokemon_V2_Pokemonhabitatname>;
  /** delete data from the table: "pokemon_v2_pokemonitem" */
  delete_pokemon_v2_pokemonitem?: Maybe<Pokemon_V2_Pokemonitem_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_pokemonitem" */
  delete_pokemon_v2_pokemonitem_by_pk?: Maybe<Pokemon_V2_Pokemonitem>;
  /** delete data from the table: "pokemon_v2_pokemonmove" */
  delete_pokemon_v2_pokemonmove?: Maybe<Pokemon_V2_Pokemonmove_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_pokemonmove" */
  delete_pokemon_v2_pokemonmove_by_pk?: Maybe<Pokemon_V2_Pokemonmove>;
  /** delete data from the table: "pokemon_v2_pokemonshape" */
  delete_pokemon_v2_pokemonshape?: Maybe<Pokemon_V2_Pokemonshape_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_pokemonshape" */
  delete_pokemon_v2_pokemonshape_by_pk?: Maybe<Pokemon_V2_Pokemonshape>;
  /** delete data from the table: "pokemon_v2_pokemonshapename" */
  delete_pokemon_v2_pokemonshapename?: Maybe<Pokemon_V2_Pokemonshapename_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_pokemonshapename" */
  delete_pokemon_v2_pokemonshapename_by_pk?: Maybe<Pokemon_V2_Pokemonshapename>;
  /** delete data from the table: "pokemon_v2_pokemonspecies" */
  delete_pokemon_v2_pokemonspecies?: Maybe<Pokemon_V2_Pokemonspecies_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_pokemonspecies" */
  delete_pokemon_v2_pokemonspecies_by_pk?: Maybe<Pokemon_V2_Pokemonspecies>;
  /** delete data from the table: "pokemon_v2_pokemonspeciesdescription" */
  delete_pokemon_v2_pokemonspeciesdescription?: Maybe<Pokemon_V2_Pokemonspeciesdescription_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_pokemonspeciesdescription" */
  delete_pokemon_v2_pokemonspeciesdescription_by_pk?: Maybe<Pokemon_V2_Pokemonspeciesdescription>;
  /** delete data from the table: "pokemon_v2_pokemonspeciesflavortext" */
  delete_pokemon_v2_pokemonspeciesflavortext?: Maybe<Pokemon_V2_Pokemonspeciesflavortext_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_pokemonspeciesflavortext" */
  delete_pokemon_v2_pokemonspeciesflavortext_by_pk?: Maybe<Pokemon_V2_Pokemonspeciesflavortext>;
  /** delete data from the table: "pokemon_v2_pokemonspeciesname" */
  delete_pokemon_v2_pokemonspeciesname?: Maybe<Pokemon_V2_Pokemonspeciesname_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_pokemonspeciesname" */
  delete_pokemon_v2_pokemonspeciesname_by_pk?: Maybe<Pokemon_V2_Pokemonspeciesname>;
  /** delete data from the table: "pokemon_v2_pokemonsprites" */
  delete_pokemon_v2_pokemonsprites?: Maybe<Pokemon_V2_Pokemonsprites_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_pokemonsprites" */
  delete_pokemon_v2_pokemonsprites_by_pk?: Maybe<Pokemon_V2_Pokemonsprites>;
  /** delete data from the table: "pokemon_v2_pokemonstat" */
  delete_pokemon_v2_pokemonstat?: Maybe<Pokemon_V2_Pokemonstat_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_pokemonstat" */
  delete_pokemon_v2_pokemonstat_by_pk?: Maybe<Pokemon_V2_Pokemonstat>;
  /** delete data from the table: "pokemon_v2_pokemontype" */
  delete_pokemon_v2_pokemontype?: Maybe<Pokemon_V2_Pokemontype_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_pokemontype" */
  delete_pokemon_v2_pokemontype_by_pk?: Maybe<Pokemon_V2_Pokemontype>;
  /** delete data from the table: "pokemon_v2_pokemontypepast" */
  delete_pokemon_v2_pokemontypepast?: Maybe<Pokemon_V2_Pokemontypepast_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_pokemontypepast" */
  delete_pokemon_v2_pokemontypepast_by_pk?: Maybe<Pokemon_V2_Pokemontypepast>;
  /** delete data from the table: "pokemon_v2_region" */
  delete_pokemon_v2_region?: Maybe<Pokemon_V2_Region_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_region" */
  delete_pokemon_v2_region_by_pk?: Maybe<Pokemon_V2_Region>;
  /** delete data from the table: "pokemon_v2_regionname" */
  delete_pokemon_v2_regionname?: Maybe<Pokemon_V2_Regionname_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_regionname" */
  delete_pokemon_v2_regionname_by_pk?: Maybe<Pokemon_V2_Regionname>;
  /** delete data from the table: "pokemon_v2_stat" */
  delete_pokemon_v2_stat?: Maybe<Pokemon_V2_Stat_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_stat" */
  delete_pokemon_v2_stat_by_pk?: Maybe<Pokemon_V2_Stat>;
  /** delete data from the table: "pokemon_v2_statname" */
  delete_pokemon_v2_statname?: Maybe<Pokemon_V2_Statname_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_statname" */
  delete_pokemon_v2_statname_by_pk?: Maybe<Pokemon_V2_Statname>;
  /** delete data from the table: "pokemon_v2_supercontestcombo" */
  delete_pokemon_v2_supercontestcombo?: Maybe<Pokemon_V2_Supercontestcombo_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_supercontestcombo" */
  delete_pokemon_v2_supercontestcombo_by_pk?: Maybe<Pokemon_V2_Supercontestcombo>;
  /** delete data from the table: "pokemon_v2_supercontesteffect" */
  delete_pokemon_v2_supercontesteffect?: Maybe<Pokemon_V2_Supercontesteffect_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_supercontesteffect" */
  delete_pokemon_v2_supercontesteffect_by_pk?: Maybe<Pokemon_V2_Supercontesteffect>;
  /** delete data from the table: "pokemon_v2_supercontesteffectflavortext" */
  delete_pokemon_v2_supercontesteffectflavortext?: Maybe<Pokemon_V2_Supercontesteffectflavortext_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_supercontesteffectflavortext" */
  delete_pokemon_v2_supercontesteffectflavortext_by_pk?: Maybe<Pokemon_V2_Supercontesteffectflavortext>;
  /** delete data from the table: "pokemon_v2_type" */
  delete_pokemon_v2_type?: Maybe<Pokemon_V2_Type_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_type" */
  delete_pokemon_v2_type_by_pk?: Maybe<Pokemon_V2_Type>;
  /** delete data from the table: "pokemon_v2_typeefficacy" */
  delete_pokemon_v2_typeefficacy?: Maybe<Pokemon_V2_Typeefficacy_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_typeefficacy" */
  delete_pokemon_v2_typeefficacy_by_pk?: Maybe<Pokemon_V2_Typeefficacy>;
  /** delete data from the table: "pokemon_v2_typeefficacypast" */
  delete_pokemon_v2_typeefficacypast?: Maybe<Pokemon_V2_Typeefficacypast_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_typeefficacypast" */
  delete_pokemon_v2_typeefficacypast_by_pk?: Maybe<Pokemon_V2_Typeefficacypast>;
  /** delete data from the table: "pokemon_v2_typegameindex" */
  delete_pokemon_v2_typegameindex?: Maybe<Pokemon_V2_Typegameindex_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_typegameindex" */
  delete_pokemon_v2_typegameindex_by_pk?: Maybe<Pokemon_V2_Typegameindex>;
  /** delete data from the table: "pokemon_v2_typename" */
  delete_pokemon_v2_typename?: Maybe<Pokemon_V2_Typename_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_typename" */
  delete_pokemon_v2_typename_by_pk?: Maybe<Pokemon_V2_Typename>;
  /** delete data from the table: "pokemon_v2_version" */
  delete_pokemon_v2_version?: Maybe<Pokemon_V2_Version_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_version" */
  delete_pokemon_v2_version_by_pk?: Maybe<Pokemon_V2_Version>;
  /** delete data from the table: "pokemon_v2_versiongroup" */
  delete_pokemon_v2_versiongroup?: Maybe<Pokemon_V2_Versiongroup_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_versiongroup" */
  delete_pokemon_v2_versiongroup_by_pk?: Maybe<Pokemon_V2_Versiongroup>;
  /** delete data from the table: "pokemon_v2_versiongroupmovelearnmethod" */
  delete_pokemon_v2_versiongroupmovelearnmethod?: Maybe<Pokemon_V2_Versiongroupmovelearnmethod_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_versiongroupmovelearnmethod" */
  delete_pokemon_v2_versiongroupmovelearnmethod_by_pk?: Maybe<Pokemon_V2_Versiongroupmovelearnmethod>;
  /** delete data from the table: "pokemon_v2_versiongroupregion" */
  delete_pokemon_v2_versiongroupregion?: Maybe<Pokemon_V2_Versiongroupregion_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_versiongroupregion" */
  delete_pokemon_v2_versiongroupregion_by_pk?: Maybe<Pokemon_V2_Versiongroupregion>;
  /** delete data from the table: "pokemon_v2_versionname" */
  delete_pokemon_v2_versionname?: Maybe<Pokemon_V2_Versionname_Mutation_Response>;
  /** delete single row from the table: "pokemon_v2_versionname" */
  delete_pokemon_v2_versionname_by_pk?: Maybe<Pokemon_V2_Versionname>;
  /** insert data into the table: "auth_group" */
  insert_auth_group?: Maybe<Auth_Group_Mutation_Response>;
  /** insert a single row into the table: "auth_group" */
  insert_auth_group_one?: Maybe<Auth_Group>;
  /** insert data into the table: "auth_group_permissions" */
  insert_auth_group_permissions?: Maybe<Auth_Group_Permissions_Mutation_Response>;
  /** insert a single row into the table: "auth_group_permissions" */
  insert_auth_group_permissions_one?: Maybe<Auth_Group_Permissions>;
  /** insert data into the table: "auth_permission" */
  insert_auth_permission?: Maybe<Auth_Permission_Mutation_Response>;
  /** insert a single row into the table: "auth_permission" */
  insert_auth_permission_one?: Maybe<Auth_Permission>;
  /** insert data into the table: "auth_user" */
  insert_auth_user?: Maybe<Auth_User_Mutation_Response>;
  /** insert data into the table: "auth_user_groups" */
  insert_auth_user_groups?: Maybe<Auth_User_Groups_Mutation_Response>;
  /** insert a single row into the table: "auth_user_groups" */
  insert_auth_user_groups_one?: Maybe<Auth_User_Groups>;
  /** insert a single row into the table: "auth_user" */
  insert_auth_user_one?: Maybe<Auth_User>;
  /** insert data into the table: "auth_user_user_permissions" */
  insert_auth_user_user_permissions?: Maybe<Auth_User_User_Permissions_Mutation_Response>;
  /** insert a single row into the table: "auth_user_user_permissions" */
  insert_auth_user_user_permissions_one?: Maybe<Auth_User_User_Permissions>;
  /** insert data into the table: "django_admin_log" */
  insert_django_admin_log?: Maybe<Django_Admin_Log_Mutation_Response>;
  /** insert a single row into the table: "django_admin_log" */
  insert_django_admin_log_one?: Maybe<Django_Admin_Log>;
  /** insert data into the table: "django_content_type" */
  insert_django_content_type?: Maybe<Django_Content_Type_Mutation_Response>;
  /** insert a single row into the table: "django_content_type" */
  insert_django_content_type_one?: Maybe<Django_Content_Type>;
  /** insert data into the table: "django_migrations" */
  insert_django_migrations?: Maybe<Django_Migrations_Mutation_Response>;
  /** insert a single row into the table: "django_migrations" */
  insert_django_migrations_one?: Maybe<Django_Migrations>;
  /** insert data into the table: "django_session" */
  insert_django_session?: Maybe<Django_Session_Mutation_Response>;
  /** insert a single row into the table: "django_session" */
  insert_django_session_one?: Maybe<Django_Session>;
  /** insert data into the table: "django_site" */
  insert_django_site?: Maybe<Django_Site_Mutation_Response>;
  /** insert a single row into the table: "django_site" */
  insert_django_site_one?: Maybe<Django_Site>;
  /** insert data into the table: "pokemon_v2_ability" */
  insert_pokemon_v2_ability?: Maybe<Pokemon_V2_Ability_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_ability" */
  insert_pokemon_v2_ability_one?: Maybe<Pokemon_V2_Ability>;
  /** insert data into the table: "pokemon_v2_abilitychange" */
  insert_pokemon_v2_abilitychange?: Maybe<Pokemon_V2_Abilitychange_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_abilitychange" */
  insert_pokemon_v2_abilitychange_one?: Maybe<Pokemon_V2_Abilitychange>;
  /** insert data into the table: "pokemon_v2_abilitychangeeffecttext" */
  insert_pokemon_v2_abilitychangeeffecttext?: Maybe<Pokemon_V2_Abilitychangeeffecttext_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_abilitychangeeffecttext" */
  insert_pokemon_v2_abilitychangeeffecttext_one?: Maybe<Pokemon_V2_Abilitychangeeffecttext>;
  /** insert data into the table: "pokemon_v2_abilityeffecttext" */
  insert_pokemon_v2_abilityeffecttext?: Maybe<Pokemon_V2_Abilityeffecttext_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_abilityeffecttext" */
  insert_pokemon_v2_abilityeffecttext_one?: Maybe<Pokemon_V2_Abilityeffecttext>;
  /** insert data into the table: "pokemon_v2_abilityflavortext" */
  insert_pokemon_v2_abilityflavortext?: Maybe<Pokemon_V2_Abilityflavortext_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_abilityflavortext" */
  insert_pokemon_v2_abilityflavortext_one?: Maybe<Pokemon_V2_Abilityflavortext>;
  /** insert data into the table: "pokemon_v2_abilityname" */
  insert_pokemon_v2_abilityname?: Maybe<Pokemon_V2_Abilityname_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_abilityname" */
  insert_pokemon_v2_abilityname_one?: Maybe<Pokemon_V2_Abilityname>;
  /** insert data into the table: "pokemon_v2_berry" */
  insert_pokemon_v2_berry?: Maybe<Pokemon_V2_Berry_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_berry" */
  insert_pokemon_v2_berry_one?: Maybe<Pokemon_V2_Berry>;
  /** insert data into the table: "pokemon_v2_berryfirmness" */
  insert_pokemon_v2_berryfirmness?: Maybe<Pokemon_V2_Berryfirmness_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_berryfirmness" */
  insert_pokemon_v2_berryfirmness_one?: Maybe<Pokemon_V2_Berryfirmness>;
  /** insert data into the table: "pokemon_v2_berryfirmnessname" */
  insert_pokemon_v2_berryfirmnessname?: Maybe<Pokemon_V2_Berryfirmnessname_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_berryfirmnessname" */
  insert_pokemon_v2_berryfirmnessname_one?: Maybe<Pokemon_V2_Berryfirmnessname>;
  /** insert data into the table: "pokemon_v2_berryflavor" */
  insert_pokemon_v2_berryflavor?: Maybe<Pokemon_V2_Berryflavor_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_berryflavor" */
  insert_pokemon_v2_berryflavor_one?: Maybe<Pokemon_V2_Berryflavor>;
  /** insert data into the table: "pokemon_v2_berryflavormap" */
  insert_pokemon_v2_berryflavormap?: Maybe<Pokemon_V2_Berryflavormap_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_berryflavormap" */
  insert_pokemon_v2_berryflavormap_one?: Maybe<Pokemon_V2_Berryflavormap>;
  /** insert data into the table: "pokemon_v2_berryflavorname" */
  insert_pokemon_v2_berryflavorname?: Maybe<Pokemon_V2_Berryflavorname_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_berryflavorname" */
  insert_pokemon_v2_berryflavorname_one?: Maybe<Pokemon_V2_Berryflavorname>;
  /** insert data into the table: "pokemon_v2_characteristic" */
  insert_pokemon_v2_characteristic?: Maybe<Pokemon_V2_Characteristic_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_characteristic" */
  insert_pokemon_v2_characteristic_one?: Maybe<Pokemon_V2_Characteristic>;
  /** insert data into the table: "pokemon_v2_characteristicdescription" */
  insert_pokemon_v2_characteristicdescription?: Maybe<Pokemon_V2_Characteristicdescription_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_characteristicdescription" */
  insert_pokemon_v2_characteristicdescription_one?: Maybe<Pokemon_V2_Characteristicdescription>;
  /** insert data into the table: "pokemon_v2_contestcombo" */
  insert_pokemon_v2_contestcombo?: Maybe<Pokemon_V2_Contestcombo_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_contestcombo" */
  insert_pokemon_v2_contestcombo_one?: Maybe<Pokemon_V2_Contestcombo>;
  /** insert data into the table: "pokemon_v2_contesteffect" */
  insert_pokemon_v2_contesteffect?: Maybe<Pokemon_V2_Contesteffect_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_contesteffect" */
  insert_pokemon_v2_contesteffect_one?: Maybe<Pokemon_V2_Contesteffect>;
  /** insert data into the table: "pokemon_v2_contesteffecteffecttext" */
  insert_pokemon_v2_contesteffecteffecttext?: Maybe<Pokemon_V2_Contesteffecteffecttext_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_contesteffecteffecttext" */
  insert_pokemon_v2_contesteffecteffecttext_one?: Maybe<Pokemon_V2_Contesteffecteffecttext>;
  /** insert data into the table: "pokemon_v2_contesteffectflavortext" */
  insert_pokemon_v2_contesteffectflavortext?: Maybe<Pokemon_V2_Contesteffectflavortext_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_contesteffectflavortext" */
  insert_pokemon_v2_contesteffectflavortext_one?: Maybe<Pokemon_V2_Contesteffectflavortext>;
  /** insert data into the table: "pokemon_v2_contesttype" */
  insert_pokemon_v2_contesttype?: Maybe<Pokemon_V2_Contesttype_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_contesttype" */
  insert_pokemon_v2_contesttype_one?: Maybe<Pokemon_V2_Contesttype>;
  /** insert data into the table: "pokemon_v2_contesttypename" */
  insert_pokemon_v2_contesttypename?: Maybe<Pokemon_V2_Contesttypename_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_contesttypename" */
  insert_pokemon_v2_contesttypename_one?: Maybe<Pokemon_V2_Contesttypename>;
  /** insert data into the table: "pokemon_v2_egggroup" */
  insert_pokemon_v2_egggroup?: Maybe<Pokemon_V2_Egggroup_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_egggroup" */
  insert_pokemon_v2_egggroup_one?: Maybe<Pokemon_V2_Egggroup>;
  /** insert data into the table: "pokemon_v2_egggroupname" */
  insert_pokemon_v2_egggroupname?: Maybe<Pokemon_V2_Egggroupname_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_egggroupname" */
  insert_pokemon_v2_egggroupname_one?: Maybe<Pokemon_V2_Egggroupname>;
  /** insert data into the table: "pokemon_v2_encounter" */
  insert_pokemon_v2_encounter?: Maybe<Pokemon_V2_Encounter_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_encounter" */
  insert_pokemon_v2_encounter_one?: Maybe<Pokemon_V2_Encounter>;
  /** insert data into the table: "pokemon_v2_encountercondition" */
  insert_pokemon_v2_encountercondition?: Maybe<Pokemon_V2_Encountercondition_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_encountercondition" */
  insert_pokemon_v2_encountercondition_one?: Maybe<Pokemon_V2_Encountercondition>;
  /** insert data into the table: "pokemon_v2_encounterconditionname" */
  insert_pokemon_v2_encounterconditionname?: Maybe<Pokemon_V2_Encounterconditionname_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_encounterconditionname" */
  insert_pokemon_v2_encounterconditionname_one?: Maybe<Pokemon_V2_Encounterconditionname>;
  /** insert data into the table: "pokemon_v2_encounterconditionvalue" */
  insert_pokemon_v2_encounterconditionvalue?: Maybe<Pokemon_V2_Encounterconditionvalue_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_encounterconditionvalue" */
  insert_pokemon_v2_encounterconditionvalue_one?: Maybe<Pokemon_V2_Encounterconditionvalue>;
  /** insert data into the table: "pokemon_v2_encounterconditionvaluemap" */
  insert_pokemon_v2_encounterconditionvaluemap?: Maybe<Pokemon_V2_Encounterconditionvaluemap_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_encounterconditionvaluemap" */
  insert_pokemon_v2_encounterconditionvaluemap_one?: Maybe<Pokemon_V2_Encounterconditionvaluemap>;
  /** insert data into the table: "pokemon_v2_encounterconditionvaluename" */
  insert_pokemon_v2_encounterconditionvaluename?: Maybe<Pokemon_V2_Encounterconditionvaluename_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_encounterconditionvaluename" */
  insert_pokemon_v2_encounterconditionvaluename_one?: Maybe<Pokemon_V2_Encounterconditionvaluename>;
  /** insert data into the table: "pokemon_v2_encountermethod" */
  insert_pokemon_v2_encountermethod?: Maybe<Pokemon_V2_Encountermethod_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_encountermethod" */
  insert_pokemon_v2_encountermethod_one?: Maybe<Pokemon_V2_Encountermethod>;
  /** insert data into the table: "pokemon_v2_encountermethodname" */
  insert_pokemon_v2_encountermethodname?: Maybe<Pokemon_V2_Encountermethodname_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_encountermethodname" */
  insert_pokemon_v2_encountermethodname_one?: Maybe<Pokemon_V2_Encountermethodname>;
  /** insert data into the table: "pokemon_v2_encounterslot" */
  insert_pokemon_v2_encounterslot?: Maybe<Pokemon_V2_Encounterslot_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_encounterslot" */
  insert_pokemon_v2_encounterslot_one?: Maybe<Pokemon_V2_Encounterslot>;
  /** insert data into the table: "pokemon_v2_evolutionchain" */
  insert_pokemon_v2_evolutionchain?: Maybe<Pokemon_V2_Evolutionchain_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_evolutionchain" */
  insert_pokemon_v2_evolutionchain_one?: Maybe<Pokemon_V2_Evolutionchain>;
  /** insert data into the table: "pokemon_v2_evolutiontrigger" */
  insert_pokemon_v2_evolutiontrigger?: Maybe<Pokemon_V2_Evolutiontrigger_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_evolutiontrigger" */
  insert_pokemon_v2_evolutiontrigger_one?: Maybe<Pokemon_V2_Evolutiontrigger>;
  /** insert data into the table: "pokemon_v2_evolutiontriggername" */
  insert_pokemon_v2_evolutiontriggername?: Maybe<Pokemon_V2_Evolutiontriggername_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_evolutiontriggername" */
  insert_pokemon_v2_evolutiontriggername_one?: Maybe<Pokemon_V2_Evolutiontriggername>;
  /** insert data into the table: "pokemon_v2_experience" */
  insert_pokemon_v2_experience?: Maybe<Pokemon_V2_Experience_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_experience" */
  insert_pokemon_v2_experience_one?: Maybe<Pokemon_V2_Experience>;
  /** insert data into the table: "pokemon_v2_gender" */
  insert_pokemon_v2_gender?: Maybe<Pokemon_V2_Gender_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_gender" */
  insert_pokemon_v2_gender_one?: Maybe<Pokemon_V2_Gender>;
  /** insert data into the table: "pokemon_v2_generation" */
  insert_pokemon_v2_generation?: Maybe<Pokemon_V2_Generation_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_generation" */
  insert_pokemon_v2_generation_one?: Maybe<Pokemon_V2_Generation>;
  /** insert data into the table: "pokemon_v2_generationname" */
  insert_pokemon_v2_generationname?: Maybe<Pokemon_V2_Generationname_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_generationname" */
  insert_pokemon_v2_generationname_one?: Maybe<Pokemon_V2_Generationname>;
  /** insert data into the table: "pokemon_v2_growthrate" */
  insert_pokemon_v2_growthrate?: Maybe<Pokemon_V2_Growthrate_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_growthrate" */
  insert_pokemon_v2_growthrate_one?: Maybe<Pokemon_V2_Growthrate>;
  /** insert data into the table: "pokemon_v2_growthratedescription" */
  insert_pokemon_v2_growthratedescription?: Maybe<Pokemon_V2_Growthratedescription_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_growthratedescription" */
  insert_pokemon_v2_growthratedescription_one?: Maybe<Pokemon_V2_Growthratedescription>;
  /** insert data into the table: "pokemon_v2_item" */
  insert_pokemon_v2_item?: Maybe<Pokemon_V2_Item_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_item" */
  insert_pokemon_v2_item_one?: Maybe<Pokemon_V2_Item>;
  /** insert data into the table: "pokemon_v2_itemattribute" */
  insert_pokemon_v2_itemattribute?: Maybe<Pokemon_V2_Itemattribute_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_itemattribute" */
  insert_pokemon_v2_itemattribute_one?: Maybe<Pokemon_V2_Itemattribute>;
  /** insert data into the table: "pokemon_v2_itemattributedescription" */
  insert_pokemon_v2_itemattributedescription?: Maybe<Pokemon_V2_Itemattributedescription_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_itemattributedescription" */
  insert_pokemon_v2_itemattributedescription_one?: Maybe<Pokemon_V2_Itemattributedescription>;
  /** insert data into the table: "pokemon_v2_itemattributemap" */
  insert_pokemon_v2_itemattributemap?: Maybe<Pokemon_V2_Itemattributemap_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_itemattributemap" */
  insert_pokemon_v2_itemattributemap_one?: Maybe<Pokemon_V2_Itemattributemap>;
  /** insert data into the table: "pokemon_v2_itemattributename" */
  insert_pokemon_v2_itemattributename?: Maybe<Pokemon_V2_Itemattributename_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_itemattributename" */
  insert_pokemon_v2_itemattributename_one?: Maybe<Pokemon_V2_Itemattributename>;
  /** insert data into the table: "pokemon_v2_itemcategory" */
  insert_pokemon_v2_itemcategory?: Maybe<Pokemon_V2_Itemcategory_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_itemcategory" */
  insert_pokemon_v2_itemcategory_one?: Maybe<Pokemon_V2_Itemcategory>;
  /** insert data into the table: "pokemon_v2_itemcategoryname" */
  insert_pokemon_v2_itemcategoryname?: Maybe<Pokemon_V2_Itemcategoryname_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_itemcategoryname" */
  insert_pokemon_v2_itemcategoryname_one?: Maybe<Pokemon_V2_Itemcategoryname>;
  /** insert data into the table: "pokemon_v2_itemeffecttext" */
  insert_pokemon_v2_itemeffecttext?: Maybe<Pokemon_V2_Itemeffecttext_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_itemeffecttext" */
  insert_pokemon_v2_itemeffecttext_one?: Maybe<Pokemon_V2_Itemeffecttext>;
  /** insert data into the table: "pokemon_v2_itemflavortext" */
  insert_pokemon_v2_itemflavortext?: Maybe<Pokemon_V2_Itemflavortext_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_itemflavortext" */
  insert_pokemon_v2_itemflavortext_one?: Maybe<Pokemon_V2_Itemflavortext>;
  /** insert data into the table: "pokemon_v2_itemflingeffect" */
  insert_pokemon_v2_itemflingeffect?: Maybe<Pokemon_V2_Itemflingeffect_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_itemflingeffect" */
  insert_pokemon_v2_itemflingeffect_one?: Maybe<Pokemon_V2_Itemflingeffect>;
  /** insert data into the table: "pokemon_v2_itemflingeffecteffecttext" */
  insert_pokemon_v2_itemflingeffecteffecttext?: Maybe<Pokemon_V2_Itemflingeffecteffecttext_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_itemflingeffecteffecttext" */
  insert_pokemon_v2_itemflingeffecteffecttext_one?: Maybe<Pokemon_V2_Itemflingeffecteffecttext>;
  /** insert data into the table: "pokemon_v2_itemgameindex" */
  insert_pokemon_v2_itemgameindex?: Maybe<Pokemon_V2_Itemgameindex_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_itemgameindex" */
  insert_pokemon_v2_itemgameindex_one?: Maybe<Pokemon_V2_Itemgameindex>;
  /** insert data into the table: "pokemon_v2_itemname" */
  insert_pokemon_v2_itemname?: Maybe<Pokemon_V2_Itemname_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_itemname" */
  insert_pokemon_v2_itemname_one?: Maybe<Pokemon_V2_Itemname>;
  /** insert data into the table: "pokemon_v2_itempocket" */
  insert_pokemon_v2_itempocket?: Maybe<Pokemon_V2_Itempocket_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_itempocket" */
  insert_pokemon_v2_itempocket_one?: Maybe<Pokemon_V2_Itempocket>;
  /** insert data into the table: "pokemon_v2_itempocketname" */
  insert_pokemon_v2_itempocketname?: Maybe<Pokemon_V2_Itempocketname_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_itempocketname" */
  insert_pokemon_v2_itempocketname_one?: Maybe<Pokemon_V2_Itempocketname>;
  /** insert data into the table: "pokemon_v2_itemsprites" */
  insert_pokemon_v2_itemsprites?: Maybe<Pokemon_V2_Itemsprites_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_itemsprites" */
  insert_pokemon_v2_itemsprites_one?: Maybe<Pokemon_V2_Itemsprites>;
  /** insert data into the table: "pokemon_v2_language" */
  insert_pokemon_v2_language?: Maybe<Pokemon_V2_Language_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_language" */
  insert_pokemon_v2_language_one?: Maybe<Pokemon_V2_Language>;
  /** insert data into the table: "pokemon_v2_languagename" */
  insert_pokemon_v2_languagename?: Maybe<Pokemon_V2_Languagename_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_languagename" */
  insert_pokemon_v2_languagename_one?: Maybe<Pokemon_V2_Languagename>;
  /** insert data into the table: "pokemon_v2_location" */
  insert_pokemon_v2_location?: Maybe<Pokemon_V2_Location_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_location" */
  insert_pokemon_v2_location_one?: Maybe<Pokemon_V2_Location>;
  /** insert data into the table: "pokemon_v2_locationarea" */
  insert_pokemon_v2_locationarea?: Maybe<Pokemon_V2_Locationarea_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_locationarea" */
  insert_pokemon_v2_locationarea_one?: Maybe<Pokemon_V2_Locationarea>;
  /** insert data into the table: "pokemon_v2_locationareaencounterrate" */
  insert_pokemon_v2_locationareaencounterrate?: Maybe<Pokemon_V2_Locationareaencounterrate_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_locationareaencounterrate" */
  insert_pokemon_v2_locationareaencounterrate_one?: Maybe<Pokemon_V2_Locationareaencounterrate>;
  /** insert data into the table: "pokemon_v2_locationareaname" */
  insert_pokemon_v2_locationareaname?: Maybe<Pokemon_V2_Locationareaname_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_locationareaname" */
  insert_pokemon_v2_locationareaname_one?: Maybe<Pokemon_V2_Locationareaname>;
  /** insert data into the table: "pokemon_v2_locationgameindex" */
  insert_pokemon_v2_locationgameindex?: Maybe<Pokemon_V2_Locationgameindex_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_locationgameindex" */
  insert_pokemon_v2_locationgameindex_one?: Maybe<Pokemon_V2_Locationgameindex>;
  /** insert data into the table: "pokemon_v2_locationname" */
  insert_pokemon_v2_locationname?: Maybe<Pokemon_V2_Locationname_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_locationname" */
  insert_pokemon_v2_locationname_one?: Maybe<Pokemon_V2_Locationname>;
  /** insert data into the table: "pokemon_v2_machine" */
  insert_pokemon_v2_machine?: Maybe<Pokemon_V2_Machine_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_machine" */
  insert_pokemon_v2_machine_one?: Maybe<Pokemon_V2_Machine>;
  /** insert data into the table: "pokemon_v2_move" */
  insert_pokemon_v2_move?: Maybe<Pokemon_V2_Move_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_move" */
  insert_pokemon_v2_move_one?: Maybe<Pokemon_V2_Move>;
  /** insert data into the table: "pokemon_v2_moveattribute" */
  insert_pokemon_v2_moveattribute?: Maybe<Pokemon_V2_Moveattribute_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_moveattribute" */
  insert_pokemon_v2_moveattribute_one?: Maybe<Pokemon_V2_Moveattribute>;
  /** insert data into the table: "pokemon_v2_moveattributedescription" */
  insert_pokemon_v2_moveattributedescription?: Maybe<Pokemon_V2_Moveattributedescription_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_moveattributedescription" */
  insert_pokemon_v2_moveattributedescription_one?: Maybe<Pokemon_V2_Moveattributedescription>;
  /** insert data into the table: "pokemon_v2_moveattributemap" */
  insert_pokemon_v2_moveattributemap?: Maybe<Pokemon_V2_Moveattributemap_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_moveattributemap" */
  insert_pokemon_v2_moveattributemap_one?: Maybe<Pokemon_V2_Moveattributemap>;
  /** insert data into the table: "pokemon_v2_moveattributename" */
  insert_pokemon_v2_moveattributename?: Maybe<Pokemon_V2_Moveattributename_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_moveattributename" */
  insert_pokemon_v2_moveattributename_one?: Maybe<Pokemon_V2_Moveattributename>;
  /** insert data into the table: "pokemon_v2_movebattlestyle" */
  insert_pokemon_v2_movebattlestyle?: Maybe<Pokemon_V2_Movebattlestyle_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_movebattlestyle" */
  insert_pokemon_v2_movebattlestyle_one?: Maybe<Pokemon_V2_Movebattlestyle>;
  /** insert data into the table: "pokemon_v2_movebattlestylename" */
  insert_pokemon_v2_movebattlestylename?: Maybe<Pokemon_V2_Movebattlestylename_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_movebattlestylename" */
  insert_pokemon_v2_movebattlestylename_one?: Maybe<Pokemon_V2_Movebattlestylename>;
  /** insert data into the table: "pokemon_v2_movechange" */
  insert_pokemon_v2_movechange?: Maybe<Pokemon_V2_Movechange_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_movechange" */
  insert_pokemon_v2_movechange_one?: Maybe<Pokemon_V2_Movechange>;
  /** insert data into the table: "pokemon_v2_movedamageclass" */
  insert_pokemon_v2_movedamageclass?: Maybe<Pokemon_V2_Movedamageclass_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_movedamageclass" */
  insert_pokemon_v2_movedamageclass_one?: Maybe<Pokemon_V2_Movedamageclass>;
  /** insert data into the table: "pokemon_v2_movedamageclassdescription" */
  insert_pokemon_v2_movedamageclassdescription?: Maybe<Pokemon_V2_Movedamageclassdescription_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_movedamageclassdescription" */
  insert_pokemon_v2_movedamageclassdescription_one?: Maybe<Pokemon_V2_Movedamageclassdescription>;
  /** insert data into the table: "pokemon_v2_movedamageclassname" */
  insert_pokemon_v2_movedamageclassname?: Maybe<Pokemon_V2_Movedamageclassname_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_movedamageclassname" */
  insert_pokemon_v2_movedamageclassname_one?: Maybe<Pokemon_V2_Movedamageclassname>;
  /** insert data into the table: "pokemon_v2_moveeffect" */
  insert_pokemon_v2_moveeffect?: Maybe<Pokemon_V2_Moveeffect_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_moveeffect" */
  insert_pokemon_v2_moveeffect_one?: Maybe<Pokemon_V2_Moveeffect>;
  /** insert data into the table: "pokemon_v2_moveeffectchange" */
  insert_pokemon_v2_moveeffectchange?: Maybe<Pokemon_V2_Moveeffectchange_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_moveeffectchange" */
  insert_pokemon_v2_moveeffectchange_one?: Maybe<Pokemon_V2_Moveeffectchange>;
  /** insert data into the table: "pokemon_v2_moveeffectchangeeffecttext" */
  insert_pokemon_v2_moveeffectchangeeffecttext?: Maybe<Pokemon_V2_Moveeffectchangeeffecttext_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_moveeffectchangeeffecttext" */
  insert_pokemon_v2_moveeffectchangeeffecttext_one?: Maybe<Pokemon_V2_Moveeffectchangeeffecttext>;
  /** insert data into the table: "pokemon_v2_moveeffecteffecttext" */
  insert_pokemon_v2_moveeffecteffecttext?: Maybe<Pokemon_V2_Moveeffecteffecttext_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_moveeffecteffecttext" */
  insert_pokemon_v2_moveeffecteffecttext_one?: Maybe<Pokemon_V2_Moveeffecteffecttext>;
  /** insert data into the table: "pokemon_v2_moveflavortext" */
  insert_pokemon_v2_moveflavortext?: Maybe<Pokemon_V2_Moveflavortext_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_moveflavortext" */
  insert_pokemon_v2_moveflavortext_one?: Maybe<Pokemon_V2_Moveflavortext>;
  /** insert data into the table: "pokemon_v2_movelearnmethod" */
  insert_pokemon_v2_movelearnmethod?: Maybe<Pokemon_V2_Movelearnmethod_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_movelearnmethod" */
  insert_pokemon_v2_movelearnmethod_one?: Maybe<Pokemon_V2_Movelearnmethod>;
  /** insert data into the table: "pokemon_v2_movelearnmethoddescription" */
  insert_pokemon_v2_movelearnmethoddescription?: Maybe<Pokemon_V2_Movelearnmethoddescription_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_movelearnmethoddescription" */
  insert_pokemon_v2_movelearnmethoddescription_one?: Maybe<Pokemon_V2_Movelearnmethoddescription>;
  /** insert data into the table: "pokemon_v2_movelearnmethodname" */
  insert_pokemon_v2_movelearnmethodname?: Maybe<Pokemon_V2_Movelearnmethodname_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_movelearnmethodname" */
  insert_pokemon_v2_movelearnmethodname_one?: Maybe<Pokemon_V2_Movelearnmethodname>;
  /** insert data into the table: "pokemon_v2_movemeta" */
  insert_pokemon_v2_movemeta?: Maybe<Pokemon_V2_Movemeta_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_movemeta" */
  insert_pokemon_v2_movemeta_one?: Maybe<Pokemon_V2_Movemeta>;
  /** insert data into the table: "pokemon_v2_movemetaailment" */
  insert_pokemon_v2_movemetaailment?: Maybe<Pokemon_V2_Movemetaailment_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_movemetaailment" */
  insert_pokemon_v2_movemetaailment_one?: Maybe<Pokemon_V2_Movemetaailment>;
  /** insert data into the table: "pokemon_v2_movemetaailmentname" */
  insert_pokemon_v2_movemetaailmentname?: Maybe<Pokemon_V2_Movemetaailmentname_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_movemetaailmentname" */
  insert_pokemon_v2_movemetaailmentname_one?: Maybe<Pokemon_V2_Movemetaailmentname>;
  /** insert data into the table: "pokemon_v2_movemetacategory" */
  insert_pokemon_v2_movemetacategory?: Maybe<Pokemon_V2_Movemetacategory_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_movemetacategory" */
  insert_pokemon_v2_movemetacategory_one?: Maybe<Pokemon_V2_Movemetacategory>;
  /** insert data into the table: "pokemon_v2_movemetacategorydescription" */
  insert_pokemon_v2_movemetacategorydescription?: Maybe<Pokemon_V2_Movemetacategorydescription_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_movemetacategorydescription" */
  insert_pokemon_v2_movemetacategorydescription_one?: Maybe<Pokemon_V2_Movemetacategorydescription>;
  /** insert data into the table: "pokemon_v2_movemetastatchange" */
  insert_pokemon_v2_movemetastatchange?: Maybe<Pokemon_V2_Movemetastatchange_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_movemetastatchange" */
  insert_pokemon_v2_movemetastatchange_one?: Maybe<Pokemon_V2_Movemetastatchange>;
  /** insert data into the table: "pokemon_v2_movename" */
  insert_pokemon_v2_movename?: Maybe<Pokemon_V2_Movename_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_movename" */
  insert_pokemon_v2_movename_one?: Maybe<Pokemon_V2_Movename>;
  /** insert data into the table: "pokemon_v2_movetarget" */
  insert_pokemon_v2_movetarget?: Maybe<Pokemon_V2_Movetarget_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_movetarget" */
  insert_pokemon_v2_movetarget_one?: Maybe<Pokemon_V2_Movetarget>;
  /** insert data into the table: "pokemon_v2_movetargetdescription" */
  insert_pokemon_v2_movetargetdescription?: Maybe<Pokemon_V2_Movetargetdescription_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_movetargetdescription" */
  insert_pokemon_v2_movetargetdescription_one?: Maybe<Pokemon_V2_Movetargetdescription>;
  /** insert data into the table: "pokemon_v2_movetargetname" */
  insert_pokemon_v2_movetargetname?: Maybe<Pokemon_V2_Movetargetname_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_movetargetname" */
  insert_pokemon_v2_movetargetname_one?: Maybe<Pokemon_V2_Movetargetname>;
  /** insert data into the table: "pokemon_v2_nature" */
  insert_pokemon_v2_nature?: Maybe<Pokemon_V2_Nature_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_nature" */
  insert_pokemon_v2_nature_one?: Maybe<Pokemon_V2_Nature>;
  /** insert data into the table: "pokemon_v2_naturebattlestylepreference" */
  insert_pokemon_v2_naturebattlestylepreference?: Maybe<Pokemon_V2_Naturebattlestylepreference_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_naturebattlestylepreference" */
  insert_pokemon_v2_naturebattlestylepreference_one?: Maybe<Pokemon_V2_Naturebattlestylepreference>;
  /** insert data into the table: "pokemon_v2_naturename" */
  insert_pokemon_v2_naturename?: Maybe<Pokemon_V2_Naturename_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_naturename" */
  insert_pokemon_v2_naturename_one?: Maybe<Pokemon_V2_Naturename>;
  /** insert data into the table: "pokemon_v2_naturepokeathlonstat" */
  insert_pokemon_v2_naturepokeathlonstat?: Maybe<Pokemon_V2_Naturepokeathlonstat_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_naturepokeathlonstat" */
  insert_pokemon_v2_naturepokeathlonstat_one?: Maybe<Pokemon_V2_Naturepokeathlonstat>;
  /** insert data into the table: "pokemon_v2_palpark" */
  insert_pokemon_v2_palpark?: Maybe<Pokemon_V2_Palpark_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_palpark" */
  insert_pokemon_v2_palpark_one?: Maybe<Pokemon_V2_Palpark>;
  /** insert data into the table: "pokemon_v2_palparkarea" */
  insert_pokemon_v2_palparkarea?: Maybe<Pokemon_V2_Palparkarea_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_palparkarea" */
  insert_pokemon_v2_palparkarea_one?: Maybe<Pokemon_V2_Palparkarea>;
  /** insert data into the table: "pokemon_v2_palparkareaname" */
  insert_pokemon_v2_palparkareaname?: Maybe<Pokemon_V2_Palparkareaname_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_palparkareaname" */
  insert_pokemon_v2_palparkareaname_one?: Maybe<Pokemon_V2_Palparkareaname>;
  /** insert data into the table: "pokemon_v2_pokeathlonstat" */
  insert_pokemon_v2_pokeathlonstat?: Maybe<Pokemon_V2_Pokeathlonstat_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_pokeathlonstat" */
  insert_pokemon_v2_pokeathlonstat_one?: Maybe<Pokemon_V2_Pokeathlonstat>;
  /** insert data into the table: "pokemon_v2_pokeathlonstatname" */
  insert_pokemon_v2_pokeathlonstatname?: Maybe<Pokemon_V2_Pokeathlonstatname_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_pokeathlonstatname" */
  insert_pokemon_v2_pokeathlonstatname_one?: Maybe<Pokemon_V2_Pokeathlonstatname>;
  /** insert data into the table: "pokemon_v2_pokedex" */
  insert_pokemon_v2_pokedex?: Maybe<Pokemon_V2_Pokedex_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_pokedex" */
  insert_pokemon_v2_pokedex_one?: Maybe<Pokemon_V2_Pokedex>;
  /** insert data into the table: "pokemon_v2_pokedexdescription" */
  insert_pokemon_v2_pokedexdescription?: Maybe<Pokemon_V2_Pokedexdescription_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_pokedexdescription" */
  insert_pokemon_v2_pokedexdescription_one?: Maybe<Pokemon_V2_Pokedexdescription>;
  /** insert data into the table: "pokemon_v2_pokedexname" */
  insert_pokemon_v2_pokedexname?: Maybe<Pokemon_V2_Pokedexname_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_pokedexname" */
  insert_pokemon_v2_pokedexname_one?: Maybe<Pokemon_V2_Pokedexname>;
  /** insert data into the table: "pokemon_v2_pokedexversiongroup" */
  insert_pokemon_v2_pokedexversiongroup?: Maybe<Pokemon_V2_Pokedexversiongroup_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_pokedexversiongroup" */
  insert_pokemon_v2_pokedexversiongroup_one?: Maybe<Pokemon_V2_Pokedexversiongroup>;
  /** insert data into the table: "pokemon_v2_pokemon" */
  insert_pokemon_v2_pokemon?: Maybe<Pokemon_V2_Pokemon_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_pokemon" */
  insert_pokemon_v2_pokemon_one?: Maybe<Pokemon_V2_Pokemon>;
  /** insert data into the table: "pokemon_v2_pokemonability" */
  insert_pokemon_v2_pokemonability?: Maybe<Pokemon_V2_Pokemonability_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_pokemonability" */
  insert_pokemon_v2_pokemonability_one?: Maybe<Pokemon_V2_Pokemonability>;
  /** insert data into the table: "pokemon_v2_pokemonabilitypast" */
  insert_pokemon_v2_pokemonabilitypast?: Maybe<Pokemon_V2_Pokemonabilitypast_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_pokemonabilitypast" */
  insert_pokemon_v2_pokemonabilitypast_one?: Maybe<Pokemon_V2_Pokemonabilitypast>;
  /** insert data into the table: "pokemon_v2_pokemoncolor" */
  insert_pokemon_v2_pokemoncolor?: Maybe<Pokemon_V2_Pokemoncolor_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_pokemoncolor" */
  insert_pokemon_v2_pokemoncolor_one?: Maybe<Pokemon_V2_Pokemoncolor>;
  /** insert data into the table: "pokemon_v2_pokemoncolorname" */
  insert_pokemon_v2_pokemoncolorname?: Maybe<Pokemon_V2_Pokemoncolorname_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_pokemoncolorname" */
  insert_pokemon_v2_pokemoncolorname_one?: Maybe<Pokemon_V2_Pokemoncolorname>;
  /** insert data into the table: "pokemon_v2_pokemoncries" */
  insert_pokemon_v2_pokemoncries?: Maybe<Pokemon_V2_Pokemoncries_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_pokemoncries" */
  insert_pokemon_v2_pokemoncries_one?: Maybe<Pokemon_V2_Pokemoncries>;
  /** insert data into the table: "pokemon_v2_pokemondexnumber" */
  insert_pokemon_v2_pokemondexnumber?: Maybe<Pokemon_V2_Pokemondexnumber_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_pokemondexnumber" */
  insert_pokemon_v2_pokemondexnumber_one?: Maybe<Pokemon_V2_Pokemondexnumber>;
  /** insert data into the table: "pokemon_v2_pokemonegggroup" */
  insert_pokemon_v2_pokemonegggroup?: Maybe<Pokemon_V2_Pokemonegggroup_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_pokemonegggroup" */
  insert_pokemon_v2_pokemonegggroup_one?: Maybe<Pokemon_V2_Pokemonegggroup>;
  /** insert data into the table: "pokemon_v2_pokemonevolution" */
  insert_pokemon_v2_pokemonevolution?: Maybe<Pokemon_V2_Pokemonevolution_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_pokemonevolution" */
  insert_pokemon_v2_pokemonevolution_one?: Maybe<Pokemon_V2_Pokemonevolution>;
  /** insert data into the table: "pokemon_v2_pokemonform" */
  insert_pokemon_v2_pokemonform?: Maybe<Pokemon_V2_Pokemonform_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_pokemonform" */
  insert_pokemon_v2_pokemonform_one?: Maybe<Pokemon_V2_Pokemonform>;
  /** insert data into the table: "pokemon_v2_pokemonformgeneration" */
  insert_pokemon_v2_pokemonformgeneration?: Maybe<Pokemon_V2_Pokemonformgeneration_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_pokemonformgeneration" */
  insert_pokemon_v2_pokemonformgeneration_one?: Maybe<Pokemon_V2_Pokemonformgeneration>;
  /** insert data into the table: "pokemon_v2_pokemonformname" */
  insert_pokemon_v2_pokemonformname?: Maybe<Pokemon_V2_Pokemonformname_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_pokemonformname" */
  insert_pokemon_v2_pokemonformname_one?: Maybe<Pokemon_V2_Pokemonformname>;
  /** insert data into the table: "pokemon_v2_pokemonformsprites" */
  insert_pokemon_v2_pokemonformsprites?: Maybe<Pokemon_V2_Pokemonformsprites_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_pokemonformsprites" */
  insert_pokemon_v2_pokemonformsprites_one?: Maybe<Pokemon_V2_Pokemonformsprites>;
  /** insert data into the table: "pokemon_v2_pokemonformtype" */
  insert_pokemon_v2_pokemonformtype?: Maybe<Pokemon_V2_Pokemonformtype_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_pokemonformtype" */
  insert_pokemon_v2_pokemonformtype_one?: Maybe<Pokemon_V2_Pokemonformtype>;
  /** insert data into the table: "pokemon_v2_pokemongameindex" */
  insert_pokemon_v2_pokemongameindex?: Maybe<Pokemon_V2_Pokemongameindex_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_pokemongameindex" */
  insert_pokemon_v2_pokemongameindex_one?: Maybe<Pokemon_V2_Pokemongameindex>;
  /** insert data into the table: "pokemon_v2_pokemonhabitat" */
  insert_pokemon_v2_pokemonhabitat?: Maybe<Pokemon_V2_Pokemonhabitat_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_pokemonhabitat" */
  insert_pokemon_v2_pokemonhabitat_one?: Maybe<Pokemon_V2_Pokemonhabitat>;
  /** insert data into the table: "pokemon_v2_pokemonhabitatname" */
  insert_pokemon_v2_pokemonhabitatname?: Maybe<Pokemon_V2_Pokemonhabitatname_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_pokemonhabitatname" */
  insert_pokemon_v2_pokemonhabitatname_one?: Maybe<Pokemon_V2_Pokemonhabitatname>;
  /** insert data into the table: "pokemon_v2_pokemonitem" */
  insert_pokemon_v2_pokemonitem?: Maybe<Pokemon_V2_Pokemonitem_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_pokemonitem" */
  insert_pokemon_v2_pokemonitem_one?: Maybe<Pokemon_V2_Pokemonitem>;
  /** insert data into the table: "pokemon_v2_pokemonmove" */
  insert_pokemon_v2_pokemonmove?: Maybe<Pokemon_V2_Pokemonmove_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_pokemonmove" */
  insert_pokemon_v2_pokemonmove_one?: Maybe<Pokemon_V2_Pokemonmove>;
  /** insert data into the table: "pokemon_v2_pokemonshape" */
  insert_pokemon_v2_pokemonshape?: Maybe<Pokemon_V2_Pokemonshape_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_pokemonshape" */
  insert_pokemon_v2_pokemonshape_one?: Maybe<Pokemon_V2_Pokemonshape>;
  /** insert data into the table: "pokemon_v2_pokemonshapename" */
  insert_pokemon_v2_pokemonshapename?: Maybe<Pokemon_V2_Pokemonshapename_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_pokemonshapename" */
  insert_pokemon_v2_pokemonshapename_one?: Maybe<Pokemon_V2_Pokemonshapename>;
  /** insert data into the table: "pokemon_v2_pokemonspecies" */
  insert_pokemon_v2_pokemonspecies?: Maybe<Pokemon_V2_Pokemonspecies_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_pokemonspecies" */
  insert_pokemon_v2_pokemonspecies_one?: Maybe<Pokemon_V2_Pokemonspecies>;
  /** insert data into the table: "pokemon_v2_pokemonspeciesdescription" */
  insert_pokemon_v2_pokemonspeciesdescription?: Maybe<Pokemon_V2_Pokemonspeciesdescription_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_pokemonspeciesdescription" */
  insert_pokemon_v2_pokemonspeciesdescription_one?: Maybe<Pokemon_V2_Pokemonspeciesdescription>;
  /** insert data into the table: "pokemon_v2_pokemonspeciesflavortext" */
  insert_pokemon_v2_pokemonspeciesflavortext?: Maybe<Pokemon_V2_Pokemonspeciesflavortext_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_pokemonspeciesflavortext" */
  insert_pokemon_v2_pokemonspeciesflavortext_one?: Maybe<Pokemon_V2_Pokemonspeciesflavortext>;
  /** insert data into the table: "pokemon_v2_pokemonspeciesname" */
  insert_pokemon_v2_pokemonspeciesname?: Maybe<Pokemon_V2_Pokemonspeciesname_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_pokemonspeciesname" */
  insert_pokemon_v2_pokemonspeciesname_one?: Maybe<Pokemon_V2_Pokemonspeciesname>;
  /** insert data into the table: "pokemon_v2_pokemonsprites" */
  insert_pokemon_v2_pokemonsprites?: Maybe<Pokemon_V2_Pokemonsprites_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_pokemonsprites" */
  insert_pokemon_v2_pokemonsprites_one?: Maybe<Pokemon_V2_Pokemonsprites>;
  /** insert data into the table: "pokemon_v2_pokemonstat" */
  insert_pokemon_v2_pokemonstat?: Maybe<Pokemon_V2_Pokemonstat_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_pokemonstat" */
  insert_pokemon_v2_pokemonstat_one?: Maybe<Pokemon_V2_Pokemonstat>;
  /** insert data into the table: "pokemon_v2_pokemontype" */
  insert_pokemon_v2_pokemontype?: Maybe<Pokemon_V2_Pokemontype_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_pokemontype" */
  insert_pokemon_v2_pokemontype_one?: Maybe<Pokemon_V2_Pokemontype>;
  /** insert data into the table: "pokemon_v2_pokemontypepast" */
  insert_pokemon_v2_pokemontypepast?: Maybe<Pokemon_V2_Pokemontypepast_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_pokemontypepast" */
  insert_pokemon_v2_pokemontypepast_one?: Maybe<Pokemon_V2_Pokemontypepast>;
  /** insert data into the table: "pokemon_v2_region" */
  insert_pokemon_v2_region?: Maybe<Pokemon_V2_Region_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_region" */
  insert_pokemon_v2_region_one?: Maybe<Pokemon_V2_Region>;
  /** insert data into the table: "pokemon_v2_regionname" */
  insert_pokemon_v2_regionname?: Maybe<Pokemon_V2_Regionname_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_regionname" */
  insert_pokemon_v2_regionname_one?: Maybe<Pokemon_V2_Regionname>;
  /** insert data into the table: "pokemon_v2_stat" */
  insert_pokemon_v2_stat?: Maybe<Pokemon_V2_Stat_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_stat" */
  insert_pokemon_v2_stat_one?: Maybe<Pokemon_V2_Stat>;
  /** insert data into the table: "pokemon_v2_statname" */
  insert_pokemon_v2_statname?: Maybe<Pokemon_V2_Statname_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_statname" */
  insert_pokemon_v2_statname_one?: Maybe<Pokemon_V2_Statname>;
  /** insert data into the table: "pokemon_v2_supercontestcombo" */
  insert_pokemon_v2_supercontestcombo?: Maybe<Pokemon_V2_Supercontestcombo_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_supercontestcombo" */
  insert_pokemon_v2_supercontestcombo_one?: Maybe<Pokemon_V2_Supercontestcombo>;
  /** insert data into the table: "pokemon_v2_supercontesteffect" */
  insert_pokemon_v2_supercontesteffect?: Maybe<Pokemon_V2_Supercontesteffect_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_supercontesteffect" */
  insert_pokemon_v2_supercontesteffect_one?: Maybe<Pokemon_V2_Supercontesteffect>;
  /** insert data into the table: "pokemon_v2_supercontesteffectflavortext" */
  insert_pokemon_v2_supercontesteffectflavortext?: Maybe<Pokemon_V2_Supercontesteffectflavortext_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_supercontesteffectflavortext" */
  insert_pokemon_v2_supercontesteffectflavortext_one?: Maybe<Pokemon_V2_Supercontesteffectflavortext>;
  /** insert data into the table: "pokemon_v2_type" */
  insert_pokemon_v2_type?: Maybe<Pokemon_V2_Type_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_type" */
  insert_pokemon_v2_type_one?: Maybe<Pokemon_V2_Type>;
  /** insert data into the table: "pokemon_v2_typeefficacy" */
  insert_pokemon_v2_typeefficacy?: Maybe<Pokemon_V2_Typeefficacy_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_typeefficacy" */
  insert_pokemon_v2_typeefficacy_one?: Maybe<Pokemon_V2_Typeefficacy>;
  /** insert data into the table: "pokemon_v2_typeefficacypast" */
  insert_pokemon_v2_typeefficacypast?: Maybe<Pokemon_V2_Typeefficacypast_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_typeefficacypast" */
  insert_pokemon_v2_typeefficacypast_one?: Maybe<Pokemon_V2_Typeefficacypast>;
  /** insert data into the table: "pokemon_v2_typegameindex" */
  insert_pokemon_v2_typegameindex?: Maybe<Pokemon_V2_Typegameindex_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_typegameindex" */
  insert_pokemon_v2_typegameindex_one?: Maybe<Pokemon_V2_Typegameindex>;
  /** insert data into the table: "pokemon_v2_typename" */
  insert_pokemon_v2_typename?: Maybe<Pokemon_V2_Typename_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_typename" */
  insert_pokemon_v2_typename_one?: Maybe<Pokemon_V2_Typename>;
  /** insert data into the table: "pokemon_v2_version" */
  insert_pokemon_v2_version?: Maybe<Pokemon_V2_Version_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_version" */
  insert_pokemon_v2_version_one?: Maybe<Pokemon_V2_Version>;
  /** insert data into the table: "pokemon_v2_versiongroup" */
  insert_pokemon_v2_versiongroup?: Maybe<Pokemon_V2_Versiongroup_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_versiongroup" */
  insert_pokemon_v2_versiongroup_one?: Maybe<Pokemon_V2_Versiongroup>;
  /** insert data into the table: "pokemon_v2_versiongroupmovelearnmethod" */
  insert_pokemon_v2_versiongroupmovelearnmethod?: Maybe<Pokemon_V2_Versiongroupmovelearnmethod_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_versiongroupmovelearnmethod" */
  insert_pokemon_v2_versiongroupmovelearnmethod_one?: Maybe<Pokemon_V2_Versiongroupmovelearnmethod>;
  /** insert data into the table: "pokemon_v2_versiongroupregion" */
  insert_pokemon_v2_versiongroupregion?: Maybe<Pokemon_V2_Versiongroupregion_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_versiongroupregion" */
  insert_pokemon_v2_versiongroupregion_one?: Maybe<Pokemon_V2_Versiongroupregion>;
  /** insert data into the table: "pokemon_v2_versionname" */
  insert_pokemon_v2_versionname?: Maybe<Pokemon_V2_Versionname_Mutation_Response>;
  /** insert a single row into the table: "pokemon_v2_versionname" */
  insert_pokemon_v2_versionname_one?: Maybe<Pokemon_V2_Versionname>;
  /** update data of the table: "auth_group" */
  update_auth_group?: Maybe<Auth_Group_Mutation_Response>;
  /** update single row of the table: "auth_group" */
  update_auth_group_by_pk?: Maybe<Auth_Group>;
  /** update multiples rows of table: "auth_group" */
  update_auth_group_many?: Maybe<Array<Maybe<Auth_Group_Mutation_Response>>>;
  /** update data of the table: "auth_group_permissions" */
  update_auth_group_permissions?: Maybe<Auth_Group_Permissions_Mutation_Response>;
  /** update single row of the table: "auth_group_permissions" */
  update_auth_group_permissions_by_pk?: Maybe<Auth_Group_Permissions>;
  /** update multiples rows of table: "auth_group_permissions" */
  update_auth_group_permissions_many?: Maybe<Array<Maybe<Auth_Group_Permissions_Mutation_Response>>>;
  /** update data of the table: "auth_permission" */
  update_auth_permission?: Maybe<Auth_Permission_Mutation_Response>;
  /** update single row of the table: "auth_permission" */
  update_auth_permission_by_pk?: Maybe<Auth_Permission>;
  /** update multiples rows of table: "auth_permission" */
  update_auth_permission_many?: Maybe<Array<Maybe<Auth_Permission_Mutation_Response>>>;
  /** update data of the table: "auth_user" */
  update_auth_user?: Maybe<Auth_User_Mutation_Response>;
  /** update single row of the table: "auth_user" */
  update_auth_user_by_pk?: Maybe<Auth_User>;
  /** update data of the table: "auth_user_groups" */
  update_auth_user_groups?: Maybe<Auth_User_Groups_Mutation_Response>;
  /** update single row of the table: "auth_user_groups" */
  update_auth_user_groups_by_pk?: Maybe<Auth_User_Groups>;
  /** update multiples rows of table: "auth_user_groups" */
  update_auth_user_groups_many?: Maybe<Array<Maybe<Auth_User_Groups_Mutation_Response>>>;
  /** update multiples rows of table: "auth_user" */
  update_auth_user_many?: Maybe<Array<Maybe<Auth_User_Mutation_Response>>>;
  /** update data of the table: "auth_user_user_permissions" */
  update_auth_user_user_permissions?: Maybe<Auth_User_User_Permissions_Mutation_Response>;
  /** update single row of the table: "auth_user_user_permissions" */
  update_auth_user_user_permissions_by_pk?: Maybe<Auth_User_User_Permissions>;
  /** update multiples rows of table: "auth_user_user_permissions" */
  update_auth_user_user_permissions_many?: Maybe<Array<Maybe<Auth_User_User_Permissions_Mutation_Response>>>;
  /** update data of the table: "django_admin_log" */
  update_django_admin_log?: Maybe<Django_Admin_Log_Mutation_Response>;
  /** update single row of the table: "django_admin_log" */
  update_django_admin_log_by_pk?: Maybe<Django_Admin_Log>;
  /** update multiples rows of table: "django_admin_log" */
  update_django_admin_log_many?: Maybe<Array<Maybe<Django_Admin_Log_Mutation_Response>>>;
  /** update data of the table: "django_content_type" */
  update_django_content_type?: Maybe<Django_Content_Type_Mutation_Response>;
  /** update single row of the table: "django_content_type" */
  update_django_content_type_by_pk?: Maybe<Django_Content_Type>;
  /** update multiples rows of table: "django_content_type" */
  update_django_content_type_many?: Maybe<Array<Maybe<Django_Content_Type_Mutation_Response>>>;
  /** update data of the table: "django_migrations" */
  update_django_migrations?: Maybe<Django_Migrations_Mutation_Response>;
  /** update single row of the table: "django_migrations" */
  update_django_migrations_by_pk?: Maybe<Django_Migrations>;
  /** update multiples rows of table: "django_migrations" */
  update_django_migrations_many?: Maybe<Array<Maybe<Django_Migrations_Mutation_Response>>>;
  /** update data of the table: "django_session" */
  update_django_session?: Maybe<Django_Session_Mutation_Response>;
  /** update single row of the table: "django_session" */
  update_django_session_by_pk?: Maybe<Django_Session>;
  /** update multiples rows of table: "django_session" */
  update_django_session_many?: Maybe<Array<Maybe<Django_Session_Mutation_Response>>>;
  /** update data of the table: "django_site" */
  update_django_site?: Maybe<Django_Site_Mutation_Response>;
  /** update single row of the table: "django_site" */
  update_django_site_by_pk?: Maybe<Django_Site>;
  /** update multiples rows of table: "django_site" */
  update_django_site_many?: Maybe<Array<Maybe<Django_Site_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_ability" */
  update_pokemon_v2_ability?: Maybe<Pokemon_V2_Ability_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_ability" */
  update_pokemon_v2_ability_by_pk?: Maybe<Pokemon_V2_Ability>;
  /** update multiples rows of table: "pokemon_v2_ability" */
  update_pokemon_v2_ability_many?: Maybe<Array<Maybe<Pokemon_V2_Ability_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_abilitychange" */
  update_pokemon_v2_abilitychange?: Maybe<Pokemon_V2_Abilitychange_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_abilitychange" */
  update_pokemon_v2_abilitychange_by_pk?: Maybe<Pokemon_V2_Abilitychange>;
  /** update multiples rows of table: "pokemon_v2_abilitychange" */
  update_pokemon_v2_abilitychange_many?: Maybe<Array<Maybe<Pokemon_V2_Abilitychange_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_abilitychangeeffecttext" */
  update_pokemon_v2_abilitychangeeffecttext?: Maybe<Pokemon_V2_Abilitychangeeffecttext_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_abilitychangeeffecttext" */
  update_pokemon_v2_abilitychangeeffecttext_by_pk?: Maybe<Pokemon_V2_Abilitychangeeffecttext>;
  /** update multiples rows of table: "pokemon_v2_abilitychangeeffecttext" */
  update_pokemon_v2_abilitychangeeffecttext_many?: Maybe<Array<Maybe<Pokemon_V2_Abilitychangeeffecttext_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_abilityeffecttext" */
  update_pokemon_v2_abilityeffecttext?: Maybe<Pokemon_V2_Abilityeffecttext_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_abilityeffecttext" */
  update_pokemon_v2_abilityeffecttext_by_pk?: Maybe<Pokemon_V2_Abilityeffecttext>;
  /** update multiples rows of table: "pokemon_v2_abilityeffecttext" */
  update_pokemon_v2_abilityeffecttext_many?: Maybe<Array<Maybe<Pokemon_V2_Abilityeffecttext_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_abilityflavortext" */
  update_pokemon_v2_abilityflavortext?: Maybe<Pokemon_V2_Abilityflavortext_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_abilityflavortext" */
  update_pokemon_v2_abilityflavortext_by_pk?: Maybe<Pokemon_V2_Abilityflavortext>;
  /** update multiples rows of table: "pokemon_v2_abilityflavortext" */
  update_pokemon_v2_abilityflavortext_many?: Maybe<Array<Maybe<Pokemon_V2_Abilityflavortext_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_abilityname" */
  update_pokemon_v2_abilityname?: Maybe<Pokemon_V2_Abilityname_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_abilityname" */
  update_pokemon_v2_abilityname_by_pk?: Maybe<Pokemon_V2_Abilityname>;
  /** update multiples rows of table: "pokemon_v2_abilityname" */
  update_pokemon_v2_abilityname_many?: Maybe<Array<Maybe<Pokemon_V2_Abilityname_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_berry" */
  update_pokemon_v2_berry?: Maybe<Pokemon_V2_Berry_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_berry" */
  update_pokemon_v2_berry_by_pk?: Maybe<Pokemon_V2_Berry>;
  /** update multiples rows of table: "pokemon_v2_berry" */
  update_pokemon_v2_berry_many?: Maybe<Array<Maybe<Pokemon_V2_Berry_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_berryfirmness" */
  update_pokemon_v2_berryfirmness?: Maybe<Pokemon_V2_Berryfirmness_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_berryfirmness" */
  update_pokemon_v2_berryfirmness_by_pk?: Maybe<Pokemon_V2_Berryfirmness>;
  /** update multiples rows of table: "pokemon_v2_berryfirmness" */
  update_pokemon_v2_berryfirmness_many?: Maybe<Array<Maybe<Pokemon_V2_Berryfirmness_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_berryfirmnessname" */
  update_pokemon_v2_berryfirmnessname?: Maybe<Pokemon_V2_Berryfirmnessname_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_berryfirmnessname" */
  update_pokemon_v2_berryfirmnessname_by_pk?: Maybe<Pokemon_V2_Berryfirmnessname>;
  /** update multiples rows of table: "pokemon_v2_berryfirmnessname" */
  update_pokemon_v2_berryfirmnessname_many?: Maybe<Array<Maybe<Pokemon_V2_Berryfirmnessname_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_berryflavor" */
  update_pokemon_v2_berryflavor?: Maybe<Pokemon_V2_Berryflavor_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_berryflavor" */
  update_pokemon_v2_berryflavor_by_pk?: Maybe<Pokemon_V2_Berryflavor>;
  /** update multiples rows of table: "pokemon_v2_berryflavor" */
  update_pokemon_v2_berryflavor_many?: Maybe<Array<Maybe<Pokemon_V2_Berryflavor_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_berryflavormap" */
  update_pokemon_v2_berryflavormap?: Maybe<Pokemon_V2_Berryflavormap_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_berryflavormap" */
  update_pokemon_v2_berryflavormap_by_pk?: Maybe<Pokemon_V2_Berryflavormap>;
  /** update multiples rows of table: "pokemon_v2_berryflavormap" */
  update_pokemon_v2_berryflavormap_many?: Maybe<Array<Maybe<Pokemon_V2_Berryflavormap_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_berryflavorname" */
  update_pokemon_v2_berryflavorname?: Maybe<Pokemon_V2_Berryflavorname_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_berryflavorname" */
  update_pokemon_v2_berryflavorname_by_pk?: Maybe<Pokemon_V2_Berryflavorname>;
  /** update multiples rows of table: "pokemon_v2_berryflavorname" */
  update_pokemon_v2_berryflavorname_many?: Maybe<Array<Maybe<Pokemon_V2_Berryflavorname_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_characteristic" */
  update_pokemon_v2_characteristic?: Maybe<Pokemon_V2_Characteristic_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_characteristic" */
  update_pokemon_v2_characteristic_by_pk?: Maybe<Pokemon_V2_Characteristic>;
  /** update multiples rows of table: "pokemon_v2_characteristic" */
  update_pokemon_v2_characteristic_many?: Maybe<Array<Maybe<Pokemon_V2_Characteristic_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_characteristicdescription" */
  update_pokemon_v2_characteristicdescription?: Maybe<Pokemon_V2_Characteristicdescription_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_characteristicdescription" */
  update_pokemon_v2_characteristicdescription_by_pk?: Maybe<Pokemon_V2_Characteristicdescription>;
  /** update multiples rows of table: "pokemon_v2_characteristicdescription" */
  update_pokemon_v2_characteristicdescription_many?: Maybe<Array<Maybe<Pokemon_V2_Characteristicdescription_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_contestcombo" */
  update_pokemon_v2_contestcombo?: Maybe<Pokemon_V2_Contestcombo_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_contestcombo" */
  update_pokemon_v2_contestcombo_by_pk?: Maybe<Pokemon_V2_Contestcombo>;
  /** update multiples rows of table: "pokemon_v2_contestcombo" */
  update_pokemon_v2_contestcombo_many?: Maybe<Array<Maybe<Pokemon_V2_Contestcombo_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_contesteffect" */
  update_pokemon_v2_contesteffect?: Maybe<Pokemon_V2_Contesteffect_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_contesteffect" */
  update_pokemon_v2_contesteffect_by_pk?: Maybe<Pokemon_V2_Contesteffect>;
  /** update multiples rows of table: "pokemon_v2_contesteffect" */
  update_pokemon_v2_contesteffect_many?: Maybe<Array<Maybe<Pokemon_V2_Contesteffect_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_contesteffecteffecttext" */
  update_pokemon_v2_contesteffecteffecttext?: Maybe<Pokemon_V2_Contesteffecteffecttext_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_contesteffecteffecttext" */
  update_pokemon_v2_contesteffecteffecttext_by_pk?: Maybe<Pokemon_V2_Contesteffecteffecttext>;
  /** update multiples rows of table: "pokemon_v2_contesteffecteffecttext" */
  update_pokemon_v2_contesteffecteffecttext_many?: Maybe<Array<Maybe<Pokemon_V2_Contesteffecteffecttext_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_contesteffectflavortext" */
  update_pokemon_v2_contesteffectflavortext?: Maybe<Pokemon_V2_Contesteffectflavortext_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_contesteffectflavortext" */
  update_pokemon_v2_contesteffectflavortext_by_pk?: Maybe<Pokemon_V2_Contesteffectflavortext>;
  /** update multiples rows of table: "pokemon_v2_contesteffectflavortext" */
  update_pokemon_v2_contesteffectflavortext_many?: Maybe<Array<Maybe<Pokemon_V2_Contesteffectflavortext_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_contesttype" */
  update_pokemon_v2_contesttype?: Maybe<Pokemon_V2_Contesttype_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_contesttype" */
  update_pokemon_v2_contesttype_by_pk?: Maybe<Pokemon_V2_Contesttype>;
  /** update multiples rows of table: "pokemon_v2_contesttype" */
  update_pokemon_v2_contesttype_many?: Maybe<Array<Maybe<Pokemon_V2_Contesttype_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_contesttypename" */
  update_pokemon_v2_contesttypename?: Maybe<Pokemon_V2_Contesttypename_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_contesttypename" */
  update_pokemon_v2_contesttypename_by_pk?: Maybe<Pokemon_V2_Contesttypename>;
  /** update multiples rows of table: "pokemon_v2_contesttypename" */
  update_pokemon_v2_contesttypename_many?: Maybe<Array<Maybe<Pokemon_V2_Contesttypename_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_egggroup" */
  update_pokemon_v2_egggroup?: Maybe<Pokemon_V2_Egggroup_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_egggroup" */
  update_pokemon_v2_egggroup_by_pk?: Maybe<Pokemon_V2_Egggroup>;
  /** update multiples rows of table: "pokemon_v2_egggroup" */
  update_pokemon_v2_egggroup_many?: Maybe<Array<Maybe<Pokemon_V2_Egggroup_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_egggroupname" */
  update_pokemon_v2_egggroupname?: Maybe<Pokemon_V2_Egggroupname_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_egggroupname" */
  update_pokemon_v2_egggroupname_by_pk?: Maybe<Pokemon_V2_Egggroupname>;
  /** update multiples rows of table: "pokemon_v2_egggroupname" */
  update_pokemon_v2_egggroupname_many?: Maybe<Array<Maybe<Pokemon_V2_Egggroupname_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_encounter" */
  update_pokemon_v2_encounter?: Maybe<Pokemon_V2_Encounter_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_encounter" */
  update_pokemon_v2_encounter_by_pk?: Maybe<Pokemon_V2_Encounter>;
  /** update multiples rows of table: "pokemon_v2_encounter" */
  update_pokemon_v2_encounter_many?: Maybe<Array<Maybe<Pokemon_V2_Encounter_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_encountercondition" */
  update_pokemon_v2_encountercondition?: Maybe<Pokemon_V2_Encountercondition_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_encountercondition" */
  update_pokemon_v2_encountercondition_by_pk?: Maybe<Pokemon_V2_Encountercondition>;
  /** update multiples rows of table: "pokemon_v2_encountercondition" */
  update_pokemon_v2_encountercondition_many?: Maybe<Array<Maybe<Pokemon_V2_Encountercondition_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_encounterconditionname" */
  update_pokemon_v2_encounterconditionname?: Maybe<Pokemon_V2_Encounterconditionname_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_encounterconditionname" */
  update_pokemon_v2_encounterconditionname_by_pk?: Maybe<Pokemon_V2_Encounterconditionname>;
  /** update multiples rows of table: "pokemon_v2_encounterconditionname" */
  update_pokemon_v2_encounterconditionname_many?: Maybe<Array<Maybe<Pokemon_V2_Encounterconditionname_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_encounterconditionvalue" */
  update_pokemon_v2_encounterconditionvalue?: Maybe<Pokemon_V2_Encounterconditionvalue_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_encounterconditionvalue" */
  update_pokemon_v2_encounterconditionvalue_by_pk?: Maybe<Pokemon_V2_Encounterconditionvalue>;
  /** update multiples rows of table: "pokemon_v2_encounterconditionvalue" */
  update_pokemon_v2_encounterconditionvalue_many?: Maybe<Array<Maybe<Pokemon_V2_Encounterconditionvalue_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_encounterconditionvaluemap" */
  update_pokemon_v2_encounterconditionvaluemap?: Maybe<Pokemon_V2_Encounterconditionvaluemap_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_encounterconditionvaluemap" */
  update_pokemon_v2_encounterconditionvaluemap_by_pk?: Maybe<Pokemon_V2_Encounterconditionvaluemap>;
  /** update multiples rows of table: "pokemon_v2_encounterconditionvaluemap" */
  update_pokemon_v2_encounterconditionvaluemap_many?: Maybe<Array<Maybe<Pokemon_V2_Encounterconditionvaluemap_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_encounterconditionvaluename" */
  update_pokemon_v2_encounterconditionvaluename?: Maybe<Pokemon_V2_Encounterconditionvaluename_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_encounterconditionvaluename" */
  update_pokemon_v2_encounterconditionvaluename_by_pk?: Maybe<Pokemon_V2_Encounterconditionvaluename>;
  /** update multiples rows of table: "pokemon_v2_encounterconditionvaluename" */
  update_pokemon_v2_encounterconditionvaluename_many?: Maybe<Array<Maybe<Pokemon_V2_Encounterconditionvaluename_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_encountermethod" */
  update_pokemon_v2_encountermethod?: Maybe<Pokemon_V2_Encountermethod_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_encountermethod" */
  update_pokemon_v2_encountermethod_by_pk?: Maybe<Pokemon_V2_Encountermethod>;
  /** update multiples rows of table: "pokemon_v2_encountermethod" */
  update_pokemon_v2_encountermethod_many?: Maybe<Array<Maybe<Pokemon_V2_Encountermethod_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_encountermethodname" */
  update_pokemon_v2_encountermethodname?: Maybe<Pokemon_V2_Encountermethodname_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_encountermethodname" */
  update_pokemon_v2_encountermethodname_by_pk?: Maybe<Pokemon_V2_Encountermethodname>;
  /** update multiples rows of table: "pokemon_v2_encountermethodname" */
  update_pokemon_v2_encountermethodname_many?: Maybe<Array<Maybe<Pokemon_V2_Encountermethodname_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_encounterslot" */
  update_pokemon_v2_encounterslot?: Maybe<Pokemon_V2_Encounterslot_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_encounterslot" */
  update_pokemon_v2_encounterslot_by_pk?: Maybe<Pokemon_V2_Encounterslot>;
  /** update multiples rows of table: "pokemon_v2_encounterslot" */
  update_pokemon_v2_encounterslot_many?: Maybe<Array<Maybe<Pokemon_V2_Encounterslot_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_evolutionchain" */
  update_pokemon_v2_evolutionchain?: Maybe<Pokemon_V2_Evolutionchain_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_evolutionchain" */
  update_pokemon_v2_evolutionchain_by_pk?: Maybe<Pokemon_V2_Evolutionchain>;
  /** update multiples rows of table: "pokemon_v2_evolutionchain" */
  update_pokemon_v2_evolutionchain_many?: Maybe<Array<Maybe<Pokemon_V2_Evolutionchain_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_evolutiontrigger" */
  update_pokemon_v2_evolutiontrigger?: Maybe<Pokemon_V2_Evolutiontrigger_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_evolutiontrigger" */
  update_pokemon_v2_evolutiontrigger_by_pk?: Maybe<Pokemon_V2_Evolutiontrigger>;
  /** update multiples rows of table: "pokemon_v2_evolutiontrigger" */
  update_pokemon_v2_evolutiontrigger_many?: Maybe<Array<Maybe<Pokemon_V2_Evolutiontrigger_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_evolutiontriggername" */
  update_pokemon_v2_evolutiontriggername?: Maybe<Pokemon_V2_Evolutiontriggername_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_evolutiontriggername" */
  update_pokemon_v2_evolutiontriggername_by_pk?: Maybe<Pokemon_V2_Evolutiontriggername>;
  /** update multiples rows of table: "pokemon_v2_evolutiontriggername" */
  update_pokemon_v2_evolutiontriggername_many?: Maybe<Array<Maybe<Pokemon_V2_Evolutiontriggername_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_experience" */
  update_pokemon_v2_experience?: Maybe<Pokemon_V2_Experience_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_experience" */
  update_pokemon_v2_experience_by_pk?: Maybe<Pokemon_V2_Experience>;
  /** update multiples rows of table: "pokemon_v2_experience" */
  update_pokemon_v2_experience_many?: Maybe<Array<Maybe<Pokemon_V2_Experience_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_gender" */
  update_pokemon_v2_gender?: Maybe<Pokemon_V2_Gender_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_gender" */
  update_pokemon_v2_gender_by_pk?: Maybe<Pokemon_V2_Gender>;
  /** update multiples rows of table: "pokemon_v2_gender" */
  update_pokemon_v2_gender_many?: Maybe<Array<Maybe<Pokemon_V2_Gender_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_generation" */
  update_pokemon_v2_generation?: Maybe<Pokemon_V2_Generation_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_generation" */
  update_pokemon_v2_generation_by_pk?: Maybe<Pokemon_V2_Generation>;
  /** update multiples rows of table: "pokemon_v2_generation" */
  update_pokemon_v2_generation_many?: Maybe<Array<Maybe<Pokemon_V2_Generation_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_generationname" */
  update_pokemon_v2_generationname?: Maybe<Pokemon_V2_Generationname_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_generationname" */
  update_pokemon_v2_generationname_by_pk?: Maybe<Pokemon_V2_Generationname>;
  /** update multiples rows of table: "pokemon_v2_generationname" */
  update_pokemon_v2_generationname_many?: Maybe<Array<Maybe<Pokemon_V2_Generationname_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_growthrate" */
  update_pokemon_v2_growthrate?: Maybe<Pokemon_V2_Growthrate_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_growthrate" */
  update_pokemon_v2_growthrate_by_pk?: Maybe<Pokemon_V2_Growthrate>;
  /** update multiples rows of table: "pokemon_v2_growthrate" */
  update_pokemon_v2_growthrate_many?: Maybe<Array<Maybe<Pokemon_V2_Growthrate_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_growthratedescription" */
  update_pokemon_v2_growthratedescription?: Maybe<Pokemon_V2_Growthratedescription_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_growthratedescription" */
  update_pokemon_v2_growthratedescription_by_pk?: Maybe<Pokemon_V2_Growthratedescription>;
  /** update multiples rows of table: "pokemon_v2_growthratedescription" */
  update_pokemon_v2_growthratedescription_many?: Maybe<Array<Maybe<Pokemon_V2_Growthratedescription_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_item" */
  update_pokemon_v2_item?: Maybe<Pokemon_V2_Item_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_item" */
  update_pokemon_v2_item_by_pk?: Maybe<Pokemon_V2_Item>;
  /** update multiples rows of table: "pokemon_v2_item" */
  update_pokemon_v2_item_many?: Maybe<Array<Maybe<Pokemon_V2_Item_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_itemattribute" */
  update_pokemon_v2_itemattribute?: Maybe<Pokemon_V2_Itemattribute_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_itemattribute" */
  update_pokemon_v2_itemattribute_by_pk?: Maybe<Pokemon_V2_Itemattribute>;
  /** update multiples rows of table: "pokemon_v2_itemattribute" */
  update_pokemon_v2_itemattribute_many?: Maybe<Array<Maybe<Pokemon_V2_Itemattribute_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_itemattributedescription" */
  update_pokemon_v2_itemattributedescription?: Maybe<Pokemon_V2_Itemattributedescription_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_itemattributedescription" */
  update_pokemon_v2_itemattributedescription_by_pk?: Maybe<Pokemon_V2_Itemattributedescription>;
  /** update multiples rows of table: "pokemon_v2_itemattributedescription" */
  update_pokemon_v2_itemattributedescription_many?: Maybe<Array<Maybe<Pokemon_V2_Itemattributedescription_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_itemattributemap" */
  update_pokemon_v2_itemattributemap?: Maybe<Pokemon_V2_Itemattributemap_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_itemattributemap" */
  update_pokemon_v2_itemattributemap_by_pk?: Maybe<Pokemon_V2_Itemattributemap>;
  /** update multiples rows of table: "pokemon_v2_itemattributemap" */
  update_pokemon_v2_itemattributemap_many?: Maybe<Array<Maybe<Pokemon_V2_Itemattributemap_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_itemattributename" */
  update_pokemon_v2_itemattributename?: Maybe<Pokemon_V2_Itemattributename_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_itemattributename" */
  update_pokemon_v2_itemattributename_by_pk?: Maybe<Pokemon_V2_Itemattributename>;
  /** update multiples rows of table: "pokemon_v2_itemattributename" */
  update_pokemon_v2_itemattributename_many?: Maybe<Array<Maybe<Pokemon_V2_Itemattributename_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_itemcategory" */
  update_pokemon_v2_itemcategory?: Maybe<Pokemon_V2_Itemcategory_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_itemcategory" */
  update_pokemon_v2_itemcategory_by_pk?: Maybe<Pokemon_V2_Itemcategory>;
  /** update multiples rows of table: "pokemon_v2_itemcategory" */
  update_pokemon_v2_itemcategory_many?: Maybe<Array<Maybe<Pokemon_V2_Itemcategory_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_itemcategoryname" */
  update_pokemon_v2_itemcategoryname?: Maybe<Pokemon_V2_Itemcategoryname_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_itemcategoryname" */
  update_pokemon_v2_itemcategoryname_by_pk?: Maybe<Pokemon_V2_Itemcategoryname>;
  /** update multiples rows of table: "pokemon_v2_itemcategoryname" */
  update_pokemon_v2_itemcategoryname_many?: Maybe<Array<Maybe<Pokemon_V2_Itemcategoryname_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_itemeffecttext" */
  update_pokemon_v2_itemeffecttext?: Maybe<Pokemon_V2_Itemeffecttext_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_itemeffecttext" */
  update_pokemon_v2_itemeffecttext_by_pk?: Maybe<Pokemon_V2_Itemeffecttext>;
  /** update multiples rows of table: "pokemon_v2_itemeffecttext" */
  update_pokemon_v2_itemeffecttext_many?: Maybe<Array<Maybe<Pokemon_V2_Itemeffecttext_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_itemflavortext" */
  update_pokemon_v2_itemflavortext?: Maybe<Pokemon_V2_Itemflavortext_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_itemflavortext" */
  update_pokemon_v2_itemflavortext_by_pk?: Maybe<Pokemon_V2_Itemflavortext>;
  /** update multiples rows of table: "pokemon_v2_itemflavortext" */
  update_pokemon_v2_itemflavortext_many?: Maybe<Array<Maybe<Pokemon_V2_Itemflavortext_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_itemflingeffect" */
  update_pokemon_v2_itemflingeffect?: Maybe<Pokemon_V2_Itemflingeffect_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_itemflingeffect" */
  update_pokemon_v2_itemflingeffect_by_pk?: Maybe<Pokemon_V2_Itemflingeffect>;
  /** update multiples rows of table: "pokemon_v2_itemflingeffect" */
  update_pokemon_v2_itemflingeffect_many?: Maybe<Array<Maybe<Pokemon_V2_Itemflingeffect_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_itemflingeffecteffecttext" */
  update_pokemon_v2_itemflingeffecteffecttext?: Maybe<Pokemon_V2_Itemflingeffecteffecttext_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_itemflingeffecteffecttext" */
  update_pokemon_v2_itemflingeffecteffecttext_by_pk?: Maybe<Pokemon_V2_Itemflingeffecteffecttext>;
  /** update multiples rows of table: "pokemon_v2_itemflingeffecteffecttext" */
  update_pokemon_v2_itemflingeffecteffecttext_many?: Maybe<Array<Maybe<Pokemon_V2_Itemflingeffecteffecttext_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_itemgameindex" */
  update_pokemon_v2_itemgameindex?: Maybe<Pokemon_V2_Itemgameindex_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_itemgameindex" */
  update_pokemon_v2_itemgameindex_by_pk?: Maybe<Pokemon_V2_Itemgameindex>;
  /** update multiples rows of table: "pokemon_v2_itemgameindex" */
  update_pokemon_v2_itemgameindex_many?: Maybe<Array<Maybe<Pokemon_V2_Itemgameindex_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_itemname" */
  update_pokemon_v2_itemname?: Maybe<Pokemon_V2_Itemname_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_itemname" */
  update_pokemon_v2_itemname_by_pk?: Maybe<Pokemon_V2_Itemname>;
  /** update multiples rows of table: "pokemon_v2_itemname" */
  update_pokemon_v2_itemname_many?: Maybe<Array<Maybe<Pokemon_V2_Itemname_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_itempocket" */
  update_pokemon_v2_itempocket?: Maybe<Pokemon_V2_Itempocket_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_itempocket" */
  update_pokemon_v2_itempocket_by_pk?: Maybe<Pokemon_V2_Itempocket>;
  /** update multiples rows of table: "pokemon_v2_itempocket" */
  update_pokemon_v2_itempocket_many?: Maybe<Array<Maybe<Pokemon_V2_Itempocket_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_itempocketname" */
  update_pokemon_v2_itempocketname?: Maybe<Pokemon_V2_Itempocketname_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_itempocketname" */
  update_pokemon_v2_itempocketname_by_pk?: Maybe<Pokemon_V2_Itempocketname>;
  /** update multiples rows of table: "pokemon_v2_itempocketname" */
  update_pokemon_v2_itempocketname_many?: Maybe<Array<Maybe<Pokemon_V2_Itempocketname_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_itemsprites" */
  update_pokemon_v2_itemsprites?: Maybe<Pokemon_V2_Itemsprites_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_itemsprites" */
  update_pokemon_v2_itemsprites_by_pk?: Maybe<Pokemon_V2_Itemsprites>;
  /** update multiples rows of table: "pokemon_v2_itemsprites" */
  update_pokemon_v2_itemsprites_many?: Maybe<Array<Maybe<Pokemon_V2_Itemsprites_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_language" */
  update_pokemon_v2_language?: Maybe<Pokemon_V2_Language_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_language" */
  update_pokemon_v2_language_by_pk?: Maybe<Pokemon_V2_Language>;
  /** update multiples rows of table: "pokemon_v2_language" */
  update_pokemon_v2_language_many?: Maybe<Array<Maybe<Pokemon_V2_Language_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_languagename" */
  update_pokemon_v2_languagename?: Maybe<Pokemon_V2_Languagename_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_languagename" */
  update_pokemon_v2_languagename_by_pk?: Maybe<Pokemon_V2_Languagename>;
  /** update multiples rows of table: "pokemon_v2_languagename" */
  update_pokemon_v2_languagename_many?: Maybe<Array<Maybe<Pokemon_V2_Languagename_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_location" */
  update_pokemon_v2_location?: Maybe<Pokemon_V2_Location_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_location" */
  update_pokemon_v2_location_by_pk?: Maybe<Pokemon_V2_Location>;
  /** update multiples rows of table: "pokemon_v2_location" */
  update_pokemon_v2_location_many?: Maybe<Array<Maybe<Pokemon_V2_Location_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_locationarea" */
  update_pokemon_v2_locationarea?: Maybe<Pokemon_V2_Locationarea_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_locationarea" */
  update_pokemon_v2_locationarea_by_pk?: Maybe<Pokemon_V2_Locationarea>;
  /** update multiples rows of table: "pokemon_v2_locationarea" */
  update_pokemon_v2_locationarea_many?: Maybe<Array<Maybe<Pokemon_V2_Locationarea_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_locationareaencounterrate" */
  update_pokemon_v2_locationareaencounterrate?: Maybe<Pokemon_V2_Locationareaencounterrate_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_locationareaencounterrate" */
  update_pokemon_v2_locationareaencounterrate_by_pk?: Maybe<Pokemon_V2_Locationareaencounterrate>;
  /** update multiples rows of table: "pokemon_v2_locationareaencounterrate" */
  update_pokemon_v2_locationareaencounterrate_many?: Maybe<Array<Maybe<Pokemon_V2_Locationareaencounterrate_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_locationareaname" */
  update_pokemon_v2_locationareaname?: Maybe<Pokemon_V2_Locationareaname_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_locationareaname" */
  update_pokemon_v2_locationareaname_by_pk?: Maybe<Pokemon_V2_Locationareaname>;
  /** update multiples rows of table: "pokemon_v2_locationareaname" */
  update_pokemon_v2_locationareaname_many?: Maybe<Array<Maybe<Pokemon_V2_Locationareaname_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_locationgameindex" */
  update_pokemon_v2_locationgameindex?: Maybe<Pokemon_V2_Locationgameindex_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_locationgameindex" */
  update_pokemon_v2_locationgameindex_by_pk?: Maybe<Pokemon_V2_Locationgameindex>;
  /** update multiples rows of table: "pokemon_v2_locationgameindex" */
  update_pokemon_v2_locationgameindex_many?: Maybe<Array<Maybe<Pokemon_V2_Locationgameindex_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_locationname" */
  update_pokemon_v2_locationname?: Maybe<Pokemon_V2_Locationname_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_locationname" */
  update_pokemon_v2_locationname_by_pk?: Maybe<Pokemon_V2_Locationname>;
  /** update multiples rows of table: "pokemon_v2_locationname" */
  update_pokemon_v2_locationname_many?: Maybe<Array<Maybe<Pokemon_V2_Locationname_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_machine" */
  update_pokemon_v2_machine?: Maybe<Pokemon_V2_Machine_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_machine" */
  update_pokemon_v2_machine_by_pk?: Maybe<Pokemon_V2_Machine>;
  /** update multiples rows of table: "pokemon_v2_machine" */
  update_pokemon_v2_machine_many?: Maybe<Array<Maybe<Pokemon_V2_Machine_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_move" */
  update_pokemon_v2_move?: Maybe<Pokemon_V2_Move_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_move" */
  update_pokemon_v2_move_by_pk?: Maybe<Pokemon_V2_Move>;
  /** update multiples rows of table: "pokemon_v2_move" */
  update_pokemon_v2_move_many?: Maybe<Array<Maybe<Pokemon_V2_Move_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_moveattribute" */
  update_pokemon_v2_moveattribute?: Maybe<Pokemon_V2_Moveattribute_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_moveattribute" */
  update_pokemon_v2_moveattribute_by_pk?: Maybe<Pokemon_V2_Moveattribute>;
  /** update multiples rows of table: "pokemon_v2_moveattribute" */
  update_pokemon_v2_moveattribute_many?: Maybe<Array<Maybe<Pokemon_V2_Moveattribute_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_moveattributedescription" */
  update_pokemon_v2_moveattributedescription?: Maybe<Pokemon_V2_Moveattributedescription_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_moveattributedescription" */
  update_pokemon_v2_moveattributedescription_by_pk?: Maybe<Pokemon_V2_Moveattributedescription>;
  /** update multiples rows of table: "pokemon_v2_moveattributedescription" */
  update_pokemon_v2_moveattributedescription_many?: Maybe<Array<Maybe<Pokemon_V2_Moveattributedescription_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_moveattributemap" */
  update_pokemon_v2_moveattributemap?: Maybe<Pokemon_V2_Moveattributemap_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_moveattributemap" */
  update_pokemon_v2_moveattributemap_by_pk?: Maybe<Pokemon_V2_Moveattributemap>;
  /** update multiples rows of table: "pokemon_v2_moveattributemap" */
  update_pokemon_v2_moveattributemap_many?: Maybe<Array<Maybe<Pokemon_V2_Moveattributemap_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_moveattributename" */
  update_pokemon_v2_moveattributename?: Maybe<Pokemon_V2_Moveattributename_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_moveattributename" */
  update_pokemon_v2_moveattributename_by_pk?: Maybe<Pokemon_V2_Moveattributename>;
  /** update multiples rows of table: "pokemon_v2_moveattributename" */
  update_pokemon_v2_moveattributename_many?: Maybe<Array<Maybe<Pokemon_V2_Moveattributename_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_movebattlestyle" */
  update_pokemon_v2_movebattlestyle?: Maybe<Pokemon_V2_Movebattlestyle_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_movebattlestyle" */
  update_pokemon_v2_movebattlestyle_by_pk?: Maybe<Pokemon_V2_Movebattlestyle>;
  /** update multiples rows of table: "pokemon_v2_movebattlestyle" */
  update_pokemon_v2_movebattlestyle_many?: Maybe<Array<Maybe<Pokemon_V2_Movebattlestyle_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_movebattlestylename" */
  update_pokemon_v2_movebattlestylename?: Maybe<Pokemon_V2_Movebattlestylename_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_movebattlestylename" */
  update_pokemon_v2_movebattlestylename_by_pk?: Maybe<Pokemon_V2_Movebattlestylename>;
  /** update multiples rows of table: "pokemon_v2_movebattlestylename" */
  update_pokemon_v2_movebattlestylename_many?: Maybe<Array<Maybe<Pokemon_V2_Movebattlestylename_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_movechange" */
  update_pokemon_v2_movechange?: Maybe<Pokemon_V2_Movechange_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_movechange" */
  update_pokemon_v2_movechange_by_pk?: Maybe<Pokemon_V2_Movechange>;
  /** update multiples rows of table: "pokemon_v2_movechange" */
  update_pokemon_v2_movechange_many?: Maybe<Array<Maybe<Pokemon_V2_Movechange_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_movedamageclass" */
  update_pokemon_v2_movedamageclass?: Maybe<Pokemon_V2_Movedamageclass_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_movedamageclass" */
  update_pokemon_v2_movedamageclass_by_pk?: Maybe<Pokemon_V2_Movedamageclass>;
  /** update multiples rows of table: "pokemon_v2_movedamageclass" */
  update_pokemon_v2_movedamageclass_many?: Maybe<Array<Maybe<Pokemon_V2_Movedamageclass_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_movedamageclassdescription" */
  update_pokemon_v2_movedamageclassdescription?: Maybe<Pokemon_V2_Movedamageclassdescription_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_movedamageclassdescription" */
  update_pokemon_v2_movedamageclassdescription_by_pk?: Maybe<Pokemon_V2_Movedamageclassdescription>;
  /** update multiples rows of table: "pokemon_v2_movedamageclassdescription" */
  update_pokemon_v2_movedamageclassdescription_many?: Maybe<Array<Maybe<Pokemon_V2_Movedamageclassdescription_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_movedamageclassname" */
  update_pokemon_v2_movedamageclassname?: Maybe<Pokemon_V2_Movedamageclassname_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_movedamageclassname" */
  update_pokemon_v2_movedamageclassname_by_pk?: Maybe<Pokemon_V2_Movedamageclassname>;
  /** update multiples rows of table: "pokemon_v2_movedamageclassname" */
  update_pokemon_v2_movedamageclassname_many?: Maybe<Array<Maybe<Pokemon_V2_Movedamageclassname_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_moveeffect" */
  update_pokemon_v2_moveeffect?: Maybe<Pokemon_V2_Moveeffect_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_moveeffect" */
  update_pokemon_v2_moveeffect_by_pk?: Maybe<Pokemon_V2_Moveeffect>;
  /** update multiples rows of table: "pokemon_v2_moveeffect" */
  update_pokemon_v2_moveeffect_many?: Maybe<Array<Maybe<Pokemon_V2_Moveeffect_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_moveeffectchange" */
  update_pokemon_v2_moveeffectchange?: Maybe<Pokemon_V2_Moveeffectchange_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_moveeffectchange" */
  update_pokemon_v2_moveeffectchange_by_pk?: Maybe<Pokemon_V2_Moveeffectchange>;
  /** update multiples rows of table: "pokemon_v2_moveeffectchange" */
  update_pokemon_v2_moveeffectchange_many?: Maybe<Array<Maybe<Pokemon_V2_Moveeffectchange_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_moveeffectchangeeffecttext" */
  update_pokemon_v2_moveeffectchangeeffecttext?: Maybe<Pokemon_V2_Moveeffectchangeeffecttext_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_moveeffectchangeeffecttext" */
  update_pokemon_v2_moveeffectchangeeffecttext_by_pk?: Maybe<Pokemon_V2_Moveeffectchangeeffecttext>;
  /** update multiples rows of table: "pokemon_v2_moveeffectchangeeffecttext" */
  update_pokemon_v2_moveeffectchangeeffecttext_many?: Maybe<Array<Maybe<Pokemon_V2_Moveeffectchangeeffecttext_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_moveeffecteffecttext" */
  update_pokemon_v2_moveeffecteffecttext?: Maybe<Pokemon_V2_Moveeffecteffecttext_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_moveeffecteffecttext" */
  update_pokemon_v2_moveeffecteffecttext_by_pk?: Maybe<Pokemon_V2_Moveeffecteffecttext>;
  /** update multiples rows of table: "pokemon_v2_moveeffecteffecttext" */
  update_pokemon_v2_moveeffecteffecttext_many?: Maybe<Array<Maybe<Pokemon_V2_Moveeffecteffecttext_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_moveflavortext" */
  update_pokemon_v2_moveflavortext?: Maybe<Pokemon_V2_Moveflavortext_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_moveflavortext" */
  update_pokemon_v2_moveflavortext_by_pk?: Maybe<Pokemon_V2_Moveflavortext>;
  /** update multiples rows of table: "pokemon_v2_moveflavortext" */
  update_pokemon_v2_moveflavortext_many?: Maybe<Array<Maybe<Pokemon_V2_Moveflavortext_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_movelearnmethod" */
  update_pokemon_v2_movelearnmethod?: Maybe<Pokemon_V2_Movelearnmethod_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_movelearnmethod" */
  update_pokemon_v2_movelearnmethod_by_pk?: Maybe<Pokemon_V2_Movelearnmethod>;
  /** update multiples rows of table: "pokemon_v2_movelearnmethod" */
  update_pokemon_v2_movelearnmethod_many?: Maybe<Array<Maybe<Pokemon_V2_Movelearnmethod_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_movelearnmethoddescription" */
  update_pokemon_v2_movelearnmethoddescription?: Maybe<Pokemon_V2_Movelearnmethoddescription_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_movelearnmethoddescription" */
  update_pokemon_v2_movelearnmethoddescription_by_pk?: Maybe<Pokemon_V2_Movelearnmethoddescription>;
  /** update multiples rows of table: "pokemon_v2_movelearnmethoddescription" */
  update_pokemon_v2_movelearnmethoddescription_many?: Maybe<Array<Maybe<Pokemon_V2_Movelearnmethoddescription_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_movelearnmethodname" */
  update_pokemon_v2_movelearnmethodname?: Maybe<Pokemon_V2_Movelearnmethodname_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_movelearnmethodname" */
  update_pokemon_v2_movelearnmethodname_by_pk?: Maybe<Pokemon_V2_Movelearnmethodname>;
  /** update multiples rows of table: "pokemon_v2_movelearnmethodname" */
  update_pokemon_v2_movelearnmethodname_many?: Maybe<Array<Maybe<Pokemon_V2_Movelearnmethodname_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_movemeta" */
  update_pokemon_v2_movemeta?: Maybe<Pokemon_V2_Movemeta_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_movemeta" */
  update_pokemon_v2_movemeta_by_pk?: Maybe<Pokemon_V2_Movemeta>;
  /** update multiples rows of table: "pokemon_v2_movemeta" */
  update_pokemon_v2_movemeta_many?: Maybe<Array<Maybe<Pokemon_V2_Movemeta_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_movemetaailment" */
  update_pokemon_v2_movemetaailment?: Maybe<Pokemon_V2_Movemetaailment_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_movemetaailment" */
  update_pokemon_v2_movemetaailment_by_pk?: Maybe<Pokemon_V2_Movemetaailment>;
  /** update multiples rows of table: "pokemon_v2_movemetaailment" */
  update_pokemon_v2_movemetaailment_many?: Maybe<Array<Maybe<Pokemon_V2_Movemetaailment_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_movemetaailmentname" */
  update_pokemon_v2_movemetaailmentname?: Maybe<Pokemon_V2_Movemetaailmentname_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_movemetaailmentname" */
  update_pokemon_v2_movemetaailmentname_by_pk?: Maybe<Pokemon_V2_Movemetaailmentname>;
  /** update multiples rows of table: "pokemon_v2_movemetaailmentname" */
  update_pokemon_v2_movemetaailmentname_many?: Maybe<Array<Maybe<Pokemon_V2_Movemetaailmentname_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_movemetacategory" */
  update_pokemon_v2_movemetacategory?: Maybe<Pokemon_V2_Movemetacategory_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_movemetacategory" */
  update_pokemon_v2_movemetacategory_by_pk?: Maybe<Pokemon_V2_Movemetacategory>;
  /** update multiples rows of table: "pokemon_v2_movemetacategory" */
  update_pokemon_v2_movemetacategory_many?: Maybe<Array<Maybe<Pokemon_V2_Movemetacategory_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_movemetacategorydescription" */
  update_pokemon_v2_movemetacategorydescription?: Maybe<Pokemon_V2_Movemetacategorydescription_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_movemetacategorydescription" */
  update_pokemon_v2_movemetacategorydescription_by_pk?: Maybe<Pokemon_V2_Movemetacategorydescription>;
  /** update multiples rows of table: "pokemon_v2_movemetacategorydescription" */
  update_pokemon_v2_movemetacategorydescription_many?: Maybe<Array<Maybe<Pokemon_V2_Movemetacategorydescription_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_movemetastatchange" */
  update_pokemon_v2_movemetastatchange?: Maybe<Pokemon_V2_Movemetastatchange_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_movemetastatchange" */
  update_pokemon_v2_movemetastatchange_by_pk?: Maybe<Pokemon_V2_Movemetastatchange>;
  /** update multiples rows of table: "pokemon_v2_movemetastatchange" */
  update_pokemon_v2_movemetastatchange_many?: Maybe<Array<Maybe<Pokemon_V2_Movemetastatchange_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_movename" */
  update_pokemon_v2_movename?: Maybe<Pokemon_V2_Movename_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_movename" */
  update_pokemon_v2_movename_by_pk?: Maybe<Pokemon_V2_Movename>;
  /** update multiples rows of table: "pokemon_v2_movename" */
  update_pokemon_v2_movename_many?: Maybe<Array<Maybe<Pokemon_V2_Movename_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_movetarget" */
  update_pokemon_v2_movetarget?: Maybe<Pokemon_V2_Movetarget_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_movetarget" */
  update_pokemon_v2_movetarget_by_pk?: Maybe<Pokemon_V2_Movetarget>;
  /** update multiples rows of table: "pokemon_v2_movetarget" */
  update_pokemon_v2_movetarget_many?: Maybe<Array<Maybe<Pokemon_V2_Movetarget_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_movetargetdescription" */
  update_pokemon_v2_movetargetdescription?: Maybe<Pokemon_V2_Movetargetdescription_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_movetargetdescription" */
  update_pokemon_v2_movetargetdescription_by_pk?: Maybe<Pokemon_V2_Movetargetdescription>;
  /** update multiples rows of table: "pokemon_v2_movetargetdescription" */
  update_pokemon_v2_movetargetdescription_many?: Maybe<Array<Maybe<Pokemon_V2_Movetargetdescription_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_movetargetname" */
  update_pokemon_v2_movetargetname?: Maybe<Pokemon_V2_Movetargetname_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_movetargetname" */
  update_pokemon_v2_movetargetname_by_pk?: Maybe<Pokemon_V2_Movetargetname>;
  /** update multiples rows of table: "pokemon_v2_movetargetname" */
  update_pokemon_v2_movetargetname_many?: Maybe<Array<Maybe<Pokemon_V2_Movetargetname_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_nature" */
  update_pokemon_v2_nature?: Maybe<Pokemon_V2_Nature_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_nature" */
  update_pokemon_v2_nature_by_pk?: Maybe<Pokemon_V2_Nature>;
  /** update multiples rows of table: "pokemon_v2_nature" */
  update_pokemon_v2_nature_many?: Maybe<Array<Maybe<Pokemon_V2_Nature_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_naturebattlestylepreference" */
  update_pokemon_v2_naturebattlestylepreference?: Maybe<Pokemon_V2_Naturebattlestylepreference_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_naturebattlestylepreference" */
  update_pokemon_v2_naturebattlestylepreference_by_pk?: Maybe<Pokemon_V2_Naturebattlestylepreference>;
  /** update multiples rows of table: "pokemon_v2_naturebattlestylepreference" */
  update_pokemon_v2_naturebattlestylepreference_many?: Maybe<Array<Maybe<Pokemon_V2_Naturebattlestylepreference_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_naturename" */
  update_pokemon_v2_naturename?: Maybe<Pokemon_V2_Naturename_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_naturename" */
  update_pokemon_v2_naturename_by_pk?: Maybe<Pokemon_V2_Naturename>;
  /** update multiples rows of table: "pokemon_v2_naturename" */
  update_pokemon_v2_naturename_many?: Maybe<Array<Maybe<Pokemon_V2_Naturename_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_naturepokeathlonstat" */
  update_pokemon_v2_naturepokeathlonstat?: Maybe<Pokemon_V2_Naturepokeathlonstat_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_naturepokeathlonstat" */
  update_pokemon_v2_naturepokeathlonstat_by_pk?: Maybe<Pokemon_V2_Naturepokeathlonstat>;
  /** update multiples rows of table: "pokemon_v2_naturepokeathlonstat" */
  update_pokemon_v2_naturepokeathlonstat_many?: Maybe<Array<Maybe<Pokemon_V2_Naturepokeathlonstat_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_palpark" */
  update_pokemon_v2_palpark?: Maybe<Pokemon_V2_Palpark_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_palpark" */
  update_pokemon_v2_palpark_by_pk?: Maybe<Pokemon_V2_Palpark>;
  /** update multiples rows of table: "pokemon_v2_palpark" */
  update_pokemon_v2_palpark_many?: Maybe<Array<Maybe<Pokemon_V2_Palpark_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_palparkarea" */
  update_pokemon_v2_palparkarea?: Maybe<Pokemon_V2_Palparkarea_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_palparkarea" */
  update_pokemon_v2_palparkarea_by_pk?: Maybe<Pokemon_V2_Palparkarea>;
  /** update multiples rows of table: "pokemon_v2_palparkarea" */
  update_pokemon_v2_palparkarea_many?: Maybe<Array<Maybe<Pokemon_V2_Palparkarea_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_palparkareaname" */
  update_pokemon_v2_palparkareaname?: Maybe<Pokemon_V2_Palparkareaname_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_palparkareaname" */
  update_pokemon_v2_palparkareaname_by_pk?: Maybe<Pokemon_V2_Palparkareaname>;
  /** update multiples rows of table: "pokemon_v2_palparkareaname" */
  update_pokemon_v2_palparkareaname_many?: Maybe<Array<Maybe<Pokemon_V2_Palparkareaname_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_pokeathlonstat" */
  update_pokemon_v2_pokeathlonstat?: Maybe<Pokemon_V2_Pokeathlonstat_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_pokeathlonstat" */
  update_pokemon_v2_pokeathlonstat_by_pk?: Maybe<Pokemon_V2_Pokeathlonstat>;
  /** update multiples rows of table: "pokemon_v2_pokeathlonstat" */
  update_pokemon_v2_pokeathlonstat_many?: Maybe<Array<Maybe<Pokemon_V2_Pokeathlonstat_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_pokeathlonstatname" */
  update_pokemon_v2_pokeathlonstatname?: Maybe<Pokemon_V2_Pokeathlonstatname_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_pokeathlonstatname" */
  update_pokemon_v2_pokeathlonstatname_by_pk?: Maybe<Pokemon_V2_Pokeathlonstatname>;
  /** update multiples rows of table: "pokemon_v2_pokeathlonstatname" */
  update_pokemon_v2_pokeathlonstatname_many?: Maybe<Array<Maybe<Pokemon_V2_Pokeathlonstatname_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_pokedex" */
  update_pokemon_v2_pokedex?: Maybe<Pokemon_V2_Pokedex_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_pokedex" */
  update_pokemon_v2_pokedex_by_pk?: Maybe<Pokemon_V2_Pokedex>;
  /** update multiples rows of table: "pokemon_v2_pokedex" */
  update_pokemon_v2_pokedex_many?: Maybe<Array<Maybe<Pokemon_V2_Pokedex_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_pokedexdescription" */
  update_pokemon_v2_pokedexdescription?: Maybe<Pokemon_V2_Pokedexdescription_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_pokedexdescription" */
  update_pokemon_v2_pokedexdescription_by_pk?: Maybe<Pokemon_V2_Pokedexdescription>;
  /** update multiples rows of table: "pokemon_v2_pokedexdescription" */
  update_pokemon_v2_pokedexdescription_many?: Maybe<Array<Maybe<Pokemon_V2_Pokedexdescription_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_pokedexname" */
  update_pokemon_v2_pokedexname?: Maybe<Pokemon_V2_Pokedexname_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_pokedexname" */
  update_pokemon_v2_pokedexname_by_pk?: Maybe<Pokemon_V2_Pokedexname>;
  /** update multiples rows of table: "pokemon_v2_pokedexname" */
  update_pokemon_v2_pokedexname_many?: Maybe<Array<Maybe<Pokemon_V2_Pokedexname_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_pokedexversiongroup" */
  update_pokemon_v2_pokedexversiongroup?: Maybe<Pokemon_V2_Pokedexversiongroup_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_pokedexversiongroup" */
  update_pokemon_v2_pokedexversiongroup_by_pk?: Maybe<Pokemon_V2_Pokedexversiongroup>;
  /** update multiples rows of table: "pokemon_v2_pokedexversiongroup" */
  update_pokemon_v2_pokedexversiongroup_many?: Maybe<Array<Maybe<Pokemon_V2_Pokedexversiongroup_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_pokemon" */
  update_pokemon_v2_pokemon?: Maybe<Pokemon_V2_Pokemon_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_pokemon" */
  update_pokemon_v2_pokemon_by_pk?: Maybe<Pokemon_V2_Pokemon>;
  /** update multiples rows of table: "pokemon_v2_pokemon" */
  update_pokemon_v2_pokemon_many?: Maybe<Array<Maybe<Pokemon_V2_Pokemon_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_pokemonability" */
  update_pokemon_v2_pokemonability?: Maybe<Pokemon_V2_Pokemonability_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_pokemonability" */
  update_pokemon_v2_pokemonability_by_pk?: Maybe<Pokemon_V2_Pokemonability>;
  /** update multiples rows of table: "pokemon_v2_pokemonability" */
  update_pokemon_v2_pokemonability_many?: Maybe<Array<Maybe<Pokemon_V2_Pokemonability_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_pokemonabilitypast" */
  update_pokemon_v2_pokemonabilitypast?: Maybe<Pokemon_V2_Pokemonabilitypast_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_pokemonabilitypast" */
  update_pokemon_v2_pokemonabilitypast_by_pk?: Maybe<Pokemon_V2_Pokemonabilitypast>;
  /** update multiples rows of table: "pokemon_v2_pokemonabilitypast" */
  update_pokemon_v2_pokemonabilitypast_many?: Maybe<Array<Maybe<Pokemon_V2_Pokemonabilitypast_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_pokemoncolor" */
  update_pokemon_v2_pokemoncolor?: Maybe<Pokemon_V2_Pokemoncolor_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_pokemoncolor" */
  update_pokemon_v2_pokemoncolor_by_pk?: Maybe<Pokemon_V2_Pokemoncolor>;
  /** update multiples rows of table: "pokemon_v2_pokemoncolor" */
  update_pokemon_v2_pokemoncolor_many?: Maybe<Array<Maybe<Pokemon_V2_Pokemoncolor_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_pokemoncolorname" */
  update_pokemon_v2_pokemoncolorname?: Maybe<Pokemon_V2_Pokemoncolorname_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_pokemoncolorname" */
  update_pokemon_v2_pokemoncolorname_by_pk?: Maybe<Pokemon_V2_Pokemoncolorname>;
  /** update multiples rows of table: "pokemon_v2_pokemoncolorname" */
  update_pokemon_v2_pokemoncolorname_many?: Maybe<Array<Maybe<Pokemon_V2_Pokemoncolorname_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_pokemoncries" */
  update_pokemon_v2_pokemoncries?: Maybe<Pokemon_V2_Pokemoncries_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_pokemoncries" */
  update_pokemon_v2_pokemoncries_by_pk?: Maybe<Pokemon_V2_Pokemoncries>;
  /** update multiples rows of table: "pokemon_v2_pokemoncries" */
  update_pokemon_v2_pokemoncries_many?: Maybe<Array<Maybe<Pokemon_V2_Pokemoncries_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_pokemondexnumber" */
  update_pokemon_v2_pokemondexnumber?: Maybe<Pokemon_V2_Pokemondexnumber_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_pokemondexnumber" */
  update_pokemon_v2_pokemondexnumber_by_pk?: Maybe<Pokemon_V2_Pokemondexnumber>;
  /** update multiples rows of table: "pokemon_v2_pokemondexnumber" */
  update_pokemon_v2_pokemondexnumber_many?: Maybe<Array<Maybe<Pokemon_V2_Pokemondexnumber_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_pokemonegggroup" */
  update_pokemon_v2_pokemonegggroup?: Maybe<Pokemon_V2_Pokemonegggroup_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_pokemonegggroup" */
  update_pokemon_v2_pokemonegggroup_by_pk?: Maybe<Pokemon_V2_Pokemonegggroup>;
  /** update multiples rows of table: "pokemon_v2_pokemonegggroup" */
  update_pokemon_v2_pokemonegggroup_many?: Maybe<Array<Maybe<Pokemon_V2_Pokemonegggroup_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_pokemonevolution" */
  update_pokemon_v2_pokemonevolution?: Maybe<Pokemon_V2_Pokemonevolution_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_pokemonevolution" */
  update_pokemon_v2_pokemonevolution_by_pk?: Maybe<Pokemon_V2_Pokemonevolution>;
  /** update multiples rows of table: "pokemon_v2_pokemonevolution" */
  update_pokemon_v2_pokemonevolution_many?: Maybe<Array<Maybe<Pokemon_V2_Pokemonevolution_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_pokemonform" */
  update_pokemon_v2_pokemonform?: Maybe<Pokemon_V2_Pokemonform_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_pokemonform" */
  update_pokemon_v2_pokemonform_by_pk?: Maybe<Pokemon_V2_Pokemonform>;
  /** update multiples rows of table: "pokemon_v2_pokemonform" */
  update_pokemon_v2_pokemonform_many?: Maybe<Array<Maybe<Pokemon_V2_Pokemonform_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_pokemonformgeneration" */
  update_pokemon_v2_pokemonformgeneration?: Maybe<Pokemon_V2_Pokemonformgeneration_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_pokemonformgeneration" */
  update_pokemon_v2_pokemonformgeneration_by_pk?: Maybe<Pokemon_V2_Pokemonformgeneration>;
  /** update multiples rows of table: "pokemon_v2_pokemonformgeneration" */
  update_pokemon_v2_pokemonformgeneration_many?: Maybe<Array<Maybe<Pokemon_V2_Pokemonformgeneration_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_pokemonformname" */
  update_pokemon_v2_pokemonformname?: Maybe<Pokemon_V2_Pokemonformname_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_pokemonformname" */
  update_pokemon_v2_pokemonformname_by_pk?: Maybe<Pokemon_V2_Pokemonformname>;
  /** update multiples rows of table: "pokemon_v2_pokemonformname" */
  update_pokemon_v2_pokemonformname_many?: Maybe<Array<Maybe<Pokemon_V2_Pokemonformname_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_pokemonformsprites" */
  update_pokemon_v2_pokemonformsprites?: Maybe<Pokemon_V2_Pokemonformsprites_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_pokemonformsprites" */
  update_pokemon_v2_pokemonformsprites_by_pk?: Maybe<Pokemon_V2_Pokemonformsprites>;
  /** update multiples rows of table: "pokemon_v2_pokemonformsprites" */
  update_pokemon_v2_pokemonformsprites_many?: Maybe<Array<Maybe<Pokemon_V2_Pokemonformsprites_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_pokemonformtype" */
  update_pokemon_v2_pokemonformtype?: Maybe<Pokemon_V2_Pokemonformtype_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_pokemonformtype" */
  update_pokemon_v2_pokemonformtype_by_pk?: Maybe<Pokemon_V2_Pokemonformtype>;
  /** update multiples rows of table: "pokemon_v2_pokemonformtype" */
  update_pokemon_v2_pokemonformtype_many?: Maybe<Array<Maybe<Pokemon_V2_Pokemonformtype_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_pokemongameindex" */
  update_pokemon_v2_pokemongameindex?: Maybe<Pokemon_V2_Pokemongameindex_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_pokemongameindex" */
  update_pokemon_v2_pokemongameindex_by_pk?: Maybe<Pokemon_V2_Pokemongameindex>;
  /** update multiples rows of table: "pokemon_v2_pokemongameindex" */
  update_pokemon_v2_pokemongameindex_many?: Maybe<Array<Maybe<Pokemon_V2_Pokemongameindex_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_pokemonhabitat" */
  update_pokemon_v2_pokemonhabitat?: Maybe<Pokemon_V2_Pokemonhabitat_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_pokemonhabitat" */
  update_pokemon_v2_pokemonhabitat_by_pk?: Maybe<Pokemon_V2_Pokemonhabitat>;
  /** update multiples rows of table: "pokemon_v2_pokemonhabitat" */
  update_pokemon_v2_pokemonhabitat_many?: Maybe<Array<Maybe<Pokemon_V2_Pokemonhabitat_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_pokemonhabitatname" */
  update_pokemon_v2_pokemonhabitatname?: Maybe<Pokemon_V2_Pokemonhabitatname_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_pokemonhabitatname" */
  update_pokemon_v2_pokemonhabitatname_by_pk?: Maybe<Pokemon_V2_Pokemonhabitatname>;
  /** update multiples rows of table: "pokemon_v2_pokemonhabitatname" */
  update_pokemon_v2_pokemonhabitatname_many?: Maybe<Array<Maybe<Pokemon_V2_Pokemonhabitatname_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_pokemonitem" */
  update_pokemon_v2_pokemonitem?: Maybe<Pokemon_V2_Pokemonitem_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_pokemonitem" */
  update_pokemon_v2_pokemonitem_by_pk?: Maybe<Pokemon_V2_Pokemonitem>;
  /** update multiples rows of table: "pokemon_v2_pokemonitem" */
  update_pokemon_v2_pokemonitem_many?: Maybe<Array<Maybe<Pokemon_V2_Pokemonitem_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_pokemonmove" */
  update_pokemon_v2_pokemonmove?: Maybe<Pokemon_V2_Pokemonmove_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_pokemonmove" */
  update_pokemon_v2_pokemonmove_by_pk?: Maybe<Pokemon_V2_Pokemonmove>;
  /** update multiples rows of table: "pokemon_v2_pokemonmove" */
  update_pokemon_v2_pokemonmove_many?: Maybe<Array<Maybe<Pokemon_V2_Pokemonmove_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_pokemonshape" */
  update_pokemon_v2_pokemonshape?: Maybe<Pokemon_V2_Pokemonshape_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_pokemonshape" */
  update_pokemon_v2_pokemonshape_by_pk?: Maybe<Pokemon_V2_Pokemonshape>;
  /** update multiples rows of table: "pokemon_v2_pokemonshape" */
  update_pokemon_v2_pokemonshape_many?: Maybe<Array<Maybe<Pokemon_V2_Pokemonshape_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_pokemonshapename" */
  update_pokemon_v2_pokemonshapename?: Maybe<Pokemon_V2_Pokemonshapename_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_pokemonshapename" */
  update_pokemon_v2_pokemonshapename_by_pk?: Maybe<Pokemon_V2_Pokemonshapename>;
  /** update multiples rows of table: "pokemon_v2_pokemonshapename" */
  update_pokemon_v2_pokemonshapename_many?: Maybe<Array<Maybe<Pokemon_V2_Pokemonshapename_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_pokemonspecies" */
  update_pokemon_v2_pokemonspecies?: Maybe<Pokemon_V2_Pokemonspecies_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_pokemonspecies" */
  update_pokemon_v2_pokemonspecies_by_pk?: Maybe<Pokemon_V2_Pokemonspecies>;
  /** update multiples rows of table: "pokemon_v2_pokemonspecies" */
  update_pokemon_v2_pokemonspecies_many?: Maybe<Array<Maybe<Pokemon_V2_Pokemonspecies_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_pokemonspeciesdescription" */
  update_pokemon_v2_pokemonspeciesdescription?: Maybe<Pokemon_V2_Pokemonspeciesdescription_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_pokemonspeciesdescription" */
  update_pokemon_v2_pokemonspeciesdescription_by_pk?: Maybe<Pokemon_V2_Pokemonspeciesdescription>;
  /** update multiples rows of table: "pokemon_v2_pokemonspeciesdescription" */
  update_pokemon_v2_pokemonspeciesdescription_many?: Maybe<Array<Maybe<Pokemon_V2_Pokemonspeciesdescription_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_pokemonspeciesflavortext" */
  update_pokemon_v2_pokemonspeciesflavortext?: Maybe<Pokemon_V2_Pokemonspeciesflavortext_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_pokemonspeciesflavortext" */
  update_pokemon_v2_pokemonspeciesflavortext_by_pk?: Maybe<Pokemon_V2_Pokemonspeciesflavortext>;
  /** update multiples rows of table: "pokemon_v2_pokemonspeciesflavortext" */
  update_pokemon_v2_pokemonspeciesflavortext_many?: Maybe<Array<Maybe<Pokemon_V2_Pokemonspeciesflavortext_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_pokemonspeciesname" */
  update_pokemon_v2_pokemonspeciesname?: Maybe<Pokemon_V2_Pokemonspeciesname_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_pokemonspeciesname" */
  update_pokemon_v2_pokemonspeciesname_by_pk?: Maybe<Pokemon_V2_Pokemonspeciesname>;
  /** update multiples rows of table: "pokemon_v2_pokemonspeciesname" */
  update_pokemon_v2_pokemonspeciesname_many?: Maybe<Array<Maybe<Pokemon_V2_Pokemonspeciesname_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_pokemonsprites" */
  update_pokemon_v2_pokemonsprites?: Maybe<Pokemon_V2_Pokemonsprites_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_pokemonsprites" */
  update_pokemon_v2_pokemonsprites_by_pk?: Maybe<Pokemon_V2_Pokemonsprites>;
  /** update multiples rows of table: "pokemon_v2_pokemonsprites" */
  update_pokemon_v2_pokemonsprites_many?: Maybe<Array<Maybe<Pokemon_V2_Pokemonsprites_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_pokemonstat" */
  update_pokemon_v2_pokemonstat?: Maybe<Pokemon_V2_Pokemonstat_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_pokemonstat" */
  update_pokemon_v2_pokemonstat_by_pk?: Maybe<Pokemon_V2_Pokemonstat>;
  /** update multiples rows of table: "pokemon_v2_pokemonstat" */
  update_pokemon_v2_pokemonstat_many?: Maybe<Array<Maybe<Pokemon_V2_Pokemonstat_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_pokemontype" */
  update_pokemon_v2_pokemontype?: Maybe<Pokemon_V2_Pokemontype_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_pokemontype" */
  update_pokemon_v2_pokemontype_by_pk?: Maybe<Pokemon_V2_Pokemontype>;
  /** update multiples rows of table: "pokemon_v2_pokemontype" */
  update_pokemon_v2_pokemontype_many?: Maybe<Array<Maybe<Pokemon_V2_Pokemontype_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_pokemontypepast" */
  update_pokemon_v2_pokemontypepast?: Maybe<Pokemon_V2_Pokemontypepast_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_pokemontypepast" */
  update_pokemon_v2_pokemontypepast_by_pk?: Maybe<Pokemon_V2_Pokemontypepast>;
  /** update multiples rows of table: "pokemon_v2_pokemontypepast" */
  update_pokemon_v2_pokemontypepast_many?: Maybe<Array<Maybe<Pokemon_V2_Pokemontypepast_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_region" */
  update_pokemon_v2_region?: Maybe<Pokemon_V2_Region_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_region" */
  update_pokemon_v2_region_by_pk?: Maybe<Pokemon_V2_Region>;
  /** update multiples rows of table: "pokemon_v2_region" */
  update_pokemon_v2_region_many?: Maybe<Array<Maybe<Pokemon_V2_Region_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_regionname" */
  update_pokemon_v2_regionname?: Maybe<Pokemon_V2_Regionname_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_regionname" */
  update_pokemon_v2_regionname_by_pk?: Maybe<Pokemon_V2_Regionname>;
  /** update multiples rows of table: "pokemon_v2_regionname" */
  update_pokemon_v2_regionname_many?: Maybe<Array<Maybe<Pokemon_V2_Regionname_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_stat" */
  update_pokemon_v2_stat?: Maybe<Pokemon_V2_Stat_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_stat" */
  update_pokemon_v2_stat_by_pk?: Maybe<Pokemon_V2_Stat>;
  /** update multiples rows of table: "pokemon_v2_stat" */
  update_pokemon_v2_stat_many?: Maybe<Array<Maybe<Pokemon_V2_Stat_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_statname" */
  update_pokemon_v2_statname?: Maybe<Pokemon_V2_Statname_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_statname" */
  update_pokemon_v2_statname_by_pk?: Maybe<Pokemon_V2_Statname>;
  /** update multiples rows of table: "pokemon_v2_statname" */
  update_pokemon_v2_statname_many?: Maybe<Array<Maybe<Pokemon_V2_Statname_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_supercontestcombo" */
  update_pokemon_v2_supercontestcombo?: Maybe<Pokemon_V2_Supercontestcombo_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_supercontestcombo" */
  update_pokemon_v2_supercontestcombo_by_pk?: Maybe<Pokemon_V2_Supercontestcombo>;
  /** update multiples rows of table: "pokemon_v2_supercontestcombo" */
  update_pokemon_v2_supercontestcombo_many?: Maybe<Array<Maybe<Pokemon_V2_Supercontestcombo_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_supercontesteffect" */
  update_pokemon_v2_supercontesteffect?: Maybe<Pokemon_V2_Supercontesteffect_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_supercontesteffect" */
  update_pokemon_v2_supercontesteffect_by_pk?: Maybe<Pokemon_V2_Supercontesteffect>;
  /** update multiples rows of table: "pokemon_v2_supercontesteffect" */
  update_pokemon_v2_supercontesteffect_many?: Maybe<Array<Maybe<Pokemon_V2_Supercontesteffect_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_supercontesteffectflavortext" */
  update_pokemon_v2_supercontesteffectflavortext?: Maybe<Pokemon_V2_Supercontesteffectflavortext_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_supercontesteffectflavortext" */
  update_pokemon_v2_supercontesteffectflavortext_by_pk?: Maybe<Pokemon_V2_Supercontesteffectflavortext>;
  /** update multiples rows of table: "pokemon_v2_supercontesteffectflavortext" */
  update_pokemon_v2_supercontesteffectflavortext_many?: Maybe<Array<Maybe<Pokemon_V2_Supercontesteffectflavortext_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_type" */
  update_pokemon_v2_type?: Maybe<Pokemon_V2_Type_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_type" */
  update_pokemon_v2_type_by_pk?: Maybe<Pokemon_V2_Type>;
  /** update multiples rows of table: "pokemon_v2_type" */
  update_pokemon_v2_type_many?: Maybe<Array<Maybe<Pokemon_V2_Type_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_typeefficacy" */
  update_pokemon_v2_typeefficacy?: Maybe<Pokemon_V2_Typeefficacy_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_typeefficacy" */
  update_pokemon_v2_typeefficacy_by_pk?: Maybe<Pokemon_V2_Typeefficacy>;
  /** update multiples rows of table: "pokemon_v2_typeefficacy" */
  update_pokemon_v2_typeefficacy_many?: Maybe<Array<Maybe<Pokemon_V2_Typeefficacy_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_typeefficacypast" */
  update_pokemon_v2_typeefficacypast?: Maybe<Pokemon_V2_Typeefficacypast_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_typeefficacypast" */
  update_pokemon_v2_typeefficacypast_by_pk?: Maybe<Pokemon_V2_Typeefficacypast>;
  /** update multiples rows of table: "pokemon_v2_typeefficacypast" */
  update_pokemon_v2_typeefficacypast_many?: Maybe<Array<Maybe<Pokemon_V2_Typeefficacypast_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_typegameindex" */
  update_pokemon_v2_typegameindex?: Maybe<Pokemon_V2_Typegameindex_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_typegameindex" */
  update_pokemon_v2_typegameindex_by_pk?: Maybe<Pokemon_V2_Typegameindex>;
  /** update multiples rows of table: "pokemon_v2_typegameindex" */
  update_pokemon_v2_typegameindex_many?: Maybe<Array<Maybe<Pokemon_V2_Typegameindex_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_typename" */
  update_pokemon_v2_typename?: Maybe<Pokemon_V2_Typename_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_typename" */
  update_pokemon_v2_typename_by_pk?: Maybe<Pokemon_V2_Typename>;
  /** update multiples rows of table: "pokemon_v2_typename" */
  update_pokemon_v2_typename_many?: Maybe<Array<Maybe<Pokemon_V2_Typename_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_version" */
  update_pokemon_v2_version?: Maybe<Pokemon_V2_Version_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_version" */
  update_pokemon_v2_version_by_pk?: Maybe<Pokemon_V2_Version>;
  /** update multiples rows of table: "pokemon_v2_version" */
  update_pokemon_v2_version_many?: Maybe<Array<Maybe<Pokemon_V2_Version_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_versiongroup" */
  update_pokemon_v2_versiongroup?: Maybe<Pokemon_V2_Versiongroup_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_versiongroup" */
  update_pokemon_v2_versiongroup_by_pk?: Maybe<Pokemon_V2_Versiongroup>;
  /** update multiples rows of table: "pokemon_v2_versiongroup" */
  update_pokemon_v2_versiongroup_many?: Maybe<Array<Maybe<Pokemon_V2_Versiongroup_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_versiongroupmovelearnmethod" */
  update_pokemon_v2_versiongroupmovelearnmethod?: Maybe<Pokemon_V2_Versiongroupmovelearnmethod_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_versiongroupmovelearnmethod" */
  update_pokemon_v2_versiongroupmovelearnmethod_by_pk?: Maybe<Pokemon_V2_Versiongroupmovelearnmethod>;
  /** update multiples rows of table: "pokemon_v2_versiongroupmovelearnmethod" */
  update_pokemon_v2_versiongroupmovelearnmethod_many?: Maybe<Array<Maybe<Pokemon_V2_Versiongroupmovelearnmethod_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_versiongroupregion" */
  update_pokemon_v2_versiongroupregion?: Maybe<Pokemon_V2_Versiongroupregion_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_versiongroupregion" */
  update_pokemon_v2_versiongroupregion_by_pk?: Maybe<Pokemon_V2_Versiongroupregion>;
  /** update multiples rows of table: "pokemon_v2_versiongroupregion" */
  update_pokemon_v2_versiongroupregion_many?: Maybe<Array<Maybe<Pokemon_V2_Versiongroupregion_Mutation_Response>>>;
  /** update data of the table: "pokemon_v2_versionname" */
  update_pokemon_v2_versionname?: Maybe<Pokemon_V2_Versionname_Mutation_Response>;
  /** update single row of the table: "pokemon_v2_versionname" */
  update_pokemon_v2_versionname_by_pk?: Maybe<Pokemon_V2_Versionname>;
  /** update multiples rows of table: "pokemon_v2_versionname" */
  update_pokemon_v2_versionname_many?: Maybe<Array<Maybe<Pokemon_V2_Versionname_Mutation_Response>>>;
};


/** mutation root */
export type Mutation_RootDelete_Auth_GroupArgs = {
  where: Auth_Group_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Auth_Group_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Auth_Group_PermissionsArgs = {
  where: Auth_Group_Permissions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Auth_Group_Permissions_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Auth_PermissionArgs = {
  where: Auth_Permission_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Auth_Permission_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Auth_UserArgs = {
  where: Auth_User_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Auth_User_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Auth_User_GroupsArgs = {
  where: Auth_User_Groups_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Auth_User_Groups_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Auth_User_User_PermissionsArgs = {
  where: Auth_User_User_Permissions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Auth_User_User_Permissions_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Django_Admin_LogArgs = {
  where: Django_Admin_Log_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Django_Admin_Log_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Django_Content_TypeArgs = {
  where: Django_Content_Type_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Django_Content_Type_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Django_MigrationsArgs = {
  where: Django_Migrations_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Django_Migrations_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Django_SessionArgs = {
  where: Django_Session_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Django_Session_By_PkArgs = {
  session_key: Scalars['String']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Django_SiteArgs = {
  where: Django_Site_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Django_Site_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_AbilityArgs = {
  where: Pokemon_V2_Ability_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Ability_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_AbilitychangeArgs = {
  where: Pokemon_V2_Abilitychange_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Abilitychange_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_AbilitychangeeffecttextArgs = {
  where: Pokemon_V2_Abilitychangeeffecttext_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Abilitychangeeffecttext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_AbilityeffecttextArgs = {
  where: Pokemon_V2_Abilityeffecttext_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Abilityeffecttext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_AbilityflavortextArgs = {
  where: Pokemon_V2_Abilityflavortext_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Abilityflavortext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_AbilitynameArgs = {
  where: Pokemon_V2_Abilityname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Abilityname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_BerryArgs = {
  where: Pokemon_V2_Berry_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Berry_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_BerryfirmnessArgs = {
  where: Pokemon_V2_Berryfirmness_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Berryfirmness_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_BerryfirmnessnameArgs = {
  where: Pokemon_V2_Berryfirmnessname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Berryfirmnessname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_BerryflavorArgs = {
  where: Pokemon_V2_Berryflavor_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Berryflavor_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_BerryflavormapArgs = {
  where: Pokemon_V2_Berryflavormap_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Berryflavormap_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_BerryflavornameArgs = {
  where: Pokemon_V2_Berryflavorname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Berryflavorname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_CharacteristicArgs = {
  where: Pokemon_V2_Characteristic_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Characteristic_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_CharacteristicdescriptionArgs = {
  where: Pokemon_V2_Characteristicdescription_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Characteristicdescription_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_ContestcomboArgs = {
  where: Pokemon_V2_Contestcombo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Contestcombo_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_ContesteffectArgs = {
  where: Pokemon_V2_Contesteffect_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Contesteffect_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_ContesteffecteffecttextArgs = {
  where: Pokemon_V2_Contesteffecteffecttext_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Contesteffecteffecttext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_ContesteffectflavortextArgs = {
  where: Pokemon_V2_Contesteffectflavortext_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Contesteffectflavortext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_ContesttypeArgs = {
  where: Pokemon_V2_Contesttype_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Contesttype_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_ContesttypenameArgs = {
  where: Pokemon_V2_Contesttypename_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Contesttypename_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_EgggroupArgs = {
  where: Pokemon_V2_Egggroup_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Egggroup_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_EgggroupnameArgs = {
  where: Pokemon_V2_Egggroupname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Egggroupname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_EncounterArgs = {
  where: Pokemon_V2_Encounter_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Encounter_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_EncounterconditionArgs = {
  where: Pokemon_V2_Encountercondition_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Encountercondition_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_EncounterconditionnameArgs = {
  where: Pokemon_V2_Encounterconditionname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Encounterconditionname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_EncounterconditionvalueArgs = {
  where: Pokemon_V2_Encounterconditionvalue_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Encounterconditionvalue_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_EncounterconditionvaluemapArgs = {
  where: Pokemon_V2_Encounterconditionvaluemap_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Encounterconditionvaluemap_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_EncounterconditionvaluenameArgs = {
  where: Pokemon_V2_Encounterconditionvaluename_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Encounterconditionvaluename_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_EncountermethodArgs = {
  where: Pokemon_V2_Encountermethod_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Encountermethod_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_EncountermethodnameArgs = {
  where: Pokemon_V2_Encountermethodname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Encountermethodname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_EncounterslotArgs = {
  where: Pokemon_V2_Encounterslot_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Encounterslot_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_EvolutionchainArgs = {
  where: Pokemon_V2_Evolutionchain_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Evolutionchain_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_EvolutiontriggerArgs = {
  where: Pokemon_V2_Evolutiontrigger_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Evolutiontrigger_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_EvolutiontriggernameArgs = {
  where: Pokemon_V2_Evolutiontriggername_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Evolutiontriggername_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_ExperienceArgs = {
  where: Pokemon_V2_Experience_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Experience_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_GenderArgs = {
  where: Pokemon_V2_Gender_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Gender_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_GenerationArgs = {
  where: Pokemon_V2_Generation_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Generation_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_GenerationnameArgs = {
  where: Pokemon_V2_Generationname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Generationname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_GrowthrateArgs = {
  where: Pokemon_V2_Growthrate_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Growthrate_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_GrowthratedescriptionArgs = {
  where: Pokemon_V2_Growthratedescription_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Growthratedescription_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_ItemArgs = {
  where: Pokemon_V2_Item_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Item_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_ItemattributeArgs = {
  where: Pokemon_V2_Itemattribute_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Itemattribute_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_ItemattributedescriptionArgs = {
  where: Pokemon_V2_Itemattributedescription_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Itemattributedescription_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_ItemattributemapArgs = {
  where: Pokemon_V2_Itemattributemap_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Itemattributemap_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_ItemattributenameArgs = {
  where: Pokemon_V2_Itemattributename_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Itemattributename_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_ItemcategoryArgs = {
  where: Pokemon_V2_Itemcategory_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Itemcategory_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_ItemcategorynameArgs = {
  where: Pokemon_V2_Itemcategoryname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Itemcategoryname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_ItemeffecttextArgs = {
  where: Pokemon_V2_Itemeffecttext_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Itemeffecttext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_ItemflavortextArgs = {
  where: Pokemon_V2_Itemflavortext_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Itemflavortext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_ItemflingeffectArgs = {
  where: Pokemon_V2_Itemflingeffect_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Itemflingeffect_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_ItemflingeffecteffecttextArgs = {
  where: Pokemon_V2_Itemflingeffecteffecttext_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Itemflingeffecteffecttext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_ItemgameindexArgs = {
  where: Pokemon_V2_Itemgameindex_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Itemgameindex_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_ItemnameArgs = {
  where: Pokemon_V2_Itemname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Itemname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_ItempocketArgs = {
  where: Pokemon_V2_Itempocket_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Itempocket_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_ItempocketnameArgs = {
  where: Pokemon_V2_Itempocketname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Itempocketname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_ItemspritesArgs = {
  where: Pokemon_V2_Itemsprites_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Itemsprites_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_LanguageArgs = {
  where: Pokemon_V2_Language_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Language_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_LanguagenameArgs = {
  where: Pokemon_V2_Languagename_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Languagename_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_LocationArgs = {
  where: Pokemon_V2_Location_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Location_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_LocationareaArgs = {
  where: Pokemon_V2_Locationarea_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Locationarea_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_LocationareaencounterrateArgs = {
  where: Pokemon_V2_Locationareaencounterrate_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Locationareaencounterrate_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_LocationareanameArgs = {
  where: Pokemon_V2_Locationareaname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Locationareaname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_LocationgameindexArgs = {
  where: Pokemon_V2_Locationgameindex_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Locationgameindex_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_LocationnameArgs = {
  where: Pokemon_V2_Locationname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Locationname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_MachineArgs = {
  where: Pokemon_V2_Machine_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Machine_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_MoveArgs = {
  where: Pokemon_V2_Move_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Move_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_MoveattributeArgs = {
  where: Pokemon_V2_Moveattribute_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Moveattribute_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_MoveattributedescriptionArgs = {
  where: Pokemon_V2_Moveattributedescription_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Moveattributedescription_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_MoveattributemapArgs = {
  where: Pokemon_V2_Moveattributemap_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Moveattributemap_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_MoveattributenameArgs = {
  where: Pokemon_V2_Moveattributename_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Moveattributename_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_MovebattlestyleArgs = {
  where: Pokemon_V2_Movebattlestyle_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Movebattlestyle_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_MovebattlestylenameArgs = {
  where: Pokemon_V2_Movebattlestylename_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Movebattlestylename_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_MovechangeArgs = {
  where: Pokemon_V2_Movechange_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Movechange_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_MovedamageclassArgs = {
  where: Pokemon_V2_Movedamageclass_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Movedamageclass_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_MovedamageclassdescriptionArgs = {
  where: Pokemon_V2_Movedamageclassdescription_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Movedamageclassdescription_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_MovedamageclassnameArgs = {
  where: Pokemon_V2_Movedamageclassname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Movedamageclassname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_MoveeffectArgs = {
  where: Pokemon_V2_Moveeffect_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Moveeffect_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_MoveeffectchangeArgs = {
  where: Pokemon_V2_Moveeffectchange_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Moveeffectchange_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_MoveeffectchangeeffecttextArgs = {
  where: Pokemon_V2_Moveeffectchangeeffecttext_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Moveeffectchangeeffecttext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_MoveeffecteffecttextArgs = {
  where: Pokemon_V2_Moveeffecteffecttext_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Moveeffecteffecttext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_MoveflavortextArgs = {
  where: Pokemon_V2_Moveflavortext_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Moveflavortext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_MovelearnmethodArgs = {
  where: Pokemon_V2_Movelearnmethod_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Movelearnmethod_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_MovelearnmethoddescriptionArgs = {
  where: Pokemon_V2_Movelearnmethoddescription_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Movelearnmethoddescription_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_MovelearnmethodnameArgs = {
  where: Pokemon_V2_Movelearnmethodname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Movelearnmethodname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_MovemetaArgs = {
  where: Pokemon_V2_Movemeta_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Movemeta_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_MovemetaailmentArgs = {
  where: Pokemon_V2_Movemetaailment_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Movemetaailment_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_MovemetaailmentnameArgs = {
  where: Pokemon_V2_Movemetaailmentname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Movemetaailmentname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_MovemetacategoryArgs = {
  where: Pokemon_V2_Movemetacategory_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Movemetacategory_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_MovemetacategorydescriptionArgs = {
  where: Pokemon_V2_Movemetacategorydescription_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Movemetacategorydescription_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_MovemetastatchangeArgs = {
  where: Pokemon_V2_Movemetastatchange_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Movemetastatchange_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_MovenameArgs = {
  where: Pokemon_V2_Movename_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Movename_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_MovetargetArgs = {
  where: Pokemon_V2_Movetarget_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Movetarget_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_MovetargetdescriptionArgs = {
  where: Pokemon_V2_Movetargetdescription_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Movetargetdescription_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_MovetargetnameArgs = {
  where: Pokemon_V2_Movetargetname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Movetargetname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_NatureArgs = {
  where: Pokemon_V2_Nature_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Nature_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_NaturebattlestylepreferenceArgs = {
  where: Pokemon_V2_Naturebattlestylepreference_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Naturebattlestylepreference_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_NaturenameArgs = {
  where: Pokemon_V2_Naturename_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Naturename_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_NaturepokeathlonstatArgs = {
  where: Pokemon_V2_Naturepokeathlonstat_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Naturepokeathlonstat_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PalparkArgs = {
  where: Pokemon_V2_Palpark_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Palpark_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PalparkareaArgs = {
  where: Pokemon_V2_Palparkarea_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Palparkarea_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PalparkareanameArgs = {
  where: Pokemon_V2_Palparkareaname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Palparkareaname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PokeathlonstatArgs = {
  where: Pokemon_V2_Pokeathlonstat_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Pokeathlonstat_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PokeathlonstatnameArgs = {
  where: Pokemon_V2_Pokeathlonstatname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Pokeathlonstatname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PokedexArgs = {
  where: Pokemon_V2_Pokedex_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Pokedex_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PokedexdescriptionArgs = {
  where: Pokemon_V2_Pokedexdescription_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Pokedexdescription_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PokedexnameArgs = {
  where: Pokemon_V2_Pokedexname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Pokedexname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PokedexversiongroupArgs = {
  where: Pokemon_V2_Pokedexversiongroup_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Pokedexversiongroup_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PokemonArgs = {
  where: Pokemon_V2_Pokemon_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Pokemon_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PokemonabilityArgs = {
  where: Pokemon_V2_Pokemonability_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Pokemonability_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PokemonabilitypastArgs = {
  where: Pokemon_V2_Pokemonabilitypast_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Pokemonabilitypast_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PokemoncolorArgs = {
  where: Pokemon_V2_Pokemoncolor_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Pokemoncolor_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PokemoncolornameArgs = {
  where: Pokemon_V2_Pokemoncolorname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Pokemoncolorname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PokemoncriesArgs = {
  where: Pokemon_V2_Pokemoncries_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Pokemoncries_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PokemondexnumberArgs = {
  where: Pokemon_V2_Pokemondexnumber_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Pokemondexnumber_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PokemonegggroupArgs = {
  where: Pokemon_V2_Pokemonegggroup_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Pokemonegggroup_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PokemonevolutionArgs = {
  where: Pokemon_V2_Pokemonevolution_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Pokemonevolution_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PokemonformArgs = {
  where: Pokemon_V2_Pokemonform_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Pokemonform_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PokemonformgenerationArgs = {
  where: Pokemon_V2_Pokemonformgeneration_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Pokemonformgeneration_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PokemonformnameArgs = {
  where: Pokemon_V2_Pokemonformname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Pokemonformname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PokemonformspritesArgs = {
  where: Pokemon_V2_Pokemonformsprites_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Pokemonformsprites_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PokemonformtypeArgs = {
  where: Pokemon_V2_Pokemonformtype_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Pokemonformtype_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PokemongameindexArgs = {
  where: Pokemon_V2_Pokemongameindex_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Pokemongameindex_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PokemonhabitatArgs = {
  where: Pokemon_V2_Pokemonhabitat_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Pokemonhabitat_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PokemonhabitatnameArgs = {
  where: Pokemon_V2_Pokemonhabitatname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Pokemonhabitatname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PokemonitemArgs = {
  where: Pokemon_V2_Pokemonitem_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Pokemonitem_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PokemonmoveArgs = {
  where: Pokemon_V2_Pokemonmove_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Pokemonmove_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PokemonshapeArgs = {
  where: Pokemon_V2_Pokemonshape_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Pokemonshape_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PokemonshapenameArgs = {
  where: Pokemon_V2_Pokemonshapename_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Pokemonshapename_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PokemonspeciesArgs = {
  where: Pokemon_V2_Pokemonspecies_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Pokemonspecies_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PokemonspeciesdescriptionArgs = {
  where: Pokemon_V2_Pokemonspeciesdescription_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Pokemonspeciesdescription_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PokemonspeciesflavortextArgs = {
  where: Pokemon_V2_Pokemonspeciesflavortext_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Pokemonspeciesflavortext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PokemonspeciesnameArgs = {
  where: Pokemon_V2_Pokemonspeciesname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Pokemonspeciesname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PokemonspritesArgs = {
  where: Pokemon_V2_Pokemonsprites_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Pokemonsprites_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PokemonstatArgs = {
  where: Pokemon_V2_Pokemonstat_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Pokemonstat_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PokemontypeArgs = {
  where: Pokemon_V2_Pokemontype_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Pokemontype_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_PokemontypepastArgs = {
  where: Pokemon_V2_Pokemontypepast_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Pokemontypepast_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_RegionArgs = {
  where: Pokemon_V2_Region_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Region_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_RegionnameArgs = {
  where: Pokemon_V2_Regionname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Regionname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_StatArgs = {
  where: Pokemon_V2_Stat_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Stat_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_StatnameArgs = {
  where: Pokemon_V2_Statname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Statname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_SupercontestcomboArgs = {
  where: Pokemon_V2_Supercontestcombo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Supercontestcombo_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_SupercontesteffectArgs = {
  where: Pokemon_V2_Supercontesteffect_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Supercontesteffect_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_SupercontesteffectflavortextArgs = {
  where: Pokemon_V2_Supercontesteffectflavortext_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Supercontesteffectflavortext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_TypeArgs = {
  where: Pokemon_V2_Type_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Type_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_TypeefficacyArgs = {
  where: Pokemon_V2_Typeefficacy_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Typeefficacy_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_TypeefficacypastArgs = {
  where: Pokemon_V2_Typeefficacypast_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Typeefficacypast_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_TypegameindexArgs = {
  where: Pokemon_V2_Typegameindex_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Typegameindex_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_TypenameArgs = {
  where: Pokemon_V2_Typename_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Typename_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_VersionArgs = {
  where: Pokemon_V2_Version_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Version_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_VersiongroupArgs = {
  where: Pokemon_V2_Versiongroup_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Versiongroup_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_VersiongroupmovelearnmethodArgs = {
  where: Pokemon_V2_Versiongroupmovelearnmethod_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Versiongroupmovelearnmethod_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_VersiongroupregionArgs = {
  where: Pokemon_V2_Versiongroupregion_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Versiongroupregion_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_VersionnameArgs = {
  where: Pokemon_V2_Versionname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pokemon_V2_Versionname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootInsert_Auth_GroupArgs = {
  objects: Array<Auth_Group_Insert_Input>;
  on_conflict?: InputMaybe<Auth_Group_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Auth_Group_OneArgs = {
  object: Auth_Group_Insert_Input;
  on_conflict?: InputMaybe<Auth_Group_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Auth_Group_PermissionsArgs = {
  objects: Array<Auth_Group_Permissions_Insert_Input>;
  on_conflict?: InputMaybe<Auth_Group_Permissions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Auth_Group_Permissions_OneArgs = {
  object: Auth_Group_Permissions_Insert_Input;
  on_conflict?: InputMaybe<Auth_Group_Permissions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Auth_PermissionArgs = {
  objects: Array<Auth_Permission_Insert_Input>;
  on_conflict?: InputMaybe<Auth_Permission_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Auth_Permission_OneArgs = {
  object: Auth_Permission_Insert_Input;
  on_conflict?: InputMaybe<Auth_Permission_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Auth_UserArgs = {
  objects: Array<Auth_User_Insert_Input>;
  on_conflict?: InputMaybe<Auth_User_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Auth_User_GroupsArgs = {
  objects: Array<Auth_User_Groups_Insert_Input>;
  on_conflict?: InputMaybe<Auth_User_Groups_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Auth_User_Groups_OneArgs = {
  object: Auth_User_Groups_Insert_Input;
  on_conflict?: InputMaybe<Auth_User_Groups_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Auth_User_OneArgs = {
  object: Auth_User_Insert_Input;
  on_conflict?: InputMaybe<Auth_User_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Auth_User_User_PermissionsArgs = {
  objects: Array<Auth_User_User_Permissions_Insert_Input>;
  on_conflict?: InputMaybe<Auth_User_User_Permissions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Auth_User_User_Permissions_OneArgs = {
  object: Auth_User_User_Permissions_Insert_Input;
  on_conflict?: InputMaybe<Auth_User_User_Permissions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Django_Admin_LogArgs = {
  objects: Array<Django_Admin_Log_Insert_Input>;
  on_conflict?: InputMaybe<Django_Admin_Log_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Django_Admin_Log_OneArgs = {
  object: Django_Admin_Log_Insert_Input;
  on_conflict?: InputMaybe<Django_Admin_Log_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Django_Content_TypeArgs = {
  objects: Array<Django_Content_Type_Insert_Input>;
  on_conflict?: InputMaybe<Django_Content_Type_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Django_Content_Type_OneArgs = {
  object: Django_Content_Type_Insert_Input;
  on_conflict?: InputMaybe<Django_Content_Type_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Django_MigrationsArgs = {
  objects: Array<Django_Migrations_Insert_Input>;
  on_conflict?: InputMaybe<Django_Migrations_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Django_Migrations_OneArgs = {
  object: Django_Migrations_Insert_Input;
  on_conflict?: InputMaybe<Django_Migrations_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Django_SessionArgs = {
  objects: Array<Django_Session_Insert_Input>;
  on_conflict?: InputMaybe<Django_Session_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Django_Session_OneArgs = {
  object: Django_Session_Insert_Input;
  on_conflict?: InputMaybe<Django_Session_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Django_SiteArgs = {
  objects: Array<Django_Site_Insert_Input>;
  on_conflict?: InputMaybe<Django_Site_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Django_Site_OneArgs = {
  object: Django_Site_Insert_Input;
  on_conflict?: InputMaybe<Django_Site_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_AbilityArgs = {
  objects: Array<Pokemon_V2_Ability_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Ability_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Ability_OneArgs = {
  object: Pokemon_V2_Ability_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Ability_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_AbilitychangeArgs = {
  objects: Array<Pokemon_V2_Abilitychange_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Abilitychange_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Abilitychange_OneArgs = {
  object: Pokemon_V2_Abilitychange_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Abilitychange_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_AbilitychangeeffecttextArgs = {
  objects: Array<Pokemon_V2_Abilitychangeeffecttext_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Abilitychangeeffecttext_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Abilitychangeeffecttext_OneArgs = {
  object: Pokemon_V2_Abilitychangeeffecttext_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Abilitychangeeffecttext_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_AbilityeffecttextArgs = {
  objects: Array<Pokemon_V2_Abilityeffecttext_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Abilityeffecttext_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Abilityeffecttext_OneArgs = {
  object: Pokemon_V2_Abilityeffecttext_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Abilityeffecttext_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_AbilityflavortextArgs = {
  objects: Array<Pokemon_V2_Abilityflavortext_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Abilityflavortext_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Abilityflavortext_OneArgs = {
  object: Pokemon_V2_Abilityflavortext_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Abilityflavortext_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_AbilitynameArgs = {
  objects: Array<Pokemon_V2_Abilityname_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Abilityname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Abilityname_OneArgs = {
  object: Pokemon_V2_Abilityname_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Abilityname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_BerryArgs = {
  objects: Array<Pokemon_V2_Berry_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Berry_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Berry_OneArgs = {
  object: Pokemon_V2_Berry_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Berry_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_BerryfirmnessArgs = {
  objects: Array<Pokemon_V2_Berryfirmness_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Berryfirmness_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Berryfirmness_OneArgs = {
  object: Pokemon_V2_Berryfirmness_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Berryfirmness_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_BerryfirmnessnameArgs = {
  objects: Array<Pokemon_V2_Berryfirmnessname_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Berryfirmnessname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Berryfirmnessname_OneArgs = {
  object: Pokemon_V2_Berryfirmnessname_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Berryfirmnessname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_BerryflavorArgs = {
  objects: Array<Pokemon_V2_Berryflavor_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Berryflavor_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Berryflavor_OneArgs = {
  object: Pokemon_V2_Berryflavor_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Berryflavor_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_BerryflavormapArgs = {
  objects: Array<Pokemon_V2_Berryflavormap_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Berryflavormap_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Berryflavormap_OneArgs = {
  object: Pokemon_V2_Berryflavormap_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Berryflavormap_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_BerryflavornameArgs = {
  objects: Array<Pokemon_V2_Berryflavorname_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Berryflavorname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Berryflavorname_OneArgs = {
  object: Pokemon_V2_Berryflavorname_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Berryflavorname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_CharacteristicArgs = {
  objects: Array<Pokemon_V2_Characteristic_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Characteristic_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Characteristic_OneArgs = {
  object: Pokemon_V2_Characteristic_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Characteristic_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_CharacteristicdescriptionArgs = {
  objects: Array<Pokemon_V2_Characteristicdescription_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Characteristicdescription_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Characteristicdescription_OneArgs = {
  object: Pokemon_V2_Characteristicdescription_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Characteristicdescription_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_ContestcomboArgs = {
  objects: Array<Pokemon_V2_Contestcombo_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Contestcombo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Contestcombo_OneArgs = {
  object: Pokemon_V2_Contestcombo_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Contestcombo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_ContesteffectArgs = {
  objects: Array<Pokemon_V2_Contesteffect_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Contesteffect_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Contesteffect_OneArgs = {
  object: Pokemon_V2_Contesteffect_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Contesteffect_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_ContesteffecteffecttextArgs = {
  objects: Array<Pokemon_V2_Contesteffecteffecttext_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Contesteffecteffecttext_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Contesteffecteffecttext_OneArgs = {
  object: Pokemon_V2_Contesteffecteffecttext_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Contesteffecteffecttext_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_ContesteffectflavortextArgs = {
  objects: Array<Pokemon_V2_Contesteffectflavortext_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Contesteffectflavortext_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Contesteffectflavortext_OneArgs = {
  object: Pokemon_V2_Contesteffectflavortext_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Contesteffectflavortext_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_ContesttypeArgs = {
  objects: Array<Pokemon_V2_Contesttype_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Contesttype_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Contesttype_OneArgs = {
  object: Pokemon_V2_Contesttype_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Contesttype_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_ContesttypenameArgs = {
  objects: Array<Pokemon_V2_Contesttypename_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Contesttypename_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Contesttypename_OneArgs = {
  object: Pokemon_V2_Contesttypename_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Contesttypename_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_EgggroupArgs = {
  objects: Array<Pokemon_V2_Egggroup_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Egggroup_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Egggroup_OneArgs = {
  object: Pokemon_V2_Egggroup_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Egggroup_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_EgggroupnameArgs = {
  objects: Array<Pokemon_V2_Egggroupname_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Egggroupname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Egggroupname_OneArgs = {
  object: Pokemon_V2_Egggroupname_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Egggroupname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_EncounterArgs = {
  objects: Array<Pokemon_V2_Encounter_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Encounter_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Encounter_OneArgs = {
  object: Pokemon_V2_Encounter_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Encounter_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_EncounterconditionArgs = {
  objects: Array<Pokemon_V2_Encountercondition_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Encountercondition_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Encountercondition_OneArgs = {
  object: Pokemon_V2_Encountercondition_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Encountercondition_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_EncounterconditionnameArgs = {
  objects: Array<Pokemon_V2_Encounterconditionname_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Encounterconditionname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Encounterconditionname_OneArgs = {
  object: Pokemon_V2_Encounterconditionname_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Encounterconditionname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_EncounterconditionvalueArgs = {
  objects: Array<Pokemon_V2_Encounterconditionvalue_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Encounterconditionvalue_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Encounterconditionvalue_OneArgs = {
  object: Pokemon_V2_Encounterconditionvalue_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Encounterconditionvalue_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_EncounterconditionvaluemapArgs = {
  objects: Array<Pokemon_V2_Encounterconditionvaluemap_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Encounterconditionvaluemap_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Encounterconditionvaluemap_OneArgs = {
  object: Pokemon_V2_Encounterconditionvaluemap_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Encounterconditionvaluemap_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_EncounterconditionvaluenameArgs = {
  objects: Array<Pokemon_V2_Encounterconditionvaluename_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Encounterconditionvaluename_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Encounterconditionvaluename_OneArgs = {
  object: Pokemon_V2_Encounterconditionvaluename_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Encounterconditionvaluename_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_EncountermethodArgs = {
  objects: Array<Pokemon_V2_Encountermethod_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Encountermethod_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Encountermethod_OneArgs = {
  object: Pokemon_V2_Encountermethod_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Encountermethod_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_EncountermethodnameArgs = {
  objects: Array<Pokemon_V2_Encountermethodname_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Encountermethodname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Encountermethodname_OneArgs = {
  object: Pokemon_V2_Encountermethodname_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Encountermethodname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_EncounterslotArgs = {
  objects: Array<Pokemon_V2_Encounterslot_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Encounterslot_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Encounterslot_OneArgs = {
  object: Pokemon_V2_Encounterslot_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Encounterslot_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_EvolutionchainArgs = {
  objects: Array<Pokemon_V2_Evolutionchain_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Evolutionchain_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Evolutionchain_OneArgs = {
  object: Pokemon_V2_Evolutionchain_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Evolutionchain_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_EvolutiontriggerArgs = {
  objects: Array<Pokemon_V2_Evolutiontrigger_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Evolutiontrigger_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Evolutiontrigger_OneArgs = {
  object: Pokemon_V2_Evolutiontrigger_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Evolutiontrigger_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_EvolutiontriggernameArgs = {
  objects: Array<Pokemon_V2_Evolutiontriggername_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Evolutiontriggername_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Evolutiontriggername_OneArgs = {
  object: Pokemon_V2_Evolutiontriggername_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Evolutiontriggername_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_ExperienceArgs = {
  objects: Array<Pokemon_V2_Experience_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Experience_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Experience_OneArgs = {
  object: Pokemon_V2_Experience_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Experience_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_GenderArgs = {
  objects: Array<Pokemon_V2_Gender_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Gender_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Gender_OneArgs = {
  object: Pokemon_V2_Gender_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Gender_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_GenerationArgs = {
  objects: Array<Pokemon_V2_Generation_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Generation_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Generation_OneArgs = {
  object: Pokemon_V2_Generation_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Generation_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_GenerationnameArgs = {
  objects: Array<Pokemon_V2_Generationname_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Generationname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Generationname_OneArgs = {
  object: Pokemon_V2_Generationname_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Generationname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_GrowthrateArgs = {
  objects: Array<Pokemon_V2_Growthrate_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Growthrate_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Growthrate_OneArgs = {
  object: Pokemon_V2_Growthrate_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Growthrate_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_GrowthratedescriptionArgs = {
  objects: Array<Pokemon_V2_Growthratedescription_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Growthratedescription_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Growthratedescription_OneArgs = {
  object: Pokemon_V2_Growthratedescription_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Growthratedescription_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_ItemArgs = {
  objects: Array<Pokemon_V2_Item_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Item_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Item_OneArgs = {
  object: Pokemon_V2_Item_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Item_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_ItemattributeArgs = {
  objects: Array<Pokemon_V2_Itemattribute_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Itemattribute_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Itemattribute_OneArgs = {
  object: Pokemon_V2_Itemattribute_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Itemattribute_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_ItemattributedescriptionArgs = {
  objects: Array<Pokemon_V2_Itemattributedescription_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Itemattributedescription_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Itemattributedescription_OneArgs = {
  object: Pokemon_V2_Itemattributedescription_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Itemattributedescription_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_ItemattributemapArgs = {
  objects: Array<Pokemon_V2_Itemattributemap_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Itemattributemap_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Itemattributemap_OneArgs = {
  object: Pokemon_V2_Itemattributemap_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Itemattributemap_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_ItemattributenameArgs = {
  objects: Array<Pokemon_V2_Itemattributename_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Itemattributename_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Itemattributename_OneArgs = {
  object: Pokemon_V2_Itemattributename_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Itemattributename_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_ItemcategoryArgs = {
  objects: Array<Pokemon_V2_Itemcategory_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Itemcategory_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Itemcategory_OneArgs = {
  object: Pokemon_V2_Itemcategory_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Itemcategory_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_ItemcategorynameArgs = {
  objects: Array<Pokemon_V2_Itemcategoryname_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Itemcategoryname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Itemcategoryname_OneArgs = {
  object: Pokemon_V2_Itemcategoryname_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Itemcategoryname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_ItemeffecttextArgs = {
  objects: Array<Pokemon_V2_Itemeffecttext_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Itemeffecttext_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Itemeffecttext_OneArgs = {
  object: Pokemon_V2_Itemeffecttext_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Itemeffecttext_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_ItemflavortextArgs = {
  objects: Array<Pokemon_V2_Itemflavortext_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Itemflavortext_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Itemflavortext_OneArgs = {
  object: Pokemon_V2_Itemflavortext_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Itemflavortext_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_ItemflingeffectArgs = {
  objects: Array<Pokemon_V2_Itemflingeffect_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Itemflingeffect_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Itemflingeffect_OneArgs = {
  object: Pokemon_V2_Itemflingeffect_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Itemflingeffect_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_ItemflingeffecteffecttextArgs = {
  objects: Array<Pokemon_V2_Itemflingeffecteffecttext_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Itemflingeffecteffecttext_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Itemflingeffecteffecttext_OneArgs = {
  object: Pokemon_V2_Itemflingeffecteffecttext_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Itemflingeffecteffecttext_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_ItemgameindexArgs = {
  objects: Array<Pokemon_V2_Itemgameindex_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Itemgameindex_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Itemgameindex_OneArgs = {
  object: Pokemon_V2_Itemgameindex_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Itemgameindex_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_ItemnameArgs = {
  objects: Array<Pokemon_V2_Itemname_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Itemname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Itemname_OneArgs = {
  object: Pokemon_V2_Itemname_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Itemname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_ItempocketArgs = {
  objects: Array<Pokemon_V2_Itempocket_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Itempocket_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Itempocket_OneArgs = {
  object: Pokemon_V2_Itempocket_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Itempocket_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_ItempocketnameArgs = {
  objects: Array<Pokemon_V2_Itempocketname_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Itempocketname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Itempocketname_OneArgs = {
  object: Pokemon_V2_Itempocketname_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Itempocketname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_ItemspritesArgs = {
  objects: Array<Pokemon_V2_Itemsprites_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Itemsprites_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Itemsprites_OneArgs = {
  object: Pokemon_V2_Itemsprites_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Itemsprites_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_LanguageArgs = {
  objects: Array<Pokemon_V2_Language_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Language_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Language_OneArgs = {
  object: Pokemon_V2_Language_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Language_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_LanguagenameArgs = {
  objects: Array<Pokemon_V2_Languagename_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Languagename_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Languagename_OneArgs = {
  object: Pokemon_V2_Languagename_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Languagename_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_LocationArgs = {
  objects: Array<Pokemon_V2_Location_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Location_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Location_OneArgs = {
  object: Pokemon_V2_Location_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Location_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_LocationareaArgs = {
  objects: Array<Pokemon_V2_Locationarea_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Locationarea_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Locationarea_OneArgs = {
  object: Pokemon_V2_Locationarea_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Locationarea_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_LocationareaencounterrateArgs = {
  objects: Array<Pokemon_V2_Locationareaencounterrate_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Locationareaencounterrate_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Locationareaencounterrate_OneArgs = {
  object: Pokemon_V2_Locationareaencounterrate_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Locationareaencounterrate_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_LocationareanameArgs = {
  objects: Array<Pokemon_V2_Locationareaname_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Locationareaname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Locationareaname_OneArgs = {
  object: Pokemon_V2_Locationareaname_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Locationareaname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_LocationgameindexArgs = {
  objects: Array<Pokemon_V2_Locationgameindex_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Locationgameindex_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Locationgameindex_OneArgs = {
  object: Pokemon_V2_Locationgameindex_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Locationgameindex_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_LocationnameArgs = {
  objects: Array<Pokemon_V2_Locationname_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Locationname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Locationname_OneArgs = {
  object: Pokemon_V2_Locationname_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Locationname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_MachineArgs = {
  objects: Array<Pokemon_V2_Machine_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Machine_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Machine_OneArgs = {
  object: Pokemon_V2_Machine_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Machine_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_MoveArgs = {
  objects: Array<Pokemon_V2_Move_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Move_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Move_OneArgs = {
  object: Pokemon_V2_Move_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Move_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_MoveattributeArgs = {
  objects: Array<Pokemon_V2_Moveattribute_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Moveattribute_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Moveattribute_OneArgs = {
  object: Pokemon_V2_Moveattribute_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Moveattribute_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_MoveattributedescriptionArgs = {
  objects: Array<Pokemon_V2_Moveattributedescription_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Moveattributedescription_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Moveattributedescription_OneArgs = {
  object: Pokemon_V2_Moveattributedescription_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Moveattributedescription_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_MoveattributemapArgs = {
  objects: Array<Pokemon_V2_Moveattributemap_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Moveattributemap_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Moveattributemap_OneArgs = {
  object: Pokemon_V2_Moveattributemap_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Moveattributemap_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_MoveattributenameArgs = {
  objects: Array<Pokemon_V2_Moveattributename_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Moveattributename_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Moveattributename_OneArgs = {
  object: Pokemon_V2_Moveattributename_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Moveattributename_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_MovebattlestyleArgs = {
  objects: Array<Pokemon_V2_Movebattlestyle_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Movebattlestyle_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Movebattlestyle_OneArgs = {
  object: Pokemon_V2_Movebattlestyle_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Movebattlestyle_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_MovebattlestylenameArgs = {
  objects: Array<Pokemon_V2_Movebattlestylename_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Movebattlestylename_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Movebattlestylename_OneArgs = {
  object: Pokemon_V2_Movebattlestylename_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Movebattlestylename_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_MovechangeArgs = {
  objects: Array<Pokemon_V2_Movechange_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Movechange_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Movechange_OneArgs = {
  object: Pokemon_V2_Movechange_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Movechange_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_MovedamageclassArgs = {
  objects: Array<Pokemon_V2_Movedamageclass_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Movedamageclass_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Movedamageclass_OneArgs = {
  object: Pokemon_V2_Movedamageclass_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Movedamageclass_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_MovedamageclassdescriptionArgs = {
  objects: Array<Pokemon_V2_Movedamageclassdescription_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Movedamageclassdescription_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Movedamageclassdescription_OneArgs = {
  object: Pokemon_V2_Movedamageclassdescription_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Movedamageclassdescription_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_MovedamageclassnameArgs = {
  objects: Array<Pokemon_V2_Movedamageclassname_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Movedamageclassname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Movedamageclassname_OneArgs = {
  object: Pokemon_V2_Movedamageclassname_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Movedamageclassname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_MoveeffectArgs = {
  objects: Array<Pokemon_V2_Moveeffect_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Moveeffect_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Moveeffect_OneArgs = {
  object: Pokemon_V2_Moveeffect_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Moveeffect_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_MoveeffectchangeArgs = {
  objects: Array<Pokemon_V2_Moveeffectchange_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Moveeffectchange_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Moveeffectchange_OneArgs = {
  object: Pokemon_V2_Moveeffectchange_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Moveeffectchange_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_MoveeffectchangeeffecttextArgs = {
  objects: Array<Pokemon_V2_Moveeffectchangeeffecttext_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Moveeffectchangeeffecttext_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Moveeffectchangeeffecttext_OneArgs = {
  object: Pokemon_V2_Moveeffectchangeeffecttext_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Moveeffectchangeeffecttext_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_MoveeffecteffecttextArgs = {
  objects: Array<Pokemon_V2_Moveeffecteffecttext_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Moveeffecteffecttext_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Moveeffecteffecttext_OneArgs = {
  object: Pokemon_V2_Moveeffecteffecttext_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Moveeffecteffecttext_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_MoveflavortextArgs = {
  objects: Array<Pokemon_V2_Moveflavortext_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Moveflavortext_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Moveflavortext_OneArgs = {
  object: Pokemon_V2_Moveflavortext_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Moveflavortext_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_MovelearnmethodArgs = {
  objects: Array<Pokemon_V2_Movelearnmethod_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Movelearnmethod_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Movelearnmethod_OneArgs = {
  object: Pokemon_V2_Movelearnmethod_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Movelearnmethod_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_MovelearnmethoddescriptionArgs = {
  objects: Array<Pokemon_V2_Movelearnmethoddescription_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Movelearnmethoddescription_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Movelearnmethoddescription_OneArgs = {
  object: Pokemon_V2_Movelearnmethoddescription_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Movelearnmethoddescription_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_MovelearnmethodnameArgs = {
  objects: Array<Pokemon_V2_Movelearnmethodname_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Movelearnmethodname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Movelearnmethodname_OneArgs = {
  object: Pokemon_V2_Movelearnmethodname_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Movelearnmethodname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_MovemetaArgs = {
  objects: Array<Pokemon_V2_Movemeta_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Movemeta_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Movemeta_OneArgs = {
  object: Pokemon_V2_Movemeta_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Movemeta_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_MovemetaailmentArgs = {
  objects: Array<Pokemon_V2_Movemetaailment_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Movemetaailment_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Movemetaailment_OneArgs = {
  object: Pokemon_V2_Movemetaailment_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Movemetaailment_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_MovemetaailmentnameArgs = {
  objects: Array<Pokemon_V2_Movemetaailmentname_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Movemetaailmentname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Movemetaailmentname_OneArgs = {
  object: Pokemon_V2_Movemetaailmentname_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Movemetaailmentname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_MovemetacategoryArgs = {
  objects: Array<Pokemon_V2_Movemetacategory_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Movemetacategory_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Movemetacategory_OneArgs = {
  object: Pokemon_V2_Movemetacategory_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Movemetacategory_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_MovemetacategorydescriptionArgs = {
  objects: Array<Pokemon_V2_Movemetacategorydescription_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Movemetacategorydescription_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Movemetacategorydescription_OneArgs = {
  object: Pokemon_V2_Movemetacategorydescription_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Movemetacategorydescription_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_MovemetastatchangeArgs = {
  objects: Array<Pokemon_V2_Movemetastatchange_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Movemetastatchange_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Movemetastatchange_OneArgs = {
  object: Pokemon_V2_Movemetastatchange_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Movemetastatchange_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_MovenameArgs = {
  objects: Array<Pokemon_V2_Movename_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Movename_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Movename_OneArgs = {
  object: Pokemon_V2_Movename_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Movename_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_MovetargetArgs = {
  objects: Array<Pokemon_V2_Movetarget_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Movetarget_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Movetarget_OneArgs = {
  object: Pokemon_V2_Movetarget_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Movetarget_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_MovetargetdescriptionArgs = {
  objects: Array<Pokemon_V2_Movetargetdescription_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Movetargetdescription_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Movetargetdescription_OneArgs = {
  object: Pokemon_V2_Movetargetdescription_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Movetargetdescription_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_MovetargetnameArgs = {
  objects: Array<Pokemon_V2_Movetargetname_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Movetargetname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Movetargetname_OneArgs = {
  object: Pokemon_V2_Movetargetname_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Movetargetname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_NatureArgs = {
  objects: Array<Pokemon_V2_Nature_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Nature_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Nature_OneArgs = {
  object: Pokemon_V2_Nature_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Nature_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_NaturebattlestylepreferenceArgs = {
  objects: Array<Pokemon_V2_Naturebattlestylepreference_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Naturebattlestylepreference_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Naturebattlestylepreference_OneArgs = {
  object: Pokemon_V2_Naturebattlestylepreference_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Naturebattlestylepreference_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_NaturenameArgs = {
  objects: Array<Pokemon_V2_Naturename_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Naturename_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Naturename_OneArgs = {
  object: Pokemon_V2_Naturename_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Naturename_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_NaturepokeathlonstatArgs = {
  objects: Array<Pokemon_V2_Naturepokeathlonstat_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Naturepokeathlonstat_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Naturepokeathlonstat_OneArgs = {
  object: Pokemon_V2_Naturepokeathlonstat_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Naturepokeathlonstat_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PalparkArgs = {
  objects: Array<Pokemon_V2_Palpark_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Palpark_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Palpark_OneArgs = {
  object: Pokemon_V2_Palpark_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Palpark_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PalparkareaArgs = {
  objects: Array<Pokemon_V2_Palparkarea_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Palparkarea_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Palparkarea_OneArgs = {
  object: Pokemon_V2_Palparkarea_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Palparkarea_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PalparkareanameArgs = {
  objects: Array<Pokemon_V2_Palparkareaname_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Palparkareaname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Palparkareaname_OneArgs = {
  object: Pokemon_V2_Palparkareaname_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Palparkareaname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PokeathlonstatArgs = {
  objects: Array<Pokemon_V2_Pokeathlonstat_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Pokeathlonstat_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Pokeathlonstat_OneArgs = {
  object: Pokemon_V2_Pokeathlonstat_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Pokeathlonstat_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PokeathlonstatnameArgs = {
  objects: Array<Pokemon_V2_Pokeathlonstatname_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Pokeathlonstatname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Pokeathlonstatname_OneArgs = {
  object: Pokemon_V2_Pokeathlonstatname_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Pokeathlonstatname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PokedexArgs = {
  objects: Array<Pokemon_V2_Pokedex_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Pokedex_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Pokedex_OneArgs = {
  object: Pokemon_V2_Pokedex_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Pokedex_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PokedexdescriptionArgs = {
  objects: Array<Pokemon_V2_Pokedexdescription_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Pokedexdescription_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Pokedexdescription_OneArgs = {
  object: Pokemon_V2_Pokedexdescription_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Pokedexdescription_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PokedexnameArgs = {
  objects: Array<Pokemon_V2_Pokedexname_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Pokedexname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Pokedexname_OneArgs = {
  object: Pokemon_V2_Pokedexname_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Pokedexname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PokedexversiongroupArgs = {
  objects: Array<Pokemon_V2_Pokedexversiongroup_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Pokedexversiongroup_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Pokedexversiongroup_OneArgs = {
  object: Pokemon_V2_Pokedexversiongroup_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Pokedexversiongroup_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PokemonArgs = {
  objects: Array<Pokemon_V2_Pokemon_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemon_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Pokemon_OneArgs = {
  object: Pokemon_V2_Pokemon_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemon_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PokemonabilityArgs = {
  objects: Array<Pokemon_V2_Pokemonability_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonability_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Pokemonability_OneArgs = {
  object: Pokemon_V2_Pokemonability_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonability_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PokemonabilitypastArgs = {
  objects: Array<Pokemon_V2_Pokemonabilitypast_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonabilitypast_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Pokemonabilitypast_OneArgs = {
  object: Pokemon_V2_Pokemonabilitypast_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonabilitypast_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PokemoncolorArgs = {
  objects: Array<Pokemon_V2_Pokemoncolor_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemoncolor_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Pokemoncolor_OneArgs = {
  object: Pokemon_V2_Pokemoncolor_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemoncolor_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PokemoncolornameArgs = {
  objects: Array<Pokemon_V2_Pokemoncolorname_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemoncolorname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Pokemoncolorname_OneArgs = {
  object: Pokemon_V2_Pokemoncolorname_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemoncolorname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PokemoncriesArgs = {
  objects: Array<Pokemon_V2_Pokemoncries_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemoncries_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Pokemoncries_OneArgs = {
  object: Pokemon_V2_Pokemoncries_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemoncries_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PokemondexnumberArgs = {
  objects: Array<Pokemon_V2_Pokemondexnumber_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemondexnumber_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Pokemondexnumber_OneArgs = {
  object: Pokemon_V2_Pokemondexnumber_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemondexnumber_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PokemonegggroupArgs = {
  objects: Array<Pokemon_V2_Pokemonegggroup_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonegggroup_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Pokemonegggroup_OneArgs = {
  object: Pokemon_V2_Pokemonegggroup_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonegggroup_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PokemonevolutionArgs = {
  objects: Array<Pokemon_V2_Pokemonevolution_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonevolution_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Pokemonevolution_OneArgs = {
  object: Pokemon_V2_Pokemonevolution_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonevolution_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PokemonformArgs = {
  objects: Array<Pokemon_V2_Pokemonform_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonform_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Pokemonform_OneArgs = {
  object: Pokemon_V2_Pokemonform_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonform_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PokemonformgenerationArgs = {
  objects: Array<Pokemon_V2_Pokemonformgeneration_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonformgeneration_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Pokemonformgeneration_OneArgs = {
  object: Pokemon_V2_Pokemonformgeneration_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonformgeneration_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PokemonformnameArgs = {
  objects: Array<Pokemon_V2_Pokemonformname_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonformname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Pokemonformname_OneArgs = {
  object: Pokemon_V2_Pokemonformname_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonformname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PokemonformspritesArgs = {
  objects: Array<Pokemon_V2_Pokemonformsprites_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonformsprites_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Pokemonformsprites_OneArgs = {
  object: Pokemon_V2_Pokemonformsprites_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonformsprites_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PokemonformtypeArgs = {
  objects: Array<Pokemon_V2_Pokemonformtype_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonformtype_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Pokemonformtype_OneArgs = {
  object: Pokemon_V2_Pokemonformtype_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonformtype_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PokemongameindexArgs = {
  objects: Array<Pokemon_V2_Pokemongameindex_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemongameindex_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Pokemongameindex_OneArgs = {
  object: Pokemon_V2_Pokemongameindex_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemongameindex_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PokemonhabitatArgs = {
  objects: Array<Pokemon_V2_Pokemonhabitat_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonhabitat_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Pokemonhabitat_OneArgs = {
  object: Pokemon_V2_Pokemonhabitat_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonhabitat_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PokemonhabitatnameArgs = {
  objects: Array<Pokemon_V2_Pokemonhabitatname_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonhabitatname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Pokemonhabitatname_OneArgs = {
  object: Pokemon_V2_Pokemonhabitatname_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonhabitatname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PokemonitemArgs = {
  objects: Array<Pokemon_V2_Pokemonitem_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonitem_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Pokemonitem_OneArgs = {
  object: Pokemon_V2_Pokemonitem_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonitem_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PokemonmoveArgs = {
  objects: Array<Pokemon_V2_Pokemonmove_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonmove_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Pokemonmove_OneArgs = {
  object: Pokemon_V2_Pokemonmove_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonmove_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PokemonshapeArgs = {
  objects: Array<Pokemon_V2_Pokemonshape_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonshape_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Pokemonshape_OneArgs = {
  object: Pokemon_V2_Pokemonshape_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonshape_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PokemonshapenameArgs = {
  objects: Array<Pokemon_V2_Pokemonshapename_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonshapename_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Pokemonshapename_OneArgs = {
  object: Pokemon_V2_Pokemonshapename_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonshapename_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PokemonspeciesArgs = {
  objects: Array<Pokemon_V2_Pokemonspecies_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonspecies_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Pokemonspecies_OneArgs = {
  object: Pokemon_V2_Pokemonspecies_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonspecies_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PokemonspeciesdescriptionArgs = {
  objects: Array<Pokemon_V2_Pokemonspeciesdescription_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonspeciesdescription_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Pokemonspeciesdescription_OneArgs = {
  object: Pokemon_V2_Pokemonspeciesdescription_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonspeciesdescription_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PokemonspeciesflavortextArgs = {
  objects: Array<Pokemon_V2_Pokemonspeciesflavortext_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonspeciesflavortext_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Pokemonspeciesflavortext_OneArgs = {
  object: Pokemon_V2_Pokemonspeciesflavortext_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonspeciesflavortext_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PokemonspeciesnameArgs = {
  objects: Array<Pokemon_V2_Pokemonspeciesname_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonspeciesname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Pokemonspeciesname_OneArgs = {
  object: Pokemon_V2_Pokemonspeciesname_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonspeciesname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PokemonspritesArgs = {
  objects: Array<Pokemon_V2_Pokemonsprites_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonsprites_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Pokemonsprites_OneArgs = {
  object: Pokemon_V2_Pokemonsprites_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonsprites_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PokemonstatArgs = {
  objects: Array<Pokemon_V2_Pokemonstat_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonstat_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Pokemonstat_OneArgs = {
  object: Pokemon_V2_Pokemonstat_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemonstat_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PokemontypeArgs = {
  objects: Array<Pokemon_V2_Pokemontype_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemontype_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Pokemontype_OneArgs = {
  object: Pokemon_V2_Pokemontype_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemontype_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_PokemontypepastArgs = {
  objects: Array<Pokemon_V2_Pokemontypepast_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemontypepast_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Pokemontypepast_OneArgs = {
  object: Pokemon_V2_Pokemontypepast_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Pokemontypepast_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_RegionArgs = {
  objects: Array<Pokemon_V2_Region_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Region_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Region_OneArgs = {
  object: Pokemon_V2_Region_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Region_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_RegionnameArgs = {
  objects: Array<Pokemon_V2_Regionname_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Regionname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Regionname_OneArgs = {
  object: Pokemon_V2_Regionname_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Regionname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_StatArgs = {
  objects: Array<Pokemon_V2_Stat_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Stat_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Stat_OneArgs = {
  object: Pokemon_V2_Stat_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Stat_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_StatnameArgs = {
  objects: Array<Pokemon_V2_Statname_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Statname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Statname_OneArgs = {
  object: Pokemon_V2_Statname_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Statname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_SupercontestcomboArgs = {
  objects: Array<Pokemon_V2_Supercontestcombo_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Supercontestcombo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Supercontestcombo_OneArgs = {
  object: Pokemon_V2_Supercontestcombo_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Supercontestcombo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_SupercontesteffectArgs = {
  objects: Array<Pokemon_V2_Supercontesteffect_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Supercontesteffect_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Supercontesteffect_OneArgs = {
  object: Pokemon_V2_Supercontesteffect_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Supercontesteffect_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_SupercontesteffectflavortextArgs = {
  objects: Array<Pokemon_V2_Supercontesteffectflavortext_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Supercontesteffectflavortext_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Supercontesteffectflavortext_OneArgs = {
  object: Pokemon_V2_Supercontesteffectflavortext_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Supercontesteffectflavortext_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_TypeArgs = {
  objects: Array<Pokemon_V2_Type_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Type_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Type_OneArgs = {
  object: Pokemon_V2_Type_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Type_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_TypeefficacyArgs = {
  objects: Array<Pokemon_V2_Typeefficacy_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Typeefficacy_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Typeefficacy_OneArgs = {
  object: Pokemon_V2_Typeefficacy_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Typeefficacy_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_TypeefficacypastArgs = {
  objects: Array<Pokemon_V2_Typeefficacypast_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Typeefficacypast_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Typeefficacypast_OneArgs = {
  object: Pokemon_V2_Typeefficacypast_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Typeefficacypast_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_TypegameindexArgs = {
  objects: Array<Pokemon_V2_Typegameindex_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Typegameindex_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Typegameindex_OneArgs = {
  object: Pokemon_V2_Typegameindex_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Typegameindex_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_TypenameArgs = {
  objects: Array<Pokemon_V2_Typename_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Typename_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Typename_OneArgs = {
  object: Pokemon_V2_Typename_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Typename_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_VersionArgs = {
  objects: Array<Pokemon_V2_Version_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Version_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Version_OneArgs = {
  object: Pokemon_V2_Version_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Version_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_VersiongroupArgs = {
  objects: Array<Pokemon_V2_Versiongroup_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Versiongroup_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Versiongroup_OneArgs = {
  object: Pokemon_V2_Versiongroup_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Versiongroup_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_VersiongroupmovelearnmethodArgs = {
  objects: Array<Pokemon_V2_Versiongroupmovelearnmethod_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Versiongroupmovelearnmethod_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Versiongroupmovelearnmethod_OneArgs = {
  object: Pokemon_V2_Versiongroupmovelearnmethod_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Versiongroupmovelearnmethod_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_VersiongroupregionArgs = {
  objects: Array<Pokemon_V2_Versiongroupregion_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Versiongroupregion_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Versiongroupregion_OneArgs = {
  object: Pokemon_V2_Versiongroupregion_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Versiongroupregion_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_VersionnameArgs = {
  objects: Array<Pokemon_V2_Versionname_Insert_Input>;
  on_conflict?: InputMaybe<Pokemon_V2_Versionname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pokemon_V2_Versionname_OneArgs = {
  object: Pokemon_V2_Versionname_Insert_Input;
  on_conflict?: InputMaybe<Pokemon_V2_Versionname_On_Conflict>;
};


/** mutation root */
export type Mutation_RootUpdate_Auth_GroupArgs = {
  _inc?: InputMaybe<Auth_Group_Inc_Input>;
  _set?: InputMaybe<Auth_Group_Set_Input>;
  where: Auth_Group_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Auth_Group_By_PkArgs = {
  _inc?: InputMaybe<Auth_Group_Inc_Input>;
  _set?: InputMaybe<Auth_Group_Set_Input>;
  pk_columns: Auth_Group_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Auth_Group_ManyArgs = {
  updates: Array<Auth_Group_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Auth_Group_PermissionsArgs = {
  _inc?: InputMaybe<Auth_Group_Permissions_Inc_Input>;
  _set?: InputMaybe<Auth_Group_Permissions_Set_Input>;
  where: Auth_Group_Permissions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Auth_Group_Permissions_By_PkArgs = {
  _inc?: InputMaybe<Auth_Group_Permissions_Inc_Input>;
  _set?: InputMaybe<Auth_Group_Permissions_Set_Input>;
  pk_columns: Auth_Group_Permissions_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Auth_Group_Permissions_ManyArgs = {
  updates: Array<Auth_Group_Permissions_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Auth_PermissionArgs = {
  _inc?: InputMaybe<Auth_Permission_Inc_Input>;
  _set?: InputMaybe<Auth_Permission_Set_Input>;
  where: Auth_Permission_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Auth_Permission_By_PkArgs = {
  _inc?: InputMaybe<Auth_Permission_Inc_Input>;
  _set?: InputMaybe<Auth_Permission_Set_Input>;
  pk_columns: Auth_Permission_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Auth_Permission_ManyArgs = {
  updates: Array<Auth_Permission_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Auth_UserArgs = {
  _inc?: InputMaybe<Auth_User_Inc_Input>;
  _set?: InputMaybe<Auth_User_Set_Input>;
  where: Auth_User_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Auth_User_By_PkArgs = {
  _inc?: InputMaybe<Auth_User_Inc_Input>;
  _set?: InputMaybe<Auth_User_Set_Input>;
  pk_columns: Auth_User_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Auth_User_GroupsArgs = {
  _inc?: InputMaybe<Auth_User_Groups_Inc_Input>;
  _set?: InputMaybe<Auth_User_Groups_Set_Input>;
  where: Auth_User_Groups_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Auth_User_Groups_By_PkArgs = {
  _inc?: InputMaybe<Auth_User_Groups_Inc_Input>;
  _set?: InputMaybe<Auth_User_Groups_Set_Input>;
  pk_columns: Auth_User_Groups_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Auth_User_Groups_ManyArgs = {
  updates: Array<Auth_User_Groups_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Auth_User_ManyArgs = {
  updates: Array<Auth_User_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Auth_User_User_PermissionsArgs = {
  _inc?: InputMaybe<Auth_User_User_Permissions_Inc_Input>;
  _set?: InputMaybe<Auth_User_User_Permissions_Set_Input>;
  where: Auth_User_User_Permissions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Auth_User_User_Permissions_By_PkArgs = {
  _inc?: InputMaybe<Auth_User_User_Permissions_Inc_Input>;
  _set?: InputMaybe<Auth_User_User_Permissions_Set_Input>;
  pk_columns: Auth_User_User_Permissions_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Auth_User_User_Permissions_ManyArgs = {
  updates: Array<Auth_User_User_Permissions_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Django_Admin_LogArgs = {
  _inc?: InputMaybe<Django_Admin_Log_Inc_Input>;
  _set?: InputMaybe<Django_Admin_Log_Set_Input>;
  where: Django_Admin_Log_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Django_Admin_Log_By_PkArgs = {
  _inc?: InputMaybe<Django_Admin_Log_Inc_Input>;
  _set?: InputMaybe<Django_Admin_Log_Set_Input>;
  pk_columns: Django_Admin_Log_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Django_Admin_Log_ManyArgs = {
  updates: Array<Django_Admin_Log_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Django_Content_TypeArgs = {
  _inc?: InputMaybe<Django_Content_Type_Inc_Input>;
  _set?: InputMaybe<Django_Content_Type_Set_Input>;
  where: Django_Content_Type_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Django_Content_Type_By_PkArgs = {
  _inc?: InputMaybe<Django_Content_Type_Inc_Input>;
  _set?: InputMaybe<Django_Content_Type_Set_Input>;
  pk_columns: Django_Content_Type_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Django_Content_Type_ManyArgs = {
  updates: Array<Django_Content_Type_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Django_MigrationsArgs = {
  _inc?: InputMaybe<Django_Migrations_Inc_Input>;
  _set?: InputMaybe<Django_Migrations_Set_Input>;
  where: Django_Migrations_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Django_Migrations_By_PkArgs = {
  _inc?: InputMaybe<Django_Migrations_Inc_Input>;
  _set?: InputMaybe<Django_Migrations_Set_Input>;
  pk_columns: Django_Migrations_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Django_Migrations_ManyArgs = {
  updates: Array<Django_Migrations_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Django_SessionArgs = {
  _set?: InputMaybe<Django_Session_Set_Input>;
  where: Django_Session_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Django_Session_By_PkArgs = {
  _set?: InputMaybe<Django_Session_Set_Input>;
  pk_columns: Django_Session_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Django_Session_ManyArgs = {
  updates: Array<Django_Session_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Django_SiteArgs = {
  _inc?: InputMaybe<Django_Site_Inc_Input>;
  _set?: InputMaybe<Django_Site_Set_Input>;
  where: Django_Site_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Django_Site_By_PkArgs = {
  _inc?: InputMaybe<Django_Site_Inc_Input>;
  _set?: InputMaybe<Django_Site_Set_Input>;
  pk_columns: Django_Site_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Django_Site_ManyArgs = {
  updates: Array<Django_Site_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_AbilityArgs = {
  _inc?: InputMaybe<Pokemon_V2_Ability_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Ability_Set_Input>;
  where: Pokemon_V2_Ability_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Ability_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Ability_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Ability_Set_Input>;
  pk_columns: Pokemon_V2_Ability_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Ability_ManyArgs = {
  updates: Array<Pokemon_V2_Ability_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_AbilitychangeArgs = {
  _inc?: InputMaybe<Pokemon_V2_Abilitychange_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Abilitychange_Set_Input>;
  where: Pokemon_V2_Abilitychange_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Abilitychange_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Abilitychange_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Abilitychange_Set_Input>;
  pk_columns: Pokemon_V2_Abilitychange_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Abilitychange_ManyArgs = {
  updates: Array<Pokemon_V2_Abilitychange_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_AbilitychangeeffecttextArgs = {
  _inc?: InputMaybe<Pokemon_V2_Abilitychangeeffecttext_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Abilitychangeeffecttext_Set_Input>;
  where: Pokemon_V2_Abilitychangeeffecttext_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Abilitychangeeffecttext_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Abilitychangeeffecttext_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Abilitychangeeffecttext_Set_Input>;
  pk_columns: Pokemon_V2_Abilitychangeeffecttext_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Abilitychangeeffecttext_ManyArgs = {
  updates: Array<Pokemon_V2_Abilitychangeeffecttext_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_AbilityeffecttextArgs = {
  _inc?: InputMaybe<Pokemon_V2_Abilityeffecttext_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Abilityeffecttext_Set_Input>;
  where: Pokemon_V2_Abilityeffecttext_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Abilityeffecttext_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Abilityeffecttext_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Abilityeffecttext_Set_Input>;
  pk_columns: Pokemon_V2_Abilityeffecttext_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Abilityeffecttext_ManyArgs = {
  updates: Array<Pokemon_V2_Abilityeffecttext_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_AbilityflavortextArgs = {
  _inc?: InputMaybe<Pokemon_V2_Abilityflavortext_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Abilityflavortext_Set_Input>;
  where: Pokemon_V2_Abilityflavortext_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Abilityflavortext_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Abilityflavortext_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Abilityflavortext_Set_Input>;
  pk_columns: Pokemon_V2_Abilityflavortext_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Abilityflavortext_ManyArgs = {
  updates: Array<Pokemon_V2_Abilityflavortext_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_AbilitynameArgs = {
  _inc?: InputMaybe<Pokemon_V2_Abilityname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Abilityname_Set_Input>;
  where: Pokemon_V2_Abilityname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Abilityname_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Abilityname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Abilityname_Set_Input>;
  pk_columns: Pokemon_V2_Abilityname_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Abilityname_ManyArgs = {
  updates: Array<Pokemon_V2_Abilityname_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_BerryArgs = {
  _inc?: InputMaybe<Pokemon_V2_Berry_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Berry_Set_Input>;
  where: Pokemon_V2_Berry_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Berry_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Berry_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Berry_Set_Input>;
  pk_columns: Pokemon_V2_Berry_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Berry_ManyArgs = {
  updates: Array<Pokemon_V2_Berry_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_BerryfirmnessArgs = {
  _inc?: InputMaybe<Pokemon_V2_Berryfirmness_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Berryfirmness_Set_Input>;
  where: Pokemon_V2_Berryfirmness_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Berryfirmness_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Berryfirmness_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Berryfirmness_Set_Input>;
  pk_columns: Pokemon_V2_Berryfirmness_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Berryfirmness_ManyArgs = {
  updates: Array<Pokemon_V2_Berryfirmness_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_BerryfirmnessnameArgs = {
  _inc?: InputMaybe<Pokemon_V2_Berryfirmnessname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Berryfirmnessname_Set_Input>;
  where: Pokemon_V2_Berryfirmnessname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Berryfirmnessname_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Berryfirmnessname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Berryfirmnessname_Set_Input>;
  pk_columns: Pokemon_V2_Berryfirmnessname_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Berryfirmnessname_ManyArgs = {
  updates: Array<Pokemon_V2_Berryfirmnessname_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_BerryflavorArgs = {
  _inc?: InputMaybe<Pokemon_V2_Berryflavor_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Berryflavor_Set_Input>;
  where: Pokemon_V2_Berryflavor_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Berryflavor_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Berryflavor_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Berryflavor_Set_Input>;
  pk_columns: Pokemon_V2_Berryflavor_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Berryflavor_ManyArgs = {
  updates: Array<Pokemon_V2_Berryflavor_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_BerryflavormapArgs = {
  _inc?: InputMaybe<Pokemon_V2_Berryflavormap_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Berryflavormap_Set_Input>;
  where: Pokemon_V2_Berryflavormap_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Berryflavormap_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Berryflavormap_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Berryflavormap_Set_Input>;
  pk_columns: Pokemon_V2_Berryflavormap_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Berryflavormap_ManyArgs = {
  updates: Array<Pokemon_V2_Berryflavormap_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_BerryflavornameArgs = {
  _inc?: InputMaybe<Pokemon_V2_Berryflavorname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Berryflavorname_Set_Input>;
  where: Pokemon_V2_Berryflavorname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Berryflavorname_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Berryflavorname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Berryflavorname_Set_Input>;
  pk_columns: Pokemon_V2_Berryflavorname_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Berryflavorname_ManyArgs = {
  updates: Array<Pokemon_V2_Berryflavorname_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_CharacteristicArgs = {
  _inc?: InputMaybe<Pokemon_V2_Characteristic_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Characteristic_Set_Input>;
  where: Pokemon_V2_Characteristic_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Characteristic_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Characteristic_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Characteristic_Set_Input>;
  pk_columns: Pokemon_V2_Characteristic_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Characteristic_ManyArgs = {
  updates: Array<Pokemon_V2_Characteristic_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_CharacteristicdescriptionArgs = {
  _inc?: InputMaybe<Pokemon_V2_Characteristicdescription_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Characteristicdescription_Set_Input>;
  where: Pokemon_V2_Characteristicdescription_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Characteristicdescription_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Characteristicdescription_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Characteristicdescription_Set_Input>;
  pk_columns: Pokemon_V2_Characteristicdescription_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Characteristicdescription_ManyArgs = {
  updates: Array<Pokemon_V2_Characteristicdescription_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_ContestcomboArgs = {
  _inc?: InputMaybe<Pokemon_V2_Contestcombo_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Contestcombo_Set_Input>;
  where: Pokemon_V2_Contestcombo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Contestcombo_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Contestcombo_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Contestcombo_Set_Input>;
  pk_columns: Pokemon_V2_Contestcombo_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Contestcombo_ManyArgs = {
  updates: Array<Pokemon_V2_Contestcombo_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_ContesteffectArgs = {
  _inc?: InputMaybe<Pokemon_V2_Contesteffect_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Contesteffect_Set_Input>;
  where: Pokemon_V2_Contesteffect_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Contesteffect_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Contesteffect_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Contesteffect_Set_Input>;
  pk_columns: Pokemon_V2_Contesteffect_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Contesteffect_ManyArgs = {
  updates: Array<Pokemon_V2_Contesteffect_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_ContesteffecteffecttextArgs = {
  _inc?: InputMaybe<Pokemon_V2_Contesteffecteffecttext_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Contesteffecteffecttext_Set_Input>;
  where: Pokemon_V2_Contesteffecteffecttext_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Contesteffecteffecttext_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Contesteffecteffecttext_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Contesteffecteffecttext_Set_Input>;
  pk_columns: Pokemon_V2_Contesteffecteffecttext_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Contesteffecteffecttext_ManyArgs = {
  updates: Array<Pokemon_V2_Contesteffecteffecttext_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_ContesteffectflavortextArgs = {
  _inc?: InputMaybe<Pokemon_V2_Contesteffectflavortext_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Contesteffectflavortext_Set_Input>;
  where: Pokemon_V2_Contesteffectflavortext_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Contesteffectflavortext_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Contesteffectflavortext_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Contesteffectflavortext_Set_Input>;
  pk_columns: Pokemon_V2_Contesteffectflavortext_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Contesteffectflavortext_ManyArgs = {
  updates: Array<Pokemon_V2_Contesteffectflavortext_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_ContesttypeArgs = {
  _inc?: InputMaybe<Pokemon_V2_Contesttype_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Contesttype_Set_Input>;
  where: Pokemon_V2_Contesttype_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Contesttype_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Contesttype_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Contesttype_Set_Input>;
  pk_columns: Pokemon_V2_Contesttype_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Contesttype_ManyArgs = {
  updates: Array<Pokemon_V2_Contesttype_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_ContesttypenameArgs = {
  _inc?: InputMaybe<Pokemon_V2_Contesttypename_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Contesttypename_Set_Input>;
  where: Pokemon_V2_Contesttypename_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Contesttypename_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Contesttypename_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Contesttypename_Set_Input>;
  pk_columns: Pokemon_V2_Contesttypename_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Contesttypename_ManyArgs = {
  updates: Array<Pokemon_V2_Contesttypename_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_EgggroupArgs = {
  _inc?: InputMaybe<Pokemon_V2_Egggroup_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Egggroup_Set_Input>;
  where: Pokemon_V2_Egggroup_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Egggroup_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Egggroup_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Egggroup_Set_Input>;
  pk_columns: Pokemon_V2_Egggroup_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Egggroup_ManyArgs = {
  updates: Array<Pokemon_V2_Egggroup_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_EgggroupnameArgs = {
  _inc?: InputMaybe<Pokemon_V2_Egggroupname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Egggroupname_Set_Input>;
  where: Pokemon_V2_Egggroupname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Egggroupname_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Egggroupname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Egggroupname_Set_Input>;
  pk_columns: Pokemon_V2_Egggroupname_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Egggroupname_ManyArgs = {
  updates: Array<Pokemon_V2_Egggroupname_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_EncounterArgs = {
  _inc?: InputMaybe<Pokemon_V2_Encounter_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Encounter_Set_Input>;
  where: Pokemon_V2_Encounter_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Encounter_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Encounter_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Encounter_Set_Input>;
  pk_columns: Pokemon_V2_Encounter_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Encounter_ManyArgs = {
  updates: Array<Pokemon_V2_Encounter_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_EncounterconditionArgs = {
  _inc?: InputMaybe<Pokemon_V2_Encountercondition_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Encountercondition_Set_Input>;
  where: Pokemon_V2_Encountercondition_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Encountercondition_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Encountercondition_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Encountercondition_Set_Input>;
  pk_columns: Pokemon_V2_Encountercondition_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Encountercondition_ManyArgs = {
  updates: Array<Pokemon_V2_Encountercondition_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_EncounterconditionnameArgs = {
  _inc?: InputMaybe<Pokemon_V2_Encounterconditionname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Encounterconditionname_Set_Input>;
  where: Pokemon_V2_Encounterconditionname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Encounterconditionname_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Encounterconditionname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Encounterconditionname_Set_Input>;
  pk_columns: Pokemon_V2_Encounterconditionname_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Encounterconditionname_ManyArgs = {
  updates: Array<Pokemon_V2_Encounterconditionname_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_EncounterconditionvalueArgs = {
  _inc?: InputMaybe<Pokemon_V2_Encounterconditionvalue_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Encounterconditionvalue_Set_Input>;
  where: Pokemon_V2_Encounterconditionvalue_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Encounterconditionvalue_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Encounterconditionvalue_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Encounterconditionvalue_Set_Input>;
  pk_columns: Pokemon_V2_Encounterconditionvalue_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Encounterconditionvalue_ManyArgs = {
  updates: Array<Pokemon_V2_Encounterconditionvalue_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_EncounterconditionvaluemapArgs = {
  _inc?: InputMaybe<Pokemon_V2_Encounterconditionvaluemap_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Encounterconditionvaluemap_Set_Input>;
  where: Pokemon_V2_Encounterconditionvaluemap_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Encounterconditionvaluemap_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Encounterconditionvaluemap_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Encounterconditionvaluemap_Set_Input>;
  pk_columns: Pokemon_V2_Encounterconditionvaluemap_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Encounterconditionvaluemap_ManyArgs = {
  updates: Array<Pokemon_V2_Encounterconditionvaluemap_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_EncounterconditionvaluenameArgs = {
  _inc?: InputMaybe<Pokemon_V2_Encounterconditionvaluename_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Encounterconditionvaluename_Set_Input>;
  where: Pokemon_V2_Encounterconditionvaluename_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Encounterconditionvaluename_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Encounterconditionvaluename_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Encounterconditionvaluename_Set_Input>;
  pk_columns: Pokemon_V2_Encounterconditionvaluename_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Encounterconditionvaluename_ManyArgs = {
  updates: Array<Pokemon_V2_Encounterconditionvaluename_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_EncountermethodArgs = {
  _inc?: InputMaybe<Pokemon_V2_Encountermethod_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Encountermethod_Set_Input>;
  where: Pokemon_V2_Encountermethod_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Encountermethod_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Encountermethod_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Encountermethod_Set_Input>;
  pk_columns: Pokemon_V2_Encountermethod_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Encountermethod_ManyArgs = {
  updates: Array<Pokemon_V2_Encountermethod_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_EncountermethodnameArgs = {
  _inc?: InputMaybe<Pokemon_V2_Encountermethodname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Encountermethodname_Set_Input>;
  where: Pokemon_V2_Encountermethodname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Encountermethodname_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Encountermethodname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Encountermethodname_Set_Input>;
  pk_columns: Pokemon_V2_Encountermethodname_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Encountermethodname_ManyArgs = {
  updates: Array<Pokemon_V2_Encountermethodname_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_EncounterslotArgs = {
  _inc?: InputMaybe<Pokemon_V2_Encounterslot_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Encounterslot_Set_Input>;
  where: Pokemon_V2_Encounterslot_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Encounterslot_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Encounterslot_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Encounterslot_Set_Input>;
  pk_columns: Pokemon_V2_Encounterslot_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Encounterslot_ManyArgs = {
  updates: Array<Pokemon_V2_Encounterslot_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_EvolutionchainArgs = {
  _inc?: InputMaybe<Pokemon_V2_Evolutionchain_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Evolutionchain_Set_Input>;
  where: Pokemon_V2_Evolutionchain_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Evolutionchain_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Evolutionchain_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Evolutionchain_Set_Input>;
  pk_columns: Pokemon_V2_Evolutionchain_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Evolutionchain_ManyArgs = {
  updates: Array<Pokemon_V2_Evolutionchain_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_EvolutiontriggerArgs = {
  _inc?: InputMaybe<Pokemon_V2_Evolutiontrigger_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Evolutiontrigger_Set_Input>;
  where: Pokemon_V2_Evolutiontrigger_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Evolutiontrigger_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Evolutiontrigger_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Evolutiontrigger_Set_Input>;
  pk_columns: Pokemon_V2_Evolutiontrigger_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Evolutiontrigger_ManyArgs = {
  updates: Array<Pokemon_V2_Evolutiontrigger_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_EvolutiontriggernameArgs = {
  _inc?: InputMaybe<Pokemon_V2_Evolutiontriggername_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Evolutiontriggername_Set_Input>;
  where: Pokemon_V2_Evolutiontriggername_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Evolutiontriggername_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Evolutiontriggername_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Evolutiontriggername_Set_Input>;
  pk_columns: Pokemon_V2_Evolutiontriggername_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Evolutiontriggername_ManyArgs = {
  updates: Array<Pokemon_V2_Evolutiontriggername_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_ExperienceArgs = {
  _inc?: InputMaybe<Pokemon_V2_Experience_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Experience_Set_Input>;
  where: Pokemon_V2_Experience_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Experience_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Experience_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Experience_Set_Input>;
  pk_columns: Pokemon_V2_Experience_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Experience_ManyArgs = {
  updates: Array<Pokemon_V2_Experience_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_GenderArgs = {
  _inc?: InputMaybe<Pokemon_V2_Gender_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Gender_Set_Input>;
  where: Pokemon_V2_Gender_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Gender_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Gender_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Gender_Set_Input>;
  pk_columns: Pokemon_V2_Gender_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Gender_ManyArgs = {
  updates: Array<Pokemon_V2_Gender_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_GenerationArgs = {
  _inc?: InputMaybe<Pokemon_V2_Generation_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Generation_Set_Input>;
  where: Pokemon_V2_Generation_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Generation_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Generation_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Generation_Set_Input>;
  pk_columns: Pokemon_V2_Generation_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Generation_ManyArgs = {
  updates: Array<Pokemon_V2_Generation_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_GenerationnameArgs = {
  _inc?: InputMaybe<Pokemon_V2_Generationname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Generationname_Set_Input>;
  where: Pokemon_V2_Generationname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Generationname_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Generationname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Generationname_Set_Input>;
  pk_columns: Pokemon_V2_Generationname_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Generationname_ManyArgs = {
  updates: Array<Pokemon_V2_Generationname_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_GrowthrateArgs = {
  _inc?: InputMaybe<Pokemon_V2_Growthrate_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Growthrate_Set_Input>;
  where: Pokemon_V2_Growthrate_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Growthrate_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Growthrate_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Growthrate_Set_Input>;
  pk_columns: Pokemon_V2_Growthrate_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Growthrate_ManyArgs = {
  updates: Array<Pokemon_V2_Growthrate_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_GrowthratedescriptionArgs = {
  _inc?: InputMaybe<Pokemon_V2_Growthratedescription_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Growthratedescription_Set_Input>;
  where: Pokemon_V2_Growthratedescription_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Growthratedescription_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Growthratedescription_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Growthratedescription_Set_Input>;
  pk_columns: Pokemon_V2_Growthratedescription_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Growthratedescription_ManyArgs = {
  updates: Array<Pokemon_V2_Growthratedescription_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_ItemArgs = {
  _inc?: InputMaybe<Pokemon_V2_Item_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Item_Set_Input>;
  where: Pokemon_V2_Item_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Item_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Item_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Item_Set_Input>;
  pk_columns: Pokemon_V2_Item_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Item_ManyArgs = {
  updates: Array<Pokemon_V2_Item_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_ItemattributeArgs = {
  _inc?: InputMaybe<Pokemon_V2_Itemattribute_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Itemattribute_Set_Input>;
  where: Pokemon_V2_Itemattribute_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Itemattribute_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Itemattribute_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Itemattribute_Set_Input>;
  pk_columns: Pokemon_V2_Itemattribute_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Itemattribute_ManyArgs = {
  updates: Array<Pokemon_V2_Itemattribute_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_ItemattributedescriptionArgs = {
  _inc?: InputMaybe<Pokemon_V2_Itemattributedescription_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Itemattributedescription_Set_Input>;
  where: Pokemon_V2_Itemattributedescription_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Itemattributedescription_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Itemattributedescription_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Itemattributedescription_Set_Input>;
  pk_columns: Pokemon_V2_Itemattributedescription_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Itemattributedescription_ManyArgs = {
  updates: Array<Pokemon_V2_Itemattributedescription_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_ItemattributemapArgs = {
  _inc?: InputMaybe<Pokemon_V2_Itemattributemap_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Itemattributemap_Set_Input>;
  where: Pokemon_V2_Itemattributemap_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Itemattributemap_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Itemattributemap_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Itemattributemap_Set_Input>;
  pk_columns: Pokemon_V2_Itemattributemap_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Itemattributemap_ManyArgs = {
  updates: Array<Pokemon_V2_Itemattributemap_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_ItemattributenameArgs = {
  _inc?: InputMaybe<Pokemon_V2_Itemattributename_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Itemattributename_Set_Input>;
  where: Pokemon_V2_Itemattributename_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Itemattributename_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Itemattributename_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Itemattributename_Set_Input>;
  pk_columns: Pokemon_V2_Itemattributename_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Itemattributename_ManyArgs = {
  updates: Array<Pokemon_V2_Itemattributename_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_ItemcategoryArgs = {
  _inc?: InputMaybe<Pokemon_V2_Itemcategory_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Itemcategory_Set_Input>;
  where: Pokemon_V2_Itemcategory_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Itemcategory_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Itemcategory_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Itemcategory_Set_Input>;
  pk_columns: Pokemon_V2_Itemcategory_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Itemcategory_ManyArgs = {
  updates: Array<Pokemon_V2_Itemcategory_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_ItemcategorynameArgs = {
  _inc?: InputMaybe<Pokemon_V2_Itemcategoryname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Itemcategoryname_Set_Input>;
  where: Pokemon_V2_Itemcategoryname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Itemcategoryname_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Itemcategoryname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Itemcategoryname_Set_Input>;
  pk_columns: Pokemon_V2_Itemcategoryname_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Itemcategoryname_ManyArgs = {
  updates: Array<Pokemon_V2_Itemcategoryname_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_ItemeffecttextArgs = {
  _inc?: InputMaybe<Pokemon_V2_Itemeffecttext_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Itemeffecttext_Set_Input>;
  where: Pokemon_V2_Itemeffecttext_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Itemeffecttext_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Itemeffecttext_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Itemeffecttext_Set_Input>;
  pk_columns: Pokemon_V2_Itemeffecttext_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Itemeffecttext_ManyArgs = {
  updates: Array<Pokemon_V2_Itemeffecttext_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_ItemflavortextArgs = {
  _inc?: InputMaybe<Pokemon_V2_Itemflavortext_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Itemflavortext_Set_Input>;
  where: Pokemon_V2_Itemflavortext_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Itemflavortext_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Itemflavortext_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Itemflavortext_Set_Input>;
  pk_columns: Pokemon_V2_Itemflavortext_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Itemflavortext_ManyArgs = {
  updates: Array<Pokemon_V2_Itemflavortext_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_ItemflingeffectArgs = {
  _inc?: InputMaybe<Pokemon_V2_Itemflingeffect_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Itemflingeffect_Set_Input>;
  where: Pokemon_V2_Itemflingeffect_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Itemflingeffect_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Itemflingeffect_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Itemflingeffect_Set_Input>;
  pk_columns: Pokemon_V2_Itemflingeffect_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Itemflingeffect_ManyArgs = {
  updates: Array<Pokemon_V2_Itemflingeffect_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_ItemflingeffecteffecttextArgs = {
  _inc?: InputMaybe<Pokemon_V2_Itemflingeffecteffecttext_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Itemflingeffecteffecttext_Set_Input>;
  where: Pokemon_V2_Itemflingeffecteffecttext_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Itemflingeffecteffecttext_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Itemflingeffecteffecttext_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Itemflingeffecteffecttext_Set_Input>;
  pk_columns: Pokemon_V2_Itemflingeffecteffecttext_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Itemflingeffecteffecttext_ManyArgs = {
  updates: Array<Pokemon_V2_Itemflingeffecteffecttext_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_ItemgameindexArgs = {
  _inc?: InputMaybe<Pokemon_V2_Itemgameindex_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Itemgameindex_Set_Input>;
  where: Pokemon_V2_Itemgameindex_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Itemgameindex_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Itemgameindex_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Itemgameindex_Set_Input>;
  pk_columns: Pokemon_V2_Itemgameindex_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Itemgameindex_ManyArgs = {
  updates: Array<Pokemon_V2_Itemgameindex_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_ItemnameArgs = {
  _inc?: InputMaybe<Pokemon_V2_Itemname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Itemname_Set_Input>;
  where: Pokemon_V2_Itemname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Itemname_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Itemname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Itemname_Set_Input>;
  pk_columns: Pokemon_V2_Itemname_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Itemname_ManyArgs = {
  updates: Array<Pokemon_V2_Itemname_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_ItempocketArgs = {
  _inc?: InputMaybe<Pokemon_V2_Itempocket_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Itempocket_Set_Input>;
  where: Pokemon_V2_Itempocket_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Itempocket_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Itempocket_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Itempocket_Set_Input>;
  pk_columns: Pokemon_V2_Itempocket_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Itempocket_ManyArgs = {
  updates: Array<Pokemon_V2_Itempocket_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_ItempocketnameArgs = {
  _inc?: InputMaybe<Pokemon_V2_Itempocketname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Itempocketname_Set_Input>;
  where: Pokemon_V2_Itempocketname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Itempocketname_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Itempocketname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Itempocketname_Set_Input>;
  pk_columns: Pokemon_V2_Itempocketname_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Itempocketname_ManyArgs = {
  updates: Array<Pokemon_V2_Itempocketname_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_ItemspritesArgs = {
  _append?: InputMaybe<Pokemon_V2_Itemsprites_Append_Input>;
  _delete_at_path?: InputMaybe<Pokemon_V2_Itemsprites_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Pokemon_V2_Itemsprites_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Pokemon_V2_Itemsprites_Delete_Key_Input>;
  _inc?: InputMaybe<Pokemon_V2_Itemsprites_Inc_Input>;
  _prepend?: InputMaybe<Pokemon_V2_Itemsprites_Prepend_Input>;
  _set?: InputMaybe<Pokemon_V2_Itemsprites_Set_Input>;
  where: Pokemon_V2_Itemsprites_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Itemsprites_By_PkArgs = {
  _append?: InputMaybe<Pokemon_V2_Itemsprites_Append_Input>;
  _delete_at_path?: InputMaybe<Pokemon_V2_Itemsprites_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Pokemon_V2_Itemsprites_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Pokemon_V2_Itemsprites_Delete_Key_Input>;
  _inc?: InputMaybe<Pokemon_V2_Itemsprites_Inc_Input>;
  _prepend?: InputMaybe<Pokemon_V2_Itemsprites_Prepend_Input>;
  _set?: InputMaybe<Pokemon_V2_Itemsprites_Set_Input>;
  pk_columns: Pokemon_V2_Itemsprites_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Itemsprites_ManyArgs = {
  updates: Array<Pokemon_V2_Itemsprites_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_LanguageArgs = {
  _inc?: InputMaybe<Pokemon_V2_Language_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Language_Set_Input>;
  where: Pokemon_V2_Language_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Language_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Language_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Language_Set_Input>;
  pk_columns: Pokemon_V2_Language_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Language_ManyArgs = {
  updates: Array<Pokemon_V2_Language_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_LanguagenameArgs = {
  _inc?: InputMaybe<Pokemon_V2_Languagename_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Languagename_Set_Input>;
  where: Pokemon_V2_Languagename_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Languagename_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Languagename_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Languagename_Set_Input>;
  pk_columns: Pokemon_V2_Languagename_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Languagename_ManyArgs = {
  updates: Array<Pokemon_V2_Languagename_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_LocationArgs = {
  _inc?: InputMaybe<Pokemon_V2_Location_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Location_Set_Input>;
  where: Pokemon_V2_Location_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Location_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Location_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Location_Set_Input>;
  pk_columns: Pokemon_V2_Location_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Location_ManyArgs = {
  updates: Array<Pokemon_V2_Location_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_LocationareaArgs = {
  _inc?: InputMaybe<Pokemon_V2_Locationarea_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Locationarea_Set_Input>;
  where: Pokemon_V2_Locationarea_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Locationarea_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Locationarea_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Locationarea_Set_Input>;
  pk_columns: Pokemon_V2_Locationarea_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Locationarea_ManyArgs = {
  updates: Array<Pokemon_V2_Locationarea_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_LocationareaencounterrateArgs = {
  _inc?: InputMaybe<Pokemon_V2_Locationareaencounterrate_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Locationareaencounterrate_Set_Input>;
  where: Pokemon_V2_Locationareaencounterrate_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Locationareaencounterrate_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Locationareaencounterrate_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Locationareaencounterrate_Set_Input>;
  pk_columns: Pokemon_V2_Locationareaencounterrate_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Locationareaencounterrate_ManyArgs = {
  updates: Array<Pokemon_V2_Locationareaencounterrate_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_LocationareanameArgs = {
  _inc?: InputMaybe<Pokemon_V2_Locationareaname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Locationareaname_Set_Input>;
  where: Pokemon_V2_Locationareaname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Locationareaname_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Locationareaname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Locationareaname_Set_Input>;
  pk_columns: Pokemon_V2_Locationareaname_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Locationareaname_ManyArgs = {
  updates: Array<Pokemon_V2_Locationareaname_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_LocationgameindexArgs = {
  _inc?: InputMaybe<Pokemon_V2_Locationgameindex_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Locationgameindex_Set_Input>;
  where: Pokemon_V2_Locationgameindex_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Locationgameindex_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Locationgameindex_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Locationgameindex_Set_Input>;
  pk_columns: Pokemon_V2_Locationgameindex_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Locationgameindex_ManyArgs = {
  updates: Array<Pokemon_V2_Locationgameindex_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_LocationnameArgs = {
  _inc?: InputMaybe<Pokemon_V2_Locationname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Locationname_Set_Input>;
  where: Pokemon_V2_Locationname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Locationname_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Locationname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Locationname_Set_Input>;
  pk_columns: Pokemon_V2_Locationname_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Locationname_ManyArgs = {
  updates: Array<Pokemon_V2_Locationname_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_MachineArgs = {
  _inc?: InputMaybe<Pokemon_V2_Machine_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Machine_Set_Input>;
  where: Pokemon_V2_Machine_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Machine_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Machine_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Machine_Set_Input>;
  pk_columns: Pokemon_V2_Machine_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Machine_ManyArgs = {
  updates: Array<Pokemon_V2_Machine_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_MoveArgs = {
  _inc?: InputMaybe<Pokemon_V2_Move_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Move_Set_Input>;
  where: Pokemon_V2_Move_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Move_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Move_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Move_Set_Input>;
  pk_columns: Pokemon_V2_Move_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Move_ManyArgs = {
  updates: Array<Pokemon_V2_Move_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_MoveattributeArgs = {
  _inc?: InputMaybe<Pokemon_V2_Moveattribute_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Moveattribute_Set_Input>;
  where: Pokemon_V2_Moveattribute_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Moveattribute_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Moveattribute_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Moveattribute_Set_Input>;
  pk_columns: Pokemon_V2_Moveattribute_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Moveattribute_ManyArgs = {
  updates: Array<Pokemon_V2_Moveattribute_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_MoveattributedescriptionArgs = {
  _inc?: InputMaybe<Pokemon_V2_Moveattributedescription_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Moveattributedescription_Set_Input>;
  where: Pokemon_V2_Moveattributedescription_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Moveattributedescription_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Moveattributedescription_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Moveattributedescription_Set_Input>;
  pk_columns: Pokemon_V2_Moveattributedescription_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Moveattributedescription_ManyArgs = {
  updates: Array<Pokemon_V2_Moveattributedescription_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_MoveattributemapArgs = {
  _inc?: InputMaybe<Pokemon_V2_Moveattributemap_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Moveattributemap_Set_Input>;
  where: Pokemon_V2_Moveattributemap_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Moveattributemap_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Moveattributemap_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Moveattributemap_Set_Input>;
  pk_columns: Pokemon_V2_Moveattributemap_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Moveattributemap_ManyArgs = {
  updates: Array<Pokemon_V2_Moveattributemap_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_MoveattributenameArgs = {
  _inc?: InputMaybe<Pokemon_V2_Moveattributename_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Moveattributename_Set_Input>;
  where: Pokemon_V2_Moveattributename_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Moveattributename_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Moveattributename_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Moveattributename_Set_Input>;
  pk_columns: Pokemon_V2_Moveattributename_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Moveattributename_ManyArgs = {
  updates: Array<Pokemon_V2_Moveattributename_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_MovebattlestyleArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movebattlestyle_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movebattlestyle_Set_Input>;
  where: Pokemon_V2_Movebattlestyle_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movebattlestyle_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movebattlestyle_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movebattlestyle_Set_Input>;
  pk_columns: Pokemon_V2_Movebattlestyle_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movebattlestyle_ManyArgs = {
  updates: Array<Pokemon_V2_Movebattlestyle_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_MovebattlestylenameArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movebattlestylename_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movebattlestylename_Set_Input>;
  where: Pokemon_V2_Movebattlestylename_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movebattlestylename_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movebattlestylename_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movebattlestylename_Set_Input>;
  pk_columns: Pokemon_V2_Movebattlestylename_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movebattlestylename_ManyArgs = {
  updates: Array<Pokemon_V2_Movebattlestylename_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_MovechangeArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movechange_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movechange_Set_Input>;
  where: Pokemon_V2_Movechange_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movechange_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movechange_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movechange_Set_Input>;
  pk_columns: Pokemon_V2_Movechange_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movechange_ManyArgs = {
  updates: Array<Pokemon_V2_Movechange_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_MovedamageclassArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movedamageclass_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movedamageclass_Set_Input>;
  where: Pokemon_V2_Movedamageclass_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movedamageclass_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movedamageclass_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movedamageclass_Set_Input>;
  pk_columns: Pokemon_V2_Movedamageclass_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movedamageclass_ManyArgs = {
  updates: Array<Pokemon_V2_Movedamageclass_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_MovedamageclassdescriptionArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movedamageclassdescription_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movedamageclassdescription_Set_Input>;
  where: Pokemon_V2_Movedamageclassdescription_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movedamageclassdescription_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movedamageclassdescription_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movedamageclassdescription_Set_Input>;
  pk_columns: Pokemon_V2_Movedamageclassdescription_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movedamageclassdescription_ManyArgs = {
  updates: Array<Pokemon_V2_Movedamageclassdescription_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_MovedamageclassnameArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movedamageclassname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movedamageclassname_Set_Input>;
  where: Pokemon_V2_Movedamageclassname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movedamageclassname_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movedamageclassname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movedamageclassname_Set_Input>;
  pk_columns: Pokemon_V2_Movedamageclassname_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movedamageclassname_ManyArgs = {
  updates: Array<Pokemon_V2_Movedamageclassname_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_MoveeffectArgs = {
  _inc?: InputMaybe<Pokemon_V2_Moveeffect_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Moveeffect_Set_Input>;
  where: Pokemon_V2_Moveeffect_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Moveeffect_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Moveeffect_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Moveeffect_Set_Input>;
  pk_columns: Pokemon_V2_Moveeffect_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Moveeffect_ManyArgs = {
  updates: Array<Pokemon_V2_Moveeffect_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_MoveeffectchangeArgs = {
  _inc?: InputMaybe<Pokemon_V2_Moveeffectchange_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Moveeffectchange_Set_Input>;
  where: Pokemon_V2_Moveeffectchange_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Moveeffectchange_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Moveeffectchange_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Moveeffectchange_Set_Input>;
  pk_columns: Pokemon_V2_Moveeffectchange_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Moveeffectchange_ManyArgs = {
  updates: Array<Pokemon_V2_Moveeffectchange_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_MoveeffectchangeeffecttextArgs = {
  _inc?: InputMaybe<Pokemon_V2_Moveeffectchangeeffecttext_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Moveeffectchangeeffecttext_Set_Input>;
  where: Pokemon_V2_Moveeffectchangeeffecttext_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Moveeffectchangeeffecttext_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Moveeffectchangeeffecttext_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Moveeffectchangeeffecttext_Set_Input>;
  pk_columns: Pokemon_V2_Moveeffectchangeeffecttext_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Moveeffectchangeeffecttext_ManyArgs = {
  updates: Array<Pokemon_V2_Moveeffectchangeeffecttext_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_MoveeffecteffecttextArgs = {
  _inc?: InputMaybe<Pokemon_V2_Moveeffecteffecttext_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Moveeffecteffecttext_Set_Input>;
  where: Pokemon_V2_Moveeffecteffecttext_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Moveeffecteffecttext_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Moveeffecteffecttext_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Moveeffecteffecttext_Set_Input>;
  pk_columns: Pokemon_V2_Moveeffecteffecttext_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Moveeffecteffecttext_ManyArgs = {
  updates: Array<Pokemon_V2_Moveeffecteffecttext_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_MoveflavortextArgs = {
  _inc?: InputMaybe<Pokemon_V2_Moveflavortext_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Moveflavortext_Set_Input>;
  where: Pokemon_V2_Moveflavortext_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Moveflavortext_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Moveflavortext_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Moveflavortext_Set_Input>;
  pk_columns: Pokemon_V2_Moveflavortext_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Moveflavortext_ManyArgs = {
  updates: Array<Pokemon_V2_Moveflavortext_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_MovelearnmethodArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movelearnmethod_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movelearnmethod_Set_Input>;
  where: Pokemon_V2_Movelearnmethod_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movelearnmethod_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movelearnmethod_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movelearnmethod_Set_Input>;
  pk_columns: Pokemon_V2_Movelearnmethod_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movelearnmethod_ManyArgs = {
  updates: Array<Pokemon_V2_Movelearnmethod_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_MovelearnmethoddescriptionArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movelearnmethoddescription_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movelearnmethoddescription_Set_Input>;
  where: Pokemon_V2_Movelearnmethoddescription_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movelearnmethoddescription_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movelearnmethoddescription_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movelearnmethoddescription_Set_Input>;
  pk_columns: Pokemon_V2_Movelearnmethoddescription_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movelearnmethoddescription_ManyArgs = {
  updates: Array<Pokemon_V2_Movelearnmethoddescription_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_MovelearnmethodnameArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movelearnmethodname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movelearnmethodname_Set_Input>;
  where: Pokemon_V2_Movelearnmethodname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movelearnmethodname_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movelearnmethodname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movelearnmethodname_Set_Input>;
  pk_columns: Pokemon_V2_Movelearnmethodname_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movelearnmethodname_ManyArgs = {
  updates: Array<Pokemon_V2_Movelearnmethodname_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_MovemetaArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movemeta_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movemeta_Set_Input>;
  where: Pokemon_V2_Movemeta_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movemeta_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movemeta_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movemeta_Set_Input>;
  pk_columns: Pokemon_V2_Movemeta_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movemeta_ManyArgs = {
  updates: Array<Pokemon_V2_Movemeta_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_MovemetaailmentArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movemetaailment_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movemetaailment_Set_Input>;
  where: Pokemon_V2_Movemetaailment_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movemetaailment_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movemetaailment_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movemetaailment_Set_Input>;
  pk_columns: Pokemon_V2_Movemetaailment_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movemetaailment_ManyArgs = {
  updates: Array<Pokemon_V2_Movemetaailment_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_MovemetaailmentnameArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movemetaailmentname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movemetaailmentname_Set_Input>;
  where: Pokemon_V2_Movemetaailmentname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movemetaailmentname_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movemetaailmentname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movemetaailmentname_Set_Input>;
  pk_columns: Pokemon_V2_Movemetaailmentname_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movemetaailmentname_ManyArgs = {
  updates: Array<Pokemon_V2_Movemetaailmentname_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_MovemetacategoryArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movemetacategory_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movemetacategory_Set_Input>;
  where: Pokemon_V2_Movemetacategory_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movemetacategory_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movemetacategory_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movemetacategory_Set_Input>;
  pk_columns: Pokemon_V2_Movemetacategory_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movemetacategory_ManyArgs = {
  updates: Array<Pokemon_V2_Movemetacategory_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_MovemetacategorydescriptionArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movemetacategorydescription_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movemetacategorydescription_Set_Input>;
  where: Pokemon_V2_Movemetacategorydescription_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movemetacategorydescription_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movemetacategorydescription_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movemetacategorydescription_Set_Input>;
  pk_columns: Pokemon_V2_Movemetacategorydescription_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movemetacategorydescription_ManyArgs = {
  updates: Array<Pokemon_V2_Movemetacategorydescription_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_MovemetastatchangeArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movemetastatchange_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movemetastatchange_Set_Input>;
  where: Pokemon_V2_Movemetastatchange_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movemetastatchange_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movemetastatchange_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movemetastatchange_Set_Input>;
  pk_columns: Pokemon_V2_Movemetastatchange_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movemetastatchange_ManyArgs = {
  updates: Array<Pokemon_V2_Movemetastatchange_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_MovenameArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movename_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movename_Set_Input>;
  where: Pokemon_V2_Movename_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movename_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movename_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movename_Set_Input>;
  pk_columns: Pokemon_V2_Movename_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movename_ManyArgs = {
  updates: Array<Pokemon_V2_Movename_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_MovetargetArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movetarget_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movetarget_Set_Input>;
  where: Pokemon_V2_Movetarget_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movetarget_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movetarget_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movetarget_Set_Input>;
  pk_columns: Pokemon_V2_Movetarget_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movetarget_ManyArgs = {
  updates: Array<Pokemon_V2_Movetarget_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_MovetargetdescriptionArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movetargetdescription_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movetargetdescription_Set_Input>;
  where: Pokemon_V2_Movetargetdescription_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movetargetdescription_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movetargetdescription_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movetargetdescription_Set_Input>;
  pk_columns: Pokemon_V2_Movetargetdescription_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movetargetdescription_ManyArgs = {
  updates: Array<Pokemon_V2_Movetargetdescription_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_MovetargetnameArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movetargetname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movetargetname_Set_Input>;
  where: Pokemon_V2_Movetargetname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movetargetname_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Movetargetname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Movetargetname_Set_Input>;
  pk_columns: Pokemon_V2_Movetargetname_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Movetargetname_ManyArgs = {
  updates: Array<Pokemon_V2_Movetargetname_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_NatureArgs = {
  _inc?: InputMaybe<Pokemon_V2_Nature_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Nature_Set_Input>;
  where: Pokemon_V2_Nature_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Nature_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Nature_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Nature_Set_Input>;
  pk_columns: Pokemon_V2_Nature_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Nature_ManyArgs = {
  updates: Array<Pokemon_V2_Nature_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_NaturebattlestylepreferenceArgs = {
  _inc?: InputMaybe<Pokemon_V2_Naturebattlestylepreference_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Naturebattlestylepreference_Set_Input>;
  where: Pokemon_V2_Naturebattlestylepreference_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Naturebattlestylepreference_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Naturebattlestylepreference_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Naturebattlestylepreference_Set_Input>;
  pk_columns: Pokemon_V2_Naturebattlestylepreference_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Naturebattlestylepreference_ManyArgs = {
  updates: Array<Pokemon_V2_Naturebattlestylepreference_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_NaturenameArgs = {
  _inc?: InputMaybe<Pokemon_V2_Naturename_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Naturename_Set_Input>;
  where: Pokemon_V2_Naturename_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Naturename_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Naturename_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Naturename_Set_Input>;
  pk_columns: Pokemon_V2_Naturename_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Naturename_ManyArgs = {
  updates: Array<Pokemon_V2_Naturename_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_NaturepokeathlonstatArgs = {
  _inc?: InputMaybe<Pokemon_V2_Naturepokeathlonstat_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Naturepokeathlonstat_Set_Input>;
  where: Pokemon_V2_Naturepokeathlonstat_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Naturepokeathlonstat_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Naturepokeathlonstat_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Naturepokeathlonstat_Set_Input>;
  pk_columns: Pokemon_V2_Naturepokeathlonstat_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Naturepokeathlonstat_ManyArgs = {
  updates: Array<Pokemon_V2_Naturepokeathlonstat_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PalparkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Palpark_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Palpark_Set_Input>;
  where: Pokemon_V2_Palpark_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Palpark_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Palpark_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Palpark_Set_Input>;
  pk_columns: Pokemon_V2_Palpark_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Palpark_ManyArgs = {
  updates: Array<Pokemon_V2_Palpark_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PalparkareaArgs = {
  _inc?: InputMaybe<Pokemon_V2_Palparkarea_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Palparkarea_Set_Input>;
  where: Pokemon_V2_Palparkarea_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Palparkarea_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Palparkarea_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Palparkarea_Set_Input>;
  pk_columns: Pokemon_V2_Palparkarea_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Palparkarea_ManyArgs = {
  updates: Array<Pokemon_V2_Palparkarea_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PalparkareanameArgs = {
  _inc?: InputMaybe<Pokemon_V2_Palparkareaname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Palparkareaname_Set_Input>;
  where: Pokemon_V2_Palparkareaname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Palparkareaname_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Palparkareaname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Palparkareaname_Set_Input>;
  pk_columns: Pokemon_V2_Palparkareaname_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Palparkareaname_ManyArgs = {
  updates: Array<Pokemon_V2_Palparkareaname_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PokeathlonstatArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokeathlonstat_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokeathlonstat_Set_Input>;
  where: Pokemon_V2_Pokeathlonstat_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokeathlonstat_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokeathlonstat_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokeathlonstat_Set_Input>;
  pk_columns: Pokemon_V2_Pokeathlonstat_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokeathlonstat_ManyArgs = {
  updates: Array<Pokemon_V2_Pokeathlonstat_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PokeathlonstatnameArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokeathlonstatname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokeathlonstatname_Set_Input>;
  where: Pokemon_V2_Pokeathlonstatname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokeathlonstatname_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokeathlonstatname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokeathlonstatname_Set_Input>;
  pk_columns: Pokemon_V2_Pokeathlonstatname_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokeathlonstatname_ManyArgs = {
  updates: Array<Pokemon_V2_Pokeathlonstatname_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PokedexArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokedex_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokedex_Set_Input>;
  where: Pokemon_V2_Pokedex_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokedex_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokedex_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokedex_Set_Input>;
  pk_columns: Pokemon_V2_Pokedex_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokedex_ManyArgs = {
  updates: Array<Pokemon_V2_Pokedex_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PokedexdescriptionArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokedexdescription_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokedexdescription_Set_Input>;
  where: Pokemon_V2_Pokedexdescription_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokedexdescription_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokedexdescription_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokedexdescription_Set_Input>;
  pk_columns: Pokemon_V2_Pokedexdescription_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokedexdescription_ManyArgs = {
  updates: Array<Pokemon_V2_Pokedexdescription_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PokedexnameArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokedexname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokedexname_Set_Input>;
  where: Pokemon_V2_Pokedexname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokedexname_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokedexname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokedexname_Set_Input>;
  pk_columns: Pokemon_V2_Pokedexname_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokedexname_ManyArgs = {
  updates: Array<Pokemon_V2_Pokedexname_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PokedexversiongroupArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokedexversiongroup_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokedexversiongroup_Set_Input>;
  where: Pokemon_V2_Pokedexversiongroup_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokedexversiongroup_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokedexversiongroup_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokedexversiongroup_Set_Input>;
  pk_columns: Pokemon_V2_Pokedexversiongroup_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokedexversiongroup_ManyArgs = {
  updates: Array<Pokemon_V2_Pokedexversiongroup_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PokemonArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemon_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemon_Set_Input>;
  where: Pokemon_V2_Pokemon_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemon_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemon_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemon_Set_Input>;
  pk_columns: Pokemon_V2_Pokemon_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemon_ManyArgs = {
  updates: Array<Pokemon_V2_Pokemon_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PokemonabilityArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonability_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonability_Set_Input>;
  where: Pokemon_V2_Pokemonability_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonability_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonability_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonability_Set_Input>;
  pk_columns: Pokemon_V2_Pokemonability_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonability_ManyArgs = {
  updates: Array<Pokemon_V2_Pokemonability_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PokemonabilitypastArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonabilitypast_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonabilitypast_Set_Input>;
  where: Pokemon_V2_Pokemonabilitypast_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonabilitypast_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonabilitypast_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonabilitypast_Set_Input>;
  pk_columns: Pokemon_V2_Pokemonabilitypast_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonabilitypast_ManyArgs = {
  updates: Array<Pokemon_V2_Pokemonabilitypast_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PokemoncolorArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemoncolor_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemoncolor_Set_Input>;
  where: Pokemon_V2_Pokemoncolor_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemoncolor_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemoncolor_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemoncolor_Set_Input>;
  pk_columns: Pokemon_V2_Pokemoncolor_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemoncolor_ManyArgs = {
  updates: Array<Pokemon_V2_Pokemoncolor_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PokemoncolornameArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemoncolorname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemoncolorname_Set_Input>;
  where: Pokemon_V2_Pokemoncolorname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemoncolorname_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemoncolorname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemoncolorname_Set_Input>;
  pk_columns: Pokemon_V2_Pokemoncolorname_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemoncolorname_ManyArgs = {
  updates: Array<Pokemon_V2_Pokemoncolorname_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PokemoncriesArgs = {
  _append?: InputMaybe<Pokemon_V2_Pokemoncries_Append_Input>;
  _delete_at_path?: InputMaybe<Pokemon_V2_Pokemoncries_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Pokemon_V2_Pokemoncries_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Pokemon_V2_Pokemoncries_Delete_Key_Input>;
  _inc?: InputMaybe<Pokemon_V2_Pokemoncries_Inc_Input>;
  _prepend?: InputMaybe<Pokemon_V2_Pokemoncries_Prepend_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemoncries_Set_Input>;
  where: Pokemon_V2_Pokemoncries_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemoncries_By_PkArgs = {
  _append?: InputMaybe<Pokemon_V2_Pokemoncries_Append_Input>;
  _delete_at_path?: InputMaybe<Pokemon_V2_Pokemoncries_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Pokemon_V2_Pokemoncries_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Pokemon_V2_Pokemoncries_Delete_Key_Input>;
  _inc?: InputMaybe<Pokemon_V2_Pokemoncries_Inc_Input>;
  _prepend?: InputMaybe<Pokemon_V2_Pokemoncries_Prepend_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemoncries_Set_Input>;
  pk_columns: Pokemon_V2_Pokemoncries_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemoncries_ManyArgs = {
  updates: Array<Pokemon_V2_Pokemoncries_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PokemondexnumberArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemondexnumber_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemondexnumber_Set_Input>;
  where: Pokemon_V2_Pokemondexnumber_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemondexnumber_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemondexnumber_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemondexnumber_Set_Input>;
  pk_columns: Pokemon_V2_Pokemondexnumber_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemondexnumber_ManyArgs = {
  updates: Array<Pokemon_V2_Pokemondexnumber_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PokemonegggroupArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonegggroup_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonegggroup_Set_Input>;
  where: Pokemon_V2_Pokemonegggroup_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonegggroup_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonegggroup_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonegggroup_Set_Input>;
  pk_columns: Pokemon_V2_Pokemonegggroup_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonegggroup_ManyArgs = {
  updates: Array<Pokemon_V2_Pokemonegggroup_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PokemonevolutionArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonevolution_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonevolution_Set_Input>;
  where: Pokemon_V2_Pokemonevolution_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonevolution_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonevolution_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonevolution_Set_Input>;
  pk_columns: Pokemon_V2_Pokemonevolution_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonevolution_ManyArgs = {
  updates: Array<Pokemon_V2_Pokemonevolution_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PokemonformArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonform_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonform_Set_Input>;
  where: Pokemon_V2_Pokemonform_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonform_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonform_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonform_Set_Input>;
  pk_columns: Pokemon_V2_Pokemonform_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonform_ManyArgs = {
  updates: Array<Pokemon_V2_Pokemonform_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PokemonformgenerationArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonformgeneration_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonformgeneration_Set_Input>;
  where: Pokemon_V2_Pokemonformgeneration_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonformgeneration_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonformgeneration_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonformgeneration_Set_Input>;
  pk_columns: Pokemon_V2_Pokemonformgeneration_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonformgeneration_ManyArgs = {
  updates: Array<Pokemon_V2_Pokemonformgeneration_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PokemonformnameArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonformname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonformname_Set_Input>;
  where: Pokemon_V2_Pokemonformname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonformname_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonformname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonformname_Set_Input>;
  pk_columns: Pokemon_V2_Pokemonformname_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonformname_ManyArgs = {
  updates: Array<Pokemon_V2_Pokemonformname_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PokemonformspritesArgs = {
  _append?: InputMaybe<Pokemon_V2_Pokemonformsprites_Append_Input>;
  _delete_at_path?: InputMaybe<Pokemon_V2_Pokemonformsprites_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Pokemon_V2_Pokemonformsprites_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Pokemon_V2_Pokemonformsprites_Delete_Key_Input>;
  _inc?: InputMaybe<Pokemon_V2_Pokemonformsprites_Inc_Input>;
  _prepend?: InputMaybe<Pokemon_V2_Pokemonformsprites_Prepend_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonformsprites_Set_Input>;
  where: Pokemon_V2_Pokemonformsprites_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonformsprites_By_PkArgs = {
  _append?: InputMaybe<Pokemon_V2_Pokemonformsprites_Append_Input>;
  _delete_at_path?: InputMaybe<Pokemon_V2_Pokemonformsprites_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Pokemon_V2_Pokemonformsprites_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Pokemon_V2_Pokemonformsprites_Delete_Key_Input>;
  _inc?: InputMaybe<Pokemon_V2_Pokemonformsprites_Inc_Input>;
  _prepend?: InputMaybe<Pokemon_V2_Pokemonformsprites_Prepend_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonformsprites_Set_Input>;
  pk_columns: Pokemon_V2_Pokemonformsprites_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonformsprites_ManyArgs = {
  updates: Array<Pokemon_V2_Pokemonformsprites_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PokemonformtypeArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonformtype_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonformtype_Set_Input>;
  where: Pokemon_V2_Pokemonformtype_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonformtype_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonformtype_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonformtype_Set_Input>;
  pk_columns: Pokemon_V2_Pokemonformtype_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonformtype_ManyArgs = {
  updates: Array<Pokemon_V2_Pokemonformtype_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PokemongameindexArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemongameindex_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemongameindex_Set_Input>;
  where: Pokemon_V2_Pokemongameindex_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemongameindex_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemongameindex_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemongameindex_Set_Input>;
  pk_columns: Pokemon_V2_Pokemongameindex_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemongameindex_ManyArgs = {
  updates: Array<Pokemon_V2_Pokemongameindex_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PokemonhabitatArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonhabitat_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonhabitat_Set_Input>;
  where: Pokemon_V2_Pokemonhabitat_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonhabitat_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonhabitat_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonhabitat_Set_Input>;
  pk_columns: Pokemon_V2_Pokemonhabitat_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonhabitat_ManyArgs = {
  updates: Array<Pokemon_V2_Pokemonhabitat_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PokemonhabitatnameArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonhabitatname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonhabitatname_Set_Input>;
  where: Pokemon_V2_Pokemonhabitatname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonhabitatname_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonhabitatname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonhabitatname_Set_Input>;
  pk_columns: Pokemon_V2_Pokemonhabitatname_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonhabitatname_ManyArgs = {
  updates: Array<Pokemon_V2_Pokemonhabitatname_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PokemonitemArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonitem_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonitem_Set_Input>;
  where: Pokemon_V2_Pokemonitem_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonitem_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonitem_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonitem_Set_Input>;
  pk_columns: Pokemon_V2_Pokemonitem_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonitem_ManyArgs = {
  updates: Array<Pokemon_V2_Pokemonitem_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PokemonmoveArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonmove_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonmove_Set_Input>;
  where: Pokemon_V2_Pokemonmove_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonmove_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonmove_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonmove_Set_Input>;
  pk_columns: Pokemon_V2_Pokemonmove_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonmove_ManyArgs = {
  updates: Array<Pokemon_V2_Pokemonmove_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PokemonshapeArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonshape_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonshape_Set_Input>;
  where: Pokemon_V2_Pokemonshape_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonshape_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonshape_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonshape_Set_Input>;
  pk_columns: Pokemon_V2_Pokemonshape_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonshape_ManyArgs = {
  updates: Array<Pokemon_V2_Pokemonshape_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PokemonshapenameArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonshapename_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonshapename_Set_Input>;
  where: Pokemon_V2_Pokemonshapename_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonshapename_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonshapename_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonshapename_Set_Input>;
  pk_columns: Pokemon_V2_Pokemonshapename_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonshapename_ManyArgs = {
  updates: Array<Pokemon_V2_Pokemonshapename_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PokemonspeciesArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonspecies_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonspecies_Set_Input>;
  where: Pokemon_V2_Pokemonspecies_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonspecies_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonspecies_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonspecies_Set_Input>;
  pk_columns: Pokemon_V2_Pokemonspecies_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonspecies_ManyArgs = {
  updates: Array<Pokemon_V2_Pokemonspecies_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PokemonspeciesdescriptionArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonspeciesdescription_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonspeciesdescription_Set_Input>;
  where: Pokemon_V2_Pokemonspeciesdescription_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonspeciesdescription_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonspeciesdescription_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonspeciesdescription_Set_Input>;
  pk_columns: Pokemon_V2_Pokemonspeciesdescription_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonspeciesdescription_ManyArgs = {
  updates: Array<Pokemon_V2_Pokemonspeciesdescription_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PokemonspeciesflavortextArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonspeciesflavortext_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonspeciesflavortext_Set_Input>;
  where: Pokemon_V2_Pokemonspeciesflavortext_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonspeciesflavortext_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonspeciesflavortext_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonspeciesflavortext_Set_Input>;
  pk_columns: Pokemon_V2_Pokemonspeciesflavortext_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonspeciesflavortext_ManyArgs = {
  updates: Array<Pokemon_V2_Pokemonspeciesflavortext_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PokemonspeciesnameArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonspeciesname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonspeciesname_Set_Input>;
  where: Pokemon_V2_Pokemonspeciesname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonspeciesname_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonspeciesname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonspeciesname_Set_Input>;
  pk_columns: Pokemon_V2_Pokemonspeciesname_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonspeciesname_ManyArgs = {
  updates: Array<Pokemon_V2_Pokemonspeciesname_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PokemonspritesArgs = {
  _append?: InputMaybe<Pokemon_V2_Pokemonsprites_Append_Input>;
  _delete_at_path?: InputMaybe<Pokemon_V2_Pokemonsprites_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Pokemon_V2_Pokemonsprites_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Pokemon_V2_Pokemonsprites_Delete_Key_Input>;
  _inc?: InputMaybe<Pokemon_V2_Pokemonsprites_Inc_Input>;
  _prepend?: InputMaybe<Pokemon_V2_Pokemonsprites_Prepend_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonsprites_Set_Input>;
  where: Pokemon_V2_Pokemonsprites_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonsprites_By_PkArgs = {
  _append?: InputMaybe<Pokemon_V2_Pokemonsprites_Append_Input>;
  _delete_at_path?: InputMaybe<Pokemon_V2_Pokemonsprites_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Pokemon_V2_Pokemonsprites_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Pokemon_V2_Pokemonsprites_Delete_Key_Input>;
  _inc?: InputMaybe<Pokemon_V2_Pokemonsprites_Inc_Input>;
  _prepend?: InputMaybe<Pokemon_V2_Pokemonsprites_Prepend_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonsprites_Set_Input>;
  pk_columns: Pokemon_V2_Pokemonsprites_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonsprites_ManyArgs = {
  updates: Array<Pokemon_V2_Pokemonsprites_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PokemonstatArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonstat_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonstat_Set_Input>;
  where: Pokemon_V2_Pokemonstat_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonstat_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemonstat_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemonstat_Set_Input>;
  pk_columns: Pokemon_V2_Pokemonstat_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemonstat_ManyArgs = {
  updates: Array<Pokemon_V2_Pokemonstat_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PokemontypeArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemontype_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemontype_Set_Input>;
  where: Pokemon_V2_Pokemontype_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemontype_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemontype_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemontype_Set_Input>;
  pk_columns: Pokemon_V2_Pokemontype_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemontype_ManyArgs = {
  updates: Array<Pokemon_V2_Pokemontype_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_PokemontypepastArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemontypepast_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemontypepast_Set_Input>;
  where: Pokemon_V2_Pokemontypepast_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemontypepast_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Pokemontypepast_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Pokemontypepast_Set_Input>;
  pk_columns: Pokemon_V2_Pokemontypepast_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Pokemontypepast_ManyArgs = {
  updates: Array<Pokemon_V2_Pokemontypepast_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_RegionArgs = {
  _inc?: InputMaybe<Pokemon_V2_Region_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Region_Set_Input>;
  where: Pokemon_V2_Region_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Region_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Region_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Region_Set_Input>;
  pk_columns: Pokemon_V2_Region_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Region_ManyArgs = {
  updates: Array<Pokemon_V2_Region_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_RegionnameArgs = {
  _inc?: InputMaybe<Pokemon_V2_Regionname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Regionname_Set_Input>;
  where: Pokemon_V2_Regionname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Regionname_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Regionname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Regionname_Set_Input>;
  pk_columns: Pokemon_V2_Regionname_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Regionname_ManyArgs = {
  updates: Array<Pokemon_V2_Regionname_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_StatArgs = {
  _inc?: InputMaybe<Pokemon_V2_Stat_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Stat_Set_Input>;
  where: Pokemon_V2_Stat_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Stat_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Stat_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Stat_Set_Input>;
  pk_columns: Pokemon_V2_Stat_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Stat_ManyArgs = {
  updates: Array<Pokemon_V2_Stat_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_StatnameArgs = {
  _inc?: InputMaybe<Pokemon_V2_Statname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Statname_Set_Input>;
  where: Pokemon_V2_Statname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Statname_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Statname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Statname_Set_Input>;
  pk_columns: Pokemon_V2_Statname_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Statname_ManyArgs = {
  updates: Array<Pokemon_V2_Statname_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_SupercontestcomboArgs = {
  _inc?: InputMaybe<Pokemon_V2_Supercontestcombo_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Supercontestcombo_Set_Input>;
  where: Pokemon_V2_Supercontestcombo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Supercontestcombo_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Supercontestcombo_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Supercontestcombo_Set_Input>;
  pk_columns: Pokemon_V2_Supercontestcombo_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Supercontestcombo_ManyArgs = {
  updates: Array<Pokemon_V2_Supercontestcombo_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_SupercontesteffectArgs = {
  _inc?: InputMaybe<Pokemon_V2_Supercontesteffect_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Supercontesteffect_Set_Input>;
  where: Pokemon_V2_Supercontesteffect_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Supercontesteffect_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Supercontesteffect_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Supercontesteffect_Set_Input>;
  pk_columns: Pokemon_V2_Supercontesteffect_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Supercontesteffect_ManyArgs = {
  updates: Array<Pokemon_V2_Supercontesteffect_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_SupercontesteffectflavortextArgs = {
  _inc?: InputMaybe<Pokemon_V2_Supercontesteffectflavortext_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Supercontesteffectflavortext_Set_Input>;
  where: Pokemon_V2_Supercontesteffectflavortext_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Supercontesteffectflavortext_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Supercontesteffectflavortext_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Supercontesteffectflavortext_Set_Input>;
  pk_columns: Pokemon_V2_Supercontesteffectflavortext_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Supercontesteffectflavortext_ManyArgs = {
  updates: Array<Pokemon_V2_Supercontesteffectflavortext_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_TypeArgs = {
  _inc?: InputMaybe<Pokemon_V2_Type_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Type_Set_Input>;
  where: Pokemon_V2_Type_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Type_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Type_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Type_Set_Input>;
  pk_columns: Pokemon_V2_Type_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Type_ManyArgs = {
  updates: Array<Pokemon_V2_Type_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_TypeefficacyArgs = {
  _inc?: InputMaybe<Pokemon_V2_Typeefficacy_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Typeefficacy_Set_Input>;
  where: Pokemon_V2_Typeefficacy_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Typeefficacy_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Typeefficacy_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Typeefficacy_Set_Input>;
  pk_columns: Pokemon_V2_Typeefficacy_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Typeefficacy_ManyArgs = {
  updates: Array<Pokemon_V2_Typeefficacy_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_TypeefficacypastArgs = {
  _inc?: InputMaybe<Pokemon_V2_Typeefficacypast_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Typeefficacypast_Set_Input>;
  where: Pokemon_V2_Typeefficacypast_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Typeefficacypast_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Typeefficacypast_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Typeefficacypast_Set_Input>;
  pk_columns: Pokemon_V2_Typeefficacypast_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Typeefficacypast_ManyArgs = {
  updates: Array<Pokemon_V2_Typeefficacypast_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_TypegameindexArgs = {
  _inc?: InputMaybe<Pokemon_V2_Typegameindex_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Typegameindex_Set_Input>;
  where: Pokemon_V2_Typegameindex_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Typegameindex_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Typegameindex_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Typegameindex_Set_Input>;
  pk_columns: Pokemon_V2_Typegameindex_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Typegameindex_ManyArgs = {
  updates: Array<Pokemon_V2_Typegameindex_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_TypenameArgs = {
  _inc?: InputMaybe<Pokemon_V2_Typename_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Typename_Set_Input>;
  where: Pokemon_V2_Typename_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Typename_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Typename_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Typename_Set_Input>;
  pk_columns: Pokemon_V2_Typename_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Typename_ManyArgs = {
  updates: Array<Pokemon_V2_Typename_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_VersionArgs = {
  _inc?: InputMaybe<Pokemon_V2_Version_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Version_Set_Input>;
  where: Pokemon_V2_Version_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Version_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Version_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Version_Set_Input>;
  pk_columns: Pokemon_V2_Version_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Version_ManyArgs = {
  updates: Array<Pokemon_V2_Version_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_VersiongroupArgs = {
  _inc?: InputMaybe<Pokemon_V2_Versiongroup_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Versiongroup_Set_Input>;
  where: Pokemon_V2_Versiongroup_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Versiongroup_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Versiongroup_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Versiongroup_Set_Input>;
  pk_columns: Pokemon_V2_Versiongroup_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Versiongroup_ManyArgs = {
  updates: Array<Pokemon_V2_Versiongroup_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_VersiongroupmovelearnmethodArgs = {
  _inc?: InputMaybe<Pokemon_V2_Versiongroupmovelearnmethod_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Versiongroupmovelearnmethod_Set_Input>;
  where: Pokemon_V2_Versiongroupmovelearnmethod_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Versiongroupmovelearnmethod_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Versiongroupmovelearnmethod_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Versiongroupmovelearnmethod_Set_Input>;
  pk_columns: Pokemon_V2_Versiongroupmovelearnmethod_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Versiongroupmovelearnmethod_ManyArgs = {
  updates: Array<Pokemon_V2_Versiongroupmovelearnmethod_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_VersiongroupregionArgs = {
  _inc?: InputMaybe<Pokemon_V2_Versiongroupregion_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Versiongroupregion_Set_Input>;
  where: Pokemon_V2_Versiongroupregion_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Versiongroupregion_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Versiongroupregion_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Versiongroupregion_Set_Input>;
  pk_columns: Pokemon_V2_Versiongroupregion_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Versiongroupregion_ManyArgs = {
  updates: Array<Pokemon_V2_Versiongroupregion_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_VersionnameArgs = {
  _inc?: InputMaybe<Pokemon_V2_Versionname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Versionname_Set_Input>;
  where: Pokemon_V2_Versionname_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Versionname_By_PkArgs = {
  _inc?: InputMaybe<Pokemon_V2_Versionname_Inc_Input>;
  _set?: InputMaybe<Pokemon_V2_Versionname_Set_Input>;
  pk_columns: Pokemon_V2_Versionname_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pokemon_V2_Versionname_ManyArgs = {
  updates: Array<Pokemon_V2_Versionname_Updates>;
};

/** column ordering options */
export enum Order_By {
  /** in ascending order, nulls last */
  Asc = 'asc',
  /** in ascending order, nulls first */
  AscNullsFirst = 'asc_nulls_first',
  /** in ascending order, nulls last */
  AscNullsLast = 'asc_nulls_last',
  /** in descending order, nulls first */
  Desc = 'desc',
  /** in descending order, nulls first */
  DescNullsFirst = 'desc_nulls_first',
  /** in descending order, nulls last */
  DescNullsLast = 'desc_nulls_last'
}

/** columns and relationships of "pokemon_v2_ability" */
export type Pokemon_V2_Ability = {
  __typename?: 'pokemon_v2_ability';
  generation_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  is_main_series: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_ability" */
export type Pokemon_V2_Ability_Aggregate = {
  __typename?: 'pokemon_v2_ability_aggregate';
  aggregate?: Maybe<Pokemon_V2_Ability_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Ability>;
};

/** aggregate fields of "pokemon_v2_ability" */
export type Pokemon_V2_Ability_Aggregate_Fields = {
  __typename?: 'pokemon_v2_ability_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Ability_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Ability_Max_Fields>;
  min?: Maybe<Pokemon_V2_Ability_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Ability_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Ability_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Ability_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Ability_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Ability_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Ability_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Ability_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_ability" */
export type Pokemon_V2_Ability_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Ability_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Ability_Avg_Fields = {
  __typename?: 'pokemon_v2_ability_avg_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_ability". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Ability_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Ability_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Ability_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Ability_Bool_Exp>>;
  generation_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  is_main_series?: InputMaybe<Boolean_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_ability" */
export enum Pokemon_V2_Ability_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2AbilityPkey = 'pokemon_v2_ability_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_ability" */
export type Pokemon_V2_Ability_Inc_Input = {
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_ability" */
export type Pokemon_V2_Ability_Insert_Input = {
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_main_series?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Ability_Max_Fields = {
  __typename?: 'pokemon_v2_ability_max_fields';
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Ability_Min_Fields = {
  __typename?: 'pokemon_v2_ability_min_fields';
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_ability" */
export type Pokemon_V2_Ability_Mutation_Response = {
  __typename?: 'pokemon_v2_ability_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Ability>;
};

/** on_conflict condition type for table "pokemon_v2_ability" */
export type Pokemon_V2_Ability_On_Conflict = {
  constraint: Pokemon_V2_Ability_Constraint;
  update_columns?: Array<Pokemon_V2_Ability_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Ability_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_ability". */
export type Pokemon_V2_Ability_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  is_main_series?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_ability */
export type Pokemon_V2_Ability_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_ability" */
export enum Pokemon_V2_Ability_Select_Column {
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  Id = 'id',
  /** column name */
  IsMainSeries = 'is_main_series',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_ability" */
export type Pokemon_V2_Ability_Set_Input = {
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_main_series?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Ability_Stddev_Fields = {
  __typename?: 'pokemon_v2_ability_stddev_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Ability_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_ability_stddev_pop_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Ability_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_ability_stddev_samp_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_ability" */
export type Pokemon_V2_Ability_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Ability_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Ability_Stream_Cursor_Value_Input = {
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_main_series?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Ability_Sum_Fields = {
  __typename?: 'pokemon_v2_ability_sum_fields';
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_ability" */
export enum Pokemon_V2_Ability_Update_Column {
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  Id = 'id',
  /** column name */
  IsMainSeries = 'is_main_series',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Ability_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Ability_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Ability_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Ability_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Ability_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_ability_var_pop_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Ability_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_ability_var_samp_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Ability_Variance_Fields = {
  __typename?: 'pokemon_v2_ability_variance_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_abilitychange" */
export type Pokemon_V2_Abilitychange = {
  __typename?: 'pokemon_v2_abilitychange';
  ability_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_abilitychange" */
export type Pokemon_V2_Abilitychange_Aggregate = {
  __typename?: 'pokemon_v2_abilitychange_aggregate';
  aggregate?: Maybe<Pokemon_V2_Abilitychange_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Abilitychange>;
};

/** aggregate fields of "pokemon_v2_abilitychange" */
export type Pokemon_V2_Abilitychange_Aggregate_Fields = {
  __typename?: 'pokemon_v2_abilitychange_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Abilitychange_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Abilitychange_Max_Fields>;
  min?: Maybe<Pokemon_V2_Abilitychange_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Abilitychange_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Abilitychange_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Abilitychange_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Abilitychange_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Abilitychange_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Abilitychange_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Abilitychange_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_abilitychange" */
export type Pokemon_V2_Abilitychange_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Abilitychange_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Abilitychange_Avg_Fields = {
  __typename?: 'pokemon_v2_abilitychange_avg_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_abilitychange". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Abilitychange_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Abilitychange_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Abilitychange_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Abilitychange_Bool_Exp>>;
  ability_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  version_group_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_abilitychange" */
export enum Pokemon_V2_Abilitychange_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2AbilitychangePkey = 'pokemon_v2_abilitychange_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_abilitychange" */
export type Pokemon_V2_Abilitychange_Inc_Input = {
  ability_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_abilitychange" */
export type Pokemon_V2_Abilitychange_Insert_Input = {
  ability_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Abilitychange_Max_Fields = {
  __typename?: 'pokemon_v2_abilitychange_max_fields';
  ability_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Abilitychange_Min_Fields = {
  __typename?: 'pokemon_v2_abilitychange_min_fields';
  ability_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_abilitychange" */
export type Pokemon_V2_Abilitychange_Mutation_Response = {
  __typename?: 'pokemon_v2_abilitychange_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Abilitychange>;
};

/** on_conflict condition type for table "pokemon_v2_abilitychange" */
export type Pokemon_V2_Abilitychange_On_Conflict = {
  constraint: Pokemon_V2_Abilitychange_Constraint;
  update_columns?: Array<Pokemon_V2_Abilitychange_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Abilitychange_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_abilitychange". */
export type Pokemon_V2_Abilitychange_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_abilitychange */
export type Pokemon_V2_Abilitychange_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_abilitychange" */
export enum Pokemon_V2_Abilitychange_Select_Column {
  /** column name */
  AbilityId = 'ability_id',
  /** column name */
  Id = 'id',
  /** column name */
  VersionGroupId = 'version_group_id'
}

/** input type for updating data in table "pokemon_v2_abilitychange" */
export type Pokemon_V2_Abilitychange_Set_Input = {
  ability_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Abilitychange_Stddev_Fields = {
  __typename?: 'pokemon_v2_abilitychange_stddev_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Abilitychange_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_abilitychange_stddev_pop_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Abilitychange_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_abilitychange_stddev_samp_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_abilitychange" */
export type Pokemon_V2_Abilitychange_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Abilitychange_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Abilitychange_Stream_Cursor_Value_Input = {
  ability_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Abilitychange_Sum_Fields = {
  __typename?: 'pokemon_v2_abilitychange_sum_fields';
  ability_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_abilitychange" */
export enum Pokemon_V2_Abilitychange_Update_Column {
  /** column name */
  AbilityId = 'ability_id',
  /** column name */
  Id = 'id',
  /** column name */
  VersionGroupId = 'version_group_id'
}

export type Pokemon_V2_Abilitychange_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Abilitychange_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Abilitychange_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Abilitychange_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Abilitychange_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_abilitychange_var_pop_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Abilitychange_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_abilitychange_var_samp_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Abilitychange_Variance_Fields = {
  __typename?: 'pokemon_v2_abilitychange_variance_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_abilitychangeeffecttext" */
export type Pokemon_V2_Abilitychangeeffecttext = {
  __typename?: 'pokemon_v2_abilitychangeeffecttext';
  ability_change_id?: Maybe<Scalars['Int']['output']>;
  effect: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_abilitychangeeffecttext" */
export type Pokemon_V2_Abilitychangeeffecttext_Aggregate = {
  __typename?: 'pokemon_v2_abilitychangeeffecttext_aggregate';
  aggregate?: Maybe<Pokemon_V2_Abilitychangeeffecttext_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Abilitychangeeffecttext>;
};

/** aggregate fields of "pokemon_v2_abilitychangeeffecttext" */
export type Pokemon_V2_Abilitychangeeffecttext_Aggregate_Fields = {
  __typename?: 'pokemon_v2_abilitychangeeffecttext_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Abilitychangeeffecttext_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Abilitychangeeffecttext_Max_Fields>;
  min?: Maybe<Pokemon_V2_Abilitychangeeffecttext_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Abilitychangeeffecttext_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Abilitychangeeffecttext_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Abilitychangeeffecttext_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Abilitychangeeffecttext_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Abilitychangeeffecttext_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Abilitychangeeffecttext_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Abilitychangeeffecttext_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_abilitychangeeffecttext" */
export type Pokemon_V2_Abilitychangeeffecttext_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Abilitychangeeffecttext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Abilitychangeeffecttext_Avg_Fields = {
  __typename?: 'pokemon_v2_abilitychangeeffecttext_avg_fields';
  ability_change_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_abilitychangeeffecttext". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Abilitychangeeffecttext_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Abilitychangeeffecttext_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Abilitychangeeffecttext_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Abilitychangeeffecttext_Bool_Exp>>;
  ability_change_id?: InputMaybe<Int_Comparison_Exp>;
  effect?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_abilitychangeeffecttext" */
export enum Pokemon_V2_Abilitychangeeffecttext_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2AbilitychangeeffecttextPkey = 'pokemon_v2_abilitychangeeffecttext_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_abilitychangeeffecttext" */
export type Pokemon_V2_Abilitychangeeffecttext_Inc_Input = {
  ability_change_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_abilitychangeeffecttext" */
export type Pokemon_V2_Abilitychangeeffecttext_Insert_Input = {
  ability_change_id?: InputMaybe<Scalars['Int']['input']>;
  effect?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Abilitychangeeffecttext_Max_Fields = {
  __typename?: 'pokemon_v2_abilitychangeeffecttext_max_fields';
  ability_change_id?: Maybe<Scalars['Int']['output']>;
  effect?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Abilitychangeeffecttext_Min_Fields = {
  __typename?: 'pokemon_v2_abilitychangeeffecttext_min_fields';
  ability_change_id?: Maybe<Scalars['Int']['output']>;
  effect?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_abilitychangeeffecttext" */
export type Pokemon_V2_Abilitychangeeffecttext_Mutation_Response = {
  __typename?: 'pokemon_v2_abilitychangeeffecttext_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Abilitychangeeffecttext>;
};

/** on_conflict condition type for table "pokemon_v2_abilitychangeeffecttext" */
export type Pokemon_V2_Abilitychangeeffecttext_On_Conflict = {
  constraint: Pokemon_V2_Abilitychangeeffecttext_Constraint;
  update_columns?: Array<Pokemon_V2_Abilitychangeeffecttext_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Abilitychangeeffecttext_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_abilitychangeeffecttext". */
export type Pokemon_V2_Abilitychangeeffecttext_Order_By = {
  ability_change_id?: InputMaybe<Order_By>;
  effect?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_abilitychangeeffecttext */
export type Pokemon_V2_Abilitychangeeffecttext_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_abilitychangeeffecttext" */
export enum Pokemon_V2_Abilitychangeeffecttext_Select_Column {
  /** column name */
  AbilityChangeId = 'ability_change_id',
  /** column name */
  Effect = 'effect',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id'
}

/** input type for updating data in table "pokemon_v2_abilitychangeeffecttext" */
export type Pokemon_V2_Abilitychangeeffecttext_Set_Input = {
  ability_change_id?: InputMaybe<Scalars['Int']['input']>;
  effect?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Abilitychangeeffecttext_Stddev_Fields = {
  __typename?: 'pokemon_v2_abilitychangeeffecttext_stddev_fields';
  ability_change_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Abilitychangeeffecttext_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_abilitychangeeffecttext_stddev_pop_fields';
  ability_change_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Abilitychangeeffecttext_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_abilitychangeeffecttext_stddev_samp_fields';
  ability_change_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_abilitychangeeffecttext" */
export type Pokemon_V2_Abilitychangeeffecttext_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Abilitychangeeffecttext_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Abilitychangeeffecttext_Stream_Cursor_Value_Input = {
  ability_change_id?: InputMaybe<Scalars['Int']['input']>;
  effect?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Abilitychangeeffecttext_Sum_Fields = {
  __typename?: 'pokemon_v2_abilitychangeeffecttext_sum_fields';
  ability_change_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_abilitychangeeffecttext" */
export enum Pokemon_V2_Abilitychangeeffecttext_Update_Column {
  /** column name */
  AbilityChangeId = 'ability_change_id',
  /** column name */
  Effect = 'effect',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id'
}

export type Pokemon_V2_Abilitychangeeffecttext_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Abilitychangeeffecttext_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Abilitychangeeffecttext_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Abilitychangeeffecttext_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Abilitychangeeffecttext_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_abilitychangeeffecttext_var_pop_fields';
  ability_change_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Abilitychangeeffecttext_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_abilitychangeeffecttext_var_samp_fields';
  ability_change_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Abilitychangeeffecttext_Variance_Fields = {
  __typename?: 'pokemon_v2_abilitychangeeffecttext_variance_fields';
  ability_change_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_abilityeffecttext" */
export type Pokemon_V2_Abilityeffecttext = {
  __typename?: 'pokemon_v2_abilityeffecttext';
  ability_id?: Maybe<Scalars['Int']['output']>;
  effect: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  short_effect: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_abilityeffecttext" */
export type Pokemon_V2_Abilityeffecttext_Aggregate = {
  __typename?: 'pokemon_v2_abilityeffecttext_aggregate';
  aggregate?: Maybe<Pokemon_V2_Abilityeffecttext_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Abilityeffecttext>;
};

/** aggregate fields of "pokemon_v2_abilityeffecttext" */
export type Pokemon_V2_Abilityeffecttext_Aggregate_Fields = {
  __typename?: 'pokemon_v2_abilityeffecttext_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Abilityeffecttext_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Abilityeffecttext_Max_Fields>;
  min?: Maybe<Pokemon_V2_Abilityeffecttext_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Abilityeffecttext_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Abilityeffecttext_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Abilityeffecttext_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Abilityeffecttext_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Abilityeffecttext_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Abilityeffecttext_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Abilityeffecttext_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_abilityeffecttext" */
export type Pokemon_V2_Abilityeffecttext_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Abilityeffecttext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Abilityeffecttext_Avg_Fields = {
  __typename?: 'pokemon_v2_abilityeffecttext_avg_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_abilityeffecttext". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Abilityeffecttext_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Abilityeffecttext_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Abilityeffecttext_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Abilityeffecttext_Bool_Exp>>;
  ability_id?: InputMaybe<Int_Comparison_Exp>;
  effect?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  short_effect?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_abilityeffecttext" */
export enum Pokemon_V2_Abilityeffecttext_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2AbilityeffecttextPkey = 'pokemon_v2_abilityeffecttext_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_abilityeffecttext" */
export type Pokemon_V2_Abilityeffecttext_Inc_Input = {
  ability_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_abilityeffecttext" */
export type Pokemon_V2_Abilityeffecttext_Insert_Input = {
  ability_id?: InputMaybe<Scalars['Int']['input']>;
  effect?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  short_effect?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Abilityeffecttext_Max_Fields = {
  __typename?: 'pokemon_v2_abilityeffecttext_max_fields';
  ability_id?: Maybe<Scalars['Int']['output']>;
  effect?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  short_effect?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Abilityeffecttext_Min_Fields = {
  __typename?: 'pokemon_v2_abilityeffecttext_min_fields';
  ability_id?: Maybe<Scalars['Int']['output']>;
  effect?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  short_effect?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_abilityeffecttext" */
export type Pokemon_V2_Abilityeffecttext_Mutation_Response = {
  __typename?: 'pokemon_v2_abilityeffecttext_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Abilityeffecttext>;
};

/** on_conflict condition type for table "pokemon_v2_abilityeffecttext" */
export type Pokemon_V2_Abilityeffecttext_On_Conflict = {
  constraint: Pokemon_V2_Abilityeffecttext_Constraint;
  update_columns?: Array<Pokemon_V2_Abilityeffecttext_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Abilityeffecttext_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_abilityeffecttext". */
export type Pokemon_V2_Abilityeffecttext_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  effect?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  short_effect?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_abilityeffecttext */
export type Pokemon_V2_Abilityeffecttext_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_abilityeffecttext" */
export enum Pokemon_V2_Abilityeffecttext_Select_Column {
  /** column name */
  AbilityId = 'ability_id',
  /** column name */
  Effect = 'effect',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  ShortEffect = 'short_effect'
}

/** input type for updating data in table "pokemon_v2_abilityeffecttext" */
export type Pokemon_V2_Abilityeffecttext_Set_Input = {
  ability_id?: InputMaybe<Scalars['Int']['input']>;
  effect?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  short_effect?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Abilityeffecttext_Stddev_Fields = {
  __typename?: 'pokemon_v2_abilityeffecttext_stddev_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Abilityeffecttext_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_abilityeffecttext_stddev_pop_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Abilityeffecttext_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_abilityeffecttext_stddev_samp_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_abilityeffecttext" */
export type Pokemon_V2_Abilityeffecttext_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Abilityeffecttext_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Abilityeffecttext_Stream_Cursor_Value_Input = {
  ability_id?: InputMaybe<Scalars['Int']['input']>;
  effect?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  short_effect?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Abilityeffecttext_Sum_Fields = {
  __typename?: 'pokemon_v2_abilityeffecttext_sum_fields';
  ability_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_abilityeffecttext" */
export enum Pokemon_V2_Abilityeffecttext_Update_Column {
  /** column name */
  AbilityId = 'ability_id',
  /** column name */
  Effect = 'effect',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  ShortEffect = 'short_effect'
}

export type Pokemon_V2_Abilityeffecttext_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Abilityeffecttext_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Abilityeffecttext_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Abilityeffecttext_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Abilityeffecttext_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_abilityeffecttext_var_pop_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Abilityeffecttext_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_abilityeffecttext_var_samp_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Abilityeffecttext_Variance_Fields = {
  __typename?: 'pokemon_v2_abilityeffecttext_variance_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_abilityflavortext" */
export type Pokemon_V2_Abilityflavortext = {
  __typename?: 'pokemon_v2_abilityflavortext';
  ability_id?: Maybe<Scalars['Int']['output']>;
  flavor_text: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_abilityflavortext" */
export type Pokemon_V2_Abilityflavortext_Aggregate = {
  __typename?: 'pokemon_v2_abilityflavortext_aggregate';
  aggregate?: Maybe<Pokemon_V2_Abilityflavortext_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Abilityflavortext>;
};

/** aggregate fields of "pokemon_v2_abilityflavortext" */
export type Pokemon_V2_Abilityflavortext_Aggregate_Fields = {
  __typename?: 'pokemon_v2_abilityflavortext_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Abilityflavortext_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Abilityflavortext_Max_Fields>;
  min?: Maybe<Pokemon_V2_Abilityflavortext_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Abilityflavortext_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Abilityflavortext_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Abilityflavortext_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Abilityflavortext_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Abilityflavortext_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Abilityflavortext_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Abilityflavortext_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_abilityflavortext" */
export type Pokemon_V2_Abilityflavortext_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Abilityflavortext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Abilityflavortext_Avg_Fields = {
  __typename?: 'pokemon_v2_abilityflavortext_avg_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_abilityflavortext". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Abilityflavortext_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Abilityflavortext_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Abilityflavortext_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Abilityflavortext_Bool_Exp>>;
  ability_id?: InputMaybe<Int_Comparison_Exp>;
  flavor_text?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  version_group_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_abilityflavortext" */
export enum Pokemon_V2_Abilityflavortext_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2AbilityflavortextPkey = 'pokemon_v2_abilityflavortext_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_abilityflavortext" */
export type Pokemon_V2_Abilityflavortext_Inc_Input = {
  ability_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_abilityflavortext" */
export type Pokemon_V2_Abilityflavortext_Insert_Input = {
  ability_id?: InputMaybe<Scalars['Int']['input']>;
  flavor_text?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Abilityflavortext_Max_Fields = {
  __typename?: 'pokemon_v2_abilityflavortext_max_fields';
  ability_id?: Maybe<Scalars['Int']['output']>;
  flavor_text?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Abilityflavortext_Min_Fields = {
  __typename?: 'pokemon_v2_abilityflavortext_min_fields';
  ability_id?: Maybe<Scalars['Int']['output']>;
  flavor_text?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_abilityflavortext" */
export type Pokemon_V2_Abilityflavortext_Mutation_Response = {
  __typename?: 'pokemon_v2_abilityflavortext_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Abilityflavortext>;
};

/** on_conflict condition type for table "pokemon_v2_abilityflavortext" */
export type Pokemon_V2_Abilityflavortext_On_Conflict = {
  constraint: Pokemon_V2_Abilityflavortext_Constraint;
  update_columns?: Array<Pokemon_V2_Abilityflavortext_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Abilityflavortext_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_abilityflavortext". */
export type Pokemon_V2_Abilityflavortext_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  flavor_text?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_abilityflavortext */
export type Pokemon_V2_Abilityflavortext_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_abilityflavortext" */
export enum Pokemon_V2_Abilityflavortext_Select_Column {
  /** column name */
  AbilityId = 'ability_id',
  /** column name */
  FlavorText = 'flavor_text',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  VersionGroupId = 'version_group_id'
}

/** input type for updating data in table "pokemon_v2_abilityflavortext" */
export type Pokemon_V2_Abilityflavortext_Set_Input = {
  ability_id?: InputMaybe<Scalars['Int']['input']>;
  flavor_text?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Abilityflavortext_Stddev_Fields = {
  __typename?: 'pokemon_v2_abilityflavortext_stddev_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Abilityflavortext_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_abilityflavortext_stddev_pop_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Abilityflavortext_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_abilityflavortext_stddev_samp_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_abilityflavortext" */
export type Pokemon_V2_Abilityflavortext_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Abilityflavortext_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Abilityflavortext_Stream_Cursor_Value_Input = {
  ability_id?: InputMaybe<Scalars['Int']['input']>;
  flavor_text?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Abilityflavortext_Sum_Fields = {
  __typename?: 'pokemon_v2_abilityflavortext_sum_fields';
  ability_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_abilityflavortext" */
export enum Pokemon_V2_Abilityflavortext_Update_Column {
  /** column name */
  AbilityId = 'ability_id',
  /** column name */
  FlavorText = 'flavor_text',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  VersionGroupId = 'version_group_id'
}

export type Pokemon_V2_Abilityflavortext_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Abilityflavortext_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Abilityflavortext_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Abilityflavortext_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Abilityflavortext_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_abilityflavortext_var_pop_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Abilityflavortext_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_abilityflavortext_var_samp_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Abilityflavortext_Variance_Fields = {
  __typename?: 'pokemon_v2_abilityflavortext_variance_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_abilityname" */
export type Pokemon_V2_Abilityname = {
  __typename?: 'pokemon_v2_abilityname';
  ability_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_abilityname" */
export type Pokemon_V2_Abilityname_Aggregate = {
  __typename?: 'pokemon_v2_abilityname_aggregate';
  aggregate?: Maybe<Pokemon_V2_Abilityname_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Abilityname>;
};

/** aggregate fields of "pokemon_v2_abilityname" */
export type Pokemon_V2_Abilityname_Aggregate_Fields = {
  __typename?: 'pokemon_v2_abilityname_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Abilityname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Abilityname_Max_Fields>;
  min?: Maybe<Pokemon_V2_Abilityname_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Abilityname_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Abilityname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Abilityname_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Abilityname_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Abilityname_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Abilityname_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Abilityname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_abilityname" */
export type Pokemon_V2_Abilityname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Abilityname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Abilityname_Avg_Fields = {
  __typename?: 'pokemon_v2_abilityname_avg_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_abilityname". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Abilityname_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Abilityname_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Abilityname_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Abilityname_Bool_Exp>>;
  ability_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_abilityname" */
export enum Pokemon_V2_Abilityname_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2AbilitynamePkey = 'pokemon_v2_abilityname_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_abilityname" */
export type Pokemon_V2_Abilityname_Inc_Input = {
  ability_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_abilityname" */
export type Pokemon_V2_Abilityname_Insert_Input = {
  ability_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Abilityname_Max_Fields = {
  __typename?: 'pokemon_v2_abilityname_max_fields';
  ability_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Abilityname_Min_Fields = {
  __typename?: 'pokemon_v2_abilityname_min_fields';
  ability_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_abilityname" */
export type Pokemon_V2_Abilityname_Mutation_Response = {
  __typename?: 'pokemon_v2_abilityname_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Abilityname>;
};

/** on_conflict condition type for table "pokemon_v2_abilityname" */
export type Pokemon_V2_Abilityname_On_Conflict = {
  constraint: Pokemon_V2_Abilityname_Constraint;
  update_columns?: Array<Pokemon_V2_Abilityname_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Abilityname_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_abilityname". */
export type Pokemon_V2_Abilityname_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_abilityname */
export type Pokemon_V2_Abilityname_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_abilityname" */
export enum Pokemon_V2_Abilityname_Select_Column {
  /** column name */
  AbilityId = 'ability_id',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_abilityname" */
export type Pokemon_V2_Abilityname_Set_Input = {
  ability_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Abilityname_Stddev_Fields = {
  __typename?: 'pokemon_v2_abilityname_stddev_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Abilityname_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_abilityname_stddev_pop_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Abilityname_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_abilityname_stddev_samp_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_abilityname" */
export type Pokemon_V2_Abilityname_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Abilityname_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Abilityname_Stream_Cursor_Value_Input = {
  ability_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Abilityname_Sum_Fields = {
  __typename?: 'pokemon_v2_abilityname_sum_fields';
  ability_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_abilityname" */
export enum Pokemon_V2_Abilityname_Update_Column {
  /** column name */
  AbilityId = 'ability_id',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Abilityname_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Abilityname_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Abilityname_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Abilityname_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Abilityname_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_abilityname_var_pop_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Abilityname_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_abilityname_var_samp_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Abilityname_Variance_Fields = {
  __typename?: 'pokemon_v2_abilityname_variance_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_berry" */
export type Pokemon_V2_Berry = {
  __typename?: 'pokemon_v2_berry';
  berry_firmness_id?: Maybe<Scalars['Int']['output']>;
  growth_time: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  item_id?: Maybe<Scalars['Int']['output']>;
  max_harvest: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  natural_gift_power: Scalars['Int']['output'];
  natural_gift_type_id?: Maybe<Scalars['Int']['output']>;
  size: Scalars['Int']['output'];
  smoothness: Scalars['Int']['output'];
  soil_dryness: Scalars['Int']['output'];
};

/** aggregated selection of "pokemon_v2_berry" */
export type Pokemon_V2_Berry_Aggregate = {
  __typename?: 'pokemon_v2_berry_aggregate';
  aggregate?: Maybe<Pokemon_V2_Berry_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Berry>;
};

/** aggregate fields of "pokemon_v2_berry" */
export type Pokemon_V2_Berry_Aggregate_Fields = {
  __typename?: 'pokemon_v2_berry_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Berry_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Berry_Max_Fields>;
  min?: Maybe<Pokemon_V2_Berry_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Berry_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Berry_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Berry_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Berry_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Berry_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Berry_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Berry_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_berry" */
export type Pokemon_V2_Berry_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Berry_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Berry_Avg_Fields = {
  __typename?: 'pokemon_v2_berry_avg_fields';
  berry_firmness_id?: Maybe<Scalars['Float']['output']>;
  growth_time?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  max_harvest?: Maybe<Scalars['Float']['output']>;
  natural_gift_power?: Maybe<Scalars['Float']['output']>;
  natural_gift_type_id?: Maybe<Scalars['Float']['output']>;
  size?: Maybe<Scalars['Float']['output']>;
  smoothness?: Maybe<Scalars['Float']['output']>;
  soil_dryness?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_berry". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Berry_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Berry_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Berry_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Berry_Bool_Exp>>;
  berry_firmness_id?: InputMaybe<Int_Comparison_Exp>;
  growth_time?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  item_id?: InputMaybe<Int_Comparison_Exp>;
  max_harvest?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  natural_gift_power?: InputMaybe<Int_Comparison_Exp>;
  natural_gift_type_id?: InputMaybe<Int_Comparison_Exp>;
  size?: InputMaybe<Int_Comparison_Exp>;
  smoothness?: InputMaybe<Int_Comparison_Exp>;
  soil_dryness?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_berry" */
export enum Pokemon_V2_Berry_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2BerryPkey = 'pokemon_v2_berry_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_berry" */
export type Pokemon_V2_Berry_Inc_Input = {
  berry_firmness_id?: InputMaybe<Scalars['Int']['input']>;
  growth_time?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  item_id?: InputMaybe<Scalars['Int']['input']>;
  max_harvest?: InputMaybe<Scalars['Int']['input']>;
  natural_gift_power?: InputMaybe<Scalars['Int']['input']>;
  natural_gift_type_id?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  smoothness?: InputMaybe<Scalars['Int']['input']>;
  soil_dryness?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_berry" */
export type Pokemon_V2_Berry_Insert_Input = {
  berry_firmness_id?: InputMaybe<Scalars['Int']['input']>;
  growth_time?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  item_id?: InputMaybe<Scalars['Int']['input']>;
  max_harvest?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  natural_gift_power?: InputMaybe<Scalars['Int']['input']>;
  natural_gift_type_id?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  smoothness?: InputMaybe<Scalars['Int']['input']>;
  soil_dryness?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Berry_Max_Fields = {
  __typename?: 'pokemon_v2_berry_max_fields';
  berry_firmness_id?: Maybe<Scalars['Int']['output']>;
  growth_time?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
  max_harvest?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  natural_gift_power?: Maybe<Scalars['Int']['output']>;
  natural_gift_type_id?: Maybe<Scalars['Int']['output']>;
  size?: Maybe<Scalars['Int']['output']>;
  smoothness?: Maybe<Scalars['Int']['output']>;
  soil_dryness?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Berry_Min_Fields = {
  __typename?: 'pokemon_v2_berry_min_fields';
  berry_firmness_id?: Maybe<Scalars['Int']['output']>;
  growth_time?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
  max_harvest?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  natural_gift_power?: Maybe<Scalars['Int']['output']>;
  natural_gift_type_id?: Maybe<Scalars['Int']['output']>;
  size?: Maybe<Scalars['Int']['output']>;
  smoothness?: Maybe<Scalars['Int']['output']>;
  soil_dryness?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_berry" */
export type Pokemon_V2_Berry_Mutation_Response = {
  __typename?: 'pokemon_v2_berry_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Berry>;
};

/** on_conflict condition type for table "pokemon_v2_berry" */
export type Pokemon_V2_Berry_On_Conflict = {
  constraint: Pokemon_V2_Berry_Constraint;
  update_columns?: Array<Pokemon_V2_Berry_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Berry_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_berry". */
export type Pokemon_V2_Berry_Order_By = {
  berry_firmness_id?: InputMaybe<Order_By>;
  growth_time?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  max_harvest?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  natural_gift_power?: InputMaybe<Order_By>;
  natural_gift_type_id?: InputMaybe<Order_By>;
  size?: InputMaybe<Order_By>;
  smoothness?: InputMaybe<Order_By>;
  soil_dryness?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_berry */
export type Pokemon_V2_Berry_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_berry" */
export enum Pokemon_V2_Berry_Select_Column {
  /** column name */
  BerryFirmnessId = 'berry_firmness_id',
  /** column name */
  GrowthTime = 'growth_time',
  /** column name */
  Id = 'id',
  /** column name */
  ItemId = 'item_id',
  /** column name */
  MaxHarvest = 'max_harvest',
  /** column name */
  Name = 'name',
  /** column name */
  NaturalGiftPower = 'natural_gift_power',
  /** column name */
  NaturalGiftTypeId = 'natural_gift_type_id',
  /** column name */
  Size = 'size',
  /** column name */
  Smoothness = 'smoothness',
  /** column name */
  SoilDryness = 'soil_dryness'
}

/** input type for updating data in table "pokemon_v2_berry" */
export type Pokemon_V2_Berry_Set_Input = {
  berry_firmness_id?: InputMaybe<Scalars['Int']['input']>;
  growth_time?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  item_id?: InputMaybe<Scalars['Int']['input']>;
  max_harvest?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  natural_gift_power?: InputMaybe<Scalars['Int']['input']>;
  natural_gift_type_id?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  smoothness?: InputMaybe<Scalars['Int']['input']>;
  soil_dryness?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Berry_Stddev_Fields = {
  __typename?: 'pokemon_v2_berry_stddev_fields';
  berry_firmness_id?: Maybe<Scalars['Float']['output']>;
  growth_time?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  max_harvest?: Maybe<Scalars['Float']['output']>;
  natural_gift_power?: Maybe<Scalars['Float']['output']>;
  natural_gift_type_id?: Maybe<Scalars['Float']['output']>;
  size?: Maybe<Scalars['Float']['output']>;
  smoothness?: Maybe<Scalars['Float']['output']>;
  soil_dryness?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Berry_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_berry_stddev_pop_fields';
  berry_firmness_id?: Maybe<Scalars['Float']['output']>;
  growth_time?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  max_harvest?: Maybe<Scalars['Float']['output']>;
  natural_gift_power?: Maybe<Scalars['Float']['output']>;
  natural_gift_type_id?: Maybe<Scalars['Float']['output']>;
  size?: Maybe<Scalars['Float']['output']>;
  smoothness?: Maybe<Scalars['Float']['output']>;
  soil_dryness?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Berry_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_berry_stddev_samp_fields';
  berry_firmness_id?: Maybe<Scalars['Float']['output']>;
  growth_time?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  max_harvest?: Maybe<Scalars['Float']['output']>;
  natural_gift_power?: Maybe<Scalars['Float']['output']>;
  natural_gift_type_id?: Maybe<Scalars['Float']['output']>;
  size?: Maybe<Scalars['Float']['output']>;
  smoothness?: Maybe<Scalars['Float']['output']>;
  soil_dryness?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_berry" */
export type Pokemon_V2_Berry_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Berry_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Berry_Stream_Cursor_Value_Input = {
  berry_firmness_id?: InputMaybe<Scalars['Int']['input']>;
  growth_time?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  item_id?: InputMaybe<Scalars['Int']['input']>;
  max_harvest?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  natural_gift_power?: InputMaybe<Scalars['Int']['input']>;
  natural_gift_type_id?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  smoothness?: InputMaybe<Scalars['Int']['input']>;
  soil_dryness?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Berry_Sum_Fields = {
  __typename?: 'pokemon_v2_berry_sum_fields';
  berry_firmness_id?: Maybe<Scalars['Int']['output']>;
  growth_time?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
  max_harvest?: Maybe<Scalars['Int']['output']>;
  natural_gift_power?: Maybe<Scalars['Int']['output']>;
  natural_gift_type_id?: Maybe<Scalars['Int']['output']>;
  size?: Maybe<Scalars['Int']['output']>;
  smoothness?: Maybe<Scalars['Int']['output']>;
  soil_dryness?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_berry" */
export enum Pokemon_V2_Berry_Update_Column {
  /** column name */
  BerryFirmnessId = 'berry_firmness_id',
  /** column name */
  GrowthTime = 'growth_time',
  /** column name */
  Id = 'id',
  /** column name */
  ItemId = 'item_id',
  /** column name */
  MaxHarvest = 'max_harvest',
  /** column name */
  Name = 'name',
  /** column name */
  NaturalGiftPower = 'natural_gift_power',
  /** column name */
  NaturalGiftTypeId = 'natural_gift_type_id',
  /** column name */
  Size = 'size',
  /** column name */
  Smoothness = 'smoothness',
  /** column name */
  SoilDryness = 'soil_dryness'
}

export type Pokemon_V2_Berry_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Berry_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Berry_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Berry_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Berry_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_berry_var_pop_fields';
  berry_firmness_id?: Maybe<Scalars['Float']['output']>;
  growth_time?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  max_harvest?: Maybe<Scalars['Float']['output']>;
  natural_gift_power?: Maybe<Scalars['Float']['output']>;
  natural_gift_type_id?: Maybe<Scalars['Float']['output']>;
  size?: Maybe<Scalars['Float']['output']>;
  smoothness?: Maybe<Scalars['Float']['output']>;
  soil_dryness?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Berry_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_berry_var_samp_fields';
  berry_firmness_id?: Maybe<Scalars['Float']['output']>;
  growth_time?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  max_harvest?: Maybe<Scalars['Float']['output']>;
  natural_gift_power?: Maybe<Scalars['Float']['output']>;
  natural_gift_type_id?: Maybe<Scalars['Float']['output']>;
  size?: Maybe<Scalars['Float']['output']>;
  smoothness?: Maybe<Scalars['Float']['output']>;
  soil_dryness?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Berry_Variance_Fields = {
  __typename?: 'pokemon_v2_berry_variance_fields';
  berry_firmness_id?: Maybe<Scalars['Float']['output']>;
  growth_time?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  max_harvest?: Maybe<Scalars['Float']['output']>;
  natural_gift_power?: Maybe<Scalars['Float']['output']>;
  natural_gift_type_id?: Maybe<Scalars['Float']['output']>;
  size?: Maybe<Scalars['Float']['output']>;
  smoothness?: Maybe<Scalars['Float']['output']>;
  soil_dryness?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_berryfirmness" */
export type Pokemon_V2_Berryfirmness = {
  __typename?: 'pokemon_v2_berryfirmness';
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_berryfirmness" */
export type Pokemon_V2_Berryfirmness_Aggregate = {
  __typename?: 'pokemon_v2_berryfirmness_aggregate';
  aggregate?: Maybe<Pokemon_V2_Berryfirmness_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Berryfirmness>;
};

/** aggregate fields of "pokemon_v2_berryfirmness" */
export type Pokemon_V2_Berryfirmness_Aggregate_Fields = {
  __typename?: 'pokemon_v2_berryfirmness_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Berryfirmness_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Berryfirmness_Max_Fields>;
  min?: Maybe<Pokemon_V2_Berryfirmness_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Berryfirmness_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Berryfirmness_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Berryfirmness_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Berryfirmness_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Berryfirmness_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Berryfirmness_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Berryfirmness_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_berryfirmness" */
export type Pokemon_V2_Berryfirmness_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Berryfirmness_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Berryfirmness_Avg_Fields = {
  __typename?: 'pokemon_v2_berryfirmness_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_berryfirmness". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Berryfirmness_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Berryfirmness_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Berryfirmness_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Berryfirmness_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_berryfirmness" */
export enum Pokemon_V2_Berryfirmness_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2BerryfirmnessPkey = 'pokemon_v2_berryfirmness_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_berryfirmness" */
export type Pokemon_V2_Berryfirmness_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_berryfirmness" */
export type Pokemon_V2_Berryfirmness_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Berryfirmness_Max_Fields = {
  __typename?: 'pokemon_v2_berryfirmness_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Berryfirmness_Min_Fields = {
  __typename?: 'pokemon_v2_berryfirmness_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_berryfirmness" */
export type Pokemon_V2_Berryfirmness_Mutation_Response = {
  __typename?: 'pokemon_v2_berryfirmness_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Berryfirmness>;
};

/** on_conflict condition type for table "pokemon_v2_berryfirmness" */
export type Pokemon_V2_Berryfirmness_On_Conflict = {
  constraint: Pokemon_V2_Berryfirmness_Constraint;
  update_columns?: Array<Pokemon_V2_Berryfirmness_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Berryfirmness_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_berryfirmness". */
export type Pokemon_V2_Berryfirmness_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_berryfirmness */
export type Pokemon_V2_Berryfirmness_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_berryfirmness" */
export enum Pokemon_V2_Berryfirmness_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_berryfirmness" */
export type Pokemon_V2_Berryfirmness_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Berryfirmness_Stddev_Fields = {
  __typename?: 'pokemon_v2_berryfirmness_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Berryfirmness_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_berryfirmness_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Berryfirmness_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_berryfirmness_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_berryfirmness" */
export type Pokemon_V2_Berryfirmness_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Berryfirmness_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Berryfirmness_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Berryfirmness_Sum_Fields = {
  __typename?: 'pokemon_v2_berryfirmness_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_berryfirmness" */
export enum Pokemon_V2_Berryfirmness_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Berryfirmness_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Berryfirmness_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Berryfirmness_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Berryfirmness_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Berryfirmness_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_berryfirmness_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Berryfirmness_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_berryfirmness_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Berryfirmness_Variance_Fields = {
  __typename?: 'pokemon_v2_berryfirmness_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_berryfirmnessname" */
export type Pokemon_V2_Berryfirmnessname = {
  __typename?: 'pokemon_v2_berryfirmnessname';
  berry_firmness_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_berryfirmnessname" */
export type Pokemon_V2_Berryfirmnessname_Aggregate = {
  __typename?: 'pokemon_v2_berryfirmnessname_aggregate';
  aggregate?: Maybe<Pokemon_V2_Berryfirmnessname_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Berryfirmnessname>;
};

/** aggregate fields of "pokemon_v2_berryfirmnessname" */
export type Pokemon_V2_Berryfirmnessname_Aggregate_Fields = {
  __typename?: 'pokemon_v2_berryfirmnessname_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Berryfirmnessname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Berryfirmnessname_Max_Fields>;
  min?: Maybe<Pokemon_V2_Berryfirmnessname_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Berryfirmnessname_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Berryfirmnessname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Berryfirmnessname_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Berryfirmnessname_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Berryfirmnessname_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Berryfirmnessname_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Berryfirmnessname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_berryfirmnessname" */
export type Pokemon_V2_Berryfirmnessname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Berryfirmnessname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Berryfirmnessname_Avg_Fields = {
  __typename?: 'pokemon_v2_berryfirmnessname_avg_fields';
  berry_firmness_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_berryfirmnessname". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Berryfirmnessname_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Berryfirmnessname_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Berryfirmnessname_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Berryfirmnessname_Bool_Exp>>;
  berry_firmness_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_berryfirmnessname" */
export enum Pokemon_V2_Berryfirmnessname_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2BerryfirmnessnamePkey = 'pokemon_v2_berryfirmnessname_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_berryfirmnessname" */
export type Pokemon_V2_Berryfirmnessname_Inc_Input = {
  berry_firmness_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_berryfirmnessname" */
export type Pokemon_V2_Berryfirmnessname_Insert_Input = {
  berry_firmness_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Berryfirmnessname_Max_Fields = {
  __typename?: 'pokemon_v2_berryfirmnessname_max_fields';
  berry_firmness_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Berryfirmnessname_Min_Fields = {
  __typename?: 'pokemon_v2_berryfirmnessname_min_fields';
  berry_firmness_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_berryfirmnessname" */
export type Pokemon_V2_Berryfirmnessname_Mutation_Response = {
  __typename?: 'pokemon_v2_berryfirmnessname_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Berryfirmnessname>;
};

/** on_conflict condition type for table "pokemon_v2_berryfirmnessname" */
export type Pokemon_V2_Berryfirmnessname_On_Conflict = {
  constraint: Pokemon_V2_Berryfirmnessname_Constraint;
  update_columns?: Array<Pokemon_V2_Berryfirmnessname_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Berryfirmnessname_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_berryfirmnessname". */
export type Pokemon_V2_Berryfirmnessname_Order_By = {
  berry_firmness_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_berryfirmnessname */
export type Pokemon_V2_Berryfirmnessname_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_berryfirmnessname" */
export enum Pokemon_V2_Berryfirmnessname_Select_Column {
  /** column name */
  BerryFirmnessId = 'berry_firmness_id',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_berryfirmnessname" */
export type Pokemon_V2_Berryfirmnessname_Set_Input = {
  berry_firmness_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Berryfirmnessname_Stddev_Fields = {
  __typename?: 'pokemon_v2_berryfirmnessname_stddev_fields';
  berry_firmness_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Berryfirmnessname_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_berryfirmnessname_stddev_pop_fields';
  berry_firmness_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Berryfirmnessname_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_berryfirmnessname_stddev_samp_fields';
  berry_firmness_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_berryfirmnessname" */
export type Pokemon_V2_Berryfirmnessname_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Berryfirmnessname_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Berryfirmnessname_Stream_Cursor_Value_Input = {
  berry_firmness_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Berryfirmnessname_Sum_Fields = {
  __typename?: 'pokemon_v2_berryfirmnessname_sum_fields';
  berry_firmness_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_berryfirmnessname" */
export enum Pokemon_V2_Berryfirmnessname_Update_Column {
  /** column name */
  BerryFirmnessId = 'berry_firmness_id',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Berryfirmnessname_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Berryfirmnessname_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Berryfirmnessname_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Berryfirmnessname_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Berryfirmnessname_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_berryfirmnessname_var_pop_fields';
  berry_firmness_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Berryfirmnessname_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_berryfirmnessname_var_samp_fields';
  berry_firmness_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Berryfirmnessname_Variance_Fields = {
  __typename?: 'pokemon_v2_berryfirmnessname_variance_fields';
  berry_firmness_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_berryflavor" */
export type Pokemon_V2_Berryflavor = {
  __typename?: 'pokemon_v2_berryflavor';
  contest_type_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_berryflavor" */
export type Pokemon_V2_Berryflavor_Aggregate = {
  __typename?: 'pokemon_v2_berryflavor_aggregate';
  aggregate?: Maybe<Pokemon_V2_Berryflavor_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Berryflavor>;
};

/** aggregate fields of "pokemon_v2_berryflavor" */
export type Pokemon_V2_Berryflavor_Aggregate_Fields = {
  __typename?: 'pokemon_v2_berryflavor_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Berryflavor_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Berryflavor_Max_Fields>;
  min?: Maybe<Pokemon_V2_Berryflavor_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Berryflavor_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Berryflavor_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Berryflavor_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Berryflavor_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Berryflavor_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Berryflavor_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Berryflavor_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_berryflavor" */
export type Pokemon_V2_Berryflavor_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Berryflavor_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Berryflavor_Avg_Fields = {
  __typename?: 'pokemon_v2_berryflavor_avg_fields';
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_berryflavor". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Berryflavor_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Berryflavor_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Berryflavor_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Berryflavor_Bool_Exp>>;
  contest_type_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_berryflavor" */
export enum Pokemon_V2_Berryflavor_Constraint {
  /** unique or primary key constraint on columns "contest_type_id" */
  PokemonV2BerryflavorContestTypeIdB2156d62Uniq = 'pokemon_v2_berryflavor_contest_type_id_b2156d62_uniq',
  /** unique or primary key constraint on columns "id" */
  PokemonV2BerryflavorPkey = 'pokemon_v2_berryflavor_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_berryflavor" */
export type Pokemon_V2_Berryflavor_Inc_Input = {
  contest_type_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_berryflavor" */
export type Pokemon_V2_Berryflavor_Insert_Input = {
  contest_type_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Berryflavor_Max_Fields = {
  __typename?: 'pokemon_v2_berryflavor_max_fields';
  contest_type_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Berryflavor_Min_Fields = {
  __typename?: 'pokemon_v2_berryflavor_min_fields';
  contest_type_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_berryflavor" */
export type Pokemon_V2_Berryflavor_Mutation_Response = {
  __typename?: 'pokemon_v2_berryflavor_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Berryflavor>;
};

/** on_conflict condition type for table "pokemon_v2_berryflavor" */
export type Pokemon_V2_Berryflavor_On_Conflict = {
  constraint: Pokemon_V2_Berryflavor_Constraint;
  update_columns?: Array<Pokemon_V2_Berryflavor_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Berryflavor_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_berryflavor". */
export type Pokemon_V2_Berryflavor_Order_By = {
  contest_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_berryflavor */
export type Pokemon_V2_Berryflavor_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_berryflavor" */
export enum Pokemon_V2_Berryflavor_Select_Column {
  /** column name */
  ContestTypeId = 'contest_type_id',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_berryflavor" */
export type Pokemon_V2_Berryflavor_Set_Input = {
  contest_type_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Berryflavor_Stddev_Fields = {
  __typename?: 'pokemon_v2_berryflavor_stddev_fields';
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Berryflavor_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_berryflavor_stddev_pop_fields';
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Berryflavor_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_berryflavor_stddev_samp_fields';
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_berryflavor" */
export type Pokemon_V2_Berryflavor_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Berryflavor_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Berryflavor_Stream_Cursor_Value_Input = {
  contest_type_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Berryflavor_Sum_Fields = {
  __typename?: 'pokemon_v2_berryflavor_sum_fields';
  contest_type_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_berryflavor" */
export enum Pokemon_V2_Berryflavor_Update_Column {
  /** column name */
  ContestTypeId = 'contest_type_id',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Berryflavor_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Berryflavor_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Berryflavor_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Berryflavor_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Berryflavor_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_berryflavor_var_pop_fields';
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Berryflavor_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_berryflavor_var_samp_fields';
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Berryflavor_Variance_Fields = {
  __typename?: 'pokemon_v2_berryflavor_variance_fields';
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_berryflavormap" */
export type Pokemon_V2_Berryflavormap = {
  __typename?: 'pokemon_v2_berryflavormap';
  berry_flavor_id?: Maybe<Scalars['Int']['output']>;
  berry_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  potency: Scalars['Int']['output'];
};

/** aggregated selection of "pokemon_v2_berryflavormap" */
export type Pokemon_V2_Berryflavormap_Aggregate = {
  __typename?: 'pokemon_v2_berryflavormap_aggregate';
  aggregate?: Maybe<Pokemon_V2_Berryflavormap_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Berryflavormap>;
};

/** aggregate fields of "pokemon_v2_berryflavormap" */
export type Pokemon_V2_Berryflavormap_Aggregate_Fields = {
  __typename?: 'pokemon_v2_berryflavormap_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Berryflavormap_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Berryflavormap_Max_Fields>;
  min?: Maybe<Pokemon_V2_Berryflavormap_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Berryflavormap_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Berryflavormap_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Berryflavormap_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Berryflavormap_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Berryflavormap_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Berryflavormap_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Berryflavormap_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_berryflavormap" */
export type Pokemon_V2_Berryflavormap_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Berryflavormap_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Berryflavormap_Avg_Fields = {
  __typename?: 'pokemon_v2_berryflavormap_avg_fields';
  berry_flavor_id?: Maybe<Scalars['Float']['output']>;
  berry_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  potency?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_berryflavormap". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Berryflavormap_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Berryflavormap_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Berryflavormap_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Berryflavormap_Bool_Exp>>;
  berry_flavor_id?: InputMaybe<Int_Comparison_Exp>;
  berry_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  potency?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_berryflavormap" */
export enum Pokemon_V2_Berryflavormap_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2BerryflavormapPkey = 'pokemon_v2_berryflavormap_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_berryflavormap" */
export type Pokemon_V2_Berryflavormap_Inc_Input = {
  berry_flavor_id?: InputMaybe<Scalars['Int']['input']>;
  berry_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  potency?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_berryflavormap" */
export type Pokemon_V2_Berryflavormap_Insert_Input = {
  berry_flavor_id?: InputMaybe<Scalars['Int']['input']>;
  berry_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  potency?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Berryflavormap_Max_Fields = {
  __typename?: 'pokemon_v2_berryflavormap_max_fields';
  berry_flavor_id?: Maybe<Scalars['Int']['output']>;
  berry_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  potency?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Berryflavormap_Min_Fields = {
  __typename?: 'pokemon_v2_berryflavormap_min_fields';
  berry_flavor_id?: Maybe<Scalars['Int']['output']>;
  berry_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  potency?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_berryflavormap" */
export type Pokemon_V2_Berryflavormap_Mutation_Response = {
  __typename?: 'pokemon_v2_berryflavormap_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Berryflavormap>;
};

/** on_conflict condition type for table "pokemon_v2_berryflavormap" */
export type Pokemon_V2_Berryflavormap_On_Conflict = {
  constraint: Pokemon_V2_Berryflavormap_Constraint;
  update_columns?: Array<Pokemon_V2_Berryflavormap_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Berryflavormap_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_berryflavormap". */
export type Pokemon_V2_Berryflavormap_Order_By = {
  berry_flavor_id?: InputMaybe<Order_By>;
  berry_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  potency?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_berryflavormap */
export type Pokemon_V2_Berryflavormap_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_berryflavormap" */
export enum Pokemon_V2_Berryflavormap_Select_Column {
  /** column name */
  BerryFlavorId = 'berry_flavor_id',
  /** column name */
  BerryId = 'berry_id',
  /** column name */
  Id = 'id',
  /** column name */
  Potency = 'potency'
}

/** input type for updating data in table "pokemon_v2_berryflavormap" */
export type Pokemon_V2_Berryflavormap_Set_Input = {
  berry_flavor_id?: InputMaybe<Scalars['Int']['input']>;
  berry_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  potency?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Berryflavormap_Stddev_Fields = {
  __typename?: 'pokemon_v2_berryflavormap_stddev_fields';
  berry_flavor_id?: Maybe<Scalars['Float']['output']>;
  berry_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  potency?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Berryflavormap_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_berryflavormap_stddev_pop_fields';
  berry_flavor_id?: Maybe<Scalars['Float']['output']>;
  berry_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  potency?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Berryflavormap_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_berryflavormap_stddev_samp_fields';
  berry_flavor_id?: Maybe<Scalars['Float']['output']>;
  berry_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  potency?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_berryflavormap" */
export type Pokemon_V2_Berryflavormap_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Berryflavormap_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Berryflavormap_Stream_Cursor_Value_Input = {
  berry_flavor_id?: InputMaybe<Scalars['Int']['input']>;
  berry_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  potency?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Berryflavormap_Sum_Fields = {
  __typename?: 'pokemon_v2_berryflavormap_sum_fields';
  berry_flavor_id?: Maybe<Scalars['Int']['output']>;
  berry_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  potency?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_berryflavormap" */
export enum Pokemon_V2_Berryflavormap_Update_Column {
  /** column name */
  BerryFlavorId = 'berry_flavor_id',
  /** column name */
  BerryId = 'berry_id',
  /** column name */
  Id = 'id',
  /** column name */
  Potency = 'potency'
}

export type Pokemon_V2_Berryflavormap_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Berryflavormap_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Berryflavormap_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Berryflavormap_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Berryflavormap_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_berryflavormap_var_pop_fields';
  berry_flavor_id?: Maybe<Scalars['Float']['output']>;
  berry_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  potency?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Berryflavormap_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_berryflavormap_var_samp_fields';
  berry_flavor_id?: Maybe<Scalars['Float']['output']>;
  berry_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  potency?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Berryflavormap_Variance_Fields = {
  __typename?: 'pokemon_v2_berryflavormap_variance_fields';
  berry_flavor_id?: Maybe<Scalars['Float']['output']>;
  berry_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  potency?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_berryflavorname" */
export type Pokemon_V2_Berryflavorname = {
  __typename?: 'pokemon_v2_berryflavorname';
  berry_flavor_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_berryflavorname" */
export type Pokemon_V2_Berryflavorname_Aggregate = {
  __typename?: 'pokemon_v2_berryflavorname_aggregate';
  aggregate?: Maybe<Pokemon_V2_Berryflavorname_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Berryflavorname>;
};

/** aggregate fields of "pokemon_v2_berryflavorname" */
export type Pokemon_V2_Berryflavorname_Aggregate_Fields = {
  __typename?: 'pokemon_v2_berryflavorname_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Berryflavorname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Berryflavorname_Max_Fields>;
  min?: Maybe<Pokemon_V2_Berryflavorname_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Berryflavorname_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Berryflavorname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Berryflavorname_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Berryflavorname_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Berryflavorname_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Berryflavorname_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Berryflavorname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_berryflavorname" */
export type Pokemon_V2_Berryflavorname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Berryflavorname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Berryflavorname_Avg_Fields = {
  __typename?: 'pokemon_v2_berryflavorname_avg_fields';
  berry_flavor_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_berryflavorname". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Berryflavorname_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Berryflavorname_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Berryflavorname_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Berryflavorname_Bool_Exp>>;
  berry_flavor_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_berryflavorname" */
export enum Pokemon_V2_Berryflavorname_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2BerryflavornamePkey = 'pokemon_v2_berryflavorname_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_berryflavorname" */
export type Pokemon_V2_Berryflavorname_Inc_Input = {
  berry_flavor_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_berryflavorname" */
export type Pokemon_V2_Berryflavorname_Insert_Input = {
  berry_flavor_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Berryflavorname_Max_Fields = {
  __typename?: 'pokemon_v2_berryflavorname_max_fields';
  berry_flavor_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Berryflavorname_Min_Fields = {
  __typename?: 'pokemon_v2_berryflavorname_min_fields';
  berry_flavor_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_berryflavorname" */
export type Pokemon_V2_Berryflavorname_Mutation_Response = {
  __typename?: 'pokemon_v2_berryflavorname_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Berryflavorname>;
};

/** on_conflict condition type for table "pokemon_v2_berryflavorname" */
export type Pokemon_V2_Berryflavorname_On_Conflict = {
  constraint: Pokemon_V2_Berryflavorname_Constraint;
  update_columns?: Array<Pokemon_V2_Berryflavorname_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Berryflavorname_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_berryflavorname". */
export type Pokemon_V2_Berryflavorname_Order_By = {
  berry_flavor_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_berryflavorname */
export type Pokemon_V2_Berryflavorname_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_berryflavorname" */
export enum Pokemon_V2_Berryflavorname_Select_Column {
  /** column name */
  BerryFlavorId = 'berry_flavor_id',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_berryflavorname" */
export type Pokemon_V2_Berryflavorname_Set_Input = {
  berry_flavor_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Berryflavorname_Stddev_Fields = {
  __typename?: 'pokemon_v2_berryflavorname_stddev_fields';
  berry_flavor_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Berryflavorname_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_berryflavorname_stddev_pop_fields';
  berry_flavor_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Berryflavorname_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_berryflavorname_stddev_samp_fields';
  berry_flavor_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_berryflavorname" */
export type Pokemon_V2_Berryflavorname_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Berryflavorname_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Berryflavorname_Stream_Cursor_Value_Input = {
  berry_flavor_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Berryflavorname_Sum_Fields = {
  __typename?: 'pokemon_v2_berryflavorname_sum_fields';
  berry_flavor_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_berryflavorname" */
export enum Pokemon_V2_Berryflavorname_Update_Column {
  /** column name */
  BerryFlavorId = 'berry_flavor_id',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Berryflavorname_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Berryflavorname_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Berryflavorname_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Berryflavorname_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Berryflavorname_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_berryflavorname_var_pop_fields';
  berry_flavor_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Berryflavorname_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_berryflavorname_var_samp_fields';
  berry_flavor_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Berryflavorname_Variance_Fields = {
  __typename?: 'pokemon_v2_berryflavorname_variance_fields';
  berry_flavor_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_characteristic" */
export type Pokemon_V2_Characteristic = {
  __typename?: 'pokemon_v2_characteristic';
  gene_mod_5: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  stat_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_characteristic" */
export type Pokemon_V2_Characteristic_Aggregate = {
  __typename?: 'pokemon_v2_characteristic_aggregate';
  aggregate?: Maybe<Pokemon_V2_Characteristic_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Characteristic>;
};

/** aggregate fields of "pokemon_v2_characteristic" */
export type Pokemon_V2_Characteristic_Aggregate_Fields = {
  __typename?: 'pokemon_v2_characteristic_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Characteristic_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Characteristic_Max_Fields>;
  min?: Maybe<Pokemon_V2_Characteristic_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Characteristic_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Characteristic_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Characteristic_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Characteristic_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Characteristic_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Characteristic_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Characteristic_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_characteristic" */
export type Pokemon_V2_Characteristic_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Characteristic_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Characteristic_Avg_Fields = {
  __typename?: 'pokemon_v2_characteristic_avg_fields';
  gene_mod_5?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_characteristic". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Characteristic_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Characteristic_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Characteristic_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Characteristic_Bool_Exp>>;
  gene_mod_5?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  stat_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_characteristic" */
export enum Pokemon_V2_Characteristic_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2CharacteristicPkey = 'pokemon_v2_characteristic_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_characteristic" */
export type Pokemon_V2_Characteristic_Inc_Input = {
  gene_mod_5?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  stat_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_characteristic" */
export type Pokemon_V2_Characteristic_Insert_Input = {
  gene_mod_5?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  stat_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Characteristic_Max_Fields = {
  __typename?: 'pokemon_v2_characteristic_max_fields';
  gene_mod_5?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  stat_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Characteristic_Min_Fields = {
  __typename?: 'pokemon_v2_characteristic_min_fields';
  gene_mod_5?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  stat_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_characteristic" */
export type Pokemon_V2_Characteristic_Mutation_Response = {
  __typename?: 'pokemon_v2_characteristic_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Characteristic>;
};

/** on_conflict condition type for table "pokemon_v2_characteristic" */
export type Pokemon_V2_Characteristic_On_Conflict = {
  constraint: Pokemon_V2_Characteristic_Constraint;
  update_columns?: Array<Pokemon_V2_Characteristic_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Characteristic_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_characteristic". */
export type Pokemon_V2_Characteristic_Order_By = {
  gene_mod_5?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_characteristic */
export type Pokemon_V2_Characteristic_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_characteristic" */
export enum Pokemon_V2_Characteristic_Select_Column {
  /** column name */
  GeneMod_5 = 'gene_mod_5',
  /** column name */
  Id = 'id',
  /** column name */
  StatId = 'stat_id'
}

/** input type for updating data in table "pokemon_v2_characteristic" */
export type Pokemon_V2_Characteristic_Set_Input = {
  gene_mod_5?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  stat_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Characteristic_Stddev_Fields = {
  __typename?: 'pokemon_v2_characteristic_stddev_fields';
  gene_mod_5?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Characteristic_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_characteristic_stddev_pop_fields';
  gene_mod_5?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Characteristic_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_characteristic_stddev_samp_fields';
  gene_mod_5?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_characteristic" */
export type Pokemon_V2_Characteristic_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Characteristic_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Characteristic_Stream_Cursor_Value_Input = {
  gene_mod_5?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  stat_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Characteristic_Sum_Fields = {
  __typename?: 'pokemon_v2_characteristic_sum_fields';
  gene_mod_5?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  stat_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_characteristic" */
export enum Pokemon_V2_Characteristic_Update_Column {
  /** column name */
  GeneMod_5 = 'gene_mod_5',
  /** column name */
  Id = 'id',
  /** column name */
  StatId = 'stat_id'
}

export type Pokemon_V2_Characteristic_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Characteristic_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Characteristic_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Characteristic_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Characteristic_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_characteristic_var_pop_fields';
  gene_mod_5?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Characteristic_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_characteristic_var_samp_fields';
  gene_mod_5?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Characteristic_Variance_Fields = {
  __typename?: 'pokemon_v2_characteristic_variance_fields';
  gene_mod_5?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_characteristicdescription" */
export type Pokemon_V2_Characteristicdescription = {
  __typename?: 'pokemon_v2_characteristicdescription';
  characteristic_id?: Maybe<Scalars['Int']['output']>;
  description: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_characteristicdescription" */
export type Pokemon_V2_Characteristicdescription_Aggregate = {
  __typename?: 'pokemon_v2_characteristicdescription_aggregate';
  aggregate?: Maybe<Pokemon_V2_Characteristicdescription_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Characteristicdescription>;
};

/** aggregate fields of "pokemon_v2_characteristicdescription" */
export type Pokemon_V2_Characteristicdescription_Aggregate_Fields = {
  __typename?: 'pokemon_v2_characteristicdescription_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Characteristicdescription_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Characteristicdescription_Max_Fields>;
  min?: Maybe<Pokemon_V2_Characteristicdescription_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Characteristicdescription_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Characteristicdescription_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Characteristicdescription_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Characteristicdescription_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Characteristicdescription_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Characteristicdescription_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Characteristicdescription_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_characteristicdescription" */
export type Pokemon_V2_Characteristicdescription_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Characteristicdescription_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Characteristicdescription_Avg_Fields = {
  __typename?: 'pokemon_v2_characteristicdescription_avg_fields';
  characteristic_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_characteristicdescription". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Characteristicdescription_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Characteristicdescription_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Characteristicdescription_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Characteristicdescription_Bool_Exp>>;
  characteristic_id?: InputMaybe<Int_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_characteristicdescription" */
export enum Pokemon_V2_Characteristicdescription_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2CharacteristicdescriptionPkey = 'pokemon_v2_characteristicdescription_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_characteristicdescription" */
export type Pokemon_V2_Characteristicdescription_Inc_Input = {
  characteristic_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_characteristicdescription" */
export type Pokemon_V2_Characteristicdescription_Insert_Input = {
  characteristic_id?: InputMaybe<Scalars['Int']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Characteristicdescription_Max_Fields = {
  __typename?: 'pokemon_v2_characteristicdescription_max_fields';
  characteristic_id?: Maybe<Scalars['Int']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Characteristicdescription_Min_Fields = {
  __typename?: 'pokemon_v2_characteristicdescription_min_fields';
  characteristic_id?: Maybe<Scalars['Int']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_characteristicdescription" */
export type Pokemon_V2_Characteristicdescription_Mutation_Response = {
  __typename?: 'pokemon_v2_characteristicdescription_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Characteristicdescription>;
};

/** on_conflict condition type for table "pokemon_v2_characteristicdescription" */
export type Pokemon_V2_Characteristicdescription_On_Conflict = {
  constraint: Pokemon_V2_Characteristicdescription_Constraint;
  update_columns?: Array<Pokemon_V2_Characteristicdescription_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Characteristicdescription_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_characteristicdescription". */
export type Pokemon_V2_Characteristicdescription_Order_By = {
  characteristic_id?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_characteristicdescription */
export type Pokemon_V2_Characteristicdescription_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_characteristicdescription" */
export enum Pokemon_V2_Characteristicdescription_Select_Column {
  /** column name */
  CharacteristicId = 'characteristic_id',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id'
}

/** input type for updating data in table "pokemon_v2_characteristicdescription" */
export type Pokemon_V2_Characteristicdescription_Set_Input = {
  characteristic_id?: InputMaybe<Scalars['Int']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Characteristicdescription_Stddev_Fields = {
  __typename?: 'pokemon_v2_characteristicdescription_stddev_fields';
  characteristic_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Characteristicdescription_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_characteristicdescription_stddev_pop_fields';
  characteristic_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Characteristicdescription_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_characteristicdescription_stddev_samp_fields';
  characteristic_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_characteristicdescription" */
export type Pokemon_V2_Characteristicdescription_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Characteristicdescription_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Characteristicdescription_Stream_Cursor_Value_Input = {
  characteristic_id?: InputMaybe<Scalars['Int']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Characteristicdescription_Sum_Fields = {
  __typename?: 'pokemon_v2_characteristicdescription_sum_fields';
  characteristic_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_characteristicdescription" */
export enum Pokemon_V2_Characteristicdescription_Update_Column {
  /** column name */
  CharacteristicId = 'characteristic_id',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id'
}

export type Pokemon_V2_Characteristicdescription_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Characteristicdescription_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Characteristicdescription_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Characteristicdescription_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Characteristicdescription_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_characteristicdescription_var_pop_fields';
  characteristic_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Characteristicdescription_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_characteristicdescription_var_samp_fields';
  characteristic_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Characteristicdescription_Variance_Fields = {
  __typename?: 'pokemon_v2_characteristicdescription_variance_fields';
  characteristic_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_contestcombo" */
export type Pokemon_V2_Contestcombo = {
  __typename?: 'pokemon_v2_contestcombo';
  first_move_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  second_move_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_contestcombo" */
export type Pokemon_V2_Contestcombo_Aggregate = {
  __typename?: 'pokemon_v2_contestcombo_aggregate';
  aggregate?: Maybe<Pokemon_V2_Contestcombo_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Contestcombo>;
};

/** aggregate fields of "pokemon_v2_contestcombo" */
export type Pokemon_V2_Contestcombo_Aggregate_Fields = {
  __typename?: 'pokemon_v2_contestcombo_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Contestcombo_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Contestcombo_Max_Fields>;
  min?: Maybe<Pokemon_V2_Contestcombo_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Contestcombo_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Contestcombo_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Contestcombo_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Contestcombo_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Contestcombo_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Contestcombo_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Contestcombo_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_contestcombo" */
export type Pokemon_V2_Contestcombo_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Contestcombo_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Contestcombo_Avg_Fields = {
  __typename?: 'pokemon_v2_contestcombo_avg_fields';
  first_move_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  second_move_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_contestcombo". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Contestcombo_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Contestcombo_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Contestcombo_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Contestcombo_Bool_Exp>>;
  first_move_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  second_move_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_contestcombo" */
export enum Pokemon_V2_Contestcombo_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2ContestcomboPkey = 'pokemon_v2_contestcombo_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_contestcombo" */
export type Pokemon_V2_Contestcombo_Inc_Input = {
  first_move_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  second_move_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_contestcombo" */
export type Pokemon_V2_Contestcombo_Insert_Input = {
  first_move_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  second_move_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Contestcombo_Max_Fields = {
  __typename?: 'pokemon_v2_contestcombo_max_fields';
  first_move_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  second_move_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Contestcombo_Min_Fields = {
  __typename?: 'pokemon_v2_contestcombo_min_fields';
  first_move_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  second_move_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_contestcombo" */
export type Pokemon_V2_Contestcombo_Mutation_Response = {
  __typename?: 'pokemon_v2_contestcombo_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Contestcombo>;
};

/** on_conflict condition type for table "pokemon_v2_contestcombo" */
export type Pokemon_V2_Contestcombo_On_Conflict = {
  constraint: Pokemon_V2_Contestcombo_Constraint;
  update_columns?: Array<Pokemon_V2_Contestcombo_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Contestcombo_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_contestcombo". */
export type Pokemon_V2_Contestcombo_Order_By = {
  first_move_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  second_move_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_contestcombo */
export type Pokemon_V2_Contestcombo_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_contestcombo" */
export enum Pokemon_V2_Contestcombo_Select_Column {
  /** column name */
  FirstMoveId = 'first_move_id',
  /** column name */
  Id = 'id',
  /** column name */
  SecondMoveId = 'second_move_id'
}

/** input type for updating data in table "pokemon_v2_contestcombo" */
export type Pokemon_V2_Contestcombo_Set_Input = {
  first_move_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  second_move_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Contestcombo_Stddev_Fields = {
  __typename?: 'pokemon_v2_contestcombo_stddev_fields';
  first_move_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  second_move_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Contestcombo_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_contestcombo_stddev_pop_fields';
  first_move_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  second_move_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Contestcombo_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_contestcombo_stddev_samp_fields';
  first_move_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  second_move_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_contestcombo" */
export type Pokemon_V2_Contestcombo_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Contestcombo_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Contestcombo_Stream_Cursor_Value_Input = {
  first_move_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  second_move_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Contestcombo_Sum_Fields = {
  __typename?: 'pokemon_v2_contestcombo_sum_fields';
  first_move_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  second_move_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_contestcombo" */
export enum Pokemon_V2_Contestcombo_Update_Column {
  /** column name */
  FirstMoveId = 'first_move_id',
  /** column name */
  Id = 'id',
  /** column name */
  SecondMoveId = 'second_move_id'
}

export type Pokemon_V2_Contestcombo_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Contestcombo_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Contestcombo_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Contestcombo_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Contestcombo_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_contestcombo_var_pop_fields';
  first_move_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  second_move_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Contestcombo_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_contestcombo_var_samp_fields';
  first_move_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  second_move_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Contestcombo_Variance_Fields = {
  __typename?: 'pokemon_v2_contestcombo_variance_fields';
  first_move_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  second_move_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_contesteffect" */
export type Pokemon_V2_Contesteffect = {
  __typename?: 'pokemon_v2_contesteffect';
  appeal: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  jam: Scalars['Int']['output'];
};

/** aggregated selection of "pokemon_v2_contesteffect" */
export type Pokemon_V2_Contesteffect_Aggregate = {
  __typename?: 'pokemon_v2_contesteffect_aggregate';
  aggregate?: Maybe<Pokemon_V2_Contesteffect_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Contesteffect>;
};

/** aggregate fields of "pokemon_v2_contesteffect" */
export type Pokemon_V2_Contesteffect_Aggregate_Fields = {
  __typename?: 'pokemon_v2_contesteffect_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Contesteffect_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Contesteffect_Max_Fields>;
  min?: Maybe<Pokemon_V2_Contesteffect_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Contesteffect_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Contesteffect_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Contesteffect_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Contesteffect_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Contesteffect_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Contesteffect_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Contesteffect_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_contesteffect" */
export type Pokemon_V2_Contesteffect_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Contesteffect_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Contesteffect_Avg_Fields = {
  __typename?: 'pokemon_v2_contesteffect_avg_fields';
  appeal?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  jam?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_contesteffect". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Contesteffect_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Contesteffect_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Contesteffect_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Contesteffect_Bool_Exp>>;
  appeal?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  jam?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_contesteffect" */
export enum Pokemon_V2_Contesteffect_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2ContesteffectPkey = 'pokemon_v2_contesteffect_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_contesteffect" */
export type Pokemon_V2_Contesteffect_Inc_Input = {
  appeal?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  jam?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_contesteffect" */
export type Pokemon_V2_Contesteffect_Insert_Input = {
  appeal?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  jam?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Contesteffect_Max_Fields = {
  __typename?: 'pokemon_v2_contesteffect_max_fields';
  appeal?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  jam?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Contesteffect_Min_Fields = {
  __typename?: 'pokemon_v2_contesteffect_min_fields';
  appeal?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  jam?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_contesteffect" */
export type Pokemon_V2_Contesteffect_Mutation_Response = {
  __typename?: 'pokemon_v2_contesteffect_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Contesteffect>;
};

/** on_conflict condition type for table "pokemon_v2_contesteffect" */
export type Pokemon_V2_Contesteffect_On_Conflict = {
  constraint: Pokemon_V2_Contesteffect_Constraint;
  update_columns?: Array<Pokemon_V2_Contesteffect_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Contesteffect_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_contesteffect". */
export type Pokemon_V2_Contesteffect_Order_By = {
  appeal?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  jam?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_contesteffect */
export type Pokemon_V2_Contesteffect_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_contesteffect" */
export enum Pokemon_V2_Contesteffect_Select_Column {
  /** column name */
  Appeal = 'appeal',
  /** column name */
  Id = 'id',
  /** column name */
  Jam = 'jam'
}

/** input type for updating data in table "pokemon_v2_contesteffect" */
export type Pokemon_V2_Contesteffect_Set_Input = {
  appeal?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  jam?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Contesteffect_Stddev_Fields = {
  __typename?: 'pokemon_v2_contesteffect_stddev_fields';
  appeal?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  jam?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Contesteffect_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_contesteffect_stddev_pop_fields';
  appeal?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  jam?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Contesteffect_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_contesteffect_stddev_samp_fields';
  appeal?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  jam?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_contesteffect" */
export type Pokemon_V2_Contesteffect_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Contesteffect_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Contesteffect_Stream_Cursor_Value_Input = {
  appeal?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  jam?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Contesteffect_Sum_Fields = {
  __typename?: 'pokemon_v2_contesteffect_sum_fields';
  appeal?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  jam?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_contesteffect" */
export enum Pokemon_V2_Contesteffect_Update_Column {
  /** column name */
  Appeal = 'appeal',
  /** column name */
  Id = 'id',
  /** column name */
  Jam = 'jam'
}

export type Pokemon_V2_Contesteffect_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Contesteffect_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Contesteffect_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Contesteffect_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Contesteffect_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_contesteffect_var_pop_fields';
  appeal?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  jam?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Contesteffect_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_contesteffect_var_samp_fields';
  appeal?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  jam?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Contesteffect_Variance_Fields = {
  __typename?: 'pokemon_v2_contesteffect_variance_fields';
  appeal?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  jam?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_contesteffecteffecttext" */
export type Pokemon_V2_Contesteffecteffecttext = {
  __typename?: 'pokemon_v2_contesteffecteffecttext';
  contest_effect_id?: Maybe<Scalars['Int']['output']>;
  effect: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_contesteffecteffecttext" */
export type Pokemon_V2_Contesteffecteffecttext_Aggregate = {
  __typename?: 'pokemon_v2_contesteffecteffecttext_aggregate';
  aggregate?: Maybe<Pokemon_V2_Contesteffecteffecttext_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Contesteffecteffecttext>;
};

/** aggregate fields of "pokemon_v2_contesteffecteffecttext" */
export type Pokemon_V2_Contesteffecteffecttext_Aggregate_Fields = {
  __typename?: 'pokemon_v2_contesteffecteffecttext_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Contesteffecteffecttext_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Contesteffecteffecttext_Max_Fields>;
  min?: Maybe<Pokemon_V2_Contesteffecteffecttext_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Contesteffecteffecttext_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Contesteffecteffecttext_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Contesteffecteffecttext_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Contesteffecteffecttext_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Contesteffecteffecttext_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Contesteffecteffecttext_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Contesteffecteffecttext_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_contesteffecteffecttext" */
export type Pokemon_V2_Contesteffecteffecttext_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Contesteffecteffecttext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Contesteffecteffecttext_Avg_Fields = {
  __typename?: 'pokemon_v2_contesteffecteffecttext_avg_fields';
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_contesteffecteffecttext". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Contesteffecteffecttext_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Contesteffecteffecttext_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Contesteffecteffecttext_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Contesteffecteffecttext_Bool_Exp>>;
  contest_effect_id?: InputMaybe<Int_Comparison_Exp>;
  effect?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_contesteffecteffecttext" */
export enum Pokemon_V2_Contesteffecteffecttext_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2ContesteffecteffecttextPkey = 'pokemon_v2_contesteffecteffecttext_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_contesteffecteffecttext" */
export type Pokemon_V2_Contesteffecteffecttext_Inc_Input = {
  contest_effect_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_contesteffecteffecttext" */
export type Pokemon_V2_Contesteffecteffecttext_Insert_Input = {
  contest_effect_id?: InputMaybe<Scalars['Int']['input']>;
  effect?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Contesteffecteffecttext_Max_Fields = {
  __typename?: 'pokemon_v2_contesteffecteffecttext_max_fields';
  contest_effect_id?: Maybe<Scalars['Int']['output']>;
  effect?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Contesteffecteffecttext_Min_Fields = {
  __typename?: 'pokemon_v2_contesteffecteffecttext_min_fields';
  contest_effect_id?: Maybe<Scalars['Int']['output']>;
  effect?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_contesteffecteffecttext" */
export type Pokemon_V2_Contesteffecteffecttext_Mutation_Response = {
  __typename?: 'pokemon_v2_contesteffecteffecttext_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Contesteffecteffecttext>;
};

/** on_conflict condition type for table "pokemon_v2_contesteffecteffecttext" */
export type Pokemon_V2_Contesteffecteffecttext_On_Conflict = {
  constraint: Pokemon_V2_Contesteffecteffecttext_Constraint;
  update_columns?: Array<Pokemon_V2_Contesteffecteffecttext_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Contesteffecteffecttext_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_contesteffecteffecttext". */
export type Pokemon_V2_Contesteffecteffecttext_Order_By = {
  contest_effect_id?: InputMaybe<Order_By>;
  effect?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_contesteffecteffecttext */
export type Pokemon_V2_Contesteffecteffecttext_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_contesteffecteffecttext" */
export enum Pokemon_V2_Contesteffecteffecttext_Select_Column {
  /** column name */
  ContestEffectId = 'contest_effect_id',
  /** column name */
  Effect = 'effect',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id'
}

/** input type for updating data in table "pokemon_v2_contesteffecteffecttext" */
export type Pokemon_V2_Contesteffecteffecttext_Set_Input = {
  contest_effect_id?: InputMaybe<Scalars['Int']['input']>;
  effect?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Contesteffecteffecttext_Stddev_Fields = {
  __typename?: 'pokemon_v2_contesteffecteffecttext_stddev_fields';
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Contesteffecteffecttext_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_contesteffecteffecttext_stddev_pop_fields';
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Contesteffecteffecttext_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_contesteffecteffecttext_stddev_samp_fields';
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_contesteffecteffecttext" */
export type Pokemon_V2_Contesteffecteffecttext_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Contesteffecteffecttext_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Contesteffecteffecttext_Stream_Cursor_Value_Input = {
  contest_effect_id?: InputMaybe<Scalars['Int']['input']>;
  effect?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Contesteffecteffecttext_Sum_Fields = {
  __typename?: 'pokemon_v2_contesteffecteffecttext_sum_fields';
  contest_effect_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_contesteffecteffecttext" */
export enum Pokemon_V2_Contesteffecteffecttext_Update_Column {
  /** column name */
  ContestEffectId = 'contest_effect_id',
  /** column name */
  Effect = 'effect',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id'
}

export type Pokemon_V2_Contesteffecteffecttext_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Contesteffecteffecttext_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Contesteffecteffecttext_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Contesteffecteffecttext_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Contesteffecteffecttext_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_contesteffecteffecttext_var_pop_fields';
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Contesteffecteffecttext_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_contesteffecteffecttext_var_samp_fields';
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Contesteffecteffecttext_Variance_Fields = {
  __typename?: 'pokemon_v2_contesteffecteffecttext_variance_fields';
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_contesteffectflavortext" */
export type Pokemon_V2_Contesteffectflavortext = {
  __typename?: 'pokemon_v2_contesteffectflavortext';
  contest_effect_id?: Maybe<Scalars['Int']['output']>;
  flavor_text: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_contesteffectflavortext" */
export type Pokemon_V2_Contesteffectflavortext_Aggregate = {
  __typename?: 'pokemon_v2_contesteffectflavortext_aggregate';
  aggregate?: Maybe<Pokemon_V2_Contesteffectflavortext_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Contesteffectflavortext>;
};

/** aggregate fields of "pokemon_v2_contesteffectflavortext" */
export type Pokemon_V2_Contesteffectflavortext_Aggregate_Fields = {
  __typename?: 'pokemon_v2_contesteffectflavortext_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Contesteffectflavortext_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Contesteffectflavortext_Max_Fields>;
  min?: Maybe<Pokemon_V2_Contesteffectflavortext_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Contesteffectflavortext_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Contesteffectflavortext_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Contesteffectflavortext_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Contesteffectflavortext_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Contesteffectflavortext_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Contesteffectflavortext_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Contesteffectflavortext_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_contesteffectflavortext" */
export type Pokemon_V2_Contesteffectflavortext_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Contesteffectflavortext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Contesteffectflavortext_Avg_Fields = {
  __typename?: 'pokemon_v2_contesteffectflavortext_avg_fields';
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_contesteffectflavortext". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Contesteffectflavortext_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Contesteffectflavortext_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Contesteffectflavortext_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Contesteffectflavortext_Bool_Exp>>;
  contest_effect_id?: InputMaybe<Int_Comparison_Exp>;
  flavor_text?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_contesteffectflavortext" */
export enum Pokemon_V2_Contesteffectflavortext_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2ContesteffectflavortextPkey = 'pokemon_v2_contesteffectflavortext_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_contesteffectflavortext" */
export type Pokemon_V2_Contesteffectflavortext_Inc_Input = {
  contest_effect_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_contesteffectflavortext" */
export type Pokemon_V2_Contesteffectflavortext_Insert_Input = {
  contest_effect_id?: InputMaybe<Scalars['Int']['input']>;
  flavor_text?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Contesteffectflavortext_Max_Fields = {
  __typename?: 'pokemon_v2_contesteffectflavortext_max_fields';
  contest_effect_id?: Maybe<Scalars['Int']['output']>;
  flavor_text?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Contesteffectflavortext_Min_Fields = {
  __typename?: 'pokemon_v2_contesteffectflavortext_min_fields';
  contest_effect_id?: Maybe<Scalars['Int']['output']>;
  flavor_text?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_contesteffectflavortext" */
export type Pokemon_V2_Contesteffectflavortext_Mutation_Response = {
  __typename?: 'pokemon_v2_contesteffectflavortext_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Contesteffectflavortext>;
};

/** on_conflict condition type for table "pokemon_v2_contesteffectflavortext" */
export type Pokemon_V2_Contesteffectflavortext_On_Conflict = {
  constraint: Pokemon_V2_Contesteffectflavortext_Constraint;
  update_columns?: Array<Pokemon_V2_Contesteffectflavortext_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Contesteffectflavortext_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_contesteffectflavortext". */
export type Pokemon_V2_Contesteffectflavortext_Order_By = {
  contest_effect_id?: InputMaybe<Order_By>;
  flavor_text?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_contesteffectflavortext */
export type Pokemon_V2_Contesteffectflavortext_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_contesteffectflavortext" */
export enum Pokemon_V2_Contesteffectflavortext_Select_Column {
  /** column name */
  ContestEffectId = 'contest_effect_id',
  /** column name */
  FlavorText = 'flavor_text',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id'
}

/** input type for updating data in table "pokemon_v2_contesteffectflavortext" */
export type Pokemon_V2_Contesteffectflavortext_Set_Input = {
  contest_effect_id?: InputMaybe<Scalars['Int']['input']>;
  flavor_text?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Contesteffectflavortext_Stddev_Fields = {
  __typename?: 'pokemon_v2_contesteffectflavortext_stddev_fields';
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Contesteffectflavortext_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_contesteffectflavortext_stddev_pop_fields';
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Contesteffectflavortext_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_contesteffectflavortext_stddev_samp_fields';
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_contesteffectflavortext" */
export type Pokemon_V2_Contesteffectflavortext_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Contesteffectflavortext_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Contesteffectflavortext_Stream_Cursor_Value_Input = {
  contest_effect_id?: InputMaybe<Scalars['Int']['input']>;
  flavor_text?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Contesteffectflavortext_Sum_Fields = {
  __typename?: 'pokemon_v2_contesteffectflavortext_sum_fields';
  contest_effect_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_contesteffectflavortext" */
export enum Pokemon_V2_Contesteffectflavortext_Update_Column {
  /** column name */
  ContestEffectId = 'contest_effect_id',
  /** column name */
  FlavorText = 'flavor_text',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id'
}

export type Pokemon_V2_Contesteffectflavortext_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Contesteffectflavortext_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Contesteffectflavortext_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Contesteffectflavortext_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Contesteffectflavortext_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_contesteffectflavortext_var_pop_fields';
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Contesteffectflavortext_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_contesteffectflavortext_var_samp_fields';
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Contesteffectflavortext_Variance_Fields = {
  __typename?: 'pokemon_v2_contesteffectflavortext_variance_fields';
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_contesttype" */
export type Pokemon_V2_Contesttype = {
  __typename?: 'pokemon_v2_contesttype';
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_contesttype" */
export type Pokemon_V2_Contesttype_Aggregate = {
  __typename?: 'pokemon_v2_contesttype_aggregate';
  aggregate?: Maybe<Pokemon_V2_Contesttype_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Contesttype>;
};

/** aggregate fields of "pokemon_v2_contesttype" */
export type Pokemon_V2_Contesttype_Aggregate_Fields = {
  __typename?: 'pokemon_v2_contesttype_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Contesttype_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Contesttype_Max_Fields>;
  min?: Maybe<Pokemon_V2_Contesttype_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Contesttype_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Contesttype_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Contesttype_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Contesttype_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Contesttype_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Contesttype_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Contesttype_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_contesttype" */
export type Pokemon_V2_Contesttype_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Contesttype_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Contesttype_Avg_Fields = {
  __typename?: 'pokemon_v2_contesttype_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_contesttype". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Contesttype_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Contesttype_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Contesttype_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Contesttype_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_contesttype" */
export enum Pokemon_V2_Contesttype_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2ContesttypePkey = 'pokemon_v2_contesttype_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_contesttype" */
export type Pokemon_V2_Contesttype_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_contesttype" */
export type Pokemon_V2_Contesttype_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Contesttype_Max_Fields = {
  __typename?: 'pokemon_v2_contesttype_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Contesttype_Min_Fields = {
  __typename?: 'pokemon_v2_contesttype_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_contesttype" */
export type Pokemon_V2_Contesttype_Mutation_Response = {
  __typename?: 'pokemon_v2_contesttype_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Contesttype>;
};

/** on_conflict condition type for table "pokemon_v2_contesttype" */
export type Pokemon_V2_Contesttype_On_Conflict = {
  constraint: Pokemon_V2_Contesttype_Constraint;
  update_columns?: Array<Pokemon_V2_Contesttype_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Contesttype_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_contesttype". */
export type Pokemon_V2_Contesttype_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_contesttype */
export type Pokemon_V2_Contesttype_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_contesttype" */
export enum Pokemon_V2_Contesttype_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_contesttype" */
export type Pokemon_V2_Contesttype_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Contesttype_Stddev_Fields = {
  __typename?: 'pokemon_v2_contesttype_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Contesttype_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_contesttype_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Contesttype_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_contesttype_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_contesttype" */
export type Pokemon_V2_Contesttype_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Contesttype_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Contesttype_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Contesttype_Sum_Fields = {
  __typename?: 'pokemon_v2_contesttype_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_contesttype" */
export enum Pokemon_V2_Contesttype_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Contesttype_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Contesttype_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Contesttype_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Contesttype_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Contesttype_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_contesttype_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Contesttype_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_contesttype_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Contesttype_Variance_Fields = {
  __typename?: 'pokemon_v2_contesttype_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_contesttypename" */
export type Pokemon_V2_Contesttypename = {
  __typename?: 'pokemon_v2_contesttypename';
  color: Scalars['String']['output'];
  contest_type_id?: Maybe<Scalars['Int']['output']>;
  flavor: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_contesttypename" */
export type Pokemon_V2_Contesttypename_Aggregate = {
  __typename?: 'pokemon_v2_contesttypename_aggregate';
  aggregate?: Maybe<Pokemon_V2_Contesttypename_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Contesttypename>;
};

/** aggregate fields of "pokemon_v2_contesttypename" */
export type Pokemon_V2_Contesttypename_Aggregate_Fields = {
  __typename?: 'pokemon_v2_contesttypename_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Contesttypename_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Contesttypename_Max_Fields>;
  min?: Maybe<Pokemon_V2_Contesttypename_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Contesttypename_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Contesttypename_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Contesttypename_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Contesttypename_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Contesttypename_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Contesttypename_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Contesttypename_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_contesttypename" */
export type Pokemon_V2_Contesttypename_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Contesttypename_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Contesttypename_Avg_Fields = {
  __typename?: 'pokemon_v2_contesttypename_avg_fields';
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_contesttypename". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Contesttypename_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Contesttypename_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Contesttypename_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Contesttypename_Bool_Exp>>;
  color?: InputMaybe<String_Comparison_Exp>;
  contest_type_id?: InputMaybe<Int_Comparison_Exp>;
  flavor?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_contesttypename" */
export enum Pokemon_V2_Contesttypename_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2ContesttypenamePkey = 'pokemon_v2_contesttypename_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_contesttypename" */
export type Pokemon_V2_Contesttypename_Inc_Input = {
  contest_type_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_contesttypename" */
export type Pokemon_V2_Contesttypename_Insert_Input = {
  color?: InputMaybe<Scalars['String']['input']>;
  contest_type_id?: InputMaybe<Scalars['Int']['input']>;
  flavor?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Contesttypename_Max_Fields = {
  __typename?: 'pokemon_v2_contesttypename_max_fields';
  color?: Maybe<Scalars['String']['output']>;
  contest_type_id?: Maybe<Scalars['Int']['output']>;
  flavor?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Contesttypename_Min_Fields = {
  __typename?: 'pokemon_v2_contesttypename_min_fields';
  color?: Maybe<Scalars['String']['output']>;
  contest_type_id?: Maybe<Scalars['Int']['output']>;
  flavor?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_contesttypename" */
export type Pokemon_V2_Contesttypename_Mutation_Response = {
  __typename?: 'pokemon_v2_contesttypename_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Contesttypename>;
};

/** on_conflict condition type for table "pokemon_v2_contesttypename" */
export type Pokemon_V2_Contesttypename_On_Conflict = {
  constraint: Pokemon_V2_Contesttypename_Constraint;
  update_columns?: Array<Pokemon_V2_Contesttypename_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Contesttypename_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_contesttypename". */
export type Pokemon_V2_Contesttypename_Order_By = {
  color?: InputMaybe<Order_By>;
  contest_type_id?: InputMaybe<Order_By>;
  flavor?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_contesttypename */
export type Pokemon_V2_Contesttypename_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_contesttypename" */
export enum Pokemon_V2_Contesttypename_Select_Column {
  /** column name */
  Color = 'color',
  /** column name */
  ContestTypeId = 'contest_type_id',
  /** column name */
  Flavor = 'flavor',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_contesttypename" */
export type Pokemon_V2_Contesttypename_Set_Input = {
  color?: InputMaybe<Scalars['String']['input']>;
  contest_type_id?: InputMaybe<Scalars['Int']['input']>;
  flavor?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Contesttypename_Stddev_Fields = {
  __typename?: 'pokemon_v2_contesttypename_stddev_fields';
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Contesttypename_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_contesttypename_stddev_pop_fields';
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Contesttypename_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_contesttypename_stddev_samp_fields';
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_contesttypename" */
export type Pokemon_V2_Contesttypename_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Contesttypename_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Contesttypename_Stream_Cursor_Value_Input = {
  color?: InputMaybe<Scalars['String']['input']>;
  contest_type_id?: InputMaybe<Scalars['Int']['input']>;
  flavor?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Contesttypename_Sum_Fields = {
  __typename?: 'pokemon_v2_contesttypename_sum_fields';
  contest_type_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_contesttypename" */
export enum Pokemon_V2_Contesttypename_Update_Column {
  /** column name */
  Color = 'color',
  /** column name */
  ContestTypeId = 'contest_type_id',
  /** column name */
  Flavor = 'flavor',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Contesttypename_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Contesttypename_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Contesttypename_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Contesttypename_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Contesttypename_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_contesttypename_var_pop_fields';
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Contesttypename_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_contesttypename_var_samp_fields';
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Contesttypename_Variance_Fields = {
  __typename?: 'pokemon_v2_contesttypename_variance_fields';
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_egggroup" */
export type Pokemon_V2_Egggroup = {
  __typename?: 'pokemon_v2_egggroup';
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_egggroup" */
export type Pokemon_V2_Egggroup_Aggregate = {
  __typename?: 'pokemon_v2_egggroup_aggregate';
  aggregate?: Maybe<Pokemon_V2_Egggroup_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Egggroup>;
};

/** aggregate fields of "pokemon_v2_egggroup" */
export type Pokemon_V2_Egggroup_Aggregate_Fields = {
  __typename?: 'pokemon_v2_egggroup_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Egggroup_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Egggroup_Max_Fields>;
  min?: Maybe<Pokemon_V2_Egggroup_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Egggroup_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Egggroup_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Egggroup_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Egggroup_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Egggroup_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Egggroup_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Egggroup_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_egggroup" */
export type Pokemon_V2_Egggroup_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Egggroup_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Egggroup_Avg_Fields = {
  __typename?: 'pokemon_v2_egggroup_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_egggroup". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Egggroup_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Egggroup_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Egggroup_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Egggroup_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_egggroup" */
export enum Pokemon_V2_Egggroup_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2EgggroupPkey = 'pokemon_v2_egggroup_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_egggroup" */
export type Pokemon_V2_Egggroup_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_egggroup" */
export type Pokemon_V2_Egggroup_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Egggroup_Max_Fields = {
  __typename?: 'pokemon_v2_egggroup_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Egggroup_Min_Fields = {
  __typename?: 'pokemon_v2_egggroup_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_egggroup" */
export type Pokemon_V2_Egggroup_Mutation_Response = {
  __typename?: 'pokemon_v2_egggroup_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Egggroup>;
};

/** on_conflict condition type for table "pokemon_v2_egggroup" */
export type Pokemon_V2_Egggroup_On_Conflict = {
  constraint: Pokemon_V2_Egggroup_Constraint;
  update_columns?: Array<Pokemon_V2_Egggroup_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Egggroup_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_egggroup". */
export type Pokemon_V2_Egggroup_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_egggroup */
export type Pokemon_V2_Egggroup_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_egggroup" */
export enum Pokemon_V2_Egggroup_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_egggroup" */
export type Pokemon_V2_Egggroup_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Egggroup_Stddev_Fields = {
  __typename?: 'pokemon_v2_egggroup_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Egggroup_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_egggroup_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Egggroup_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_egggroup_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_egggroup" */
export type Pokemon_V2_Egggroup_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Egggroup_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Egggroup_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Egggroup_Sum_Fields = {
  __typename?: 'pokemon_v2_egggroup_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_egggroup" */
export enum Pokemon_V2_Egggroup_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Egggroup_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Egggroup_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Egggroup_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Egggroup_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Egggroup_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_egggroup_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Egggroup_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_egggroup_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Egggroup_Variance_Fields = {
  __typename?: 'pokemon_v2_egggroup_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_egggroupname" */
export type Pokemon_V2_Egggroupname = {
  __typename?: 'pokemon_v2_egggroupname';
  egg_group_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_egggroupname" */
export type Pokemon_V2_Egggroupname_Aggregate = {
  __typename?: 'pokemon_v2_egggroupname_aggregate';
  aggregate?: Maybe<Pokemon_V2_Egggroupname_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Egggroupname>;
};

/** aggregate fields of "pokemon_v2_egggroupname" */
export type Pokemon_V2_Egggroupname_Aggregate_Fields = {
  __typename?: 'pokemon_v2_egggroupname_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Egggroupname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Egggroupname_Max_Fields>;
  min?: Maybe<Pokemon_V2_Egggroupname_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Egggroupname_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Egggroupname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Egggroupname_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Egggroupname_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Egggroupname_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Egggroupname_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Egggroupname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_egggroupname" */
export type Pokemon_V2_Egggroupname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Egggroupname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Egggroupname_Avg_Fields = {
  __typename?: 'pokemon_v2_egggroupname_avg_fields';
  egg_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_egggroupname". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Egggroupname_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Egggroupname_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Egggroupname_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Egggroupname_Bool_Exp>>;
  egg_group_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_egggroupname" */
export enum Pokemon_V2_Egggroupname_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2EgggroupnamePkey = 'pokemon_v2_egggroupname_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_egggroupname" */
export type Pokemon_V2_Egggroupname_Inc_Input = {
  egg_group_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_egggroupname" */
export type Pokemon_V2_Egggroupname_Insert_Input = {
  egg_group_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Egggroupname_Max_Fields = {
  __typename?: 'pokemon_v2_egggroupname_max_fields';
  egg_group_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Egggroupname_Min_Fields = {
  __typename?: 'pokemon_v2_egggroupname_min_fields';
  egg_group_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_egggroupname" */
export type Pokemon_V2_Egggroupname_Mutation_Response = {
  __typename?: 'pokemon_v2_egggroupname_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Egggroupname>;
};

/** on_conflict condition type for table "pokemon_v2_egggroupname" */
export type Pokemon_V2_Egggroupname_On_Conflict = {
  constraint: Pokemon_V2_Egggroupname_Constraint;
  update_columns?: Array<Pokemon_V2_Egggroupname_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Egggroupname_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_egggroupname". */
export type Pokemon_V2_Egggroupname_Order_By = {
  egg_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_egggroupname */
export type Pokemon_V2_Egggroupname_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_egggroupname" */
export enum Pokemon_V2_Egggroupname_Select_Column {
  /** column name */
  EggGroupId = 'egg_group_id',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_egggroupname" */
export type Pokemon_V2_Egggroupname_Set_Input = {
  egg_group_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Egggroupname_Stddev_Fields = {
  __typename?: 'pokemon_v2_egggroupname_stddev_fields';
  egg_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Egggroupname_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_egggroupname_stddev_pop_fields';
  egg_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Egggroupname_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_egggroupname_stddev_samp_fields';
  egg_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_egggroupname" */
export type Pokemon_V2_Egggroupname_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Egggroupname_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Egggroupname_Stream_Cursor_Value_Input = {
  egg_group_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Egggroupname_Sum_Fields = {
  __typename?: 'pokemon_v2_egggroupname_sum_fields';
  egg_group_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_egggroupname" */
export enum Pokemon_V2_Egggroupname_Update_Column {
  /** column name */
  EggGroupId = 'egg_group_id',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Egggroupname_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Egggroupname_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Egggroupname_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Egggroupname_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Egggroupname_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_egggroupname_var_pop_fields';
  egg_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Egggroupname_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_egggroupname_var_samp_fields';
  egg_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Egggroupname_Variance_Fields = {
  __typename?: 'pokemon_v2_egggroupname_variance_fields';
  egg_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_encounter" */
export type Pokemon_V2_Encounter = {
  __typename?: 'pokemon_v2_encounter';
  encounter_slot_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  location_area_id?: Maybe<Scalars['Int']['output']>;
  max_level: Scalars['Int']['output'];
  min_level: Scalars['Int']['output'];
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_encounter" */
export type Pokemon_V2_Encounter_Aggregate = {
  __typename?: 'pokemon_v2_encounter_aggregate';
  aggregate?: Maybe<Pokemon_V2_Encounter_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Encounter>;
};

/** aggregate fields of "pokemon_v2_encounter" */
export type Pokemon_V2_Encounter_Aggregate_Fields = {
  __typename?: 'pokemon_v2_encounter_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Encounter_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Encounter_Max_Fields>;
  min?: Maybe<Pokemon_V2_Encounter_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Encounter_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Encounter_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Encounter_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Encounter_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Encounter_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Encounter_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Encounter_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_encounter" */
export type Pokemon_V2_Encounter_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Encounter_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Encounter_Avg_Fields = {
  __typename?: 'pokemon_v2_encounter_avg_fields';
  encounter_slot_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
  max_level?: Maybe<Scalars['Float']['output']>;
  min_level?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_encounter". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Encounter_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Encounter_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Encounter_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Encounter_Bool_Exp>>;
  encounter_slot_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  location_area_id?: InputMaybe<Int_Comparison_Exp>;
  max_level?: InputMaybe<Int_Comparison_Exp>;
  min_level?: InputMaybe<Int_Comparison_Exp>;
  pokemon_id?: InputMaybe<Int_Comparison_Exp>;
  version_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_encounter" */
export enum Pokemon_V2_Encounter_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2EncounterPkey = 'pokemon_v2_encounter_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_encounter" */
export type Pokemon_V2_Encounter_Inc_Input = {
  encounter_slot_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  location_area_id?: InputMaybe<Scalars['Int']['input']>;
  max_level?: InputMaybe<Scalars['Int']['input']>;
  min_level?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  version_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_encounter" */
export type Pokemon_V2_Encounter_Insert_Input = {
  encounter_slot_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  location_area_id?: InputMaybe<Scalars['Int']['input']>;
  max_level?: InputMaybe<Scalars['Int']['input']>;
  min_level?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  version_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Encounter_Max_Fields = {
  __typename?: 'pokemon_v2_encounter_max_fields';
  encounter_slot_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  location_area_id?: Maybe<Scalars['Int']['output']>;
  max_level?: Maybe<Scalars['Int']['output']>;
  min_level?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Encounter_Min_Fields = {
  __typename?: 'pokemon_v2_encounter_min_fields';
  encounter_slot_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  location_area_id?: Maybe<Scalars['Int']['output']>;
  max_level?: Maybe<Scalars['Int']['output']>;
  min_level?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_encounter" */
export type Pokemon_V2_Encounter_Mutation_Response = {
  __typename?: 'pokemon_v2_encounter_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Encounter>;
};

/** on_conflict condition type for table "pokemon_v2_encounter" */
export type Pokemon_V2_Encounter_On_Conflict = {
  constraint: Pokemon_V2_Encounter_Constraint;
  update_columns?: Array<Pokemon_V2_Encounter_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Encounter_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_encounter". */
export type Pokemon_V2_Encounter_Order_By = {
  encounter_slot_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_area_id?: InputMaybe<Order_By>;
  max_level?: InputMaybe<Order_By>;
  min_level?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_encounter */
export type Pokemon_V2_Encounter_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_encounter" */
export enum Pokemon_V2_Encounter_Select_Column {
  /** column name */
  EncounterSlotId = 'encounter_slot_id',
  /** column name */
  Id = 'id',
  /** column name */
  LocationAreaId = 'location_area_id',
  /** column name */
  MaxLevel = 'max_level',
  /** column name */
  MinLevel = 'min_level',
  /** column name */
  PokemonId = 'pokemon_id',
  /** column name */
  VersionId = 'version_id'
}

/** input type for updating data in table "pokemon_v2_encounter" */
export type Pokemon_V2_Encounter_Set_Input = {
  encounter_slot_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  location_area_id?: InputMaybe<Scalars['Int']['input']>;
  max_level?: InputMaybe<Scalars['Int']['input']>;
  min_level?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  version_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Encounter_Stddev_Fields = {
  __typename?: 'pokemon_v2_encounter_stddev_fields';
  encounter_slot_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
  max_level?: Maybe<Scalars['Float']['output']>;
  min_level?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Encounter_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_encounter_stddev_pop_fields';
  encounter_slot_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
  max_level?: Maybe<Scalars['Float']['output']>;
  min_level?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Encounter_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_encounter_stddev_samp_fields';
  encounter_slot_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
  max_level?: Maybe<Scalars['Float']['output']>;
  min_level?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_encounter" */
export type Pokemon_V2_Encounter_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Encounter_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Encounter_Stream_Cursor_Value_Input = {
  encounter_slot_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  location_area_id?: InputMaybe<Scalars['Int']['input']>;
  max_level?: InputMaybe<Scalars['Int']['input']>;
  min_level?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  version_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Encounter_Sum_Fields = {
  __typename?: 'pokemon_v2_encounter_sum_fields';
  encounter_slot_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  location_area_id?: Maybe<Scalars['Int']['output']>;
  max_level?: Maybe<Scalars['Int']['output']>;
  min_level?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_encounter" */
export enum Pokemon_V2_Encounter_Update_Column {
  /** column name */
  EncounterSlotId = 'encounter_slot_id',
  /** column name */
  Id = 'id',
  /** column name */
  LocationAreaId = 'location_area_id',
  /** column name */
  MaxLevel = 'max_level',
  /** column name */
  MinLevel = 'min_level',
  /** column name */
  PokemonId = 'pokemon_id',
  /** column name */
  VersionId = 'version_id'
}

export type Pokemon_V2_Encounter_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Encounter_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Encounter_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Encounter_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Encounter_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_encounter_var_pop_fields';
  encounter_slot_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
  max_level?: Maybe<Scalars['Float']['output']>;
  min_level?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Encounter_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_encounter_var_samp_fields';
  encounter_slot_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
  max_level?: Maybe<Scalars['Float']['output']>;
  min_level?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Encounter_Variance_Fields = {
  __typename?: 'pokemon_v2_encounter_variance_fields';
  encounter_slot_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
  max_level?: Maybe<Scalars['Float']['output']>;
  min_level?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_encountercondition" */
export type Pokemon_V2_Encountercondition = {
  __typename?: 'pokemon_v2_encountercondition';
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_encountercondition" */
export type Pokemon_V2_Encountercondition_Aggregate = {
  __typename?: 'pokemon_v2_encountercondition_aggregate';
  aggregate?: Maybe<Pokemon_V2_Encountercondition_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Encountercondition>;
};

/** aggregate fields of "pokemon_v2_encountercondition" */
export type Pokemon_V2_Encountercondition_Aggregate_Fields = {
  __typename?: 'pokemon_v2_encountercondition_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Encountercondition_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Encountercondition_Max_Fields>;
  min?: Maybe<Pokemon_V2_Encountercondition_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Encountercondition_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Encountercondition_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Encountercondition_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Encountercondition_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Encountercondition_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Encountercondition_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Encountercondition_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_encountercondition" */
export type Pokemon_V2_Encountercondition_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Encountercondition_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Encountercondition_Avg_Fields = {
  __typename?: 'pokemon_v2_encountercondition_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_encountercondition". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Encountercondition_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Encountercondition_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Encountercondition_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Encountercondition_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_encountercondition" */
export enum Pokemon_V2_Encountercondition_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2EncounterconditionPkey = 'pokemon_v2_encountercondition_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_encountercondition" */
export type Pokemon_V2_Encountercondition_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_encountercondition" */
export type Pokemon_V2_Encountercondition_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Encountercondition_Max_Fields = {
  __typename?: 'pokemon_v2_encountercondition_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Encountercondition_Min_Fields = {
  __typename?: 'pokemon_v2_encountercondition_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_encountercondition" */
export type Pokemon_V2_Encountercondition_Mutation_Response = {
  __typename?: 'pokemon_v2_encountercondition_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Encountercondition>;
};

/** on_conflict condition type for table "pokemon_v2_encountercondition" */
export type Pokemon_V2_Encountercondition_On_Conflict = {
  constraint: Pokemon_V2_Encountercondition_Constraint;
  update_columns?: Array<Pokemon_V2_Encountercondition_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Encountercondition_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_encountercondition". */
export type Pokemon_V2_Encountercondition_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_encountercondition */
export type Pokemon_V2_Encountercondition_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_encountercondition" */
export enum Pokemon_V2_Encountercondition_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_encountercondition" */
export type Pokemon_V2_Encountercondition_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Encountercondition_Stddev_Fields = {
  __typename?: 'pokemon_v2_encountercondition_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Encountercondition_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_encountercondition_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Encountercondition_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_encountercondition_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_encountercondition" */
export type Pokemon_V2_Encountercondition_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Encountercondition_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Encountercondition_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Encountercondition_Sum_Fields = {
  __typename?: 'pokemon_v2_encountercondition_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_encountercondition" */
export enum Pokemon_V2_Encountercondition_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Encountercondition_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Encountercondition_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Encountercondition_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Encountercondition_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Encountercondition_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_encountercondition_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Encountercondition_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_encountercondition_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Encountercondition_Variance_Fields = {
  __typename?: 'pokemon_v2_encountercondition_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_encounterconditionname" */
export type Pokemon_V2_Encounterconditionname = {
  __typename?: 'pokemon_v2_encounterconditionname';
  encounter_condition_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_encounterconditionname" */
export type Pokemon_V2_Encounterconditionname_Aggregate = {
  __typename?: 'pokemon_v2_encounterconditionname_aggregate';
  aggregate?: Maybe<Pokemon_V2_Encounterconditionname_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Encounterconditionname>;
};

/** aggregate fields of "pokemon_v2_encounterconditionname" */
export type Pokemon_V2_Encounterconditionname_Aggregate_Fields = {
  __typename?: 'pokemon_v2_encounterconditionname_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Encounterconditionname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Encounterconditionname_Max_Fields>;
  min?: Maybe<Pokemon_V2_Encounterconditionname_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Encounterconditionname_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Encounterconditionname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Encounterconditionname_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Encounterconditionname_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Encounterconditionname_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Encounterconditionname_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Encounterconditionname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_encounterconditionname" */
export type Pokemon_V2_Encounterconditionname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Encounterconditionname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Encounterconditionname_Avg_Fields = {
  __typename?: 'pokemon_v2_encounterconditionname_avg_fields';
  encounter_condition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_encounterconditionname". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Encounterconditionname_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Encounterconditionname_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Encounterconditionname_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Encounterconditionname_Bool_Exp>>;
  encounter_condition_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_encounterconditionname" */
export enum Pokemon_V2_Encounterconditionname_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2EncounterconditionnamePkey = 'pokemon_v2_encounterconditionname_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_encounterconditionname" */
export type Pokemon_V2_Encounterconditionname_Inc_Input = {
  encounter_condition_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_encounterconditionname" */
export type Pokemon_V2_Encounterconditionname_Insert_Input = {
  encounter_condition_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Encounterconditionname_Max_Fields = {
  __typename?: 'pokemon_v2_encounterconditionname_max_fields';
  encounter_condition_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Encounterconditionname_Min_Fields = {
  __typename?: 'pokemon_v2_encounterconditionname_min_fields';
  encounter_condition_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_encounterconditionname" */
export type Pokemon_V2_Encounterconditionname_Mutation_Response = {
  __typename?: 'pokemon_v2_encounterconditionname_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Encounterconditionname>;
};

/** on_conflict condition type for table "pokemon_v2_encounterconditionname" */
export type Pokemon_V2_Encounterconditionname_On_Conflict = {
  constraint: Pokemon_V2_Encounterconditionname_Constraint;
  update_columns?: Array<Pokemon_V2_Encounterconditionname_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Encounterconditionname_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_encounterconditionname". */
export type Pokemon_V2_Encounterconditionname_Order_By = {
  encounter_condition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_encounterconditionname */
export type Pokemon_V2_Encounterconditionname_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_encounterconditionname" */
export enum Pokemon_V2_Encounterconditionname_Select_Column {
  /** column name */
  EncounterConditionId = 'encounter_condition_id',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_encounterconditionname" */
export type Pokemon_V2_Encounterconditionname_Set_Input = {
  encounter_condition_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Encounterconditionname_Stddev_Fields = {
  __typename?: 'pokemon_v2_encounterconditionname_stddev_fields';
  encounter_condition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Encounterconditionname_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_encounterconditionname_stddev_pop_fields';
  encounter_condition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Encounterconditionname_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_encounterconditionname_stddev_samp_fields';
  encounter_condition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_encounterconditionname" */
export type Pokemon_V2_Encounterconditionname_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Encounterconditionname_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Encounterconditionname_Stream_Cursor_Value_Input = {
  encounter_condition_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Encounterconditionname_Sum_Fields = {
  __typename?: 'pokemon_v2_encounterconditionname_sum_fields';
  encounter_condition_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_encounterconditionname" */
export enum Pokemon_V2_Encounterconditionname_Update_Column {
  /** column name */
  EncounterConditionId = 'encounter_condition_id',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Encounterconditionname_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Encounterconditionname_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Encounterconditionname_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Encounterconditionname_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Encounterconditionname_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_encounterconditionname_var_pop_fields';
  encounter_condition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Encounterconditionname_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_encounterconditionname_var_samp_fields';
  encounter_condition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Encounterconditionname_Variance_Fields = {
  __typename?: 'pokemon_v2_encounterconditionname_variance_fields';
  encounter_condition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_encounterconditionvalue" */
export type Pokemon_V2_Encounterconditionvalue = {
  __typename?: 'pokemon_v2_encounterconditionvalue';
  encounter_condition_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  is_default: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_encounterconditionvalue" */
export type Pokemon_V2_Encounterconditionvalue_Aggregate = {
  __typename?: 'pokemon_v2_encounterconditionvalue_aggregate';
  aggregate?: Maybe<Pokemon_V2_Encounterconditionvalue_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Encounterconditionvalue>;
};

/** aggregate fields of "pokemon_v2_encounterconditionvalue" */
export type Pokemon_V2_Encounterconditionvalue_Aggregate_Fields = {
  __typename?: 'pokemon_v2_encounterconditionvalue_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Encounterconditionvalue_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Encounterconditionvalue_Max_Fields>;
  min?: Maybe<Pokemon_V2_Encounterconditionvalue_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Encounterconditionvalue_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Encounterconditionvalue_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Encounterconditionvalue_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Encounterconditionvalue_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Encounterconditionvalue_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Encounterconditionvalue_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Encounterconditionvalue_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_encounterconditionvalue" */
export type Pokemon_V2_Encounterconditionvalue_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Encounterconditionvalue_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Encounterconditionvalue_Avg_Fields = {
  __typename?: 'pokemon_v2_encounterconditionvalue_avg_fields';
  encounter_condition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_encounterconditionvalue". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Encounterconditionvalue_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Encounterconditionvalue_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Encounterconditionvalue_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Encounterconditionvalue_Bool_Exp>>;
  encounter_condition_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  is_default?: InputMaybe<Boolean_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_encounterconditionvalue" */
export enum Pokemon_V2_Encounterconditionvalue_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2EncounterconditionvaluePkey = 'pokemon_v2_encounterconditionvalue_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_encounterconditionvalue" */
export type Pokemon_V2_Encounterconditionvalue_Inc_Input = {
  encounter_condition_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_encounterconditionvalue" */
export type Pokemon_V2_Encounterconditionvalue_Insert_Input = {
  encounter_condition_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_default?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Encounterconditionvalue_Max_Fields = {
  __typename?: 'pokemon_v2_encounterconditionvalue_max_fields';
  encounter_condition_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Encounterconditionvalue_Min_Fields = {
  __typename?: 'pokemon_v2_encounterconditionvalue_min_fields';
  encounter_condition_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_encounterconditionvalue" */
export type Pokemon_V2_Encounterconditionvalue_Mutation_Response = {
  __typename?: 'pokemon_v2_encounterconditionvalue_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Encounterconditionvalue>;
};

/** on_conflict condition type for table "pokemon_v2_encounterconditionvalue" */
export type Pokemon_V2_Encounterconditionvalue_On_Conflict = {
  constraint: Pokemon_V2_Encounterconditionvalue_Constraint;
  update_columns?: Array<Pokemon_V2_Encounterconditionvalue_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Encounterconditionvalue_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_encounterconditionvalue". */
export type Pokemon_V2_Encounterconditionvalue_Order_By = {
  encounter_condition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  is_default?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_encounterconditionvalue */
export type Pokemon_V2_Encounterconditionvalue_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_encounterconditionvalue" */
export enum Pokemon_V2_Encounterconditionvalue_Select_Column {
  /** column name */
  EncounterConditionId = 'encounter_condition_id',
  /** column name */
  Id = 'id',
  /** column name */
  IsDefault = 'is_default',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_encounterconditionvalue" */
export type Pokemon_V2_Encounterconditionvalue_Set_Input = {
  encounter_condition_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_default?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Encounterconditionvalue_Stddev_Fields = {
  __typename?: 'pokemon_v2_encounterconditionvalue_stddev_fields';
  encounter_condition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Encounterconditionvalue_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_encounterconditionvalue_stddev_pop_fields';
  encounter_condition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Encounterconditionvalue_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_encounterconditionvalue_stddev_samp_fields';
  encounter_condition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_encounterconditionvalue" */
export type Pokemon_V2_Encounterconditionvalue_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Encounterconditionvalue_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Encounterconditionvalue_Stream_Cursor_Value_Input = {
  encounter_condition_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_default?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Encounterconditionvalue_Sum_Fields = {
  __typename?: 'pokemon_v2_encounterconditionvalue_sum_fields';
  encounter_condition_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_encounterconditionvalue" */
export enum Pokemon_V2_Encounterconditionvalue_Update_Column {
  /** column name */
  EncounterConditionId = 'encounter_condition_id',
  /** column name */
  Id = 'id',
  /** column name */
  IsDefault = 'is_default',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Encounterconditionvalue_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Encounterconditionvalue_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Encounterconditionvalue_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Encounterconditionvalue_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Encounterconditionvalue_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_encounterconditionvalue_var_pop_fields';
  encounter_condition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Encounterconditionvalue_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_encounterconditionvalue_var_samp_fields';
  encounter_condition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Encounterconditionvalue_Variance_Fields = {
  __typename?: 'pokemon_v2_encounterconditionvalue_variance_fields';
  encounter_condition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_encounterconditionvaluemap" */
export type Pokemon_V2_Encounterconditionvaluemap = {
  __typename?: 'pokemon_v2_encounterconditionvaluemap';
  encounter_condition_value_id?: Maybe<Scalars['Int']['output']>;
  encounter_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
};

/** aggregated selection of "pokemon_v2_encounterconditionvaluemap" */
export type Pokemon_V2_Encounterconditionvaluemap_Aggregate = {
  __typename?: 'pokemon_v2_encounterconditionvaluemap_aggregate';
  aggregate?: Maybe<Pokemon_V2_Encounterconditionvaluemap_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Encounterconditionvaluemap>;
};

/** aggregate fields of "pokemon_v2_encounterconditionvaluemap" */
export type Pokemon_V2_Encounterconditionvaluemap_Aggregate_Fields = {
  __typename?: 'pokemon_v2_encounterconditionvaluemap_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Encounterconditionvaluemap_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Encounterconditionvaluemap_Max_Fields>;
  min?: Maybe<Pokemon_V2_Encounterconditionvaluemap_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Encounterconditionvaluemap_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Encounterconditionvaluemap_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Encounterconditionvaluemap_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Encounterconditionvaluemap_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Encounterconditionvaluemap_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Encounterconditionvaluemap_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Encounterconditionvaluemap_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_encounterconditionvaluemap" */
export type Pokemon_V2_Encounterconditionvaluemap_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Encounterconditionvaluemap_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Encounterconditionvaluemap_Avg_Fields = {
  __typename?: 'pokemon_v2_encounterconditionvaluemap_avg_fields';
  encounter_condition_value_id?: Maybe<Scalars['Float']['output']>;
  encounter_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_encounterconditionvaluemap". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Encounterconditionvaluemap_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Encounterconditionvaluemap_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Encounterconditionvaluemap_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Encounterconditionvaluemap_Bool_Exp>>;
  encounter_condition_value_id?: InputMaybe<Int_Comparison_Exp>;
  encounter_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_encounterconditionvaluemap" */
export enum Pokemon_V2_Encounterconditionvaluemap_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2EncounterconditionvaluemapPkey = 'pokemon_v2_encounterconditionvaluemap_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_encounterconditionvaluemap" */
export type Pokemon_V2_Encounterconditionvaluemap_Inc_Input = {
  encounter_condition_value_id?: InputMaybe<Scalars['Int']['input']>;
  encounter_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_encounterconditionvaluemap" */
export type Pokemon_V2_Encounterconditionvaluemap_Insert_Input = {
  encounter_condition_value_id?: InputMaybe<Scalars['Int']['input']>;
  encounter_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Encounterconditionvaluemap_Max_Fields = {
  __typename?: 'pokemon_v2_encounterconditionvaluemap_max_fields';
  encounter_condition_value_id?: Maybe<Scalars['Int']['output']>;
  encounter_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Encounterconditionvaluemap_Min_Fields = {
  __typename?: 'pokemon_v2_encounterconditionvaluemap_min_fields';
  encounter_condition_value_id?: Maybe<Scalars['Int']['output']>;
  encounter_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_encounterconditionvaluemap" */
export type Pokemon_V2_Encounterconditionvaluemap_Mutation_Response = {
  __typename?: 'pokemon_v2_encounterconditionvaluemap_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Encounterconditionvaluemap>;
};

/** on_conflict condition type for table "pokemon_v2_encounterconditionvaluemap" */
export type Pokemon_V2_Encounterconditionvaluemap_On_Conflict = {
  constraint: Pokemon_V2_Encounterconditionvaluemap_Constraint;
  update_columns?: Array<Pokemon_V2_Encounterconditionvaluemap_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Encounterconditionvaluemap_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_encounterconditionvaluemap". */
export type Pokemon_V2_Encounterconditionvaluemap_Order_By = {
  encounter_condition_value_id?: InputMaybe<Order_By>;
  encounter_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_encounterconditionvaluemap */
export type Pokemon_V2_Encounterconditionvaluemap_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_encounterconditionvaluemap" */
export enum Pokemon_V2_Encounterconditionvaluemap_Select_Column {
  /** column name */
  EncounterConditionValueId = 'encounter_condition_value_id',
  /** column name */
  EncounterId = 'encounter_id',
  /** column name */
  Id = 'id'
}

/** input type for updating data in table "pokemon_v2_encounterconditionvaluemap" */
export type Pokemon_V2_Encounterconditionvaluemap_Set_Input = {
  encounter_condition_value_id?: InputMaybe<Scalars['Int']['input']>;
  encounter_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Encounterconditionvaluemap_Stddev_Fields = {
  __typename?: 'pokemon_v2_encounterconditionvaluemap_stddev_fields';
  encounter_condition_value_id?: Maybe<Scalars['Float']['output']>;
  encounter_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Encounterconditionvaluemap_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_encounterconditionvaluemap_stddev_pop_fields';
  encounter_condition_value_id?: Maybe<Scalars['Float']['output']>;
  encounter_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Encounterconditionvaluemap_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_encounterconditionvaluemap_stddev_samp_fields';
  encounter_condition_value_id?: Maybe<Scalars['Float']['output']>;
  encounter_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_encounterconditionvaluemap" */
export type Pokemon_V2_Encounterconditionvaluemap_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Encounterconditionvaluemap_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Encounterconditionvaluemap_Stream_Cursor_Value_Input = {
  encounter_condition_value_id?: InputMaybe<Scalars['Int']['input']>;
  encounter_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Encounterconditionvaluemap_Sum_Fields = {
  __typename?: 'pokemon_v2_encounterconditionvaluemap_sum_fields';
  encounter_condition_value_id?: Maybe<Scalars['Int']['output']>;
  encounter_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_encounterconditionvaluemap" */
export enum Pokemon_V2_Encounterconditionvaluemap_Update_Column {
  /** column name */
  EncounterConditionValueId = 'encounter_condition_value_id',
  /** column name */
  EncounterId = 'encounter_id',
  /** column name */
  Id = 'id'
}

export type Pokemon_V2_Encounterconditionvaluemap_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Encounterconditionvaluemap_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Encounterconditionvaluemap_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Encounterconditionvaluemap_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Encounterconditionvaluemap_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_encounterconditionvaluemap_var_pop_fields';
  encounter_condition_value_id?: Maybe<Scalars['Float']['output']>;
  encounter_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Encounterconditionvaluemap_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_encounterconditionvaluemap_var_samp_fields';
  encounter_condition_value_id?: Maybe<Scalars['Float']['output']>;
  encounter_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Encounterconditionvaluemap_Variance_Fields = {
  __typename?: 'pokemon_v2_encounterconditionvaluemap_variance_fields';
  encounter_condition_value_id?: Maybe<Scalars['Float']['output']>;
  encounter_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_encounterconditionvaluename" */
export type Pokemon_V2_Encounterconditionvaluename = {
  __typename?: 'pokemon_v2_encounterconditionvaluename';
  encounter_condition_value_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_encounterconditionvaluename" */
export type Pokemon_V2_Encounterconditionvaluename_Aggregate = {
  __typename?: 'pokemon_v2_encounterconditionvaluename_aggregate';
  aggregate?: Maybe<Pokemon_V2_Encounterconditionvaluename_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Encounterconditionvaluename>;
};

/** aggregate fields of "pokemon_v2_encounterconditionvaluename" */
export type Pokemon_V2_Encounterconditionvaluename_Aggregate_Fields = {
  __typename?: 'pokemon_v2_encounterconditionvaluename_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Encounterconditionvaluename_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Encounterconditionvaluename_Max_Fields>;
  min?: Maybe<Pokemon_V2_Encounterconditionvaluename_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Encounterconditionvaluename_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Encounterconditionvaluename_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Encounterconditionvaluename_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Encounterconditionvaluename_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Encounterconditionvaluename_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Encounterconditionvaluename_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Encounterconditionvaluename_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_encounterconditionvaluename" */
export type Pokemon_V2_Encounterconditionvaluename_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Encounterconditionvaluename_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Encounterconditionvaluename_Avg_Fields = {
  __typename?: 'pokemon_v2_encounterconditionvaluename_avg_fields';
  encounter_condition_value_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_encounterconditionvaluename". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Encounterconditionvaluename_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Encounterconditionvaluename_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Encounterconditionvaluename_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Encounterconditionvaluename_Bool_Exp>>;
  encounter_condition_value_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_encounterconditionvaluename" */
export enum Pokemon_V2_Encounterconditionvaluename_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2EncounterconditionvaluenamePkey = 'pokemon_v2_encounterconditionvaluename_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_encounterconditionvaluename" */
export type Pokemon_V2_Encounterconditionvaluename_Inc_Input = {
  encounter_condition_value_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_encounterconditionvaluename" */
export type Pokemon_V2_Encounterconditionvaluename_Insert_Input = {
  encounter_condition_value_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Encounterconditionvaluename_Max_Fields = {
  __typename?: 'pokemon_v2_encounterconditionvaluename_max_fields';
  encounter_condition_value_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Encounterconditionvaluename_Min_Fields = {
  __typename?: 'pokemon_v2_encounterconditionvaluename_min_fields';
  encounter_condition_value_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_encounterconditionvaluename" */
export type Pokemon_V2_Encounterconditionvaluename_Mutation_Response = {
  __typename?: 'pokemon_v2_encounterconditionvaluename_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Encounterconditionvaluename>;
};

/** on_conflict condition type for table "pokemon_v2_encounterconditionvaluename" */
export type Pokemon_V2_Encounterconditionvaluename_On_Conflict = {
  constraint: Pokemon_V2_Encounterconditionvaluename_Constraint;
  update_columns?: Array<Pokemon_V2_Encounterconditionvaluename_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Encounterconditionvaluename_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_encounterconditionvaluename". */
export type Pokemon_V2_Encounterconditionvaluename_Order_By = {
  encounter_condition_value_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_encounterconditionvaluename */
export type Pokemon_V2_Encounterconditionvaluename_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_encounterconditionvaluename" */
export enum Pokemon_V2_Encounterconditionvaluename_Select_Column {
  /** column name */
  EncounterConditionValueId = 'encounter_condition_value_id',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_encounterconditionvaluename" */
export type Pokemon_V2_Encounterconditionvaluename_Set_Input = {
  encounter_condition_value_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Encounterconditionvaluename_Stddev_Fields = {
  __typename?: 'pokemon_v2_encounterconditionvaluename_stddev_fields';
  encounter_condition_value_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Encounterconditionvaluename_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_encounterconditionvaluename_stddev_pop_fields';
  encounter_condition_value_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Encounterconditionvaluename_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_encounterconditionvaluename_stddev_samp_fields';
  encounter_condition_value_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_encounterconditionvaluename" */
export type Pokemon_V2_Encounterconditionvaluename_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Encounterconditionvaluename_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Encounterconditionvaluename_Stream_Cursor_Value_Input = {
  encounter_condition_value_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Encounterconditionvaluename_Sum_Fields = {
  __typename?: 'pokemon_v2_encounterconditionvaluename_sum_fields';
  encounter_condition_value_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_encounterconditionvaluename" */
export enum Pokemon_V2_Encounterconditionvaluename_Update_Column {
  /** column name */
  EncounterConditionValueId = 'encounter_condition_value_id',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Encounterconditionvaluename_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Encounterconditionvaluename_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Encounterconditionvaluename_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Encounterconditionvaluename_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Encounterconditionvaluename_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_encounterconditionvaluename_var_pop_fields';
  encounter_condition_value_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Encounterconditionvaluename_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_encounterconditionvaluename_var_samp_fields';
  encounter_condition_value_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Encounterconditionvaluename_Variance_Fields = {
  __typename?: 'pokemon_v2_encounterconditionvaluename_variance_fields';
  encounter_condition_value_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_encountermethod" */
export type Pokemon_V2_Encountermethod = {
  __typename?: 'pokemon_v2_encountermethod';
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  order?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_encountermethod" */
export type Pokemon_V2_Encountermethod_Aggregate = {
  __typename?: 'pokemon_v2_encountermethod_aggregate';
  aggregate?: Maybe<Pokemon_V2_Encountermethod_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Encountermethod>;
};

/** aggregate fields of "pokemon_v2_encountermethod" */
export type Pokemon_V2_Encountermethod_Aggregate_Fields = {
  __typename?: 'pokemon_v2_encountermethod_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Encountermethod_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Encountermethod_Max_Fields>;
  min?: Maybe<Pokemon_V2_Encountermethod_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Encountermethod_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Encountermethod_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Encountermethod_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Encountermethod_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Encountermethod_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Encountermethod_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Encountermethod_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_encountermethod" */
export type Pokemon_V2_Encountermethod_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Encountermethod_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Encountermethod_Avg_Fields = {
  __typename?: 'pokemon_v2_encountermethod_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_encountermethod". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Encountermethod_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Encountermethod_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Encountermethod_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Encountermethod_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  order?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_encountermethod" */
export enum Pokemon_V2_Encountermethod_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2EncountermethodPkey = 'pokemon_v2_encountermethod_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_encountermethod" */
export type Pokemon_V2_Encountermethod_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_encountermethod" */
export type Pokemon_V2_Encountermethod_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Encountermethod_Max_Fields = {
  __typename?: 'pokemon_v2_encountermethod_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Encountermethod_Min_Fields = {
  __typename?: 'pokemon_v2_encountermethod_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_encountermethod" */
export type Pokemon_V2_Encountermethod_Mutation_Response = {
  __typename?: 'pokemon_v2_encountermethod_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Encountermethod>;
};

/** on_conflict condition type for table "pokemon_v2_encountermethod" */
export type Pokemon_V2_Encountermethod_On_Conflict = {
  constraint: Pokemon_V2_Encountermethod_Constraint;
  update_columns?: Array<Pokemon_V2_Encountermethod_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Encountermethod_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_encountermethod". */
export type Pokemon_V2_Encountermethod_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_encountermethod */
export type Pokemon_V2_Encountermethod_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_encountermethod" */
export enum Pokemon_V2_Encountermethod_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order'
}

/** input type for updating data in table "pokemon_v2_encountermethod" */
export type Pokemon_V2_Encountermethod_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Encountermethod_Stddev_Fields = {
  __typename?: 'pokemon_v2_encountermethod_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Encountermethod_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_encountermethod_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Encountermethod_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_encountermethod_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_encountermethod" */
export type Pokemon_V2_Encountermethod_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Encountermethod_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Encountermethod_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Encountermethod_Sum_Fields = {
  __typename?: 'pokemon_v2_encountermethod_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_encountermethod" */
export enum Pokemon_V2_Encountermethod_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order'
}

export type Pokemon_V2_Encountermethod_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Encountermethod_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Encountermethod_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Encountermethod_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Encountermethod_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_encountermethod_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Encountermethod_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_encountermethod_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Encountermethod_Variance_Fields = {
  __typename?: 'pokemon_v2_encountermethod_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_encountermethodname" */
export type Pokemon_V2_Encountermethodname = {
  __typename?: 'pokemon_v2_encountermethodname';
  encounter_method_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_encountermethodname" */
export type Pokemon_V2_Encountermethodname_Aggregate = {
  __typename?: 'pokemon_v2_encountermethodname_aggregate';
  aggregate?: Maybe<Pokemon_V2_Encountermethodname_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Encountermethodname>;
};

/** aggregate fields of "pokemon_v2_encountermethodname" */
export type Pokemon_V2_Encountermethodname_Aggregate_Fields = {
  __typename?: 'pokemon_v2_encountermethodname_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Encountermethodname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Encountermethodname_Max_Fields>;
  min?: Maybe<Pokemon_V2_Encountermethodname_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Encountermethodname_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Encountermethodname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Encountermethodname_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Encountermethodname_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Encountermethodname_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Encountermethodname_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Encountermethodname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_encountermethodname" */
export type Pokemon_V2_Encountermethodname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Encountermethodname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Encountermethodname_Avg_Fields = {
  __typename?: 'pokemon_v2_encountermethodname_avg_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_encountermethodname". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Encountermethodname_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Encountermethodname_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Encountermethodname_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Encountermethodname_Bool_Exp>>;
  encounter_method_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_encountermethodname" */
export enum Pokemon_V2_Encountermethodname_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2EncountermethodnamePkey = 'pokemon_v2_encountermethodname_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_encountermethodname" */
export type Pokemon_V2_Encountermethodname_Inc_Input = {
  encounter_method_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_encountermethodname" */
export type Pokemon_V2_Encountermethodname_Insert_Input = {
  encounter_method_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Encountermethodname_Max_Fields = {
  __typename?: 'pokemon_v2_encountermethodname_max_fields';
  encounter_method_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Encountermethodname_Min_Fields = {
  __typename?: 'pokemon_v2_encountermethodname_min_fields';
  encounter_method_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_encountermethodname" */
export type Pokemon_V2_Encountermethodname_Mutation_Response = {
  __typename?: 'pokemon_v2_encountermethodname_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Encountermethodname>;
};

/** on_conflict condition type for table "pokemon_v2_encountermethodname" */
export type Pokemon_V2_Encountermethodname_On_Conflict = {
  constraint: Pokemon_V2_Encountermethodname_Constraint;
  update_columns?: Array<Pokemon_V2_Encountermethodname_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Encountermethodname_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_encountermethodname". */
export type Pokemon_V2_Encountermethodname_Order_By = {
  encounter_method_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_encountermethodname */
export type Pokemon_V2_Encountermethodname_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_encountermethodname" */
export enum Pokemon_V2_Encountermethodname_Select_Column {
  /** column name */
  EncounterMethodId = 'encounter_method_id',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_encountermethodname" */
export type Pokemon_V2_Encountermethodname_Set_Input = {
  encounter_method_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Encountermethodname_Stddev_Fields = {
  __typename?: 'pokemon_v2_encountermethodname_stddev_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Encountermethodname_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_encountermethodname_stddev_pop_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Encountermethodname_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_encountermethodname_stddev_samp_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_encountermethodname" */
export type Pokemon_V2_Encountermethodname_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Encountermethodname_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Encountermethodname_Stream_Cursor_Value_Input = {
  encounter_method_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Encountermethodname_Sum_Fields = {
  __typename?: 'pokemon_v2_encountermethodname_sum_fields';
  encounter_method_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_encountermethodname" */
export enum Pokemon_V2_Encountermethodname_Update_Column {
  /** column name */
  EncounterMethodId = 'encounter_method_id',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Encountermethodname_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Encountermethodname_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Encountermethodname_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Encountermethodname_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Encountermethodname_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_encountermethodname_var_pop_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Encountermethodname_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_encountermethodname_var_samp_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Encountermethodname_Variance_Fields = {
  __typename?: 'pokemon_v2_encountermethodname_variance_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_encounterslot" */
export type Pokemon_V2_Encounterslot = {
  __typename?: 'pokemon_v2_encounterslot';
  encounter_method_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  rarity: Scalars['Int']['output'];
  slot?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_encounterslot" */
export type Pokemon_V2_Encounterslot_Aggregate = {
  __typename?: 'pokemon_v2_encounterslot_aggregate';
  aggregate?: Maybe<Pokemon_V2_Encounterslot_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Encounterslot>;
};

/** aggregate fields of "pokemon_v2_encounterslot" */
export type Pokemon_V2_Encounterslot_Aggregate_Fields = {
  __typename?: 'pokemon_v2_encounterslot_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Encounterslot_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Encounterslot_Max_Fields>;
  min?: Maybe<Pokemon_V2_Encounterslot_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Encounterslot_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Encounterslot_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Encounterslot_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Encounterslot_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Encounterslot_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Encounterslot_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Encounterslot_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_encounterslot" */
export type Pokemon_V2_Encounterslot_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Encounterslot_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Encounterslot_Avg_Fields = {
  __typename?: 'pokemon_v2_encounterslot_avg_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  rarity?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_encounterslot". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Encounterslot_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Encounterslot_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Encounterslot_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Encounterslot_Bool_Exp>>;
  encounter_method_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  rarity?: InputMaybe<Int_Comparison_Exp>;
  slot?: InputMaybe<Int_Comparison_Exp>;
  version_group_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_encounterslot" */
export enum Pokemon_V2_Encounterslot_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2EncounterslotPkey = 'pokemon_v2_encounterslot_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_encounterslot" */
export type Pokemon_V2_Encounterslot_Inc_Input = {
  encounter_method_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  rarity?: InputMaybe<Scalars['Int']['input']>;
  slot?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_encounterslot" */
export type Pokemon_V2_Encounterslot_Insert_Input = {
  encounter_method_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  rarity?: InputMaybe<Scalars['Int']['input']>;
  slot?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Encounterslot_Max_Fields = {
  __typename?: 'pokemon_v2_encounterslot_max_fields';
  encounter_method_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  rarity?: Maybe<Scalars['Int']['output']>;
  slot?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Encounterslot_Min_Fields = {
  __typename?: 'pokemon_v2_encounterslot_min_fields';
  encounter_method_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  rarity?: Maybe<Scalars['Int']['output']>;
  slot?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_encounterslot" */
export type Pokemon_V2_Encounterslot_Mutation_Response = {
  __typename?: 'pokemon_v2_encounterslot_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Encounterslot>;
};

/** on_conflict condition type for table "pokemon_v2_encounterslot" */
export type Pokemon_V2_Encounterslot_On_Conflict = {
  constraint: Pokemon_V2_Encounterslot_Constraint;
  update_columns?: Array<Pokemon_V2_Encounterslot_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Encounterslot_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_encounterslot". */
export type Pokemon_V2_Encounterslot_Order_By = {
  encounter_method_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  rarity?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_encounterslot */
export type Pokemon_V2_Encounterslot_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_encounterslot" */
export enum Pokemon_V2_Encounterslot_Select_Column {
  /** column name */
  EncounterMethodId = 'encounter_method_id',
  /** column name */
  Id = 'id',
  /** column name */
  Rarity = 'rarity',
  /** column name */
  Slot = 'slot',
  /** column name */
  VersionGroupId = 'version_group_id'
}

/** input type for updating data in table "pokemon_v2_encounterslot" */
export type Pokemon_V2_Encounterslot_Set_Input = {
  encounter_method_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  rarity?: InputMaybe<Scalars['Int']['input']>;
  slot?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Encounterslot_Stddev_Fields = {
  __typename?: 'pokemon_v2_encounterslot_stddev_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  rarity?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Encounterslot_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_encounterslot_stddev_pop_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  rarity?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Encounterslot_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_encounterslot_stddev_samp_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  rarity?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_encounterslot" */
export type Pokemon_V2_Encounterslot_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Encounterslot_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Encounterslot_Stream_Cursor_Value_Input = {
  encounter_method_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  rarity?: InputMaybe<Scalars['Int']['input']>;
  slot?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Encounterslot_Sum_Fields = {
  __typename?: 'pokemon_v2_encounterslot_sum_fields';
  encounter_method_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  rarity?: Maybe<Scalars['Int']['output']>;
  slot?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_encounterslot" */
export enum Pokemon_V2_Encounterslot_Update_Column {
  /** column name */
  EncounterMethodId = 'encounter_method_id',
  /** column name */
  Id = 'id',
  /** column name */
  Rarity = 'rarity',
  /** column name */
  Slot = 'slot',
  /** column name */
  VersionGroupId = 'version_group_id'
}

export type Pokemon_V2_Encounterslot_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Encounterslot_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Encounterslot_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Encounterslot_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Encounterslot_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_encounterslot_var_pop_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  rarity?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Encounterslot_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_encounterslot_var_samp_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  rarity?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Encounterslot_Variance_Fields = {
  __typename?: 'pokemon_v2_encounterslot_variance_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  rarity?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_evolutionchain" */
export type Pokemon_V2_Evolutionchain = {
  __typename?: 'pokemon_v2_evolutionchain';
  baby_trigger_item_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
};

/** aggregated selection of "pokemon_v2_evolutionchain" */
export type Pokemon_V2_Evolutionchain_Aggregate = {
  __typename?: 'pokemon_v2_evolutionchain_aggregate';
  aggregate?: Maybe<Pokemon_V2_Evolutionchain_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Evolutionchain>;
};

/** aggregate fields of "pokemon_v2_evolutionchain" */
export type Pokemon_V2_Evolutionchain_Aggregate_Fields = {
  __typename?: 'pokemon_v2_evolutionchain_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Evolutionchain_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Evolutionchain_Max_Fields>;
  min?: Maybe<Pokemon_V2_Evolutionchain_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Evolutionchain_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Evolutionchain_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Evolutionchain_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Evolutionchain_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Evolutionchain_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Evolutionchain_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Evolutionchain_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_evolutionchain" */
export type Pokemon_V2_Evolutionchain_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Evolutionchain_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Evolutionchain_Avg_Fields = {
  __typename?: 'pokemon_v2_evolutionchain_avg_fields';
  baby_trigger_item_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_evolutionchain". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Evolutionchain_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Evolutionchain_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Evolutionchain_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Evolutionchain_Bool_Exp>>;
  baby_trigger_item_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_evolutionchain" */
export enum Pokemon_V2_Evolutionchain_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2EvolutionchainPkey = 'pokemon_v2_evolutionchain_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_evolutionchain" */
export type Pokemon_V2_Evolutionchain_Inc_Input = {
  baby_trigger_item_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_evolutionchain" */
export type Pokemon_V2_Evolutionchain_Insert_Input = {
  baby_trigger_item_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Evolutionchain_Max_Fields = {
  __typename?: 'pokemon_v2_evolutionchain_max_fields';
  baby_trigger_item_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Evolutionchain_Min_Fields = {
  __typename?: 'pokemon_v2_evolutionchain_min_fields';
  baby_trigger_item_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_evolutionchain" */
export type Pokemon_V2_Evolutionchain_Mutation_Response = {
  __typename?: 'pokemon_v2_evolutionchain_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Evolutionchain>;
};

/** on_conflict condition type for table "pokemon_v2_evolutionchain" */
export type Pokemon_V2_Evolutionchain_On_Conflict = {
  constraint: Pokemon_V2_Evolutionchain_Constraint;
  update_columns?: Array<Pokemon_V2_Evolutionchain_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Evolutionchain_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_evolutionchain". */
export type Pokemon_V2_Evolutionchain_Order_By = {
  baby_trigger_item_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_evolutionchain */
export type Pokemon_V2_Evolutionchain_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_evolutionchain" */
export enum Pokemon_V2_Evolutionchain_Select_Column {
  /** column name */
  BabyTriggerItemId = 'baby_trigger_item_id',
  /** column name */
  Id = 'id'
}

/** input type for updating data in table "pokemon_v2_evolutionchain" */
export type Pokemon_V2_Evolutionchain_Set_Input = {
  baby_trigger_item_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Evolutionchain_Stddev_Fields = {
  __typename?: 'pokemon_v2_evolutionchain_stddev_fields';
  baby_trigger_item_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Evolutionchain_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_evolutionchain_stddev_pop_fields';
  baby_trigger_item_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Evolutionchain_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_evolutionchain_stddev_samp_fields';
  baby_trigger_item_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_evolutionchain" */
export type Pokemon_V2_Evolutionchain_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Evolutionchain_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Evolutionchain_Stream_Cursor_Value_Input = {
  baby_trigger_item_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Evolutionchain_Sum_Fields = {
  __typename?: 'pokemon_v2_evolutionchain_sum_fields';
  baby_trigger_item_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_evolutionchain" */
export enum Pokemon_V2_Evolutionchain_Update_Column {
  /** column name */
  BabyTriggerItemId = 'baby_trigger_item_id',
  /** column name */
  Id = 'id'
}

export type Pokemon_V2_Evolutionchain_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Evolutionchain_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Evolutionchain_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Evolutionchain_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Evolutionchain_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_evolutionchain_var_pop_fields';
  baby_trigger_item_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Evolutionchain_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_evolutionchain_var_samp_fields';
  baby_trigger_item_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Evolutionchain_Variance_Fields = {
  __typename?: 'pokemon_v2_evolutionchain_variance_fields';
  baby_trigger_item_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_evolutiontrigger" */
export type Pokemon_V2_Evolutiontrigger = {
  __typename?: 'pokemon_v2_evolutiontrigger';
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_evolutiontrigger" */
export type Pokemon_V2_Evolutiontrigger_Aggregate = {
  __typename?: 'pokemon_v2_evolutiontrigger_aggregate';
  aggregate?: Maybe<Pokemon_V2_Evolutiontrigger_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Evolutiontrigger>;
};

/** aggregate fields of "pokemon_v2_evolutiontrigger" */
export type Pokemon_V2_Evolutiontrigger_Aggregate_Fields = {
  __typename?: 'pokemon_v2_evolutiontrigger_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Evolutiontrigger_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Evolutiontrigger_Max_Fields>;
  min?: Maybe<Pokemon_V2_Evolutiontrigger_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Evolutiontrigger_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Evolutiontrigger_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Evolutiontrigger_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Evolutiontrigger_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Evolutiontrigger_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Evolutiontrigger_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Evolutiontrigger_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_evolutiontrigger" */
export type Pokemon_V2_Evolutiontrigger_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Evolutiontrigger_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Evolutiontrigger_Avg_Fields = {
  __typename?: 'pokemon_v2_evolutiontrigger_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_evolutiontrigger". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Evolutiontrigger_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Evolutiontrigger_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Evolutiontrigger_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Evolutiontrigger_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_evolutiontrigger" */
export enum Pokemon_V2_Evolutiontrigger_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2EvolutiontriggerPkey = 'pokemon_v2_evolutiontrigger_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_evolutiontrigger" */
export type Pokemon_V2_Evolutiontrigger_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_evolutiontrigger" */
export type Pokemon_V2_Evolutiontrigger_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Evolutiontrigger_Max_Fields = {
  __typename?: 'pokemon_v2_evolutiontrigger_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Evolutiontrigger_Min_Fields = {
  __typename?: 'pokemon_v2_evolutiontrigger_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_evolutiontrigger" */
export type Pokemon_V2_Evolutiontrigger_Mutation_Response = {
  __typename?: 'pokemon_v2_evolutiontrigger_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Evolutiontrigger>;
};

/** on_conflict condition type for table "pokemon_v2_evolutiontrigger" */
export type Pokemon_V2_Evolutiontrigger_On_Conflict = {
  constraint: Pokemon_V2_Evolutiontrigger_Constraint;
  update_columns?: Array<Pokemon_V2_Evolutiontrigger_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Evolutiontrigger_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_evolutiontrigger". */
export type Pokemon_V2_Evolutiontrigger_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_evolutiontrigger */
export type Pokemon_V2_Evolutiontrigger_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_evolutiontrigger" */
export enum Pokemon_V2_Evolutiontrigger_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_evolutiontrigger" */
export type Pokemon_V2_Evolutiontrigger_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Evolutiontrigger_Stddev_Fields = {
  __typename?: 'pokemon_v2_evolutiontrigger_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Evolutiontrigger_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_evolutiontrigger_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Evolutiontrigger_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_evolutiontrigger_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_evolutiontrigger" */
export type Pokemon_V2_Evolutiontrigger_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Evolutiontrigger_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Evolutiontrigger_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Evolutiontrigger_Sum_Fields = {
  __typename?: 'pokemon_v2_evolutiontrigger_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_evolutiontrigger" */
export enum Pokemon_V2_Evolutiontrigger_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Evolutiontrigger_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Evolutiontrigger_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Evolutiontrigger_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Evolutiontrigger_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Evolutiontrigger_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_evolutiontrigger_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Evolutiontrigger_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_evolutiontrigger_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Evolutiontrigger_Variance_Fields = {
  __typename?: 'pokemon_v2_evolutiontrigger_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_evolutiontriggername" */
export type Pokemon_V2_Evolutiontriggername = {
  __typename?: 'pokemon_v2_evolutiontriggername';
  evolution_trigger_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_evolutiontriggername" */
export type Pokemon_V2_Evolutiontriggername_Aggregate = {
  __typename?: 'pokemon_v2_evolutiontriggername_aggregate';
  aggregate?: Maybe<Pokemon_V2_Evolutiontriggername_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Evolutiontriggername>;
};

/** aggregate fields of "pokemon_v2_evolutiontriggername" */
export type Pokemon_V2_Evolutiontriggername_Aggregate_Fields = {
  __typename?: 'pokemon_v2_evolutiontriggername_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Evolutiontriggername_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Evolutiontriggername_Max_Fields>;
  min?: Maybe<Pokemon_V2_Evolutiontriggername_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Evolutiontriggername_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Evolutiontriggername_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Evolutiontriggername_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Evolutiontriggername_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Evolutiontriggername_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Evolutiontriggername_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Evolutiontriggername_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_evolutiontriggername" */
export type Pokemon_V2_Evolutiontriggername_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Evolutiontriggername_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Evolutiontriggername_Avg_Fields = {
  __typename?: 'pokemon_v2_evolutiontriggername_avg_fields';
  evolution_trigger_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_evolutiontriggername". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Evolutiontriggername_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Evolutiontriggername_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Evolutiontriggername_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Evolutiontriggername_Bool_Exp>>;
  evolution_trigger_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_evolutiontriggername" */
export enum Pokemon_V2_Evolutiontriggername_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2EvolutiontriggernamePkey = 'pokemon_v2_evolutiontriggername_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_evolutiontriggername" */
export type Pokemon_V2_Evolutiontriggername_Inc_Input = {
  evolution_trigger_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_evolutiontriggername" */
export type Pokemon_V2_Evolutiontriggername_Insert_Input = {
  evolution_trigger_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Evolutiontriggername_Max_Fields = {
  __typename?: 'pokemon_v2_evolutiontriggername_max_fields';
  evolution_trigger_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Evolutiontriggername_Min_Fields = {
  __typename?: 'pokemon_v2_evolutiontriggername_min_fields';
  evolution_trigger_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_evolutiontriggername" */
export type Pokemon_V2_Evolutiontriggername_Mutation_Response = {
  __typename?: 'pokemon_v2_evolutiontriggername_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Evolutiontriggername>;
};

/** on_conflict condition type for table "pokemon_v2_evolutiontriggername" */
export type Pokemon_V2_Evolutiontriggername_On_Conflict = {
  constraint: Pokemon_V2_Evolutiontriggername_Constraint;
  update_columns?: Array<Pokemon_V2_Evolutiontriggername_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Evolutiontriggername_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_evolutiontriggername". */
export type Pokemon_V2_Evolutiontriggername_Order_By = {
  evolution_trigger_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_evolutiontriggername */
export type Pokemon_V2_Evolutiontriggername_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_evolutiontriggername" */
export enum Pokemon_V2_Evolutiontriggername_Select_Column {
  /** column name */
  EvolutionTriggerId = 'evolution_trigger_id',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_evolutiontriggername" */
export type Pokemon_V2_Evolutiontriggername_Set_Input = {
  evolution_trigger_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Evolutiontriggername_Stddev_Fields = {
  __typename?: 'pokemon_v2_evolutiontriggername_stddev_fields';
  evolution_trigger_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Evolutiontriggername_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_evolutiontriggername_stddev_pop_fields';
  evolution_trigger_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Evolutiontriggername_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_evolutiontriggername_stddev_samp_fields';
  evolution_trigger_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_evolutiontriggername" */
export type Pokemon_V2_Evolutiontriggername_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Evolutiontriggername_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Evolutiontriggername_Stream_Cursor_Value_Input = {
  evolution_trigger_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Evolutiontriggername_Sum_Fields = {
  __typename?: 'pokemon_v2_evolutiontriggername_sum_fields';
  evolution_trigger_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_evolutiontriggername" */
export enum Pokemon_V2_Evolutiontriggername_Update_Column {
  /** column name */
  EvolutionTriggerId = 'evolution_trigger_id',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Evolutiontriggername_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Evolutiontriggername_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Evolutiontriggername_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Evolutiontriggername_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Evolutiontriggername_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_evolutiontriggername_var_pop_fields';
  evolution_trigger_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Evolutiontriggername_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_evolutiontriggername_var_samp_fields';
  evolution_trigger_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Evolutiontriggername_Variance_Fields = {
  __typename?: 'pokemon_v2_evolutiontriggername_variance_fields';
  evolution_trigger_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_experience" */
export type Pokemon_V2_Experience = {
  __typename?: 'pokemon_v2_experience';
  experience: Scalars['Int']['output'];
  growth_rate_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  level: Scalars['Int']['output'];
};

/** aggregated selection of "pokemon_v2_experience" */
export type Pokemon_V2_Experience_Aggregate = {
  __typename?: 'pokemon_v2_experience_aggregate';
  aggregate?: Maybe<Pokemon_V2_Experience_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Experience>;
};

/** aggregate fields of "pokemon_v2_experience" */
export type Pokemon_V2_Experience_Aggregate_Fields = {
  __typename?: 'pokemon_v2_experience_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Experience_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Experience_Max_Fields>;
  min?: Maybe<Pokemon_V2_Experience_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Experience_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Experience_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Experience_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Experience_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Experience_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Experience_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Experience_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_experience" */
export type Pokemon_V2_Experience_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Experience_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Experience_Avg_Fields = {
  __typename?: 'pokemon_v2_experience_avg_fields';
  experience?: Maybe<Scalars['Float']['output']>;
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  level?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_experience". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Experience_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Experience_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Experience_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Experience_Bool_Exp>>;
  experience?: InputMaybe<Int_Comparison_Exp>;
  growth_rate_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  level?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_experience" */
export enum Pokemon_V2_Experience_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2ExperiencePkey = 'pokemon_v2_experience_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_experience" */
export type Pokemon_V2_Experience_Inc_Input = {
  experience?: InputMaybe<Scalars['Int']['input']>;
  growth_rate_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  level?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_experience" */
export type Pokemon_V2_Experience_Insert_Input = {
  experience?: InputMaybe<Scalars['Int']['input']>;
  growth_rate_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  level?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Experience_Max_Fields = {
  __typename?: 'pokemon_v2_experience_max_fields';
  experience?: Maybe<Scalars['Int']['output']>;
  growth_rate_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  level?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Experience_Min_Fields = {
  __typename?: 'pokemon_v2_experience_min_fields';
  experience?: Maybe<Scalars['Int']['output']>;
  growth_rate_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  level?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_experience" */
export type Pokemon_V2_Experience_Mutation_Response = {
  __typename?: 'pokemon_v2_experience_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Experience>;
};

/** on_conflict condition type for table "pokemon_v2_experience" */
export type Pokemon_V2_Experience_On_Conflict = {
  constraint: Pokemon_V2_Experience_Constraint;
  update_columns?: Array<Pokemon_V2_Experience_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Experience_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_experience". */
export type Pokemon_V2_Experience_Order_By = {
  experience?: InputMaybe<Order_By>;
  growth_rate_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  level?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_experience */
export type Pokemon_V2_Experience_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_experience" */
export enum Pokemon_V2_Experience_Select_Column {
  /** column name */
  Experience = 'experience',
  /** column name */
  GrowthRateId = 'growth_rate_id',
  /** column name */
  Id = 'id',
  /** column name */
  Level = 'level'
}

/** input type for updating data in table "pokemon_v2_experience" */
export type Pokemon_V2_Experience_Set_Input = {
  experience?: InputMaybe<Scalars['Int']['input']>;
  growth_rate_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  level?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Experience_Stddev_Fields = {
  __typename?: 'pokemon_v2_experience_stddev_fields';
  experience?: Maybe<Scalars['Float']['output']>;
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  level?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Experience_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_experience_stddev_pop_fields';
  experience?: Maybe<Scalars['Float']['output']>;
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  level?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Experience_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_experience_stddev_samp_fields';
  experience?: Maybe<Scalars['Float']['output']>;
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  level?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_experience" */
export type Pokemon_V2_Experience_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Experience_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Experience_Stream_Cursor_Value_Input = {
  experience?: InputMaybe<Scalars['Int']['input']>;
  growth_rate_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  level?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Experience_Sum_Fields = {
  __typename?: 'pokemon_v2_experience_sum_fields';
  experience?: Maybe<Scalars['Int']['output']>;
  growth_rate_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  level?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_experience" */
export enum Pokemon_V2_Experience_Update_Column {
  /** column name */
  Experience = 'experience',
  /** column name */
  GrowthRateId = 'growth_rate_id',
  /** column name */
  Id = 'id',
  /** column name */
  Level = 'level'
}

export type Pokemon_V2_Experience_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Experience_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Experience_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Experience_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Experience_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_experience_var_pop_fields';
  experience?: Maybe<Scalars['Float']['output']>;
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  level?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Experience_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_experience_var_samp_fields';
  experience?: Maybe<Scalars['Float']['output']>;
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  level?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Experience_Variance_Fields = {
  __typename?: 'pokemon_v2_experience_variance_fields';
  experience?: Maybe<Scalars['Float']['output']>;
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  level?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_gender" */
export type Pokemon_V2_Gender = {
  __typename?: 'pokemon_v2_gender';
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_gender" */
export type Pokemon_V2_Gender_Aggregate = {
  __typename?: 'pokemon_v2_gender_aggregate';
  aggregate?: Maybe<Pokemon_V2_Gender_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Gender>;
};

/** aggregate fields of "pokemon_v2_gender" */
export type Pokemon_V2_Gender_Aggregate_Fields = {
  __typename?: 'pokemon_v2_gender_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Gender_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Gender_Max_Fields>;
  min?: Maybe<Pokemon_V2_Gender_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Gender_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Gender_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Gender_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Gender_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Gender_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Gender_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Gender_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_gender" */
export type Pokemon_V2_Gender_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Gender_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Gender_Avg_Fields = {
  __typename?: 'pokemon_v2_gender_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_gender". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Gender_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Gender_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Gender_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Gender_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_gender" */
export enum Pokemon_V2_Gender_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2GenderPkey = 'pokemon_v2_gender_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_gender" */
export type Pokemon_V2_Gender_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_gender" */
export type Pokemon_V2_Gender_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Gender_Max_Fields = {
  __typename?: 'pokemon_v2_gender_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Gender_Min_Fields = {
  __typename?: 'pokemon_v2_gender_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_gender" */
export type Pokemon_V2_Gender_Mutation_Response = {
  __typename?: 'pokemon_v2_gender_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Gender>;
};

/** on_conflict condition type for table "pokemon_v2_gender" */
export type Pokemon_V2_Gender_On_Conflict = {
  constraint: Pokemon_V2_Gender_Constraint;
  update_columns?: Array<Pokemon_V2_Gender_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Gender_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_gender". */
export type Pokemon_V2_Gender_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_gender */
export type Pokemon_V2_Gender_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_gender" */
export enum Pokemon_V2_Gender_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_gender" */
export type Pokemon_V2_Gender_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Gender_Stddev_Fields = {
  __typename?: 'pokemon_v2_gender_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Gender_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_gender_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Gender_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_gender_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_gender" */
export type Pokemon_V2_Gender_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Gender_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Gender_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Gender_Sum_Fields = {
  __typename?: 'pokemon_v2_gender_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_gender" */
export enum Pokemon_V2_Gender_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Gender_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Gender_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Gender_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Gender_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Gender_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_gender_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Gender_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_gender_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Gender_Variance_Fields = {
  __typename?: 'pokemon_v2_gender_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_generation" */
export type Pokemon_V2_Generation = {
  __typename?: 'pokemon_v2_generation';
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  region_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_generation" */
export type Pokemon_V2_Generation_Aggregate = {
  __typename?: 'pokemon_v2_generation_aggregate';
  aggregate?: Maybe<Pokemon_V2_Generation_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Generation>;
};

/** aggregate fields of "pokemon_v2_generation" */
export type Pokemon_V2_Generation_Aggregate_Fields = {
  __typename?: 'pokemon_v2_generation_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Generation_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Generation_Max_Fields>;
  min?: Maybe<Pokemon_V2_Generation_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Generation_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Generation_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Generation_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Generation_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Generation_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Generation_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Generation_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_generation" */
export type Pokemon_V2_Generation_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Generation_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Generation_Avg_Fields = {
  __typename?: 'pokemon_v2_generation_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_generation". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Generation_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Generation_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Generation_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Generation_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  region_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_generation" */
export enum Pokemon_V2_Generation_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2GenerationPkey = 'pokemon_v2_generation_pkey',
  /** unique or primary key constraint on columns "region_id" */
  PokemonV2GenerationRegionIdD92e2350Uniq = 'pokemon_v2_generation_region_id_d92e2350_uniq'
}

/** input type for incrementing numeric columns in table "pokemon_v2_generation" */
export type Pokemon_V2_Generation_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  region_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_generation" */
export type Pokemon_V2_Generation_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  region_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Generation_Max_Fields = {
  __typename?: 'pokemon_v2_generation_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  region_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Generation_Min_Fields = {
  __typename?: 'pokemon_v2_generation_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  region_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_generation" */
export type Pokemon_V2_Generation_Mutation_Response = {
  __typename?: 'pokemon_v2_generation_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Generation>;
};

/** on_conflict condition type for table "pokemon_v2_generation" */
export type Pokemon_V2_Generation_On_Conflict = {
  constraint: Pokemon_V2_Generation_Constraint;
  update_columns?: Array<Pokemon_V2_Generation_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Generation_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_generation". */
export type Pokemon_V2_Generation_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_generation */
export type Pokemon_V2_Generation_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_generation" */
export enum Pokemon_V2_Generation_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  RegionId = 'region_id'
}

/** input type for updating data in table "pokemon_v2_generation" */
export type Pokemon_V2_Generation_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  region_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Generation_Stddev_Fields = {
  __typename?: 'pokemon_v2_generation_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Generation_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_generation_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Generation_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_generation_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_generation" */
export type Pokemon_V2_Generation_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Generation_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Generation_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  region_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Generation_Sum_Fields = {
  __typename?: 'pokemon_v2_generation_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  region_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_generation" */
export enum Pokemon_V2_Generation_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  RegionId = 'region_id'
}

export type Pokemon_V2_Generation_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Generation_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Generation_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Generation_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Generation_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_generation_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Generation_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_generation_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Generation_Variance_Fields = {
  __typename?: 'pokemon_v2_generation_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_generationname" */
export type Pokemon_V2_Generationname = {
  __typename?: 'pokemon_v2_generationname';
  generation_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_generationname" */
export type Pokemon_V2_Generationname_Aggregate = {
  __typename?: 'pokemon_v2_generationname_aggregate';
  aggregate?: Maybe<Pokemon_V2_Generationname_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Generationname>;
};

/** aggregate fields of "pokemon_v2_generationname" */
export type Pokemon_V2_Generationname_Aggregate_Fields = {
  __typename?: 'pokemon_v2_generationname_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Generationname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Generationname_Max_Fields>;
  min?: Maybe<Pokemon_V2_Generationname_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Generationname_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Generationname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Generationname_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Generationname_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Generationname_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Generationname_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Generationname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_generationname" */
export type Pokemon_V2_Generationname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Generationname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Generationname_Avg_Fields = {
  __typename?: 'pokemon_v2_generationname_avg_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_generationname". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Generationname_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Generationname_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Generationname_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Generationname_Bool_Exp>>;
  generation_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_generationname" */
export enum Pokemon_V2_Generationname_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2GenerationnamePkey = 'pokemon_v2_generationname_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_generationname" */
export type Pokemon_V2_Generationname_Inc_Input = {
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_generationname" */
export type Pokemon_V2_Generationname_Insert_Input = {
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Generationname_Max_Fields = {
  __typename?: 'pokemon_v2_generationname_max_fields';
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Generationname_Min_Fields = {
  __typename?: 'pokemon_v2_generationname_min_fields';
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_generationname" */
export type Pokemon_V2_Generationname_Mutation_Response = {
  __typename?: 'pokemon_v2_generationname_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Generationname>;
};

/** on_conflict condition type for table "pokemon_v2_generationname" */
export type Pokemon_V2_Generationname_On_Conflict = {
  constraint: Pokemon_V2_Generationname_Constraint;
  update_columns?: Array<Pokemon_V2_Generationname_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Generationname_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_generationname". */
export type Pokemon_V2_Generationname_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_generationname */
export type Pokemon_V2_Generationname_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_generationname" */
export enum Pokemon_V2_Generationname_Select_Column {
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_generationname" */
export type Pokemon_V2_Generationname_Set_Input = {
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Generationname_Stddev_Fields = {
  __typename?: 'pokemon_v2_generationname_stddev_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Generationname_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_generationname_stddev_pop_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Generationname_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_generationname_stddev_samp_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_generationname" */
export type Pokemon_V2_Generationname_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Generationname_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Generationname_Stream_Cursor_Value_Input = {
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Generationname_Sum_Fields = {
  __typename?: 'pokemon_v2_generationname_sum_fields';
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_generationname" */
export enum Pokemon_V2_Generationname_Update_Column {
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Generationname_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Generationname_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Generationname_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Generationname_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Generationname_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_generationname_var_pop_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Generationname_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_generationname_var_samp_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Generationname_Variance_Fields = {
  __typename?: 'pokemon_v2_generationname_variance_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_growthrate" */
export type Pokemon_V2_Growthrate = {
  __typename?: 'pokemon_v2_growthrate';
  formula: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_growthrate" */
export type Pokemon_V2_Growthrate_Aggregate = {
  __typename?: 'pokemon_v2_growthrate_aggregate';
  aggregate?: Maybe<Pokemon_V2_Growthrate_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Growthrate>;
};

/** aggregate fields of "pokemon_v2_growthrate" */
export type Pokemon_V2_Growthrate_Aggregate_Fields = {
  __typename?: 'pokemon_v2_growthrate_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Growthrate_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Growthrate_Max_Fields>;
  min?: Maybe<Pokemon_V2_Growthrate_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Growthrate_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Growthrate_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Growthrate_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Growthrate_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Growthrate_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Growthrate_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Growthrate_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_growthrate" */
export type Pokemon_V2_Growthrate_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Growthrate_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Growthrate_Avg_Fields = {
  __typename?: 'pokemon_v2_growthrate_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_growthrate". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Growthrate_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Growthrate_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Growthrate_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Growthrate_Bool_Exp>>;
  formula?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_growthrate" */
export enum Pokemon_V2_Growthrate_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2GrowthratePkey = 'pokemon_v2_growthrate_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_growthrate" */
export type Pokemon_V2_Growthrate_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_growthrate" */
export type Pokemon_V2_Growthrate_Insert_Input = {
  formula?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Growthrate_Max_Fields = {
  __typename?: 'pokemon_v2_growthrate_max_fields';
  formula?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Growthrate_Min_Fields = {
  __typename?: 'pokemon_v2_growthrate_min_fields';
  formula?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_growthrate" */
export type Pokemon_V2_Growthrate_Mutation_Response = {
  __typename?: 'pokemon_v2_growthrate_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Growthrate>;
};

/** on_conflict condition type for table "pokemon_v2_growthrate" */
export type Pokemon_V2_Growthrate_On_Conflict = {
  constraint: Pokemon_V2_Growthrate_Constraint;
  update_columns?: Array<Pokemon_V2_Growthrate_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Growthrate_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_growthrate". */
export type Pokemon_V2_Growthrate_Order_By = {
  formula?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_growthrate */
export type Pokemon_V2_Growthrate_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_growthrate" */
export enum Pokemon_V2_Growthrate_Select_Column {
  /** column name */
  Formula = 'formula',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_growthrate" */
export type Pokemon_V2_Growthrate_Set_Input = {
  formula?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Growthrate_Stddev_Fields = {
  __typename?: 'pokemon_v2_growthrate_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Growthrate_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_growthrate_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Growthrate_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_growthrate_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_growthrate" */
export type Pokemon_V2_Growthrate_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Growthrate_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Growthrate_Stream_Cursor_Value_Input = {
  formula?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Growthrate_Sum_Fields = {
  __typename?: 'pokemon_v2_growthrate_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_growthrate" */
export enum Pokemon_V2_Growthrate_Update_Column {
  /** column name */
  Formula = 'formula',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Growthrate_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Growthrate_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Growthrate_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Growthrate_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Growthrate_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_growthrate_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Growthrate_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_growthrate_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Growthrate_Variance_Fields = {
  __typename?: 'pokemon_v2_growthrate_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_growthratedescription" */
export type Pokemon_V2_Growthratedescription = {
  __typename?: 'pokemon_v2_growthratedescription';
  description: Scalars['String']['output'];
  growth_rate_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_growthratedescription" */
export type Pokemon_V2_Growthratedescription_Aggregate = {
  __typename?: 'pokemon_v2_growthratedescription_aggregate';
  aggregate?: Maybe<Pokemon_V2_Growthratedescription_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Growthratedescription>;
};

/** aggregate fields of "pokemon_v2_growthratedescription" */
export type Pokemon_V2_Growthratedescription_Aggregate_Fields = {
  __typename?: 'pokemon_v2_growthratedescription_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Growthratedescription_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Growthratedescription_Max_Fields>;
  min?: Maybe<Pokemon_V2_Growthratedescription_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Growthratedescription_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Growthratedescription_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Growthratedescription_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Growthratedescription_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Growthratedescription_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Growthratedescription_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Growthratedescription_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_growthratedescription" */
export type Pokemon_V2_Growthratedescription_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Growthratedescription_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Growthratedescription_Avg_Fields = {
  __typename?: 'pokemon_v2_growthratedescription_avg_fields';
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_growthratedescription". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Growthratedescription_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Growthratedescription_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Growthratedescription_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Growthratedescription_Bool_Exp>>;
  description?: InputMaybe<String_Comparison_Exp>;
  growth_rate_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_growthratedescription" */
export enum Pokemon_V2_Growthratedescription_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2GrowthratedescriptionPkey = 'pokemon_v2_growthratedescription_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_growthratedescription" */
export type Pokemon_V2_Growthratedescription_Inc_Input = {
  growth_rate_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_growthratedescription" */
export type Pokemon_V2_Growthratedescription_Insert_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
  growth_rate_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Growthratedescription_Max_Fields = {
  __typename?: 'pokemon_v2_growthratedescription_max_fields';
  description?: Maybe<Scalars['String']['output']>;
  growth_rate_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Growthratedescription_Min_Fields = {
  __typename?: 'pokemon_v2_growthratedescription_min_fields';
  description?: Maybe<Scalars['String']['output']>;
  growth_rate_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_growthratedescription" */
export type Pokemon_V2_Growthratedescription_Mutation_Response = {
  __typename?: 'pokemon_v2_growthratedescription_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Growthratedescription>;
};

/** on_conflict condition type for table "pokemon_v2_growthratedescription" */
export type Pokemon_V2_Growthratedescription_On_Conflict = {
  constraint: Pokemon_V2_Growthratedescription_Constraint;
  update_columns?: Array<Pokemon_V2_Growthratedescription_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Growthratedescription_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_growthratedescription". */
export type Pokemon_V2_Growthratedescription_Order_By = {
  description?: InputMaybe<Order_By>;
  growth_rate_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_growthratedescription */
export type Pokemon_V2_Growthratedescription_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_growthratedescription" */
export enum Pokemon_V2_Growthratedescription_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  GrowthRateId = 'growth_rate_id',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id'
}

/** input type for updating data in table "pokemon_v2_growthratedescription" */
export type Pokemon_V2_Growthratedescription_Set_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
  growth_rate_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Growthratedescription_Stddev_Fields = {
  __typename?: 'pokemon_v2_growthratedescription_stddev_fields';
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Growthratedescription_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_growthratedescription_stddev_pop_fields';
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Growthratedescription_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_growthratedescription_stddev_samp_fields';
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_growthratedescription" */
export type Pokemon_V2_Growthratedescription_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Growthratedescription_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Growthratedescription_Stream_Cursor_Value_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
  growth_rate_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Growthratedescription_Sum_Fields = {
  __typename?: 'pokemon_v2_growthratedescription_sum_fields';
  growth_rate_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_growthratedescription" */
export enum Pokemon_V2_Growthratedescription_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  GrowthRateId = 'growth_rate_id',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id'
}

export type Pokemon_V2_Growthratedescription_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Growthratedescription_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Growthratedescription_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Growthratedescription_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Growthratedescription_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_growthratedescription_var_pop_fields';
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Growthratedescription_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_growthratedescription_var_samp_fields';
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Growthratedescription_Variance_Fields = {
  __typename?: 'pokemon_v2_growthratedescription_variance_fields';
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_item" */
export type Pokemon_V2_Item = {
  __typename?: 'pokemon_v2_item';
  cost?: Maybe<Scalars['Int']['output']>;
  fling_power?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  item_category_id?: Maybe<Scalars['Int']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_item" */
export type Pokemon_V2_Item_Aggregate = {
  __typename?: 'pokemon_v2_item_aggregate';
  aggregate?: Maybe<Pokemon_V2_Item_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Item>;
};

/** aggregate fields of "pokemon_v2_item" */
export type Pokemon_V2_Item_Aggregate_Fields = {
  __typename?: 'pokemon_v2_item_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Item_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Item_Max_Fields>;
  min?: Maybe<Pokemon_V2_Item_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Item_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Item_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Item_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Item_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Item_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Item_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Item_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_item" */
export type Pokemon_V2_Item_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Item_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Item_Avg_Fields = {
  __typename?: 'pokemon_v2_item_avg_fields';
  cost?: Maybe<Scalars['Float']['output']>;
  fling_power?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_category_id?: Maybe<Scalars['Float']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_item". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Item_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Item_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Item_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Item_Bool_Exp>>;
  cost?: InputMaybe<Int_Comparison_Exp>;
  fling_power?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  item_category_id?: InputMaybe<Int_Comparison_Exp>;
  item_fling_effect_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_item" */
export enum Pokemon_V2_Item_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2ItemPkey = 'pokemon_v2_item_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_item" */
export type Pokemon_V2_Item_Inc_Input = {
  cost?: InputMaybe<Scalars['Int']['input']>;
  fling_power?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  item_category_id?: InputMaybe<Scalars['Int']['input']>;
  item_fling_effect_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_item" */
export type Pokemon_V2_Item_Insert_Input = {
  cost?: InputMaybe<Scalars['Int']['input']>;
  fling_power?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  item_category_id?: InputMaybe<Scalars['Int']['input']>;
  item_fling_effect_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Item_Max_Fields = {
  __typename?: 'pokemon_v2_item_max_fields';
  cost?: Maybe<Scalars['Int']['output']>;
  fling_power?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_category_id?: Maybe<Scalars['Int']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Item_Min_Fields = {
  __typename?: 'pokemon_v2_item_min_fields';
  cost?: Maybe<Scalars['Int']['output']>;
  fling_power?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_category_id?: Maybe<Scalars['Int']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_item" */
export type Pokemon_V2_Item_Mutation_Response = {
  __typename?: 'pokemon_v2_item_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Item>;
};

/** on_conflict condition type for table "pokemon_v2_item" */
export type Pokemon_V2_Item_On_Conflict = {
  constraint: Pokemon_V2_Item_Constraint;
  update_columns?: Array<Pokemon_V2_Item_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Item_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_item". */
export type Pokemon_V2_Item_Order_By = {
  cost?: InputMaybe<Order_By>;
  fling_power?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_category_id?: InputMaybe<Order_By>;
  item_fling_effect_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_item */
export type Pokemon_V2_Item_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_item" */
export enum Pokemon_V2_Item_Select_Column {
  /** column name */
  Cost = 'cost',
  /** column name */
  FlingPower = 'fling_power',
  /** column name */
  Id = 'id',
  /** column name */
  ItemCategoryId = 'item_category_id',
  /** column name */
  ItemFlingEffectId = 'item_fling_effect_id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_item" */
export type Pokemon_V2_Item_Set_Input = {
  cost?: InputMaybe<Scalars['Int']['input']>;
  fling_power?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  item_category_id?: InputMaybe<Scalars['Int']['input']>;
  item_fling_effect_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Item_Stddev_Fields = {
  __typename?: 'pokemon_v2_item_stddev_fields';
  cost?: Maybe<Scalars['Float']['output']>;
  fling_power?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_category_id?: Maybe<Scalars['Float']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Item_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_item_stddev_pop_fields';
  cost?: Maybe<Scalars['Float']['output']>;
  fling_power?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_category_id?: Maybe<Scalars['Float']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Item_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_item_stddev_samp_fields';
  cost?: Maybe<Scalars['Float']['output']>;
  fling_power?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_category_id?: Maybe<Scalars['Float']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_item" */
export type Pokemon_V2_Item_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Item_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Item_Stream_Cursor_Value_Input = {
  cost?: InputMaybe<Scalars['Int']['input']>;
  fling_power?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  item_category_id?: InputMaybe<Scalars['Int']['input']>;
  item_fling_effect_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Item_Sum_Fields = {
  __typename?: 'pokemon_v2_item_sum_fields';
  cost?: Maybe<Scalars['Int']['output']>;
  fling_power?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_category_id?: Maybe<Scalars['Int']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_item" */
export enum Pokemon_V2_Item_Update_Column {
  /** column name */
  Cost = 'cost',
  /** column name */
  FlingPower = 'fling_power',
  /** column name */
  Id = 'id',
  /** column name */
  ItemCategoryId = 'item_category_id',
  /** column name */
  ItemFlingEffectId = 'item_fling_effect_id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Item_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Item_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Item_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Item_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Item_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_item_var_pop_fields';
  cost?: Maybe<Scalars['Float']['output']>;
  fling_power?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_category_id?: Maybe<Scalars['Float']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Item_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_item_var_samp_fields';
  cost?: Maybe<Scalars['Float']['output']>;
  fling_power?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_category_id?: Maybe<Scalars['Float']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Item_Variance_Fields = {
  __typename?: 'pokemon_v2_item_variance_fields';
  cost?: Maybe<Scalars['Float']['output']>;
  fling_power?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_category_id?: Maybe<Scalars['Float']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_itemattribute" */
export type Pokemon_V2_Itemattribute = {
  __typename?: 'pokemon_v2_itemattribute';
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_itemattribute" */
export type Pokemon_V2_Itemattribute_Aggregate = {
  __typename?: 'pokemon_v2_itemattribute_aggregate';
  aggregate?: Maybe<Pokemon_V2_Itemattribute_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Itemattribute>;
};

/** aggregate fields of "pokemon_v2_itemattribute" */
export type Pokemon_V2_Itemattribute_Aggregate_Fields = {
  __typename?: 'pokemon_v2_itemattribute_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Itemattribute_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Itemattribute_Max_Fields>;
  min?: Maybe<Pokemon_V2_Itemattribute_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Itemattribute_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Itemattribute_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Itemattribute_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Itemattribute_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Itemattribute_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Itemattribute_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Itemattribute_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_itemattribute" */
export type Pokemon_V2_Itemattribute_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Itemattribute_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Itemattribute_Avg_Fields = {
  __typename?: 'pokemon_v2_itemattribute_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_itemattribute". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Itemattribute_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Itemattribute_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Itemattribute_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Itemattribute_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_itemattribute" */
export enum Pokemon_V2_Itemattribute_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2ItemattributePkey = 'pokemon_v2_itemattribute_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_itemattribute" */
export type Pokemon_V2_Itemattribute_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_itemattribute" */
export type Pokemon_V2_Itemattribute_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Itemattribute_Max_Fields = {
  __typename?: 'pokemon_v2_itemattribute_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Itemattribute_Min_Fields = {
  __typename?: 'pokemon_v2_itemattribute_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_itemattribute" */
export type Pokemon_V2_Itemattribute_Mutation_Response = {
  __typename?: 'pokemon_v2_itemattribute_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Itemattribute>;
};

/** on_conflict condition type for table "pokemon_v2_itemattribute" */
export type Pokemon_V2_Itemattribute_On_Conflict = {
  constraint: Pokemon_V2_Itemattribute_Constraint;
  update_columns?: Array<Pokemon_V2_Itemattribute_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Itemattribute_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_itemattribute". */
export type Pokemon_V2_Itemattribute_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_itemattribute */
export type Pokemon_V2_Itemattribute_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_itemattribute" */
export enum Pokemon_V2_Itemattribute_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_itemattribute" */
export type Pokemon_V2_Itemattribute_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Itemattribute_Stddev_Fields = {
  __typename?: 'pokemon_v2_itemattribute_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Itemattribute_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_itemattribute_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Itemattribute_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_itemattribute_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_itemattribute" */
export type Pokemon_V2_Itemattribute_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Itemattribute_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Itemattribute_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Itemattribute_Sum_Fields = {
  __typename?: 'pokemon_v2_itemattribute_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_itemattribute" */
export enum Pokemon_V2_Itemattribute_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Itemattribute_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Itemattribute_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Itemattribute_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Itemattribute_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Itemattribute_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_itemattribute_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Itemattribute_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_itemattribute_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Itemattribute_Variance_Fields = {
  __typename?: 'pokemon_v2_itemattribute_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_itemattributedescription" */
export type Pokemon_V2_Itemattributedescription = {
  __typename?: 'pokemon_v2_itemattributedescription';
  description: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  item_attribute_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_itemattributedescription" */
export type Pokemon_V2_Itemattributedescription_Aggregate = {
  __typename?: 'pokemon_v2_itemattributedescription_aggregate';
  aggregate?: Maybe<Pokemon_V2_Itemattributedescription_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Itemattributedescription>;
};

/** aggregate fields of "pokemon_v2_itemattributedescription" */
export type Pokemon_V2_Itemattributedescription_Aggregate_Fields = {
  __typename?: 'pokemon_v2_itemattributedescription_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Itemattributedescription_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Itemattributedescription_Max_Fields>;
  min?: Maybe<Pokemon_V2_Itemattributedescription_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Itemattributedescription_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Itemattributedescription_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Itemattributedescription_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Itemattributedescription_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Itemattributedescription_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Itemattributedescription_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Itemattributedescription_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_itemattributedescription" */
export type Pokemon_V2_Itemattributedescription_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Itemattributedescription_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Itemattributedescription_Avg_Fields = {
  __typename?: 'pokemon_v2_itemattributedescription_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_itemattributedescription". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Itemattributedescription_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Itemattributedescription_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Itemattributedescription_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Itemattributedescription_Bool_Exp>>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  item_attribute_id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_itemattributedescription" */
export enum Pokemon_V2_Itemattributedescription_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2ItemattributedescriptionPkey = 'pokemon_v2_itemattributedescription_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_itemattributedescription" */
export type Pokemon_V2_Itemattributedescription_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  item_attribute_id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_itemattributedescription" */
export type Pokemon_V2_Itemattributedescription_Insert_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  item_attribute_id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Itemattributedescription_Max_Fields = {
  __typename?: 'pokemon_v2_itemattributedescription_max_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_attribute_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Itemattributedescription_Min_Fields = {
  __typename?: 'pokemon_v2_itemattributedescription_min_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_attribute_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_itemattributedescription" */
export type Pokemon_V2_Itemattributedescription_Mutation_Response = {
  __typename?: 'pokemon_v2_itemattributedescription_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Itemattributedescription>;
};

/** on_conflict condition type for table "pokemon_v2_itemattributedescription" */
export type Pokemon_V2_Itemattributedescription_On_Conflict = {
  constraint: Pokemon_V2_Itemattributedescription_Constraint;
  update_columns?: Array<Pokemon_V2_Itemattributedescription_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Itemattributedescription_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_itemattributedescription". */
export type Pokemon_V2_Itemattributedescription_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_attribute_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_itemattributedescription */
export type Pokemon_V2_Itemattributedescription_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_itemattributedescription" */
export enum Pokemon_V2_Itemattributedescription_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  ItemAttributeId = 'item_attribute_id',
  /** column name */
  LanguageId = 'language_id'
}

/** input type for updating data in table "pokemon_v2_itemattributedescription" */
export type Pokemon_V2_Itemattributedescription_Set_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  item_attribute_id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Itemattributedescription_Stddev_Fields = {
  __typename?: 'pokemon_v2_itemattributedescription_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Itemattributedescription_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_itemattributedescription_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Itemattributedescription_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_itemattributedescription_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_itemattributedescription" */
export type Pokemon_V2_Itemattributedescription_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Itemattributedescription_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Itemattributedescription_Stream_Cursor_Value_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  item_attribute_id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Itemattributedescription_Sum_Fields = {
  __typename?: 'pokemon_v2_itemattributedescription_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_attribute_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_itemattributedescription" */
export enum Pokemon_V2_Itemattributedescription_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  ItemAttributeId = 'item_attribute_id',
  /** column name */
  LanguageId = 'language_id'
}

export type Pokemon_V2_Itemattributedescription_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Itemattributedescription_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Itemattributedescription_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Itemattributedescription_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Itemattributedescription_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_itemattributedescription_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Itemattributedescription_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_itemattributedescription_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Itemattributedescription_Variance_Fields = {
  __typename?: 'pokemon_v2_itemattributedescription_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_itemattributemap" */
export type Pokemon_V2_Itemattributemap = {
  __typename?: 'pokemon_v2_itemattributemap';
  id: Scalars['Int']['output'];
  item_attribute_id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_itemattributemap" */
export type Pokemon_V2_Itemattributemap_Aggregate = {
  __typename?: 'pokemon_v2_itemattributemap_aggregate';
  aggregate?: Maybe<Pokemon_V2_Itemattributemap_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Itemattributemap>;
};

/** aggregate fields of "pokemon_v2_itemattributemap" */
export type Pokemon_V2_Itemattributemap_Aggregate_Fields = {
  __typename?: 'pokemon_v2_itemattributemap_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Itemattributemap_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Itemattributemap_Max_Fields>;
  min?: Maybe<Pokemon_V2_Itemattributemap_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Itemattributemap_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Itemattributemap_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Itemattributemap_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Itemattributemap_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Itemattributemap_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Itemattributemap_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Itemattributemap_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_itemattributemap" */
export type Pokemon_V2_Itemattributemap_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Itemattributemap_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Itemattributemap_Avg_Fields = {
  __typename?: 'pokemon_v2_itemattributemap_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_itemattributemap". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Itemattributemap_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Itemattributemap_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Itemattributemap_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Itemattributemap_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  item_attribute_id?: InputMaybe<Int_Comparison_Exp>;
  item_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_itemattributemap" */
export enum Pokemon_V2_Itemattributemap_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2ItemattributemapPkey = 'pokemon_v2_itemattributemap_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_itemattributemap" */
export type Pokemon_V2_Itemattributemap_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  item_attribute_id?: InputMaybe<Scalars['Int']['input']>;
  item_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_itemattributemap" */
export type Pokemon_V2_Itemattributemap_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  item_attribute_id?: InputMaybe<Scalars['Int']['input']>;
  item_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Itemattributemap_Max_Fields = {
  __typename?: 'pokemon_v2_itemattributemap_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_attribute_id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Itemattributemap_Min_Fields = {
  __typename?: 'pokemon_v2_itemattributemap_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_attribute_id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_itemattributemap" */
export type Pokemon_V2_Itemattributemap_Mutation_Response = {
  __typename?: 'pokemon_v2_itemattributemap_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Itemattributemap>;
};

/** on_conflict condition type for table "pokemon_v2_itemattributemap" */
export type Pokemon_V2_Itemattributemap_On_Conflict = {
  constraint: Pokemon_V2_Itemattributemap_Constraint;
  update_columns?: Array<Pokemon_V2_Itemattributemap_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Itemattributemap_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_itemattributemap". */
export type Pokemon_V2_Itemattributemap_Order_By = {
  id?: InputMaybe<Order_By>;
  item_attribute_id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_itemattributemap */
export type Pokemon_V2_Itemattributemap_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_itemattributemap" */
export enum Pokemon_V2_Itemattributemap_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ItemAttributeId = 'item_attribute_id',
  /** column name */
  ItemId = 'item_id'
}

/** input type for updating data in table "pokemon_v2_itemattributemap" */
export type Pokemon_V2_Itemattributemap_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  item_attribute_id?: InputMaybe<Scalars['Int']['input']>;
  item_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Itemattributemap_Stddev_Fields = {
  __typename?: 'pokemon_v2_itemattributemap_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Itemattributemap_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_itemattributemap_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Itemattributemap_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_itemattributemap_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_itemattributemap" */
export type Pokemon_V2_Itemattributemap_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Itemattributemap_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Itemattributemap_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  item_attribute_id?: InputMaybe<Scalars['Int']['input']>;
  item_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Itemattributemap_Sum_Fields = {
  __typename?: 'pokemon_v2_itemattributemap_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_attribute_id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_itemattributemap" */
export enum Pokemon_V2_Itemattributemap_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ItemAttributeId = 'item_attribute_id',
  /** column name */
  ItemId = 'item_id'
}

export type Pokemon_V2_Itemattributemap_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Itemattributemap_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Itemattributemap_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Itemattributemap_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Itemattributemap_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_itemattributemap_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Itemattributemap_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_itemattributemap_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Itemattributemap_Variance_Fields = {
  __typename?: 'pokemon_v2_itemattributemap_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_itemattributename" */
export type Pokemon_V2_Itemattributename = {
  __typename?: 'pokemon_v2_itemattributename';
  id: Scalars['Int']['output'];
  item_attribute_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_itemattributename" */
export type Pokemon_V2_Itemattributename_Aggregate = {
  __typename?: 'pokemon_v2_itemattributename_aggregate';
  aggregate?: Maybe<Pokemon_V2_Itemattributename_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Itemattributename>;
};

/** aggregate fields of "pokemon_v2_itemattributename" */
export type Pokemon_V2_Itemattributename_Aggregate_Fields = {
  __typename?: 'pokemon_v2_itemattributename_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Itemattributename_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Itemattributename_Max_Fields>;
  min?: Maybe<Pokemon_V2_Itemattributename_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Itemattributename_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Itemattributename_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Itemattributename_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Itemattributename_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Itemattributename_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Itemattributename_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Itemattributename_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_itemattributename" */
export type Pokemon_V2_Itemattributename_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Itemattributename_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Itemattributename_Avg_Fields = {
  __typename?: 'pokemon_v2_itemattributename_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_itemattributename". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Itemattributename_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Itemattributename_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Itemattributename_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Itemattributename_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  item_attribute_id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_itemattributename" */
export enum Pokemon_V2_Itemattributename_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2ItemattributenamePkey = 'pokemon_v2_itemattributename_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_itemattributename" */
export type Pokemon_V2_Itemattributename_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  item_attribute_id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_itemattributename" */
export type Pokemon_V2_Itemattributename_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  item_attribute_id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Itemattributename_Max_Fields = {
  __typename?: 'pokemon_v2_itemattributename_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_attribute_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Itemattributename_Min_Fields = {
  __typename?: 'pokemon_v2_itemattributename_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_attribute_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_itemattributename" */
export type Pokemon_V2_Itemattributename_Mutation_Response = {
  __typename?: 'pokemon_v2_itemattributename_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Itemattributename>;
};

/** on_conflict condition type for table "pokemon_v2_itemattributename" */
export type Pokemon_V2_Itemattributename_On_Conflict = {
  constraint: Pokemon_V2_Itemattributename_Constraint;
  update_columns?: Array<Pokemon_V2_Itemattributename_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Itemattributename_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_itemattributename". */
export type Pokemon_V2_Itemattributename_Order_By = {
  id?: InputMaybe<Order_By>;
  item_attribute_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_itemattributename */
export type Pokemon_V2_Itemattributename_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_itemattributename" */
export enum Pokemon_V2_Itemattributename_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ItemAttributeId = 'item_attribute_id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_itemattributename" */
export type Pokemon_V2_Itemattributename_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  item_attribute_id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Itemattributename_Stddev_Fields = {
  __typename?: 'pokemon_v2_itemattributename_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Itemattributename_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_itemattributename_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Itemattributename_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_itemattributename_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_itemattributename" */
export type Pokemon_V2_Itemattributename_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Itemattributename_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Itemattributename_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  item_attribute_id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Itemattributename_Sum_Fields = {
  __typename?: 'pokemon_v2_itemattributename_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_attribute_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_itemattributename" */
export enum Pokemon_V2_Itemattributename_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ItemAttributeId = 'item_attribute_id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Itemattributename_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Itemattributename_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Itemattributename_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Itemattributename_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Itemattributename_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_itemattributename_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Itemattributename_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_itemattributename_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Itemattributename_Variance_Fields = {
  __typename?: 'pokemon_v2_itemattributename_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_itemcategory" */
export type Pokemon_V2_Itemcategory = {
  __typename?: 'pokemon_v2_itemcategory';
  id: Scalars['Int']['output'];
  item_pocket_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_itemcategory" */
export type Pokemon_V2_Itemcategory_Aggregate = {
  __typename?: 'pokemon_v2_itemcategory_aggregate';
  aggregate?: Maybe<Pokemon_V2_Itemcategory_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Itemcategory>;
};

/** aggregate fields of "pokemon_v2_itemcategory" */
export type Pokemon_V2_Itemcategory_Aggregate_Fields = {
  __typename?: 'pokemon_v2_itemcategory_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Itemcategory_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Itemcategory_Max_Fields>;
  min?: Maybe<Pokemon_V2_Itemcategory_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Itemcategory_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Itemcategory_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Itemcategory_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Itemcategory_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Itemcategory_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Itemcategory_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Itemcategory_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_itemcategory" */
export type Pokemon_V2_Itemcategory_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Itemcategory_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Itemcategory_Avg_Fields = {
  __typename?: 'pokemon_v2_itemcategory_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_pocket_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_itemcategory". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Itemcategory_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Itemcategory_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Itemcategory_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Itemcategory_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  item_pocket_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_itemcategory" */
export enum Pokemon_V2_Itemcategory_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2ItemcategoryPkey = 'pokemon_v2_itemcategory_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_itemcategory" */
export type Pokemon_V2_Itemcategory_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  item_pocket_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_itemcategory" */
export type Pokemon_V2_Itemcategory_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  item_pocket_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Itemcategory_Max_Fields = {
  __typename?: 'pokemon_v2_itemcategory_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_pocket_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Itemcategory_Min_Fields = {
  __typename?: 'pokemon_v2_itemcategory_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_pocket_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_itemcategory" */
export type Pokemon_V2_Itemcategory_Mutation_Response = {
  __typename?: 'pokemon_v2_itemcategory_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Itemcategory>;
};

/** on_conflict condition type for table "pokemon_v2_itemcategory" */
export type Pokemon_V2_Itemcategory_On_Conflict = {
  constraint: Pokemon_V2_Itemcategory_Constraint;
  update_columns?: Array<Pokemon_V2_Itemcategory_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Itemcategory_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_itemcategory". */
export type Pokemon_V2_Itemcategory_Order_By = {
  id?: InputMaybe<Order_By>;
  item_pocket_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_itemcategory */
export type Pokemon_V2_Itemcategory_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_itemcategory" */
export enum Pokemon_V2_Itemcategory_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ItemPocketId = 'item_pocket_id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_itemcategory" */
export type Pokemon_V2_Itemcategory_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  item_pocket_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Itemcategory_Stddev_Fields = {
  __typename?: 'pokemon_v2_itemcategory_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_pocket_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Itemcategory_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_itemcategory_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_pocket_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Itemcategory_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_itemcategory_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_pocket_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_itemcategory" */
export type Pokemon_V2_Itemcategory_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Itemcategory_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Itemcategory_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  item_pocket_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Itemcategory_Sum_Fields = {
  __typename?: 'pokemon_v2_itemcategory_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_pocket_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_itemcategory" */
export enum Pokemon_V2_Itemcategory_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ItemPocketId = 'item_pocket_id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Itemcategory_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Itemcategory_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Itemcategory_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Itemcategory_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Itemcategory_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_itemcategory_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_pocket_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Itemcategory_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_itemcategory_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_pocket_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Itemcategory_Variance_Fields = {
  __typename?: 'pokemon_v2_itemcategory_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_pocket_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_itemcategoryname" */
export type Pokemon_V2_Itemcategoryname = {
  __typename?: 'pokemon_v2_itemcategoryname';
  id: Scalars['Int']['output'];
  item_category_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_itemcategoryname" */
export type Pokemon_V2_Itemcategoryname_Aggregate = {
  __typename?: 'pokemon_v2_itemcategoryname_aggregate';
  aggregate?: Maybe<Pokemon_V2_Itemcategoryname_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Itemcategoryname>;
};

/** aggregate fields of "pokemon_v2_itemcategoryname" */
export type Pokemon_V2_Itemcategoryname_Aggregate_Fields = {
  __typename?: 'pokemon_v2_itemcategoryname_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Itemcategoryname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Itemcategoryname_Max_Fields>;
  min?: Maybe<Pokemon_V2_Itemcategoryname_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Itemcategoryname_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Itemcategoryname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Itemcategoryname_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Itemcategoryname_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Itemcategoryname_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Itemcategoryname_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Itemcategoryname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_itemcategoryname" */
export type Pokemon_V2_Itemcategoryname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Itemcategoryname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Itemcategoryname_Avg_Fields = {
  __typename?: 'pokemon_v2_itemcategoryname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_category_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_itemcategoryname". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Itemcategoryname_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Itemcategoryname_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Itemcategoryname_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Itemcategoryname_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  item_category_id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_itemcategoryname" */
export enum Pokemon_V2_Itemcategoryname_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2ItemcategorynamePkey = 'pokemon_v2_itemcategoryname_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_itemcategoryname" */
export type Pokemon_V2_Itemcategoryname_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  item_category_id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_itemcategoryname" */
export type Pokemon_V2_Itemcategoryname_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  item_category_id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Itemcategoryname_Max_Fields = {
  __typename?: 'pokemon_v2_itemcategoryname_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_category_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Itemcategoryname_Min_Fields = {
  __typename?: 'pokemon_v2_itemcategoryname_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_category_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_itemcategoryname" */
export type Pokemon_V2_Itemcategoryname_Mutation_Response = {
  __typename?: 'pokemon_v2_itemcategoryname_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Itemcategoryname>;
};

/** on_conflict condition type for table "pokemon_v2_itemcategoryname" */
export type Pokemon_V2_Itemcategoryname_On_Conflict = {
  constraint: Pokemon_V2_Itemcategoryname_Constraint;
  update_columns?: Array<Pokemon_V2_Itemcategoryname_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Itemcategoryname_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_itemcategoryname". */
export type Pokemon_V2_Itemcategoryname_Order_By = {
  id?: InputMaybe<Order_By>;
  item_category_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_itemcategoryname */
export type Pokemon_V2_Itemcategoryname_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_itemcategoryname" */
export enum Pokemon_V2_Itemcategoryname_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ItemCategoryId = 'item_category_id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_itemcategoryname" */
export type Pokemon_V2_Itemcategoryname_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  item_category_id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Itemcategoryname_Stddev_Fields = {
  __typename?: 'pokemon_v2_itemcategoryname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_category_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Itemcategoryname_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_itemcategoryname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_category_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Itemcategoryname_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_itemcategoryname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_category_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_itemcategoryname" */
export type Pokemon_V2_Itemcategoryname_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Itemcategoryname_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Itemcategoryname_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  item_category_id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Itemcategoryname_Sum_Fields = {
  __typename?: 'pokemon_v2_itemcategoryname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_category_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_itemcategoryname" */
export enum Pokemon_V2_Itemcategoryname_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ItemCategoryId = 'item_category_id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Itemcategoryname_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Itemcategoryname_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Itemcategoryname_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Itemcategoryname_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Itemcategoryname_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_itemcategoryname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_category_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Itemcategoryname_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_itemcategoryname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_category_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Itemcategoryname_Variance_Fields = {
  __typename?: 'pokemon_v2_itemcategoryname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_category_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_itemeffecttext" */
export type Pokemon_V2_Itemeffecttext = {
  __typename?: 'pokemon_v2_itemeffecttext';
  effect: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  item_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  short_effect: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_itemeffecttext" */
export type Pokemon_V2_Itemeffecttext_Aggregate = {
  __typename?: 'pokemon_v2_itemeffecttext_aggregate';
  aggregate?: Maybe<Pokemon_V2_Itemeffecttext_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Itemeffecttext>;
};

/** aggregate fields of "pokemon_v2_itemeffecttext" */
export type Pokemon_V2_Itemeffecttext_Aggregate_Fields = {
  __typename?: 'pokemon_v2_itemeffecttext_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Itemeffecttext_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Itemeffecttext_Max_Fields>;
  min?: Maybe<Pokemon_V2_Itemeffecttext_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Itemeffecttext_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Itemeffecttext_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Itemeffecttext_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Itemeffecttext_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Itemeffecttext_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Itemeffecttext_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Itemeffecttext_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_itemeffecttext" */
export type Pokemon_V2_Itemeffecttext_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Itemeffecttext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Itemeffecttext_Avg_Fields = {
  __typename?: 'pokemon_v2_itemeffecttext_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_itemeffecttext". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Itemeffecttext_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Itemeffecttext_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Itemeffecttext_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Itemeffecttext_Bool_Exp>>;
  effect?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  item_id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  short_effect?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_itemeffecttext" */
export enum Pokemon_V2_Itemeffecttext_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2ItemeffecttextPkey = 'pokemon_v2_itemeffecttext_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_itemeffecttext" */
export type Pokemon_V2_Itemeffecttext_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  item_id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_itemeffecttext" */
export type Pokemon_V2_Itemeffecttext_Insert_Input = {
  effect?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  item_id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  short_effect?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Itemeffecttext_Max_Fields = {
  __typename?: 'pokemon_v2_itemeffecttext_max_fields';
  effect?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  short_effect?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Itemeffecttext_Min_Fields = {
  __typename?: 'pokemon_v2_itemeffecttext_min_fields';
  effect?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  short_effect?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_itemeffecttext" */
export type Pokemon_V2_Itemeffecttext_Mutation_Response = {
  __typename?: 'pokemon_v2_itemeffecttext_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Itemeffecttext>;
};

/** on_conflict condition type for table "pokemon_v2_itemeffecttext" */
export type Pokemon_V2_Itemeffecttext_On_Conflict = {
  constraint: Pokemon_V2_Itemeffecttext_Constraint;
  update_columns?: Array<Pokemon_V2_Itemeffecttext_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Itemeffecttext_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_itemeffecttext". */
export type Pokemon_V2_Itemeffecttext_Order_By = {
  effect?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  short_effect?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_itemeffecttext */
export type Pokemon_V2_Itemeffecttext_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_itemeffecttext" */
export enum Pokemon_V2_Itemeffecttext_Select_Column {
  /** column name */
  Effect = 'effect',
  /** column name */
  Id = 'id',
  /** column name */
  ItemId = 'item_id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  ShortEffect = 'short_effect'
}

/** input type for updating data in table "pokemon_v2_itemeffecttext" */
export type Pokemon_V2_Itemeffecttext_Set_Input = {
  effect?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  item_id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  short_effect?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Itemeffecttext_Stddev_Fields = {
  __typename?: 'pokemon_v2_itemeffecttext_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Itemeffecttext_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_itemeffecttext_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Itemeffecttext_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_itemeffecttext_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_itemeffecttext" */
export type Pokemon_V2_Itemeffecttext_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Itemeffecttext_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Itemeffecttext_Stream_Cursor_Value_Input = {
  effect?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  item_id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  short_effect?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Itemeffecttext_Sum_Fields = {
  __typename?: 'pokemon_v2_itemeffecttext_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_itemeffecttext" */
export enum Pokemon_V2_Itemeffecttext_Update_Column {
  /** column name */
  Effect = 'effect',
  /** column name */
  Id = 'id',
  /** column name */
  ItemId = 'item_id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  ShortEffect = 'short_effect'
}

export type Pokemon_V2_Itemeffecttext_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Itemeffecttext_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Itemeffecttext_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Itemeffecttext_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Itemeffecttext_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_itemeffecttext_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Itemeffecttext_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_itemeffecttext_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Itemeffecttext_Variance_Fields = {
  __typename?: 'pokemon_v2_itemeffecttext_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_itemflavortext" */
export type Pokemon_V2_Itemflavortext = {
  __typename?: 'pokemon_v2_itemflavortext';
  flavor_text: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  item_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_itemflavortext" */
export type Pokemon_V2_Itemflavortext_Aggregate = {
  __typename?: 'pokemon_v2_itemflavortext_aggregate';
  aggregate?: Maybe<Pokemon_V2_Itemflavortext_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Itemflavortext>;
};

/** aggregate fields of "pokemon_v2_itemflavortext" */
export type Pokemon_V2_Itemflavortext_Aggregate_Fields = {
  __typename?: 'pokemon_v2_itemflavortext_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Itemflavortext_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Itemflavortext_Max_Fields>;
  min?: Maybe<Pokemon_V2_Itemflavortext_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Itemflavortext_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Itemflavortext_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Itemflavortext_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Itemflavortext_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Itemflavortext_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Itemflavortext_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Itemflavortext_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_itemflavortext" */
export type Pokemon_V2_Itemflavortext_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Itemflavortext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Itemflavortext_Avg_Fields = {
  __typename?: 'pokemon_v2_itemflavortext_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_itemflavortext". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Itemflavortext_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Itemflavortext_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Itemflavortext_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Itemflavortext_Bool_Exp>>;
  flavor_text?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  item_id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  version_group_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_itemflavortext" */
export enum Pokemon_V2_Itemflavortext_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2ItemflavortextPkey = 'pokemon_v2_itemflavortext_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_itemflavortext" */
export type Pokemon_V2_Itemflavortext_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  item_id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_itemflavortext" */
export type Pokemon_V2_Itemflavortext_Insert_Input = {
  flavor_text?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  item_id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Itemflavortext_Max_Fields = {
  __typename?: 'pokemon_v2_itemflavortext_max_fields';
  flavor_text?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Itemflavortext_Min_Fields = {
  __typename?: 'pokemon_v2_itemflavortext_min_fields';
  flavor_text?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_itemflavortext" */
export type Pokemon_V2_Itemflavortext_Mutation_Response = {
  __typename?: 'pokemon_v2_itemflavortext_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Itemflavortext>;
};

/** on_conflict condition type for table "pokemon_v2_itemflavortext" */
export type Pokemon_V2_Itemflavortext_On_Conflict = {
  constraint: Pokemon_V2_Itemflavortext_Constraint;
  update_columns?: Array<Pokemon_V2_Itemflavortext_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Itemflavortext_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_itemflavortext". */
export type Pokemon_V2_Itemflavortext_Order_By = {
  flavor_text?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_itemflavortext */
export type Pokemon_V2_Itemflavortext_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_itemflavortext" */
export enum Pokemon_V2_Itemflavortext_Select_Column {
  /** column name */
  FlavorText = 'flavor_text',
  /** column name */
  Id = 'id',
  /** column name */
  ItemId = 'item_id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  VersionGroupId = 'version_group_id'
}

/** input type for updating data in table "pokemon_v2_itemflavortext" */
export type Pokemon_V2_Itemflavortext_Set_Input = {
  flavor_text?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  item_id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Itemflavortext_Stddev_Fields = {
  __typename?: 'pokemon_v2_itemflavortext_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Itemflavortext_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_itemflavortext_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Itemflavortext_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_itemflavortext_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_itemflavortext" */
export type Pokemon_V2_Itemflavortext_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Itemflavortext_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Itemflavortext_Stream_Cursor_Value_Input = {
  flavor_text?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  item_id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Itemflavortext_Sum_Fields = {
  __typename?: 'pokemon_v2_itemflavortext_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_itemflavortext" */
export enum Pokemon_V2_Itemflavortext_Update_Column {
  /** column name */
  FlavorText = 'flavor_text',
  /** column name */
  Id = 'id',
  /** column name */
  ItemId = 'item_id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  VersionGroupId = 'version_group_id'
}

export type Pokemon_V2_Itemflavortext_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Itemflavortext_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Itemflavortext_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Itemflavortext_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Itemflavortext_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_itemflavortext_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Itemflavortext_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_itemflavortext_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Itemflavortext_Variance_Fields = {
  __typename?: 'pokemon_v2_itemflavortext_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_itemflingeffect" */
export type Pokemon_V2_Itemflingeffect = {
  __typename?: 'pokemon_v2_itemflingeffect';
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_itemflingeffect" */
export type Pokemon_V2_Itemflingeffect_Aggregate = {
  __typename?: 'pokemon_v2_itemflingeffect_aggregate';
  aggregate?: Maybe<Pokemon_V2_Itemflingeffect_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Itemflingeffect>;
};

/** aggregate fields of "pokemon_v2_itemflingeffect" */
export type Pokemon_V2_Itemflingeffect_Aggregate_Fields = {
  __typename?: 'pokemon_v2_itemflingeffect_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Itemflingeffect_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Itemflingeffect_Max_Fields>;
  min?: Maybe<Pokemon_V2_Itemflingeffect_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Itemflingeffect_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Itemflingeffect_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Itemflingeffect_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Itemflingeffect_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Itemflingeffect_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Itemflingeffect_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Itemflingeffect_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_itemflingeffect" */
export type Pokemon_V2_Itemflingeffect_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Itemflingeffect_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Itemflingeffect_Avg_Fields = {
  __typename?: 'pokemon_v2_itemflingeffect_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_itemflingeffect". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Itemflingeffect_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Itemflingeffect_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Itemflingeffect_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Itemflingeffect_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_itemflingeffect" */
export enum Pokemon_V2_Itemflingeffect_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2ItemflingeffectPkey = 'pokemon_v2_itemflingeffect_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_itemflingeffect" */
export type Pokemon_V2_Itemflingeffect_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_itemflingeffect" */
export type Pokemon_V2_Itemflingeffect_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Itemflingeffect_Max_Fields = {
  __typename?: 'pokemon_v2_itemflingeffect_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Itemflingeffect_Min_Fields = {
  __typename?: 'pokemon_v2_itemflingeffect_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_itemflingeffect" */
export type Pokemon_V2_Itemflingeffect_Mutation_Response = {
  __typename?: 'pokemon_v2_itemflingeffect_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Itemflingeffect>;
};

/** on_conflict condition type for table "pokemon_v2_itemflingeffect" */
export type Pokemon_V2_Itemflingeffect_On_Conflict = {
  constraint: Pokemon_V2_Itemflingeffect_Constraint;
  update_columns?: Array<Pokemon_V2_Itemflingeffect_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Itemflingeffect_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_itemflingeffect". */
export type Pokemon_V2_Itemflingeffect_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_itemflingeffect */
export type Pokemon_V2_Itemflingeffect_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_itemflingeffect" */
export enum Pokemon_V2_Itemflingeffect_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_itemflingeffect" */
export type Pokemon_V2_Itemflingeffect_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Itemflingeffect_Stddev_Fields = {
  __typename?: 'pokemon_v2_itemflingeffect_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Itemflingeffect_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_itemflingeffect_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Itemflingeffect_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_itemflingeffect_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_itemflingeffect" */
export type Pokemon_V2_Itemflingeffect_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Itemflingeffect_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Itemflingeffect_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Itemflingeffect_Sum_Fields = {
  __typename?: 'pokemon_v2_itemflingeffect_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_itemflingeffect" */
export enum Pokemon_V2_Itemflingeffect_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Itemflingeffect_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Itemflingeffect_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Itemflingeffect_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Itemflingeffect_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Itemflingeffect_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_itemflingeffect_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Itemflingeffect_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_itemflingeffect_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Itemflingeffect_Variance_Fields = {
  __typename?: 'pokemon_v2_itemflingeffect_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_itemflingeffecteffecttext" */
export type Pokemon_V2_Itemflingeffecteffecttext = {
  __typename?: 'pokemon_v2_itemflingeffecteffecttext';
  effect: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  item_fling_effect_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_itemflingeffecteffecttext" */
export type Pokemon_V2_Itemflingeffecteffecttext_Aggregate = {
  __typename?: 'pokemon_v2_itemflingeffecteffecttext_aggregate';
  aggregate?: Maybe<Pokemon_V2_Itemflingeffecteffecttext_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Itemflingeffecteffecttext>;
};

/** aggregate fields of "pokemon_v2_itemflingeffecteffecttext" */
export type Pokemon_V2_Itemflingeffecteffecttext_Aggregate_Fields = {
  __typename?: 'pokemon_v2_itemflingeffecteffecttext_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Itemflingeffecteffecttext_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Itemflingeffecteffecttext_Max_Fields>;
  min?: Maybe<Pokemon_V2_Itemflingeffecteffecttext_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Itemflingeffecteffecttext_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Itemflingeffecteffecttext_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Itemflingeffecteffecttext_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Itemflingeffecteffecttext_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Itemflingeffecteffecttext_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Itemflingeffecteffecttext_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Itemflingeffecteffecttext_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_itemflingeffecteffecttext" */
export type Pokemon_V2_Itemflingeffecteffecttext_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Itemflingeffecteffecttext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Itemflingeffecteffecttext_Avg_Fields = {
  __typename?: 'pokemon_v2_itemflingeffecteffecttext_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_itemflingeffecteffecttext". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Itemflingeffecteffecttext_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Itemflingeffecteffecttext_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Itemflingeffecteffecttext_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Itemflingeffecteffecttext_Bool_Exp>>;
  effect?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  item_fling_effect_id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_itemflingeffecteffecttext" */
export enum Pokemon_V2_Itemflingeffecteffecttext_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2ItemflingeffecteffecttextPkey = 'pokemon_v2_itemflingeffecteffecttext_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_itemflingeffecteffecttext" */
export type Pokemon_V2_Itemflingeffecteffecttext_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  item_fling_effect_id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_itemflingeffecteffecttext" */
export type Pokemon_V2_Itemflingeffecteffecttext_Insert_Input = {
  effect?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  item_fling_effect_id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Itemflingeffecteffecttext_Max_Fields = {
  __typename?: 'pokemon_v2_itemflingeffecteffecttext_max_fields';
  effect?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Itemflingeffecteffecttext_Min_Fields = {
  __typename?: 'pokemon_v2_itemflingeffecteffecttext_min_fields';
  effect?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_itemflingeffecteffecttext" */
export type Pokemon_V2_Itemflingeffecteffecttext_Mutation_Response = {
  __typename?: 'pokemon_v2_itemflingeffecteffecttext_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Itemflingeffecteffecttext>;
};

/** on_conflict condition type for table "pokemon_v2_itemflingeffecteffecttext" */
export type Pokemon_V2_Itemflingeffecteffecttext_On_Conflict = {
  constraint: Pokemon_V2_Itemflingeffecteffecttext_Constraint;
  update_columns?: Array<Pokemon_V2_Itemflingeffecteffecttext_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Itemflingeffecteffecttext_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_itemflingeffecteffecttext". */
export type Pokemon_V2_Itemflingeffecteffecttext_Order_By = {
  effect?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_fling_effect_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_itemflingeffecteffecttext */
export type Pokemon_V2_Itemflingeffecteffecttext_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_itemflingeffecteffecttext" */
export enum Pokemon_V2_Itemflingeffecteffecttext_Select_Column {
  /** column name */
  Effect = 'effect',
  /** column name */
  Id = 'id',
  /** column name */
  ItemFlingEffectId = 'item_fling_effect_id',
  /** column name */
  LanguageId = 'language_id'
}

/** input type for updating data in table "pokemon_v2_itemflingeffecteffecttext" */
export type Pokemon_V2_Itemflingeffecteffecttext_Set_Input = {
  effect?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  item_fling_effect_id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Itemflingeffecteffecttext_Stddev_Fields = {
  __typename?: 'pokemon_v2_itemflingeffecteffecttext_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Itemflingeffecteffecttext_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_itemflingeffecteffecttext_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Itemflingeffecteffecttext_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_itemflingeffecteffecttext_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_itemflingeffecteffecttext" */
export type Pokemon_V2_Itemflingeffecteffecttext_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Itemflingeffecteffecttext_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Itemflingeffecteffecttext_Stream_Cursor_Value_Input = {
  effect?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  item_fling_effect_id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Itemflingeffecteffecttext_Sum_Fields = {
  __typename?: 'pokemon_v2_itemflingeffecteffecttext_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_itemflingeffecteffecttext" */
export enum Pokemon_V2_Itemflingeffecteffecttext_Update_Column {
  /** column name */
  Effect = 'effect',
  /** column name */
  Id = 'id',
  /** column name */
  ItemFlingEffectId = 'item_fling_effect_id',
  /** column name */
  LanguageId = 'language_id'
}

export type Pokemon_V2_Itemflingeffecteffecttext_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Itemflingeffecteffecttext_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Itemflingeffecteffecttext_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Itemflingeffecteffecttext_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Itemflingeffecteffecttext_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_itemflingeffecteffecttext_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Itemflingeffecteffecttext_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_itemflingeffecteffecttext_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Itemflingeffecteffecttext_Variance_Fields = {
  __typename?: 'pokemon_v2_itemflingeffecteffecttext_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_itemgameindex" */
export type Pokemon_V2_Itemgameindex = {
  __typename?: 'pokemon_v2_itemgameindex';
  game_index: Scalars['Int']['output'];
  generation_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  item_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_itemgameindex" */
export type Pokemon_V2_Itemgameindex_Aggregate = {
  __typename?: 'pokemon_v2_itemgameindex_aggregate';
  aggregate?: Maybe<Pokemon_V2_Itemgameindex_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Itemgameindex>;
};

/** aggregate fields of "pokemon_v2_itemgameindex" */
export type Pokemon_V2_Itemgameindex_Aggregate_Fields = {
  __typename?: 'pokemon_v2_itemgameindex_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Itemgameindex_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Itemgameindex_Max_Fields>;
  min?: Maybe<Pokemon_V2_Itemgameindex_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Itemgameindex_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Itemgameindex_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Itemgameindex_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Itemgameindex_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Itemgameindex_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Itemgameindex_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Itemgameindex_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_itemgameindex" */
export type Pokemon_V2_Itemgameindex_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Itemgameindex_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Itemgameindex_Avg_Fields = {
  __typename?: 'pokemon_v2_itemgameindex_avg_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_itemgameindex". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Itemgameindex_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Itemgameindex_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Itemgameindex_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Itemgameindex_Bool_Exp>>;
  game_index?: InputMaybe<Int_Comparison_Exp>;
  generation_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  item_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_itemgameindex" */
export enum Pokemon_V2_Itemgameindex_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2ItemgameindexPkey = 'pokemon_v2_itemgameindex_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_itemgameindex" */
export type Pokemon_V2_Itemgameindex_Inc_Input = {
  game_index?: InputMaybe<Scalars['Int']['input']>;
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  item_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_itemgameindex" */
export type Pokemon_V2_Itemgameindex_Insert_Input = {
  game_index?: InputMaybe<Scalars['Int']['input']>;
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  item_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Itemgameindex_Max_Fields = {
  __typename?: 'pokemon_v2_itemgameindex_max_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Itemgameindex_Min_Fields = {
  __typename?: 'pokemon_v2_itemgameindex_min_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_itemgameindex" */
export type Pokemon_V2_Itemgameindex_Mutation_Response = {
  __typename?: 'pokemon_v2_itemgameindex_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Itemgameindex>;
};

/** on_conflict condition type for table "pokemon_v2_itemgameindex" */
export type Pokemon_V2_Itemgameindex_On_Conflict = {
  constraint: Pokemon_V2_Itemgameindex_Constraint;
  update_columns?: Array<Pokemon_V2_Itemgameindex_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Itemgameindex_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_itemgameindex". */
export type Pokemon_V2_Itemgameindex_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_itemgameindex */
export type Pokemon_V2_Itemgameindex_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_itemgameindex" */
export enum Pokemon_V2_Itemgameindex_Select_Column {
  /** column name */
  GameIndex = 'game_index',
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  Id = 'id',
  /** column name */
  ItemId = 'item_id'
}

/** input type for updating data in table "pokemon_v2_itemgameindex" */
export type Pokemon_V2_Itemgameindex_Set_Input = {
  game_index?: InputMaybe<Scalars['Int']['input']>;
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  item_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Itemgameindex_Stddev_Fields = {
  __typename?: 'pokemon_v2_itemgameindex_stddev_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Itemgameindex_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_itemgameindex_stddev_pop_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Itemgameindex_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_itemgameindex_stddev_samp_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_itemgameindex" */
export type Pokemon_V2_Itemgameindex_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Itemgameindex_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Itemgameindex_Stream_Cursor_Value_Input = {
  game_index?: InputMaybe<Scalars['Int']['input']>;
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  item_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Itemgameindex_Sum_Fields = {
  __typename?: 'pokemon_v2_itemgameindex_sum_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_itemgameindex" */
export enum Pokemon_V2_Itemgameindex_Update_Column {
  /** column name */
  GameIndex = 'game_index',
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  Id = 'id',
  /** column name */
  ItemId = 'item_id'
}

export type Pokemon_V2_Itemgameindex_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Itemgameindex_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Itemgameindex_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Itemgameindex_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Itemgameindex_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_itemgameindex_var_pop_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Itemgameindex_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_itemgameindex_var_samp_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Itemgameindex_Variance_Fields = {
  __typename?: 'pokemon_v2_itemgameindex_variance_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_itemname" */
export type Pokemon_V2_Itemname = {
  __typename?: 'pokemon_v2_itemname';
  id: Scalars['Int']['output'];
  item_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_itemname" */
export type Pokemon_V2_Itemname_Aggregate = {
  __typename?: 'pokemon_v2_itemname_aggregate';
  aggregate?: Maybe<Pokemon_V2_Itemname_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Itemname>;
};

/** aggregate fields of "pokemon_v2_itemname" */
export type Pokemon_V2_Itemname_Aggregate_Fields = {
  __typename?: 'pokemon_v2_itemname_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Itemname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Itemname_Max_Fields>;
  min?: Maybe<Pokemon_V2_Itemname_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Itemname_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Itemname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Itemname_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Itemname_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Itemname_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Itemname_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Itemname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_itemname" */
export type Pokemon_V2_Itemname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Itemname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Itemname_Avg_Fields = {
  __typename?: 'pokemon_v2_itemname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_itemname". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Itemname_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Itemname_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Itemname_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Itemname_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  item_id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_itemname" */
export enum Pokemon_V2_Itemname_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2ItemnamePkey = 'pokemon_v2_itemname_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_itemname" */
export type Pokemon_V2_Itemname_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  item_id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_itemname" */
export type Pokemon_V2_Itemname_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  item_id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Itemname_Max_Fields = {
  __typename?: 'pokemon_v2_itemname_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Itemname_Min_Fields = {
  __typename?: 'pokemon_v2_itemname_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_itemname" */
export type Pokemon_V2_Itemname_Mutation_Response = {
  __typename?: 'pokemon_v2_itemname_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Itemname>;
};

/** on_conflict condition type for table "pokemon_v2_itemname" */
export type Pokemon_V2_Itemname_On_Conflict = {
  constraint: Pokemon_V2_Itemname_Constraint;
  update_columns?: Array<Pokemon_V2_Itemname_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Itemname_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_itemname". */
export type Pokemon_V2_Itemname_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_itemname */
export type Pokemon_V2_Itemname_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_itemname" */
export enum Pokemon_V2_Itemname_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ItemId = 'item_id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_itemname" */
export type Pokemon_V2_Itemname_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  item_id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Itemname_Stddev_Fields = {
  __typename?: 'pokemon_v2_itemname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Itemname_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_itemname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Itemname_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_itemname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_itemname" */
export type Pokemon_V2_Itemname_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Itemname_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Itemname_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  item_id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Itemname_Sum_Fields = {
  __typename?: 'pokemon_v2_itemname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_itemname" */
export enum Pokemon_V2_Itemname_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ItemId = 'item_id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Itemname_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Itemname_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Itemname_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Itemname_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Itemname_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_itemname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Itemname_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_itemname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Itemname_Variance_Fields = {
  __typename?: 'pokemon_v2_itemname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_itempocket" */
export type Pokemon_V2_Itempocket = {
  __typename?: 'pokemon_v2_itempocket';
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_itempocket" */
export type Pokemon_V2_Itempocket_Aggregate = {
  __typename?: 'pokemon_v2_itempocket_aggregate';
  aggregate?: Maybe<Pokemon_V2_Itempocket_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Itempocket>;
};

/** aggregate fields of "pokemon_v2_itempocket" */
export type Pokemon_V2_Itempocket_Aggregate_Fields = {
  __typename?: 'pokemon_v2_itempocket_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Itempocket_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Itempocket_Max_Fields>;
  min?: Maybe<Pokemon_V2_Itempocket_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Itempocket_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Itempocket_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Itempocket_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Itempocket_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Itempocket_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Itempocket_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Itempocket_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_itempocket" */
export type Pokemon_V2_Itempocket_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Itempocket_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Itempocket_Avg_Fields = {
  __typename?: 'pokemon_v2_itempocket_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_itempocket". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Itempocket_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Itempocket_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Itempocket_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Itempocket_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_itempocket" */
export enum Pokemon_V2_Itempocket_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2ItempocketPkey = 'pokemon_v2_itempocket_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_itempocket" */
export type Pokemon_V2_Itempocket_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_itempocket" */
export type Pokemon_V2_Itempocket_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Itempocket_Max_Fields = {
  __typename?: 'pokemon_v2_itempocket_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Itempocket_Min_Fields = {
  __typename?: 'pokemon_v2_itempocket_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_itempocket" */
export type Pokemon_V2_Itempocket_Mutation_Response = {
  __typename?: 'pokemon_v2_itempocket_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Itempocket>;
};

/** on_conflict condition type for table "pokemon_v2_itempocket" */
export type Pokemon_V2_Itempocket_On_Conflict = {
  constraint: Pokemon_V2_Itempocket_Constraint;
  update_columns?: Array<Pokemon_V2_Itempocket_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Itempocket_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_itempocket". */
export type Pokemon_V2_Itempocket_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_itempocket */
export type Pokemon_V2_Itempocket_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_itempocket" */
export enum Pokemon_V2_Itempocket_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_itempocket" */
export type Pokemon_V2_Itempocket_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Itempocket_Stddev_Fields = {
  __typename?: 'pokemon_v2_itempocket_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Itempocket_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_itempocket_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Itempocket_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_itempocket_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_itempocket" */
export type Pokemon_V2_Itempocket_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Itempocket_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Itempocket_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Itempocket_Sum_Fields = {
  __typename?: 'pokemon_v2_itempocket_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_itempocket" */
export enum Pokemon_V2_Itempocket_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Itempocket_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Itempocket_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Itempocket_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Itempocket_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Itempocket_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_itempocket_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Itempocket_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_itempocket_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Itempocket_Variance_Fields = {
  __typename?: 'pokemon_v2_itempocket_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_itempocketname" */
export type Pokemon_V2_Itempocketname = {
  __typename?: 'pokemon_v2_itempocketname';
  id: Scalars['Int']['output'];
  item_pocket_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_itempocketname" */
export type Pokemon_V2_Itempocketname_Aggregate = {
  __typename?: 'pokemon_v2_itempocketname_aggregate';
  aggregate?: Maybe<Pokemon_V2_Itempocketname_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Itempocketname>;
};

/** aggregate fields of "pokemon_v2_itempocketname" */
export type Pokemon_V2_Itempocketname_Aggregate_Fields = {
  __typename?: 'pokemon_v2_itempocketname_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Itempocketname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Itempocketname_Max_Fields>;
  min?: Maybe<Pokemon_V2_Itempocketname_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Itempocketname_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Itempocketname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Itempocketname_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Itempocketname_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Itempocketname_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Itempocketname_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Itempocketname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_itempocketname" */
export type Pokemon_V2_Itempocketname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Itempocketname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Itempocketname_Avg_Fields = {
  __typename?: 'pokemon_v2_itempocketname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_pocket_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_itempocketname". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Itempocketname_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Itempocketname_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Itempocketname_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Itempocketname_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  item_pocket_id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_itempocketname" */
export enum Pokemon_V2_Itempocketname_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2ItempocketnamePkey = 'pokemon_v2_itempocketname_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_itempocketname" */
export type Pokemon_V2_Itempocketname_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  item_pocket_id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_itempocketname" */
export type Pokemon_V2_Itempocketname_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  item_pocket_id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Itempocketname_Max_Fields = {
  __typename?: 'pokemon_v2_itempocketname_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_pocket_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Itempocketname_Min_Fields = {
  __typename?: 'pokemon_v2_itempocketname_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_pocket_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_itempocketname" */
export type Pokemon_V2_Itempocketname_Mutation_Response = {
  __typename?: 'pokemon_v2_itempocketname_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Itempocketname>;
};

/** on_conflict condition type for table "pokemon_v2_itempocketname" */
export type Pokemon_V2_Itempocketname_On_Conflict = {
  constraint: Pokemon_V2_Itempocketname_Constraint;
  update_columns?: Array<Pokemon_V2_Itempocketname_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Itempocketname_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_itempocketname". */
export type Pokemon_V2_Itempocketname_Order_By = {
  id?: InputMaybe<Order_By>;
  item_pocket_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_itempocketname */
export type Pokemon_V2_Itempocketname_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_itempocketname" */
export enum Pokemon_V2_Itempocketname_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ItemPocketId = 'item_pocket_id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_itempocketname" */
export type Pokemon_V2_Itempocketname_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  item_pocket_id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Itempocketname_Stddev_Fields = {
  __typename?: 'pokemon_v2_itempocketname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_pocket_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Itempocketname_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_itempocketname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_pocket_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Itempocketname_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_itempocketname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_pocket_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_itempocketname" */
export type Pokemon_V2_Itempocketname_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Itempocketname_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Itempocketname_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  item_pocket_id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Itempocketname_Sum_Fields = {
  __typename?: 'pokemon_v2_itempocketname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_pocket_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_itempocketname" */
export enum Pokemon_V2_Itempocketname_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ItemPocketId = 'item_pocket_id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Itempocketname_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Itempocketname_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Itempocketname_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Itempocketname_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Itempocketname_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_itempocketname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_pocket_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Itempocketname_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_itempocketname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_pocket_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Itempocketname_Variance_Fields = {
  __typename?: 'pokemon_v2_itempocketname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_pocket_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_itemsprites" */
export type Pokemon_V2_Itemsprites = {
  __typename?: 'pokemon_v2_itemsprites';
  id: Scalars['Int']['output'];
  item_id?: Maybe<Scalars['Int']['output']>;
  sprites: Scalars['jsonb']['output'];
};


/** columns and relationships of "pokemon_v2_itemsprites" */
export type Pokemon_V2_ItemspritesSpritesArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "pokemon_v2_itemsprites" */
export type Pokemon_V2_Itemsprites_Aggregate = {
  __typename?: 'pokemon_v2_itemsprites_aggregate';
  aggregate?: Maybe<Pokemon_V2_Itemsprites_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Itemsprites>;
};

/** aggregate fields of "pokemon_v2_itemsprites" */
export type Pokemon_V2_Itemsprites_Aggregate_Fields = {
  __typename?: 'pokemon_v2_itemsprites_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Itemsprites_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Itemsprites_Max_Fields>;
  min?: Maybe<Pokemon_V2_Itemsprites_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Itemsprites_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Itemsprites_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Itemsprites_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Itemsprites_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Itemsprites_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Itemsprites_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Itemsprites_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_itemsprites" */
export type Pokemon_V2_Itemsprites_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Itemsprites_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Pokemon_V2_Itemsprites_Append_Input = {
  sprites?: InputMaybe<Scalars['jsonb']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Itemsprites_Avg_Fields = {
  __typename?: 'pokemon_v2_itemsprites_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_itemsprites". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Itemsprites_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Itemsprites_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Itemsprites_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Itemsprites_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  item_id?: InputMaybe<Int_Comparison_Exp>;
  sprites?: InputMaybe<Jsonb_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_itemsprites" */
export enum Pokemon_V2_Itemsprites_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2ItemspritesPkey = 'pokemon_v2_itemsprites_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Pokemon_V2_Itemsprites_Delete_At_Path_Input = {
  sprites?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Pokemon_V2_Itemsprites_Delete_Elem_Input = {
  sprites?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Pokemon_V2_Itemsprites_Delete_Key_Input = {
  sprites?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "pokemon_v2_itemsprites" */
export type Pokemon_V2_Itemsprites_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  item_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_itemsprites" */
export type Pokemon_V2_Itemsprites_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  item_id?: InputMaybe<Scalars['Int']['input']>;
  sprites?: InputMaybe<Scalars['jsonb']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Itemsprites_Max_Fields = {
  __typename?: 'pokemon_v2_itemsprites_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Itemsprites_Min_Fields = {
  __typename?: 'pokemon_v2_itemsprites_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_itemsprites" */
export type Pokemon_V2_Itemsprites_Mutation_Response = {
  __typename?: 'pokemon_v2_itemsprites_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Itemsprites>;
};

/** on_conflict condition type for table "pokemon_v2_itemsprites" */
export type Pokemon_V2_Itemsprites_On_Conflict = {
  constraint: Pokemon_V2_Itemsprites_Constraint;
  update_columns?: Array<Pokemon_V2_Itemsprites_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Itemsprites_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_itemsprites". */
export type Pokemon_V2_Itemsprites_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  sprites?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_itemsprites */
export type Pokemon_V2_Itemsprites_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Pokemon_V2_Itemsprites_Prepend_Input = {
  sprites?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "pokemon_v2_itemsprites" */
export enum Pokemon_V2_Itemsprites_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ItemId = 'item_id',
  /** column name */
  Sprites = 'sprites'
}

/** input type for updating data in table "pokemon_v2_itemsprites" */
export type Pokemon_V2_Itemsprites_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  item_id?: InputMaybe<Scalars['Int']['input']>;
  sprites?: InputMaybe<Scalars['jsonb']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Itemsprites_Stddev_Fields = {
  __typename?: 'pokemon_v2_itemsprites_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Itemsprites_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_itemsprites_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Itemsprites_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_itemsprites_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_itemsprites" */
export type Pokemon_V2_Itemsprites_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Itemsprites_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Itemsprites_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  item_id?: InputMaybe<Scalars['Int']['input']>;
  sprites?: InputMaybe<Scalars['jsonb']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Itemsprites_Sum_Fields = {
  __typename?: 'pokemon_v2_itemsprites_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_itemsprites" */
export enum Pokemon_V2_Itemsprites_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ItemId = 'item_id',
  /** column name */
  Sprites = 'sprites'
}

export type Pokemon_V2_Itemsprites_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Pokemon_V2_Itemsprites_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Pokemon_V2_Itemsprites_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Pokemon_V2_Itemsprites_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Pokemon_V2_Itemsprites_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Itemsprites_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Pokemon_V2_Itemsprites_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Itemsprites_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Itemsprites_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Itemsprites_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_itemsprites_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Itemsprites_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_itemsprites_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Itemsprites_Variance_Fields = {
  __typename?: 'pokemon_v2_itemsprites_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_language" */
export type Pokemon_V2_Language = {
  __typename?: 'pokemon_v2_language';
  id: Scalars['Int']['output'];
  iso639: Scalars['String']['output'];
  iso3166: Scalars['String']['output'];
  name: Scalars['String']['output'];
  official: Scalars['Boolean']['output'];
  order?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_language" */
export type Pokemon_V2_Language_Aggregate = {
  __typename?: 'pokemon_v2_language_aggregate';
  aggregate?: Maybe<Pokemon_V2_Language_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Language>;
};

/** aggregate fields of "pokemon_v2_language" */
export type Pokemon_V2_Language_Aggregate_Fields = {
  __typename?: 'pokemon_v2_language_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Language_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Language_Max_Fields>;
  min?: Maybe<Pokemon_V2_Language_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Language_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Language_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Language_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Language_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Language_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Language_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Language_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_language" */
export type Pokemon_V2_Language_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Language_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Language_Avg_Fields = {
  __typename?: 'pokemon_v2_language_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_language". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Language_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Language_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Language_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Language_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  iso639?: InputMaybe<String_Comparison_Exp>;
  iso3166?: InputMaybe<String_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  official?: InputMaybe<Boolean_Comparison_Exp>;
  order?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_language" */
export enum Pokemon_V2_Language_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2LanguagePkey = 'pokemon_v2_language_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_language" */
export type Pokemon_V2_Language_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_language" */
export type Pokemon_V2_Language_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  iso639?: InputMaybe<Scalars['String']['input']>;
  iso3166?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  official?: InputMaybe<Scalars['Boolean']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Language_Max_Fields = {
  __typename?: 'pokemon_v2_language_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  iso639?: Maybe<Scalars['String']['output']>;
  iso3166?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Language_Min_Fields = {
  __typename?: 'pokemon_v2_language_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  iso639?: Maybe<Scalars['String']['output']>;
  iso3166?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_language" */
export type Pokemon_V2_Language_Mutation_Response = {
  __typename?: 'pokemon_v2_language_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Language>;
};

/** on_conflict condition type for table "pokemon_v2_language" */
export type Pokemon_V2_Language_On_Conflict = {
  constraint: Pokemon_V2_Language_Constraint;
  update_columns?: Array<Pokemon_V2_Language_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Language_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_language". */
export type Pokemon_V2_Language_Order_By = {
  id?: InputMaybe<Order_By>;
  iso639?: InputMaybe<Order_By>;
  iso3166?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  official?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_language */
export type Pokemon_V2_Language_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_language" */
export enum Pokemon_V2_Language_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Iso639 = 'iso639',
  /** column name */
  Iso3166 = 'iso3166',
  /** column name */
  Name = 'name',
  /** column name */
  Official = 'official',
  /** column name */
  Order = 'order'
}

/** input type for updating data in table "pokemon_v2_language" */
export type Pokemon_V2_Language_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  iso639?: InputMaybe<Scalars['String']['input']>;
  iso3166?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  official?: InputMaybe<Scalars['Boolean']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Language_Stddev_Fields = {
  __typename?: 'pokemon_v2_language_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Language_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_language_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Language_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_language_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_language" */
export type Pokemon_V2_Language_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Language_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Language_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  iso639?: InputMaybe<Scalars['String']['input']>;
  iso3166?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  official?: InputMaybe<Scalars['Boolean']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Language_Sum_Fields = {
  __typename?: 'pokemon_v2_language_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_language" */
export enum Pokemon_V2_Language_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Iso639 = 'iso639',
  /** column name */
  Iso3166 = 'iso3166',
  /** column name */
  Name = 'name',
  /** column name */
  Official = 'official',
  /** column name */
  Order = 'order'
}

export type Pokemon_V2_Language_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Language_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Language_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Language_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Language_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_language_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Language_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_language_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Language_Variance_Fields = {
  __typename?: 'pokemon_v2_language_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_languagename" */
export type Pokemon_V2_Languagename = {
  __typename?: 'pokemon_v2_languagename';
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  local_language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_languagename" */
export type Pokemon_V2_Languagename_Aggregate = {
  __typename?: 'pokemon_v2_languagename_aggregate';
  aggregate?: Maybe<Pokemon_V2_Languagename_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Languagename>;
};

/** aggregate fields of "pokemon_v2_languagename" */
export type Pokemon_V2_Languagename_Aggregate_Fields = {
  __typename?: 'pokemon_v2_languagename_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Languagename_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Languagename_Max_Fields>;
  min?: Maybe<Pokemon_V2_Languagename_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Languagename_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Languagename_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Languagename_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Languagename_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Languagename_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Languagename_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Languagename_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_languagename" */
export type Pokemon_V2_Languagename_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Languagename_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Languagename_Avg_Fields = {
  __typename?: 'pokemon_v2_languagename_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  local_language_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_languagename". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Languagename_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Languagename_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Languagename_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Languagename_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  local_language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_languagename" */
export enum Pokemon_V2_Languagename_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2LanguagenamePkey = 'pokemon_v2_languagename_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_languagename" */
export type Pokemon_V2_Languagename_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  local_language_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_languagename" */
export type Pokemon_V2_Languagename_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  local_language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Languagename_Max_Fields = {
  __typename?: 'pokemon_v2_languagename_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  local_language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Languagename_Min_Fields = {
  __typename?: 'pokemon_v2_languagename_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  local_language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_languagename" */
export type Pokemon_V2_Languagename_Mutation_Response = {
  __typename?: 'pokemon_v2_languagename_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Languagename>;
};

/** on_conflict condition type for table "pokemon_v2_languagename" */
export type Pokemon_V2_Languagename_On_Conflict = {
  constraint: Pokemon_V2_Languagename_Constraint;
  update_columns?: Array<Pokemon_V2_Languagename_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Languagename_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_languagename". */
export type Pokemon_V2_Languagename_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  local_language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_languagename */
export type Pokemon_V2_Languagename_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_languagename" */
export enum Pokemon_V2_Languagename_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  LocalLanguageId = 'local_language_id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_languagename" */
export type Pokemon_V2_Languagename_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  local_language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Languagename_Stddev_Fields = {
  __typename?: 'pokemon_v2_languagename_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  local_language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Languagename_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_languagename_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  local_language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Languagename_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_languagename_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  local_language_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_languagename" */
export type Pokemon_V2_Languagename_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Languagename_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Languagename_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  local_language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Languagename_Sum_Fields = {
  __typename?: 'pokemon_v2_languagename_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  local_language_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_languagename" */
export enum Pokemon_V2_Languagename_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  LocalLanguageId = 'local_language_id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Languagename_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Languagename_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Languagename_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Languagename_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Languagename_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_languagename_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  local_language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Languagename_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_languagename_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  local_language_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Languagename_Variance_Fields = {
  __typename?: 'pokemon_v2_languagename_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  local_language_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_location" */
export type Pokemon_V2_Location = {
  __typename?: 'pokemon_v2_location';
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  region_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_location" */
export type Pokemon_V2_Location_Aggregate = {
  __typename?: 'pokemon_v2_location_aggregate';
  aggregate?: Maybe<Pokemon_V2_Location_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Location>;
};

/** aggregate fields of "pokemon_v2_location" */
export type Pokemon_V2_Location_Aggregate_Fields = {
  __typename?: 'pokemon_v2_location_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Location_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Location_Max_Fields>;
  min?: Maybe<Pokemon_V2_Location_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Location_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Location_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Location_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Location_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Location_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Location_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Location_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_location" */
export type Pokemon_V2_Location_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Location_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Location_Avg_Fields = {
  __typename?: 'pokemon_v2_location_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_location". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Location_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Location_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Location_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Location_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  region_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_location" */
export enum Pokemon_V2_Location_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2LocationPkey = 'pokemon_v2_location_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_location" */
export type Pokemon_V2_Location_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  region_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_location" */
export type Pokemon_V2_Location_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  region_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Location_Max_Fields = {
  __typename?: 'pokemon_v2_location_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  region_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Location_Min_Fields = {
  __typename?: 'pokemon_v2_location_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  region_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_location" */
export type Pokemon_V2_Location_Mutation_Response = {
  __typename?: 'pokemon_v2_location_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Location>;
};

/** on_conflict condition type for table "pokemon_v2_location" */
export type Pokemon_V2_Location_On_Conflict = {
  constraint: Pokemon_V2_Location_Constraint;
  update_columns?: Array<Pokemon_V2_Location_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Location_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_location". */
export type Pokemon_V2_Location_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_location */
export type Pokemon_V2_Location_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_location" */
export enum Pokemon_V2_Location_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  RegionId = 'region_id'
}

/** input type for updating data in table "pokemon_v2_location" */
export type Pokemon_V2_Location_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  region_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Location_Stddev_Fields = {
  __typename?: 'pokemon_v2_location_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Location_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_location_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Location_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_location_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_location" */
export type Pokemon_V2_Location_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Location_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Location_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  region_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Location_Sum_Fields = {
  __typename?: 'pokemon_v2_location_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  region_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_location" */
export enum Pokemon_V2_Location_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  RegionId = 'region_id'
}

export type Pokemon_V2_Location_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Location_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Location_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Location_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Location_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_location_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Location_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_location_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Location_Variance_Fields = {
  __typename?: 'pokemon_v2_location_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_locationarea" */
export type Pokemon_V2_Locationarea = {
  __typename?: 'pokemon_v2_locationarea';
  game_index: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  location_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_locationarea" */
export type Pokemon_V2_Locationarea_Aggregate = {
  __typename?: 'pokemon_v2_locationarea_aggregate';
  aggregate?: Maybe<Pokemon_V2_Locationarea_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Locationarea>;
};

/** aggregate fields of "pokemon_v2_locationarea" */
export type Pokemon_V2_Locationarea_Aggregate_Fields = {
  __typename?: 'pokemon_v2_locationarea_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Locationarea_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Locationarea_Max_Fields>;
  min?: Maybe<Pokemon_V2_Locationarea_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Locationarea_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Locationarea_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Locationarea_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Locationarea_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Locationarea_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Locationarea_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Locationarea_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_locationarea" */
export type Pokemon_V2_Locationarea_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Locationarea_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Locationarea_Avg_Fields = {
  __typename?: 'pokemon_v2_locationarea_avg_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_locationarea". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Locationarea_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Locationarea_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Locationarea_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Locationarea_Bool_Exp>>;
  game_index?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  location_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_locationarea" */
export enum Pokemon_V2_Locationarea_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2LocationareaPkey = 'pokemon_v2_locationarea_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_locationarea" */
export type Pokemon_V2_Locationarea_Inc_Input = {
  game_index?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  location_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_locationarea" */
export type Pokemon_V2_Locationarea_Insert_Input = {
  game_index?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  location_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Locationarea_Max_Fields = {
  __typename?: 'pokemon_v2_locationarea_max_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  location_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Locationarea_Min_Fields = {
  __typename?: 'pokemon_v2_locationarea_min_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  location_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_locationarea" */
export type Pokemon_V2_Locationarea_Mutation_Response = {
  __typename?: 'pokemon_v2_locationarea_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Locationarea>;
};

/** on_conflict condition type for table "pokemon_v2_locationarea" */
export type Pokemon_V2_Locationarea_On_Conflict = {
  constraint: Pokemon_V2_Locationarea_Constraint;
  update_columns?: Array<Pokemon_V2_Locationarea_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Locationarea_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_locationarea". */
export type Pokemon_V2_Locationarea_Order_By = {
  game_index?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_locationarea */
export type Pokemon_V2_Locationarea_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_locationarea" */
export enum Pokemon_V2_Locationarea_Select_Column {
  /** column name */
  GameIndex = 'game_index',
  /** column name */
  Id = 'id',
  /** column name */
  LocationId = 'location_id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_locationarea" */
export type Pokemon_V2_Locationarea_Set_Input = {
  game_index?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  location_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Locationarea_Stddev_Fields = {
  __typename?: 'pokemon_v2_locationarea_stddev_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Locationarea_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_locationarea_stddev_pop_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Locationarea_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_locationarea_stddev_samp_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_locationarea" */
export type Pokemon_V2_Locationarea_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Locationarea_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Locationarea_Stream_Cursor_Value_Input = {
  game_index?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  location_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Locationarea_Sum_Fields = {
  __typename?: 'pokemon_v2_locationarea_sum_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  location_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_locationarea" */
export enum Pokemon_V2_Locationarea_Update_Column {
  /** column name */
  GameIndex = 'game_index',
  /** column name */
  Id = 'id',
  /** column name */
  LocationId = 'location_id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Locationarea_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Locationarea_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Locationarea_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Locationarea_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Locationarea_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_locationarea_var_pop_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Locationarea_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_locationarea_var_samp_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Locationarea_Variance_Fields = {
  __typename?: 'pokemon_v2_locationarea_variance_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_locationareaencounterrate" */
export type Pokemon_V2_Locationareaencounterrate = {
  __typename?: 'pokemon_v2_locationareaencounterrate';
  encounter_method_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  location_area_id?: Maybe<Scalars['Int']['output']>;
  rate: Scalars['Int']['output'];
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_locationareaencounterrate" */
export type Pokemon_V2_Locationareaencounterrate_Aggregate = {
  __typename?: 'pokemon_v2_locationareaencounterrate_aggregate';
  aggregate?: Maybe<Pokemon_V2_Locationareaencounterrate_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Locationareaencounterrate>;
};

/** aggregate fields of "pokemon_v2_locationareaencounterrate" */
export type Pokemon_V2_Locationareaencounterrate_Aggregate_Fields = {
  __typename?: 'pokemon_v2_locationareaencounterrate_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Locationareaencounterrate_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Locationareaencounterrate_Max_Fields>;
  min?: Maybe<Pokemon_V2_Locationareaencounterrate_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Locationareaencounterrate_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Locationareaencounterrate_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Locationareaencounterrate_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Locationareaencounterrate_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Locationareaencounterrate_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Locationareaencounterrate_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Locationareaencounterrate_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_locationareaencounterrate" */
export type Pokemon_V2_Locationareaencounterrate_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Locationareaencounterrate_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Locationareaencounterrate_Avg_Fields = {
  __typename?: 'pokemon_v2_locationareaencounterrate_avg_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
  rate?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_locationareaencounterrate". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Locationareaencounterrate_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Locationareaencounterrate_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Locationareaencounterrate_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Locationareaencounterrate_Bool_Exp>>;
  encounter_method_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  location_area_id?: InputMaybe<Int_Comparison_Exp>;
  rate?: InputMaybe<Int_Comparison_Exp>;
  version_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_locationareaencounterrate" */
export enum Pokemon_V2_Locationareaencounterrate_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2LocationareaencounterratePkey = 'pokemon_v2_locationareaencounterrate_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_locationareaencounterrate" */
export type Pokemon_V2_Locationareaencounterrate_Inc_Input = {
  encounter_method_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  location_area_id?: InputMaybe<Scalars['Int']['input']>;
  rate?: InputMaybe<Scalars['Int']['input']>;
  version_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_locationareaencounterrate" */
export type Pokemon_V2_Locationareaencounterrate_Insert_Input = {
  encounter_method_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  location_area_id?: InputMaybe<Scalars['Int']['input']>;
  rate?: InputMaybe<Scalars['Int']['input']>;
  version_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Locationareaencounterrate_Max_Fields = {
  __typename?: 'pokemon_v2_locationareaencounterrate_max_fields';
  encounter_method_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  location_area_id?: Maybe<Scalars['Int']['output']>;
  rate?: Maybe<Scalars['Int']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Locationareaencounterrate_Min_Fields = {
  __typename?: 'pokemon_v2_locationareaencounterrate_min_fields';
  encounter_method_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  location_area_id?: Maybe<Scalars['Int']['output']>;
  rate?: Maybe<Scalars['Int']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_locationareaencounterrate" */
export type Pokemon_V2_Locationareaencounterrate_Mutation_Response = {
  __typename?: 'pokemon_v2_locationareaencounterrate_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Locationareaencounterrate>;
};

/** on_conflict condition type for table "pokemon_v2_locationareaencounterrate" */
export type Pokemon_V2_Locationareaencounterrate_On_Conflict = {
  constraint: Pokemon_V2_Locationareaencounterrate_Constraint;
  update_columns?: Array<Pokemon_V2_Locationareaencounterrate_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Locationareaencounterrate_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_locationareaencounterrate". */
export type Pokemon_V2_Locationareaencounterrate_Order_By = {
  encounter_method_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_area_id?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_locationareaencounterrate */
export type Pokemon_V2_Locationareaencounterrate_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_locationareaencounterrate" */
export enum Pokemon_V2_Locationareaencounterrate_Select_Column {
  /** column name */
  EncounterMethodId = 'encounter_method_id',
  /** column name */
  Id = 'id',
  /** column name */
  LocationAreaId = 'location_area_id',
  /** column name */
  Rate = 'rate',
  /** column name */
  VersionId = 'version_id'
}

/** input type for updating data in table "pokemon_v2_locationareaencounterrate" */
export type Pokemon_V2_Locationareaencounterrate_Set_Input = {
  encounter_method_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  location_area_id?: InputMaybe<Scalars['Int']['input']>;
  rate?: InputMaybe<Scalars['Int']['input']>;
  version_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Locationareaencounterrate_Stddev_Fields = {
  __typename?: 'pokemon_v2_locationareaencounterrate_stddev_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
  rate?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Locationareaencounterrate_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_locationareaencounterrate_stddev_pop_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
  rate?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Locationareaencounterrate_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_locationareaencounterrate_stddev_samp_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
  rate?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_locationareaencounterrate" */
export type Pokemon_V2_Locationareaencounterrate_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Locationareaencounterrate_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Locationareaencounterrate_Stream_Cursor_Value_Input = {
  encounter_method_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  location_area_id?: InputMaybe<Scalars['Int']['input']>;
  rate?: InputMaybe<Scalars['Int']['input']>;
  version_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Locationareaencounterrate_Sum_Fields = {
  __typename?: 'pokemon_v2_locationareaencounterrate_sum_fields';
  encounter_method_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  location_area_id?: Maybe<Scalars['Int']['output']>;
  rate?: Maybe<Scalars['Int']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_locationareaencounterrate" */
export enum Pokemon_V2_Locationareaencounterrate_Update_Column {
  /** column name */
  EncounterMethodId = 'encounter_method_id',
  /** column name */
  Id = 'id',
  /** column name */
  LocationAreaId = 'location_area_id',
  /** column name */
  Rate = 'rate',
  /** column name */
  VersionId = 'version_id'
}

export type Pokemon_V2_Locationareaencounterrate_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Locationareaencounterrate_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Locationareaencounterrate_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Locationareaencounterrate_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Locationareaencounterrate_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_locationareaencounterrate_var_pop_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
  rate?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Locationareaencounterrate_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_locationareaencounterrate_var_samp_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
  rate?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Locationareaencounterrate_Variance_Fields = {
  __typename?: 'pokemon_v2_locationareaencounterrate_variance_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
  rate?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_locationareaname" */
export type Pokemon_V2_Locationareaname = {
  __typename?: 'pokemon_v2_locationareaname';
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  location_area_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_locationareaname" */
export type Pokemon_V2_Locationareaname_Aggregate = {
  __typename?: 'pokemon_v2_locationareaname_aggregate';
  aggregate?: Maybe<Pokemon_V2_Locationareaname_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Locationareaname>;
};

/** aggregate fields of "pokemon_v2_locationareaname" */
export type Pokemon_V2_Locationareaname_Aggregate_Fields = {
  __typename?: 'pokemon_v2_locationareaname_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Locationareaname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Locationareaname_Max_Fields>;
  min?: Maybe<Pokemon_V2_Locationareaname_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Locationareaname_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Locationareaname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Locationareaname_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Locationareaname_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Locationareaname_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Locationareaname_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Locationareaname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_locationareaname" */
export type Pokemon_V2_Locationareaname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Locationareaname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Locationareaname_Avg_Fields = {
  __typename?: 'pokemon_v2_locationareaname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_locationareaname". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Locationareaname_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Locationareaname_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Locationareaname_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Locationareaname_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  location_area_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_locationareaname" */
export enum Pokemon_V2_Locationareaname_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2LocationareanamePkey = 'pokemon_v2_locationareaname_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_locationareaname" */
export type Pokemon_V2_Locationareaname_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  location_area_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_locationareaname" */
export type Pokemon_V2_Locationareaname_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  location_area_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Locationareaname_Max_Fields = {
  __typename?: 'pokemon_v2_locationareaname_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  location_area_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Locationareaname_Min_Fields = {
  __typename?: 'pokemon_v2_locationareaname_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  location_area_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_locationareaname" */
export type Pokemon_V2_Locationareaname_Mutation_Response = {
  __typename?: 'pokemon_v2_locationareaname_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Locationareaname>;
};

/** on_conflict condition type for table "pokemon_v2_locationareaname" */
export type Pokemon_V2_Locationareaname_On_Conflict = {
  constraint: Pokemon_V2_Locationareaname_Constraint;
  update_columns?: Array<Pokemon_V2_Locationareaname_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Locationareaname_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_locationareaname". */
export type Pokemon_V2_Locationareaname_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  location_area_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_locationareaname */
export type Pokemon_V2_Locationareaname_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_locationareaname" */
export enum Pokemon_V2_Locationareaname_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  LocationAreaId = 'location_area_id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_locationareaname" */
export type Pokemon_V2_Locationareaname_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  location_area_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Locationareaname_Stddev_Fields = {
  __typename?: 'pokemon_v2_locationareaname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Locationareaname_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_locationareaname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Locationareaname_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_locationareaname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_locationareaname" */
export type Pokemon_V2_Locationareaname_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Locationareaname_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Locationareaname_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  location_area_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Locationareaname_Sum_Fields = {
  __typename?: 'pokemon_v2_locationareaname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  location_area_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_locationareaname" */
export enum Pokemon_V2_Locationareaname_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  LocationAreaId = 'location_area_id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Locationareaname_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Locationareaname_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Locationareaname_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Locationareaname_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Locationareaname_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_locationareaname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Locationareaname_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_locationareaname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Locationareaname_Variance_Fields = {
  __typename?: 'pokemon_v2_locationareaname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_locationgameindex" */
export type Pokemon_V2_Locationgameindex = {
  __typename?: 'pokemon_v2_locationgameindex';
  game_index: Scalars['Int']['output'];
  generation_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  location_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_locationgameindex" */
export type Pokemon_V2_Locationgameindex_Aggregate = {
  __typename?: 'pokemon_v2_locationgameindex_aggregate';
  aggregate?: Maybe<Pokemon_V2_Locationgameindex_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Locationgameindex>;
};

/** aggregate fields of "pokemon_v2_locationgameindex" */
export type Pokemon_V2_Locationgameindex_Aggregate_Fields = {
  __typename?: 'pokemon_v2_locationgameindex_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Locationgameindex_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Locationgameindex_Max_Fields>;
  min?: Maybe<Pokemon_V2_Locationgameindex_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Locationgameindex_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Locationgameindex_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Locationgameindex_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Locationgameindex_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Locationgameindex_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Locationgameindex_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Locationgameindex_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_locationgameindex" */
export type Pokemon_V2_Locationgameindex_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Locationgameindex_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Locationgameindex_Avg_Fields = {
  __typename?: 'pokemon_v2_locationgameindex_avg_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_locationgameindex". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Locationgameindex_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Locationgameindex_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Locationgameindex_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Locationgameindex_Bool_Exp>>;
  game_index?: InputMaybe<Int_Comparison_Exp>;
  generation_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  location_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_locationgameindex" */
export enum Pokemon_V2_Locationgameindex_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2LocationgameindexPkey = 'pokemon_v2_locationgameindex_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_locationgameindex" */
export type Pokemon_V2_Locationgameindex_Inc_Input = {
  game_index?: InputMaybe<Scalars['Int']['input']>;
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  location_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_locationgameindex" */
export type Pokemon_V2_Locationgameindex_Insert_Input = {
  game_index?: InputMaybe<Scalars['Int']['input']>;
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  location_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Locationgameindex_Max_Fields = {
  __typename?: 'pokemon_v2_locationgameindex_max_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  location_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Locationgameindex_Min_Fields = {
  __typename?: 'pokemon_v2_locationgameindex_min_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  location_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_locationgameindex" */
export type Pokemon_V2_Locationgameindex_Mutation_Response = {
  __typename?: 'pokemon_v2_locationgameindex_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Locationgameindex>;
};

/** on_conflict condition type for table "pokemon_v2_locationgameindex" */
export type Pokemon_V2_Locationgameindex_On_Conflict = {
  constraint: Pokemon_V2_Locationgameindex_Constraint;
  update_columns?: Array<Pokemon_V2_Locationgameindex_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Locationgameindex_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_locationgameindex". */
export type Pokemon_V2_Locationgameindex_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_locationgameindex */
export type Pokemon_V2_Locationgameindex_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_locationgameindex" */
export enum Pokemon_V2_Locationgameindex_Select_Column {
  /** column name */
  GameIndex = 'game_index',
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  Id = 'id',
  /** column name */
  LocationId = 'location_id'
}

/** input type for updating data in table "pokemon_v2_locationgameindex" */
export type Pokemon_V2_Locationgameindex_Set_Input = {
  game_index?: InputMaybe<Scalars['Int']['input']>;
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  location_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Locationgameindex_Stddev_Fields = {
  __typename?: 'pokemon_v2_locationgameindex_stddev_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Locationgameindex_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_locationgameindex_stddev_pop_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Locationgameindex_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_locationgameindex_stddev_samp_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_locationgameindex" */
export type Pokemon_V2_Locationgameindex_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Locationgameindex_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Locationgameindex_Stream_Cursor_Value_Input = {
  game_index?: InputMaybe<Scalars['Int']['input']>;
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  location_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Locationgameindex_Sum_Fields = {
  __typename?: 'pokemon_v2_locationgameindex_sum_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  location_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_locationgameindex" */
export enum Pokemon_V2_Locationgameindex_Update_Column {
  /** column name */
  GameIndex = 'game_index',
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  Id = 'id',
  /** column name */
  LocationId = 'location_id'
}

export type Pokemon_V2_Locationgameindex_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Locationgameindex_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Locationgameindex_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Locationgameindex_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Locationgameindex_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_locationgameindex_var_pop_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Locationgameindex_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_locationgameindex_var_samp_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Locationgameindex_Variance_Fields = {
  __typename?: 'pokemon_v2_locationgameindex_variance_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_locationname" */
export type Pokemon_V2_Locationname = {
  __typename?: 'pokemon_v2_locationname';
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  location_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_locationname" */
export type Pokemon_V2_Locationname_Aggregate = {
  __typename?: 'pokemon_v2_locationname_aggregate';
  aggregate?: Maybe<Pokemon_V2_Locationname_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Locationname>;
};

/** aggregate fields of "pokemon_v2_locationname" */
export type Pokemon_V2_Locationname_Aggregate_Fields = {
  __typename?: 'pokemon_v2_locationname_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Locationname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Locationname_Max_Fields>;
  min?: Maybe<Pokemon_V2_Locationname_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Locationname_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Locationname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Locationname_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Locationname_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Locationname_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Locationname_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Locationname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_locationname" */
export type Pokemon_V2_Locationname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Locationname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Locationname_Avg_Fields = {
  __typename?: 'pokemon_v2_locationname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_locationname". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Locationname_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Locationname_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Locationname_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Locationname_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  location_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_locationname" */
export enum Pokemon_V2_Locationname_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2LocationnamePkey = 'pokemon_v2_locationname_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_locationname" */
export type Pokemon_V2_Locationname_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  location_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_locationname" */
export type Pokemon_V2_Locationname_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  location_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Locationname_Max_Fields = {
  __typename?: 'pokemon_v2_locationname_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  location_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Locationname_Min_Fields = {
  __typename?: 'pokemon_v2_locationname_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  location_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_locationname" */
export type Pokemon_V2_Locationname_Mutation_Response = {
  __typename?: 'pokemon_v2_locationname_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Locationname>;
};

/** on_conflict condition type for table "pokemon_v2_locationname" */
export type Pokemon_V2_Locationname_On_Conflict = {
  constraint: Pokemon_V2_Locationname_Constraint;
  update_columns?: Array<Pokemon_V2_Locationname_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Locationname_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_locationname". */
export type Pokemon_V2_Locationname_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_locationname */
export type Pokemon_V2_Locationname_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_locationname" */
export enum Pokemon_V2_Locationname_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  LocationId = 'location_id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_locationname" */
export type Pokemon_V2_Locationname_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  location_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Locationname_Stddev_Fields = {
  __typename?: 'pokemon_v2_locationname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Locationname_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_locationname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Locationname_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_locationname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_locationname" */
export type Pokemon_V2_Locationname_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Locationname_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Locationname_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  location_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Locationname_Sum_Fields = {
  __typename?: 'pokemon_v2_locationname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  location_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_locationname" */
export enum Pokemon_V2_Locationname_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  LocationId = 'location_id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Locationname_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Locationname_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Locationname_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Locationname_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Locationname_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_locationname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Locationname_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_locationname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Locationname_Variance_Fields = {
  __typename?: 'pokemon_v2_locationname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_machine" */
export type Pokemon_V2_Machine = {
  __typename?: 'pokemon_v2_machine';
  growth_rate_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  item_id?: Maybe<Scalars['Int']['output']>;
  machine_number: Scalars['Int']['output'];
  move_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_machine" */
export type Pokemon_V2_Machine_Aggregate = {
  __typename?: 'pokemon_v2_machine_aggregate';
  aggregate?: Maybe<Pokemon_V2_Machine_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Machine>;
};

/** aggregate fields of "pokemon_v2_machine" */
export type Pokemon_V2_Machine_Aggregate_Fields = {
  __typename?: 'pokemon_v2_machine_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Machine_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Machine_Max_Fields>;
  min?: Maybe<Pokemon_V2_Machine_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Machine_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Machine_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Machine_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Machine_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Machine_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Machine_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Machine_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_machine" */
export type Pokemon_V2_Machine_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Machine_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Machine_Avg_Fields = {
  __typename?: 'pokemon_v2_machine_avg_fields';
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  machine_number?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_machine". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Machine_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Machine_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Machine_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Machine_Bool_Exp>>;
  growth_rate_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  item_id?: InputMaybe<Int_Comparison_Exp>;
  machine_number?: InputMaybe<Int_Comparison_Exp>;
  move_id?: InputMaybe<Int_Comparison_Exp>;
  version_group_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_machine" */
export enum Pokemon_V2_Machine_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2MachinePkey = 'pokemon_v2_machine_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_machine" */
export type Pokemon_V2_Machine_Inc_Input = {
  growth_rate_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  item_id?: InputMaybe<Scalars['Int']['input']>;
  machine_number?: InputMaybe<Scalars['Int']['input']>;
  move_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_machine" */
export type Pokemon_V2_Machine_Insert_Input = {
  growth_rate_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  item_id?: InputMaybe<Scalars['Int']['input']>;
  machine_number?: InputMaybe<Scalars['Int']['input']>;
  move_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Machine_Max_Fields = {
  __typename?: 'pokemon_v2_machine_max_fields';
  growth_rate_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
  machine_number?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Machine_Min_Fields = {
  __typename?: 'pokemon_v2_machine_min_fields';
  growth_rate_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
  machine_number?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_machine" */
export type Pokemon_V2_Machine_Mutation_Response = {
  __typename?: 'pokemon_v2_machine_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Machine>;
};

/** on_conflict condition type for table "pokemon_v2_machine" */
export type Pokemon_V2_Machine_On_Conflict = {
  constraint: Pokemon_V2_Machine_Constraint;
  update_columns?: Array<Pokemon_V2_Machine_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Machine_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_machine". */
export type Pokemon_V2_Machine_Order_By = {
  growth_rate_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  machine_number?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_machine */
export type Pokemon_V2_Machine_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_machine" */
export enum Pokemon_V2_Machine_Select_Column {
  /** column name */
  GrowthRateId = 'growth_rate_id',
  /** column name */
  Id = 'id',
  /** column name */
  ItemId = 'item_id',
  /** column name */
  MachineNumber = 'machine_number',
  /** column name */
  MoveId = 'move_id',
  /** column name */
  VersionGroupId = 'version_group_id'
}

/** input type for updating data in table "pokemon_v2_machine" */
export type Pokemon_V2_Machine_Set_Input = {
  growth_rate_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  item_id?: InputMaybe<Scalars['Int']['input']>;
  machine_number?: InputMaybe<Scalars['Int']['input']>;
  move_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Machine_Stddev_Fields = {
  __typename?: 'pokemon_v2_machine_stddev_fields';
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  machine_number?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Machine_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_machine_stddev_pop_fields';
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  machine_number?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Machine_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_machine_stddev_samp_fields';
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  machine_number?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_machine" */
export type Pokemon_V2_Machine_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Machine_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Machine_Stream_Cursor_Value_Input = {
  growth_rate_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  item_id?: InputMaybe<Scalars['Int']['input']>;
  machine_number?: InputMaybe<Scalars['Int']['input']>;
  move_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Machine_Sum_Fields = {
  __typename?: 'pokemon_v2_machine_sum_fields';
  growth_rate_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
  machine_number?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_machine" */
export enum Pokemon_V2_Machine_Update_Column {
  /** column name */
  GrowthRateId = 'growth_rate_id',
  /** column name */
  Id = 'id',
  /** column name */
  ItemId = 'item_id',
  /** column name */
  MachineNumber = 'machine_number',
  /** column name */
  MoveId = 'move_id',
  /** column name */
  VersionGroupId = 'version_group_id'
}

export type Pokemon_V2_Machine_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Machine_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Machine_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Machine_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Machine_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_machine_var_pop_fields';
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  machine_number?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Machine_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_machine_var_samp_fields';
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  machine_number?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Machine_Variance_Fields = {
  __typename?: 'pokemon_v2_machine_variance_fields';
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  machine_number?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_move" */
export type Pokemon_V2_Move = {
  __typename?: 'pokemon_v2_move';
  accuracy?: Maybe<Scalars['Int']['output']>;
  contest_effect_id?: Maybe<Scalars['Int']['output']>;
  contest_type_id?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
  move_effect_chance?: Maybe<Scalars['Int']['output']>;
  move_effect_id?: Maybe<Scalars['Int']['output']>;
  move_target_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
  power?: Maybe<Scalars['Int']['output']>;
  pp?: Maybe<Scalars['Int']['output']>;
  priority?: Maybe<Scalars['Int']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_move" */
export type Pokemon_V2_Move_Aggregate = {
  __typename?: 'pokemon_v2_move_aggregate';
  aggregate?: Maybe<Pokemon_V2_Move_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Move>;
};

/** aggregate fields of "pokemon_v2_move" */
export type Pokemon_V2_Move_Aggregate_Fields = {
  __typename?: 'pokemon_v2_move_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Move_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Move_Max_Fields>;
  min?: Maybe<Pokemon_V2_Move_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Move_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Move_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Move_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Move_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Move_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Move_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Move_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_move" */
export type Pokemon_V2_Move_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Move_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Move_Avg_Fields = {
  __typename?: 'pokemon_v2_move_avg_fields';
  accuracy?: Maybe<Scalars['Float']['output']>;
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
  move_effect_chance?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
  power?: Maybe<Scalars['Float']['output']>;
  pp?: Maybe<Scalars['Float']['output']>;
  priority?: Maybe<Scalars['Float']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_move". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Move_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Move_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Move_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Move_Bool_Exp>>;
  accuracy?: InputMaybe<Int_Comparison_Exp>;
  contest_effect_id?: InputMaybe<Int_Comparison_Exp>;
  contest_type_id?: InputMaybe<Int_Comparison_Exp>;
  generation_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  move_damage_class_id?: InputMaybe<Int_Comparison_Exp>;
  move_effect_chance?: InputMaybe<Int_Comparison_Exp>;
  move_effect_id?: InputMaybe<Int_Comparison_Exp>;
  move_target_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  power?: InputMaybe<Int_Comparison_Exp>;
  pp?: InputMaybe<Int_Comparison_Exp>;
  priority?: InputMaybe<Int_Comparison_Exp>;
  super_contest_effect_id?: InputMaybe<Int_Comparison_Exp>;
  type_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_move" */
export enum Pokemon_V2_Move_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2MovePkey = 'pokemon_v2_move_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_move" */
export type Pokemon_V2_Move_Inc_Input = {
  accuracy?: InputMaybe<Scalars['Int']['input']>;
  contest_effect_id?: InputMaybe<Scalars['Int']['input']>;
  contest_type_id?: InputMaybe<Scalars['Int']['input']>;
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  move_damage_class_id?: InputMaybe<Scalars['Int']['input']>;
  move_effect_chance?: InputMaybe<Scalars['Int']['input']>;
  move_effect_id?: InputMaybe<Scalars['Int']['input']>;
  move_target_id?: InputMaybe<Scalars['Int']['input']>;
  power?: InputMaybe<Scalars['Int']['input']>;
  pp?: InputMaybe<Scalars['Int']['input']>;
  priority?: InputMaybe<Scalars['Int']['input']>;
  super_contest_effect_id?: InputMaybe<Scalars['Int']['input']>;
  type_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_move" */
export type Pokemon_V2_Move_Insert_Input = {
  accuracy?: InputMaybe<Scalars['Int']['input']>;
  contest_effect_id?: InputMaybe<Scalars['Int']['input']>;
  contest_type_id?: InputMaybe<Scalars['Int']['input']>;
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  move_damage_class_id?: InputMaybe<Scalars['Int']['input']>;
  move_effect_chance?: InputMaybe<Scalars['Int']['input']>;
  move_effect_id?: InputMaybe<Scalars['Int']['input']>;
  move_target_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  power?: InputMaybe<Scalars['Int']['input']>;
  pp?: InputMaybe<Scalars['Int']['input']>;
  priority?: InputMaybe<Scalars['Int']['input']>;
  super_contest_effect_id?: InputMaybe<Scalars['Int']['input']>;
  type_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Move_Max_Fields = {
  __typename?: 'pokemon_v2_move_max_fields';
  accuracy?: Maybe<Scalars['Int']['output']>;
  contest_effect_id?: Maybe<Scalars['Int']['output']>;
  contest_type_id?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
  move_effect_chance?: Maybe<Scalars['Int']['output']>;
  move_effect_id?: Maybe<Scalars['Int']['output']>;
  move_target_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  power?: Maybe<Scalars['Int']['output']>;
  pp?: Maybe<Scalars['Int']['output']>;
  priority?: Maybe<Scalars['Int']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Move_Min_Fields = {
  __typename?: 'pokemon_v2_move_min_fields';
  accuracy?: Maybe<Scalars['Int']['output']>;
  contest_effect_id?: Maybe<Scalars['Int']['output']>;
  contest_type_id?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
  move_effect_chance?: Maybe<Scalars['Int']['output']>;
  move_effect_id?: Maybe<Scalars['Int']['output']>;
  move_target_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  power?: Maybe<Scalars['Int']['output']>;
  pp?: Maybe<Scalars['Int']['output']>;
  priority?: Maybe<Scalars['Int']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_move" */
export type Pokemon_V2_Move_Mutation_Response = {
  __typename?: 'pokemon_v2_move_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Move>;
};

/** on_conflict condition type for table "pokemon_v2_move" */
export type Pokemon_V2_Move_On_Conflict = {
  constraint: Pokemon_V2_Move_Constraint;
  update_columns?: Array<Pokemon_V2_Move_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Move_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_move". */
export type Pokemon_V2_Move_Order_By = {
  accuracy?: InputMaybe<Order_By>;
  contest_effect_id?: InputMaybe<Order_By>;
  contest_type_id?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
  move_effect_chance?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  move_target_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  power?: InputMaybe<Order_By>;
  pp?: InputMaybe<Order_By>;
  priority?: InputMaybe<Order_By>;
  super_contest_effect_id?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_move */
export type Pokemon_V2_Move_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_move" */
export enum Pokemon_V2_Move_Select_Column {
  /** column name */
  Accuracy = 'accuracy',
  /** column name */
  ContestEffectId = 'contest_effect_id',
  /** column name */
  ContestTypeId = 'contest_type_id',
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  Id = 'id',
  /** column name */
  MoveDamageClassId = 'move_damage_class_id',
  /** column name */
  MoveEffectChance = 'move_effect_chance',
  /** column name */
  MoveEffectId = 'move_effect_id',
  /** column name */
  MoveTargetId = 'move_target_id',
  /** column name */
  Name = 'name',
  /** column name */
  Power = 'power',
  /** column name */
  Pp = 'pp',
  /** column name */
  Priority = 'priority',
  /** column name */
  SuperContestEffectId = 'super_contest_effect_id',
  /** column name */
  TypeId = 'type_id'
}

/** input type for updating data in table "pokemon_v2_move" */
export type Pokemon_V2_Move_Set_Input = {
  accuracy?: InputMaybe<Scalars['Int']['input']>;
  contest_effect_id?: InputMaybe<Scalars['Int']['input']>;
  contest_type_id?: InputMaybe<Scalars['Int']['input']>;
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  move_damage_class_id?: InputMaybe<Scalars['Int']['input']>;
  move_effect_chance?: InputMaybe<Scalars['Int']['input']>;
  move_effect_id?: InputMaybe<Scalars['Int']['input']>;
  move_target_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  power?: InputMaybe<Scalars['Int']['input']>;
  pp?: InputMaybe<Scalars['Int']['input']>;
  priority?: InputMaybe<Scalars['Int']['input']>;
  super_contest_effect_id?: InputMaybe<Scalars['Int']['input']>;
  type_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Move_Stddev_Fields = {
  __typename?: 'pokemon_v2_move_stddev_fields';
  accuracy?: Maybe<Scalars['Float']['output']>;
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
  move_effect_chance?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
  power?: Maybe<Scalars['Float']['output']>;
  pp?: Maybe<Scalars['Float']['output']>;
  priority?: Maybe<Scalars['Float']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Move_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_move_stddev_pop_fields';
  accuracy?: Maybe<Scalars['Float']['output']>;
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
  move_effect_chance?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
  power?: Maybe<Scalars['Float']['output']>;
  pp?: Maybe<Scalars['Float']['output']>;
  priority?: Maybe<Scalars['Float']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Move_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_move_stddev_samp_fields';
  accuracy?: Maybe<Scalars['Float']['output']>;
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
  move_effect_chance?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
  power?: Maybe<Scalars['Float']['output']>;
  pp?: Maybe<Scalars['Float']['output']>;
  priority?: Maybe<Scalars['Float']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_move" */
export type Pokemon_V2_Move_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Move_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Move_Stream_Cursor_Value_Input = {
  accuracy?: InputMaybe<Scalars['Int']['input']>;
  contest_effect_id?: InputMaybe<Scalars['Int']['input']>;
  contest_type_id?: InputMaybe<Scalars['Int']['input']>;
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  move_damage_class_id?: InputMaybe<Scalars['Int']['input']>;
  move_effect_chance?: InputMaybe<Scalars['Int']['input']>;
  move_effect_id?: InputMaybe<Scalars['Int']['input']>;
  move_target_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  power?: InputMaybe<Scalars['Int']['input']>;
  pp?: InputMaybe<Scalars['Int']['input']>;
  priority?: InputMaybe<Scalars['Int']['input']>;
  super_contest_effect_id?: InputMaybe<Scalars['Int']['input']>;
  type_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Move_Sum_Fields = {
  __typename?: 'pokemon_v2_move_sum_fields';
  accuracy?: Maybe<Scalars['Int']['output']>;
  contest_effect_id?: Maybe<Scalars['Int']['output']>;
  contest_type_id?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
  move_effect_chance?: Maybe<Scalars['Int']['output']>;
  move_effect_id?: Maybe<Scalars['Int']['output']>;
  move_target_id?: Maybe<Scalars['Int']['output']>;
  power?: Maybe<Scalars['Int']['output']>;
  pp?: Maybe<Scalars['Int']['output']>;
  priority?: Maybe<Scalars['Int']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_move" */
export enum Pokemon_V2_Move_Update_Column {
  /** column name */
  Accuracy = 'accuracy',
  /** column name */
  ContestEffectId = 'contest_effect_id',
  /** column name */
  ContestTypeId = 'contest_type_id',
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  Id = 'id',
  /** column name */
  MoveDamageClassId = 'move_damage_class_id',
  /** column name */
  MoveEffectChance = 'move_effect_chance',
  /** column name */
  MoveEffectId = 'move_effect_id',
  /** column name */
  MoveTargetId = 'move_target_id',
  /** column name */
  Name = 'name',
  /** column name */
  Power = 'power',
  /** column name */
  Pp = 'pp',
  /** column name */
  Priority = 'priority',
  /** column name */
  SuperContestEffectId = 'super_contest_effect_id',
  /** column name */
  TypeId = 'type_id'
}

export type Pokemon_V2_Move_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Move_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Move_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Move_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Move_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_move_var_pop_fields';
  accuracy?: Maybe<Scalars['Float']['output']>;
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
  move_effect_chance?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
  power?: Maybe<Scalars['Float']['output']>;
  pp?: Maybe<Scalars['Float']['output']>;
  priority?: Maybe<Scalars['Float']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Move_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_move_var_samp_fields';
  accuracy?: Maybe<Scalars['Float']['output']>;
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
  move_effect_chance?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
  power?: Maybe<Scalars['Float']['output']>;
  pp?: Maybe<Scalars['Float']['output']>;
  priority?: Maybe<Scalars['Float']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Move_Variance_Fields = {
  __typename?: 'pokemon_v2_move_variance_fields';
  accuracy?: Maybe<Scalars['Float']['output']>;
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
  move_effect_chance?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
  power?: Maybe<Scalars['Float']['output']>;
  pp?: Maybe<Scalars['Float']['output']>;
  priority?: Maybe<Scalars['Float']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_moveattribute" */
export type Pokemon_V2_Moveattribute = {
  __typename?: 'pokemon_v2_moveattribute';
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_moveattribute" */
export type Pokemon_V2_Moveattribute_Aggregate = {
  __typename?: 'pokemon_v2_moveattribute_aggregate';
  aggregate?: Maybe<Pokemon_V2_Moveattribute_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Moveattribute>;
};

/** aggregate fields of "pokemon_v2_moveattribute" */
export type Pokemon_V2_Moveattribute_Aggregate_Fields = {
  __typename?: 'pokemon_v2_moveattribute_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Moveattribute_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Moveattribute_Max_Fields>;
  min?: Maybe<Pokemon_V2_Moveattribute_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Moveattribute_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Moveattribute_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Moveattribute_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Moveattribute_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Moveattribute_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Moveattribute_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Moveattribute_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_moveattribute" */
export type Pokemon_V2_Moveattribute_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Moveattribute_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Moveattribute_Avg_Fields = {
  __typename?: 'pokemon_v2_moveattribute_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_moveattribute". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Moveattribute_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Moveattribute_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Moveattribute_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Moveattribute_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_moveattribute" */
export enum Pokemon_V2_Moveattribute_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2MoveattributePkey = 'pokemon_v2_moveattribute_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_moveattribute" */
export type Pokemon_V2_Moveattribute_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_moveattribute" */
export type Pokemon_V2_Moveattribute_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Moveattribute_Max_Fields = {
  __typename?: 'pokemon_v2_moveattribute_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Moveattribute_Min_Fields = {
  __typename?: 'pokemon_v2_moveattribute_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_moveattribute" */
export type Pokemon_V2_Moveattribute_Mutation_Response = {
  __typename?: 'pokemon_v2_moveattribute_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Moveattribute>;
};

/** on_conflict condition type for table "pokemon_v2_moveattribute" */
export type Pokemon_V2_Moveattribute_On_Conflict = {
  constraint: Pokemon_V2_Moveattribute_Constraint;
  update_columns?: Array<Pokemon_V2_Moveattribute_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Moveattribute_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_moveattribute". */
export type Pokemon_V2_Moveattribute_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_moveattribute */
export type Pokemon_V2_Moveattribute_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_moveattribute" */
export enum Pokemon_V2_Moveattribute_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_moveattribute" */
export type Pokemon_V2_Moveattribute_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Moveattribute_Stddev_Fields = {
  __typename?: 'pokemon_v2_moveattribute_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Moveattribute_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_moveattribute_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Moveattribute_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_moveattribute_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_moveattribute" */
export type Pokemon_V2_Moveattribute_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Moveattribute_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Moveattribute_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Moveattribute_Sum_Fields = {
  __typename?: 'pokemon_v2_moveattribute_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_moveattribute" */
export enum Pokemon_V2_Moveattribute_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Moveattribute_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Moveattribute_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Moveattribute_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Moveattribute_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Moveattribute_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_moveattribute_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Moveattribute_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_moveattribute_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Moveattribute_Variance_Fields = {
  __typename?: 'pokemon_v2_moveattribute_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_moveattributedescription" */
export type Pokemon_V2_Moveattributedescription = {
  __typename?: 'pokemon_v2_moveattributedescription';
  description: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  move_attribute_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_moveattributedescription" */
export type Pokemon_V2_Moveattributedescription_Aggregate = {
  __typename?: 'pokemon_v2_moveattributedescription_aggregate';
  aggregate?: Maybe<Pokemon_V2_Moveattributedescription_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Moveattributedescription>;
};

/** aggregate fields of "pokemon_v2_moveattributedescription" */
export type Pokemon_V2_Moveattributedescription_Aggregate_Fields = {
  __typename?: 'pokemon_v2_moveattributedescription_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Moveattributedescription_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Moveattributedescription_Max_Fields>;
  min?: Maybe<Pokemon_V2_Moveattributedescription_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Moveattributedescription_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Moveattributedescription_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Moveattributedescription_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Moveattributedescription_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Moveattributedescription_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Moveattributedescription_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Moveattributedescription_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_moveattributedescription" */
export type Pokemon_V2_Moveattributedescription_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Moveattributedescription_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Moveattributedescription_Avg_Fields = {
  __typename?: 'pokemon_v2_moveattributedescription_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_moveattributedescription". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Moveattributedescription_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Moveattributedescription_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Moveattributedescription_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Moveattributedescription_Bool_Exp>>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  move_attribute_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_moveattributedescription" */
export enum Pokemon_V2_Moveattributedescription_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2MoveattributedescriptionPkey = 'pokemon_v2_moveattributedescription_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_moveattributedescription" */
export type Pokemon_V2_Moveattributedescription_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_attribute_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_moveattributedescription" */
export type Pokemon_V2_Moveattributedescription_Insert_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_attribute_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Moveattributedescription_Max_Fields = {
  __typename?: 'pokemon_v2_moveattributedescription_max_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_attribute_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Moveattributedescription_Min_Fields = {
  __typename?: 'pokemon_v2_moveattributedescription_min_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_attribute_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_moveattributedescription" */
export type Pokemon_V2_Moveattributedescription_Mutation_Response = {
  __typename?: 'pokemon_v2_moveattributedescription_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Moveattributedescription>;
};

/** on_conflict condition type for table "pokemon_v2_moveattributedescription" */
export type Pokemon_V2_Moveattributedescription_On_Conflict = {
  constraint: Pokemon_V2_Moveattributedescription_Constraint;
  update_columns?: Array<Pokemon_V2_Moveattributedescription_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Moveattributedescription_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_moveattributedescription". */
export type Pokemon_V2_Moveattributedescription_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_attribute_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_moveattributedescription */
export type Pokemon_V2_Moveattributedescription_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_moveattributedescription" */
export enum Pokemon_V2_Moveattributedescription_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveAttributeId = 'move_attribute_id'
}

/** input type for updating data in table "pokemon_v2_moveattributedescription" */
export type Pokemon_V2_Moveattributedescription_Set_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_attribute_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Moveattributedescription_Stddev_Fields = {
  __typename?: 'pokemon_v2_moveattributedescription_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Moveattributedescription_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_moveattributedescription_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Moveattributedescription_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_moveattributedescription_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_moveattributedescription" */
export type Pokemon_V2_Moveattributedescription_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Moveattributedescription_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Moveattributedescription_Stream_Cursor_Value_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_attribute_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Moveattributedescription_Sum_Fields = {
  __typename?: 'pokemon_v2_moveattributedescription_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_attribute_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_moveattributedescription" */
export enum Pokemon_V2_Moveattributedescription_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveAttributeId = 'move_attribute_id'
}

export type Pokemon_V2_Moveattributedescription_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Moveattributedescription_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Moveattributedescription_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Moveattributedescription_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Moveattributedescription_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_moveattributedescription_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Moveattributedescription_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_moveattributedescription_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Moveattributedescription_Variance_Fields = {
  __typename?: 'pokemon_v2_moveattributedescription_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_moveattributemap" */
export type Pokemon_V2_Moveattributemap = {
  __typename?: 'pokemon_v2_moveattributemap';
  id: Scalars['Int']['output'];
  move_attribute_id?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_moveattributemap" */
export type Pokemon_V2_Moveattributemap_Aggregate = {
  __typename?: 'pokemon_v2_moveattributemap_aggregate';
  aggregate?: Maybe<Pokemon_V2_Moveattributemap_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Moveattributemap>;
};

/** aggregate fields of "pokemon_v2_moveattributemap" */
export type Pokemon_V2_Moveattributemap_Aggregate_Fields = {
  __typename?: 'pokemon_v2_moveattributemap_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Moveattributemap_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Moveattributemap_Max_Fields>;
  min?: Maybe<Pokemon_V2_Moveattributemap_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Moveattributemap_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Moveattributemap_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Moveattributemap_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Moveattributemap_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Moveattributemap_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Moveattributemap_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Moveattributemap_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_moveattributemap" */
export type Pokemon_V2_Moveattributemap_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Moveattributemap_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Moveattributemap_Avg_Fields = {
  __typename?: 'pokemon_v2_moveattributemap_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_moveattributemap". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Moveattributemap_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Moveattributemap_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Moveattributemap_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Moveattributemap_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  move_attribute_id?: InputMaybe<Int_Comparison_Exp>;
  move_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_moveattributemap" */
export enum Pokemon_V2_Moveattributemap_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2MoveattributemapPkey = 'pokemon_v2_moveattributemap_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_moveattributemap" */
export type Pokemon_V2_Moveattributemap_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  move_attribute_id?: InputMaybe<Scalars['Int']['input']>;
  move_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_moveattributemap" */
export type Pokemon_V2_Moveattributemap_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  move_attribute_id?: InputMaybe<Scalars['Int']['input']>;
  move_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Moveattributemap_Max_Fields = {
  __typename?: 'pokemon_v2_moveattributemap_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  move_attribute_id?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Moveattributemap_Min_Fields = {
  __typename?: 'pokemon_v2_moveattributemap_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  move_attribute_id?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_moveattributemap" */
export type Pokemon_V2_Moveattributemap_Mutation_Response = {
  __typename?: 'pokemon_v2_moveattributemap_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Moveattributemap>;
};

/** on_conflict condition type for table "pokemon_v2_moveattributemap" */
export type Pokemon_V2_Moveattributemap_On_Conflict = {
  constraint: Pokemon_V2_Moveattributemap_Constraint;
  update_columns?: Array<Pokemon_V2_Moveattributemap_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Moveattributemap_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_moveattributemap". */
export type Pokemon_V2_Moveattributemap_Order_By = {
  id?: InputMaybe<Order_By>;
  move_attribute_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_moveattributemap */
export type Pokemon_V2_Moveattributemap_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_moveattributemap" */
export enum Pokemon_V2_Moveattributemap_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  MoveAttributeId = 'move_attribute_id',
  /** column name */
  MoveId = 'move_id'
}

/** input type for updating data in table "pokemon_v2_moveattributemap" */
export type Pokemon_V2_Moveattributemap_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  move_attribute_id?: InputMaybe<Scalars['Int']['input']>;
  move_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Moveattributemap_Stddev_Fields = {
  __typename?: 'pokemon_v2_moveattributemap_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Moveattributemap_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_moveattributemap_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Moveattributemap_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_moveattributemap_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_moveattributemap" */
export type Pokemon_V2_Moveattributemap_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Moveattributemap_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Moveattributemap_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  move_attribute_id?: InputMaybe<Scalars['Int']['input']>;
  move_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Moveattributemap_Sum_Fields = {
  __typename?: 'pokemon_v2_moveattributemap_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  move_attribute_id?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_moveattributemap" */
export enum Pokemon_V2_Moveattributemap_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  MoveAttributeId = 'move_attribute_id',
  /** column name */
  MoveId = 'move_id'
}

export type Pokemon_V2_Moveattributemap_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Moveattributemap_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Moveattributemap_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Moveattributemap_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Moveattributemap_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_moveattributemap_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Moveattributemap_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_moveattributemap_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Moveattributemap_Variance_Fields = {
  __typename?: 'pokemon_v2_moveattributemap_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_moveattributename" */
export type Pokemon_V2_Moveattributename = {
  __typename?: 'pokemon_v2_moveattributename';
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  move_attribute_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_moveattributename" */
export type Pokemon_V2_Moveattributename_Aggregate = {
  __typename?: 'pokemon_v2_moveattributename_aggregate';
  aggregate?: Maybe<Pokemon_V2_Moveattributename_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Moveattributename>;
};

/** aggregate fields of "pokemon_v2_moveattributename" */
export type Pokemon_V2_Moveattributename_Aggregate_Fields = {
  __typename?: 'pokemon_v2_moveattributename_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Moveattributename_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Moveattributename_Max_Fields>;
  min?: Maybe<Pokemon_V2_Moveattributename_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Moveattributename_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Moveattributename_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Moveattributename_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Moveattributename_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Moveattributename_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Moveattributename_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Moveattributename_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_moveattributename" */
export type Pokemon_V2_Moveattributename_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Moveattributename_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Moveattributename_Avg_Fields = {
  __typename?: 'pokemon_v2_moveattributename_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_moveattributename". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Moveattributename_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Moveattributename_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Moveattributename_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Moveattributename_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  move_attribute_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_moveattributename" */
export enum Pokemon_V2_Moveattributename_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2MoveattributenamePkey = 'pokemon_v2_moveattributename_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_moveattributename" */
export type Pokemon_V2_Moveattributename_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_attribute_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_moveattributename" */
export type Pokemon_V2_Moveattributename_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_attribute_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Moveattributename_Max_Fields = {
  __typename?: 'pokemon_v2_moveattributename_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_attribute_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Moveattributename_Min_Fields = {
  __typename?: 'pokemon_v2_moveattributename_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_attribute_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_moveattributename" */
export type Pokemon_V2_Moveattributename_Mutation_Response = {
  __typename?: 'pokemon_v2_moveattributename_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Moveattributename>;
};

/** on_conflict condition type for table "pokemon_v2_moveattributename" */
export type Pokemon_V2_Moveattributename_On_Conflict = {
  constraint: Pokemon_V2_Moveattributename_Constraint;
  update_columns?: Array<Pokemon_V2_Moveattributename_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Moveattributename_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_moveattributename". */
export type Pokemon_V2_Moveattributename_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_attribute_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_moveattributename */
export type Pokemon_V2_Moveattributename_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_moveattributename" */
export enum Pokemon_V2_Moveattributename_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveAttributeId = 'move_attribute_id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_moveattributename" */
export type Pokemon_V2_Moveattributename_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_attribute_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Moveattributename_Stddev_Fields = {
  __typename?: 'pokemon_v2_moveattributename_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Moveattributename_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_moveattributename_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Moveattributename_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_moveattributename_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_moveattributename" */
export type Pokemon_V2_Moveattributename_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Moveattributename_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Moveattributename_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_attribute_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Moveattributename_Sum_Fields = {
  __typename?: 'pokemon_v2_moveattributename_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_attribute_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_moveattributename" */
export enum Pokemon_V2_Moveattributename_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveAttributeId = 'move_attribute_id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Moveattributename_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Moveattributename_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Moveattributename_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Moveattributename_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Moveattributename_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_moveattributename_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Moveattributename_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_moveattributename_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Moveattributename_Variance_Fields = {
  __typename?: 'pokemon_v2_moveattributename_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_movebattlestyle" */
export type Pokemon_V2_Movebattlestyle = {
  __typename?: 'pokemon_v2_movebattlestyle';
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_movebattlestyle" */
export type Pokemon_V2_Movebattlestyle_Aggregate = {
  __typename?: 'pokemon_v2_movebattlestyle_aggregate';
  aggregate?: Maybe<Pokemon_V2_Movebattlestyle_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Movebattlestyle>;
};

/** aggregate fields of "pokemon_v2_movebattlestyle" */
export type Pokemon_V2_Movebattlestyle_Aggregate_Fields = {
  __typename?: 'pokemon_v2_movebattlestyle_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Movebattlestyle_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Movebattlestyle_Max_Fields>;
  min?: Maybe<Pokemon_V2_Movebattlestyle_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Movebattlestyle_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Movebattlestyle_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Movebattlestyle_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Movebattlestyle_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Movebattlestyle_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Movebattlestyle_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Movebattlestyle_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movebattlestyle" */
export type Pokemon_V2_Movebattlestyle_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Movebattlestyle_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Movebattlestyle_Avg_Fields = {
  __typename?: 'pokemon_v2_movebattlestyle_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movebattlestyle". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Movebattlestyle_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Movebattlestyle_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Movebattlestyle_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Movebattlestyle_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_movebattlestyle" */
export enum Pokemon_V2_Movebattlestyle_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2MovebattlestylePkey = 'pokemon_v2_movebattlestyle_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_movebattlestyle" */
export type Pokemon_V2_Movebattlestyle_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_movebattlestyle" */
export type Pokemon_V2_Movebattlestyle_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Movebattlestyle_Max_Fields = {
  __typename?: 'pokemon_v2_movebattlestyle_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Movebattlestyle_Min_Fields = {
  __typename?: 'pokemon_v2_movebattlestyle_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_movebattlestyle" */
export type Pokemon_V2_Movebattlestyle_Mutation_Response = {
  __typename?: 'pokemon_v2_movebattlestyle_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Movebattlestyle>;
};

/** on_conflict condition type for table "pokemon_v2_movebattlestyle" */
export type Pokemon_V2_Movebattlestyle_On_Conflict = {
  constraint: Pokemon_V2_Movebattlestyle_Constraint;
  update_columns?: Array<Pokemon_V2_Movebattlestyle_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Movebattlestyle_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_movebattlestyle". */
export type Pokemon_V2_Movebattlestyle_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_movebattlestyle */
export type Pokemon_V2_Movebattlestyle_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_movebattlestyle" */
export enum Pokemon_V2_Movebattlestyle_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_movebattlestyle" */
export type Pokemon_V2_Movebattlestyle_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Movebattlestyle_Stddev_Fields = {
  __typename?: 'pokemon_v2_movebattlestyle_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Movebattlestyle_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_movebattlestyle_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Movebattlestyle_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_movebattlestyle_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_movebattlestyle" */
export type Pokemon_V2_Movebattlestyle_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Movebattlestyle_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Movebattlestyle_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Movebattlestyle_Sum_Fields = {
  __typename?: 'pokemon_v2_movebattlestyle_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_movebattlestyle" */
export enum Pokemon_V2_Movebattlestyle_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Movebattlestyle_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Movebattlestyle_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Movebattlestyle_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Movebattlestyle_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Movebattlestyle_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_movebattlestyle_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Movebattlestyle_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_movebattlestyle_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Movebattlestyle_Variance_Fields = {
  __typename?: 'pokemon_v2_movebattlestyle_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_movebattlestylename" */
export type Pokemon_V2_Movebattlestylename = {
  __typename?: 'pokemon_v2_movebattlestylename';
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  move_battle_style_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_movebattlestylename" */
export type Pokemon_V2_Movebattlestylename_Aggregate = {
  __typename?: 'pokemon_v2_movebattlestylename_aggregate';
  aggregate?: Maybe<Pokemon_V2_Movebattlestylename_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Movebattlestylename>;
};

/** aggregate fields of "pokemon_v2_movebattlestylename" */
export type Pokemon_V2_Movebattlestylename_Aggregate_Fields = {
  __typename?: 'pokemon_v2_movebattlestylename_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Movebattlestylename_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Movebattlestylename_Max_Fields>;
  min?: Maybe<Pokemon_V2_Movebattlestylename_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Movebattlestylename_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Movebattlestylename_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Movebattlestylename_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Movebattlestylename_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Movebattlestylename_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Movebattlestylename_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Movebattlestylename_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movebattlestylename" */
export type Pokemon_V2_Movebattlestylename_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Movebattlestylename_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Movebattlestylename_Avg_Fields = {
  __typename?: 'pokemon_v2_movebattlestylename_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_battle_style_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movebattlestylename". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Movebattlestylename_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Movebattlestylename_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Movebattlestylename_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Movebattlestylename_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  move_battle_style_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_movebattlestylename" */
export enum Pokemon_V2_Movebattlestylename_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2MovebattlestylenamePkey = 'pokemon_v2_movebattlestylename_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_movebattlestylename" */
export type Pokemon_V2_Movebattlestylename_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_battle_style_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_movebattlestylename" */
export type Pokemon_V2_Movebattlestylename_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_battle_style_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Movebattlestylename_Max_Fields = {
  __typename?: 'pokemon_v2_movebattlestylename_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_battle_style_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Movebattlestylename_Min_Fields = {
  __typename?: 'pokemon_v2_movebattlestylename_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_battle_style_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_movebattlestylename" */
export type Pokemon_V2_Movebattlestylename_Mutation_Response = {
  __typename?: 'pokemon_v2_movebattlestylename_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Movebattlestylename>;
};

/** on_conflict condition type for table "pokemon_v2_movebattlestylename" */
export type Pokemon_V2_Movebattlestylename_On_Conflict = {
  constraint: Pokemon_V2_Movebattlestylename_Constraint;
  update_columns?: Array<Pokemon_V2_Movebattlestylename_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Movebattlestylename_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_movebattlestylename". */
export type Pokemon_V2_Movebattlestylename_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_battle_style_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_movebattlestylename */
export type Pokemon_V2_Movebattlestylename_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_movebattlestylename" */
export enum Pokemon_V2_Movebattlestylename_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveBattleStyleId = 'move_battle_style_id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_movebattlestylename" */
export type Pokemon_V2_Movebattlestylename_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_battle_style_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Movebattlestylename_Stddev_Fields = {
  __typename?: 'pokemon_v2_movebattlestylename_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_battle_style_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Movebattlestylename_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_movebattlestylename_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_battle_style_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Movebattlestylename_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_movebattlestylename_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_battle_style_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_movebattlestylename" */
export type Pokemon_V2_Movebattlestylename_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Movebattlestylename_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Movebattlestylename_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_battle_style_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Movebattlestylename_Sum_Fields = {
  __typename?: 'pokemon_v2_movebattlestylename_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_battle_style_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_movebattlestylename" */
export enum Pokemon_V2_Movebattlestylename_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveBattleStyleId = 'move_battle_style_id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Movebattlestylename_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Movebattlestylename_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Movebattlestylename_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Movebattlestylename_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Movebattlestylename_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_movebattlestylename_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_battle_style_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Movebattlestylename_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_movebattlestylename_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_battle_style_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Movebattlestylename_Variance_Fields = {
  __typename?: 'pokemon_v2_movebattlestylename_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_battle_style_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_movechange" */
export type Pokemon_V2_Movechange = {
  __typename?: 'pokemon_v2_movechange';
  accuracy?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  move_effect_chance?: Maybe<Scalars['Int']['output']>;
  move_effect_id?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  power?: Maybe<Scalars['Int']['output']>;
  pp?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_movechange" */
export type Pokemon_V2_Movechange_Aggregate = {
  __typename?: 'pokemon_v2_movechange_aggregate';
  aggregate?: Maybe<Pokemon_V2_Movechange_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Movechange>;
};

/** aggregate fields of "pokemon_v2_movechange" */
export type Pokemon_V2_Movechange_Aggregate_Fields = {
  __typename?: 'pokemon_v2_movechange_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Movechange_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Movechange_Max_Fields>;
  min?: Maybe<Pokemon_V2_Movechange_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Movechange_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Movechange_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Movechange_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Movechange_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Movechange_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Movechange_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Movechange_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movechange" */
export type Pokemon_V2_Movechange_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Movechange_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Movechange_Avg_Fields = {
  __typename?: 'pokemon_v2_movechange_avg_fields';
  accuracy?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_effect_chance?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  power?: Maybe<Scalars['Float']['output']>;
  pp?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movechange". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Movechange_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Movechange_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Movechange_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Movechange_Bool_Exp>>;
  accuracy?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  move_effect_chance?: InputMaybe<Int_Comparison_Exp>;
  move_effect_id?: InputMaybe<Int_Comparison_Exp>;
  move_id?: InputMaybe<Int_Comparison_Exp>;
  power?: InputMaybe<Int_Comparison_Exp>;
  pp?: InputMaybe<Int_Comparison_Exp>;
  type_id?: InputMaybe<Int_Comparison_Exp>;
  version_group_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_movechange" */
export enum Pokemon_V2_Movechange_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2MovechangePkey = 'pokemon_v2_movechange_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_movechange" */
export type Pokemon_V2_Movechange_Inc_Input = {
  accuracy?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  move_effect_chance?: InputMaybe<Scalars['Int']['input']>;
  move_effect_id?: InputMaybe<Scalars['Int']['input']>;
  move_id?: InputMaybe<Scalars['Int']['input']>;
  power?: InputMaybe<Scalars['Int']['input']>;
  pp?: InputMaybe<Scalars['Int']['input']>;
  type_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_movechange" */
export type Pokemon_V2_Movechange_Insert_Input = {
  accuracy?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  move_effect_chance?: InputMaybe<Scalars['Int']['input']>;
  move_effect_id?: InputMaybe<Scalars['Int']['input']>;
  move_id?: InputMaybe<Scalars['Int']['input']>;
  power?: InputMaybe<Scalars['Int']['input']>;
  pp?: InputMaybe<Scalars['Int']['input']>;
  type_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Movechange_Max_Fields = {
  __typename?: 'pokemon_v2_movechange_max_fields';
  accuracy?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  move_effect_chance?: Maybe<Scalars['Int']['output']>;
  move_effect_id?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  power?: Maybe<Scalars['Int']['output']>;
  pp?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Movechange_Min_Fields = {
  __typename?: 'pokemon_v2_movechange_min_fields';
  accuracy?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  move_effect_chance?: Maybe<Scalars['Int']['output']>;
  move_effect_id?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  power?: Maybe<Scalars['Int']['output']>;
  pp?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_movechange" */
export type Pokemon_V2_Movechange_Mutation_Response = {
  __typename?: 'pokemon_v2_movechange_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Movechange>;
};

/** on_conflict condition type for table "pokemon_v2_movechange" */
export type Pokemon_V2_Movechange_On_Conflict = {
  constraint: Pokemon_V2_Movechange_Constraint;
  update_columns?: Array<Pokemon_V2_Movechange_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Movechange_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_movechange". */
export type Pokemon_V2_Movechange_Order_By = {
  accuracy?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_effect_chance?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  power?: InputMaybe<Order_By>;
  pp?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_movechange */
export type Pokemon_V2_Movechange_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_movechange" */
export enum Pokemon_V2_Movechange_Select_Column {
  /** column name */
  Accuracy = 'accuracy',
  /** column name */
  Id = 'id',
  /** column name */
  MoveEffectChance = 'move_effect_chance',
  /** column name */
  MoveEffectId = 'move_effect_id',
  /** column name */
  MoveId = 'move_id',
  /** column name */
  Power = 'power',
  /** column name */
  Pp = 'pp',
  /** column name */
  TypeId = 'type_id',
  /** column name */
  VersionGroupId = 'version_group_id'
}

/** input type for updating data in table "pokemon_v2_movechange" */
export type Pokemon_V2_Movechange_Set_Input = {
  accuracy?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  move_effect_chance?: InputMaybe<Scalars['Int']['input']>;
  move_effect_id?: InputMaybe<Scalars['Int']['input']>;
  move_id?: InputMaybe<Scalars['Int']['input']>;
  power?: InputMaybe<Scalars['Int']['input']>;
  pp?: InputMaybe<Scalars['Int']['input']>;
  type_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Movechange_Stddev_Fields = {
  __typename?: 'pokemon_v2_movechange_stddev_fields';
  accuracy?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_effect_chance?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  power?: Maybe<Scalars['Float']['output']>;
  pp?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Movechange_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_movechange_stddev_pop_fields';
  accuracy?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_effect_chance?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  power?: Maybe<Scalars['Float']['output']>;
  pp?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Movechange_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_movechange_stddev_samp_fields';
  accuracy?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_effect_chance?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  power?: Maybe<Scalars['Float']['output']>;
  pp?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_movechange" */
export type Pokemon_V2_Movechange_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Movechange_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Movechange_Stream_Cursor_Value_Input = {
  accuracy?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  move_effect_chance?: InputMaybe<Scalars['Int']['input']>;
  move_effect_id?: InputMaybe<Scalars['Int']['input']>;
  move_id?: InputMaybe<Scalars['Int']['input']>;
  power?: InputMaybe<Scalars['Int']['input']>;
  pp?: InputMaybe<Scalars['Int']['input']>;
  type_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Movechange_Sum_Fields = {
  __typename?: 'pokemon_v2_movechange_sum_fields';
  accuracy?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  move_effect_chance?: Maybe<Scalars['Int']['output']>;
  move_effect_id?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  power?: Maybe<Scalars['Int']['output']>;
  pp?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_movechange" */
export enum Pokemon_V2_Movechange_Update_Column {
  /** column name */
  Accuracy = 'accuracy',
  /** column name */
  Id = 'id',
  /** column name */
  MoveEffectChance = 'move_effect_chance',
  /** column name */
  MoveEffectId = 'move_effect_id',
  /** column name */
  MoveId = 'move_id',
  /** column name */
  Power = 'power',
  /** column name */
  Pp = 'pp',
  /** column name */
  TypeId = 'type_id',
  /** column name */
  VersionGroupId = 'version_group_id'
}

export type Pokemon_V2_Movechange_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Movechange_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Movechange_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Movechange_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Movechange_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_movechange_var_pop_fields';
  accuracy?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_effect_chance?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  power?: Maybe<Scalars['Float']['output']>;
  pp?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Movechange_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_movechange_var_samp_fields';
  accuracy?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_effect_chance?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  power?: Maybe<Scalars['Float']['output']>;
  pp?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Movechange_Variance_Fields = {
  __typename?: 'pokemon_v2_movechange_variance_fields';
  accuracy?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_effect_chance?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  power?: Maybe<Scalars['Float']['output']>;
  pp?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_movedamageclass" */
export type Pokemon_V2_Movedamageclass = {
  __typename?: 'pokemon_v2_movedamageclass';
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_movedamageclass" */
export type Pokemon_V2_Movedamageclass_Aggregate = {
  __typename?: 'pokemon_v2_movedamageclass_aggregate';
  aggregate?: Maybe<Pokemon_V2_Movedamageclass_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Movedamageclass>;
};

/** aggregate fields of "pokemon_v2_movedamageclass" */
export type Pokemon_V2_Movedamageclass_Aggregate_Fields = {
  __typename?: 'pokemon_v2_movedamageclass_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Movedamageclass_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Movedamageclass_Max_Fields>;
  min?: Maybe<Pokemon_V2_Movedamageclass_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Movedamageclass_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Movedamageclass_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Movedamageclass_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Movedamageclass_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Movedamageclass_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Movedamageclass_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Movedamageclass_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movedamageclass" */
export type Pokemon_V2_Movedamageclass_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Movedamageclass_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Movedamageclass_Avg_Fields = {
  __typename?: 'pokemon_v2_movedamageclass_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movedamageclass". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Movedamageclass_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Movedamageclass_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Movedamageclass_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Movedamageclass_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_movedamageclass" */
export enum Pokemon_V2_Movedamageclass_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2MovedamageclassPkey = 'pokemon_v2_movedamageclass_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_movedamageclass" */
export type Pokemon_V2_Movedamageclass_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_movedamageclass" */
export type Pokemon_V2_Movedamageclass_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Movedamageclass_Max_Fields = {
  __typename?: 'pokemon_v2_movedamageclass_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Movedamageclass_Min_Fields = {
  __typename?: 'pokemon_v2_movedamageclass_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_movedamageclass" */
export type Pokemon_V2_Movedamageclass_Mutation_Response = {
  __typename?: 'pokemon_v2_movedamageclass_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Movedamageclass>;
};

/** on_conflict condition type for table "pokemon_v2_movedamageclass" */
export type Pokemon_V2_Movedamageclass_On_Conflict = {
  constraint: Pokemon_V2_Movedamageclass_Constraint;
  update_columns?: Array<Pokemon_V2_Movedamageclass_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Movedamageclass_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_movedamageclass". */
export type Pokemon_V2_Movedamageclass_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_movedamageclass */
export type Pokemon_V2_Movedamageclass_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_movedamageclass" */
export enum Pokemon_V2_Movedamageclass_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_movedamageclass" */
export type Pokemon_V2_Movedamageclass_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Movedamageclass_Stddev_Fields = {
  __typename?: 'pokemon_v2_movedamageclass_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Movedamageclass_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_movedamageclass_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Movedamageclass_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_movedamageclass_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_movedamageclass" */
export type Pokemon_V2_Movedamageclass_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Movedamageclass_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Movedamageclass_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Movedamageclass_Sum_Fields = {
  __typename?: 'pokemon_v2_movedamageclass_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_movedamageclass" */
export enum Pokemon_V2_Movedamageclass_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Movedamageclass_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Movedamageclass_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Movedamageclass_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Movedamageclass_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Movedamageclass_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_movedamageclass_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Movedamageclass_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_movedamageclass_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Movedamageclass_Variance_Fields = {
  __typename?: 'pokemon_v2_movedamageclass_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_movedamageclassdescription" */
export type Pokemon_V2_Movedamageclassdescription = {
  __typename?: 'pokemon_v2_movedamageclassdescription';
  description: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_movedamageclassdescription" */
export type Pokemon_V2_Movedamageclassdescription_Aggregate = {
  __typename?: 'pokemon_v2_movedamageclassdescription_aggregate';
  aggregate?: Maybe<Pokemon_V2_Movedamageclassdescription_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Movedamageclassdescription>;
};

/** aggregate fields of "pokemon_v2_movedamageclassdescription" */
export type Pokemon_V2_Movedamageclassdescription_Aggregate_Fields = {
  __typename?: 'pokemon_v2_movedamageclassdescription_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Movedamageclassdescription_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Movedamageclassdescription_Max_Fields>;
  min?: Maybe<Pokemon_V2_Movedamageclassdescription_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Movedamageclassdescription_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Movedamageclassdescription_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Movedamageclassdescription_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Movedamageclassdescription_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Movedamageclassdescription_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Movedamageclassdescription_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Movedamageclassdescription_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movedamageclassdescription" */
export type Pokemon_V2_Movedamageclassdescription_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Movedamageclassdescription_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Movedamageclassdescription_Avg_Fields = {
  __typename?: 'pokemon_v2_movedamageclassdescription_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movedamageclassdescription". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Movedamageclassdescription_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Movedamageclassdescription_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Movedamageclassdescription_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Movedamageclassdescription_Bool_Exp>>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  move_damage_class_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_movedamageclassdescription" */
export enum Pokemon_V2_Movedamageclassdescription_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2MovedamageclassdescriptionPkey = 'pokemon_v2_movedamageclassdescription_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_movedamageclassdescription" */
export type Pokemon_V2_Movedamageclassdescription_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_damage_class_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_movedamageclassdescription" */
export type Pokemon_V2_Movedamageclassdescription_Insert_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_damage_class_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Movedamageclassdescription_Max_Fields = {
  __typename?: 'pokemon_v2_movedamageclassdescription_max_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Movedamageclassdescription_Min_Fields = {
  __typename?: 'pokemon_v2_movedamageclassdescription_min_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_movedamageclassdescription" */
export type Pokemon_V2_Movedamageclassdescription_Mutation_Response = {
  __typename?: 'pokemon_v2_movedamageclassdescription_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Movedamageclassdescription>;
};

/** on_conflict condition type for table "pokemon_v2_movedamageclassdescription" */
export type Pokemon_V2_Movedamageclassdescription_On_Conflict = {
  constraint: Pokemon_V2_Movedamageclassdescription_Constraint;
  update_columns?: Array<Pokemon_V2_Movedamageclassdescription_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Movedamageclassdescription_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_movedamageclassdescription". */
export type Pokemon_V2_Movedamageclassdescription_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_movedamageclassdescription */
export type Pokemon_V2_Movedamageclassdescription_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_movedamageclassdescription" */
export enum Pokemon_V2_Movedamageclassdescription_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveDamageClassId = 'move_damage_class_id'
}

/** input type for updating data in table "pokemon_v2_movedamageclassdescription" */
export type Pokemon_V2_Movedamageclassdescription_Set_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_damage_class_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Movedamageclassdescription_Stddev_Fields = {
  __typename?: 'pokemon_v2_movedamageclassdescription_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Movedamageclassdescription_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_movedamageclassdescription_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Movedamageclassdescription_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_movedamageclassdescription_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_movedamageclassdescription" */
export type Pokemon_V2_Movedamageclassdescription_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Movedamageclassdescription_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Movedamageclassdescription_Stream_Cursor_Value_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_damage_class_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Movedamageclassdescription_Sum_Fields = {
  __typename?: 'pokemon_v2_movedamageclassdescription_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_movedamageclassdescription" */
export enum Pokemon_V2_Movedamageclassdescription_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveDamageClassId = 'move_damage_class_id'
}

export type Pokemon_V2_Movedamageclassdescription_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Movedamageclassdescription_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Movedamageclassdescription_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Movedamageclassdescription_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Movedamageclassdescription_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_movedamageclassdescription_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Movedamageclassdescription_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_movedamageclassdescription_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Movedamageclassdescription_Variance_Fields = {
  __typename?: 'pokemon_v2_movedamageclassdescription_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_movedamageclassname" */
export type Pokemon_V2_Movedamageclassname = {
  __typename?: 'pokemon_v2_movedamageclassname';
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_movedamageclassname" */
export type Pokemon_V2_Movedamageclassname_Aggregate = {
  __typename?: 'pokemon_v2_movedamageclassname_aggregate';
  aggregate?: Maybe<Pokemon_V2_Movedamageclassname_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Movedamageclassname>;
};

/** aggregate fields of "pokemon_v2_movedamageclassname" */
export type Pokemon_V2_Movedamageclassname_Aggregate_Fields = {
  __typename?: 'pokemon_v2_movedamageclassname_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Movedamageclassname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Movedamageclassname_Max_Fields>;
  min?: Maybe<Pokemon_V2_Movedamageclassname_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Movedamageclassname_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Movedamageclassname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Movedamageclassname_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Movedamageclassname_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Movedamageclassname_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Movedamageclassname_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Movedamageclassname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movedamageclassname" */
export type Pokemon_V2_Movedamageclassname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Movedamageclassname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Movedamageclassname_Avg_Fields = {
  __typename?: 'pokemon_v2_movedamageclassname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movedamageclassname". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Movedamageclassname_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Movedamageclassname_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Movedamageclassname_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Movedamageclassname_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  move_damage_class_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_movedamageclassname" */
export enum Pokemon_V2_Movedamageclassname_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2MovedamageclassnamePkey = 'pokemon_v2_movedamageclassname_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_movedamageclassname" */
export type Pokemon_V2_Movedamageclassname_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_damage_class_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_movedamageclassname" */
export type Pokemon_V2_Movedamageclassname_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_damage_class_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Movedamageclassname_Max_Fields = {
  __typename?: 'pokemon_v2_movedamageclassname_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Movedamageclassname_Min_Fields = {
  __typename?: 'pokemon_v2_movedamageclassname_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_movedamageclassname" */
export type Pokemon_V2_Movedamageclassname_Mutation_Response = {
  __typename?: 'pokemon_v2_movedamageclassname_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Movedamageclassname>;
};

/** on_conflict condition type for table "pokemon_v2_movedamageclassname" */
export type Pokemon_V2_Movedamageclassname_On_Conflict = {
  constraint: Pokemon_V2_Movedamageclassname_Constraint;
  update_columns?: Array<Pokemon_V2_Movedamageclassname_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Movedamageclassname_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_movedamageclassname". */
export type Pokemon_V2_Movedamageclassname_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_movedamageclassname */
export type Pokemon_V2_Movedamageclassname_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_movedamageclassname" */
export enum Pokemon_V2_Movedamageclassname_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveDamageClassId = 'move_damage_class_id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_movedamageclassname" */
export type Pokemon_V2_Movedamageclassname_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_damage_class_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Movedamageclassname_Stddev_Fields = {
  __typename?: 'pokemon_v2_movedamageclassname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Movedamageclassname_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_movedamageclassname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Movedamageclassname_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_movedamageclassname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_movedamageclassname" */
export type Pokemon_V2_Movedamageclassname_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Movedamageclassname_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Movedamageclassname_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_damage_class_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Movedamageclassname_Sum_Fields = {
  __typename?: 'pokemon_v2_movedamageclassname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_movedamageclassname" */
export enum Pokemon_V2_Movedamageclassname_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveDamageClassId = 'move_damage_class_id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Movedamageclassname_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Movedamageclassname_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Movedamageclassname_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Movedamageclassname_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Movedamageclassname_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_movedamageclassname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Movedamageclassname_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_movedamageclassname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Movedamageclassname_Variance_Fields = {
  __typename?: 'pokemon_v2_movedamageclassname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_moveeffect" */
export type Pokemon_V2_Moveeffect = {
  __typename?: 'pokemon_v2_moveeffect';
  id: Scalars['Int']['output'];
};

/** aggregated selection of "pokemon_v2_moveeffect" */
export type Pokemon_V2_Moveeffect_Aggregate = {
  __typename?: 'pokemon_v2_moveeffect_aggregate';
  aggregate?: Maybe<Pokemon_V2_Moveeffect_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Moveeffect>;
};

/** aggregate fields of "pokemon_v2_moveeffect" */
export type Pokemon_V2_Moveeffect_Aggregate_Fields = {
  __typename?: 'pokemon_v2_moveeffect_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Moveeffect_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Moveeffect_Max_Fields>;
  min?: Maybe<Pokemon_V2_Moveeffect_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Moveeffect_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Moveeffect_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Moveeffect_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Moveeffect_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Moveeffect_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Moveeffect_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Moveeffect_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_moveeffect" */
export type Pokemon_V2_Moveeffect_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Moveeffect_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Moveeffect_Avg_Fields = {
  __typename?: 'pokemon_v2_moveeffect_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_moveeffect". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Moveeffect_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Moveeffect_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Moveeffect_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Moveeffect_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_moveeffect" */
export enum Pokemon_V2_Moveeffect_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2MoveeffectPkey = 'pokemon_v2_moveeffect_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_moveeffect" */
export type Pokemon_V2_Moveeffect_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_moveeffect" */
export type Pokemon_V2_Moveeffect_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Moveeffect_Max_Fields = {
  __typename?: 'pokemon_v2_moveeffect_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Moveeffect_Min_Fields = {
  __typename?: 'pokemon_v2_moveeffect_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_moveeffect" */
export type Pokemon_V2_Moveeffect_Mutation_Response = {
  __typename?: 'pokemon_v2_moveeffect_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Moveeffect>;
};

/** on_conflict condition type for table "pokemon_v2_moveeffect" */
export type Pokemon_V2_Moveeffect_On_Conflict = {
  constraint: Pokemon_V2_Moveeffect_Constraint;
  update_columns?: Array<Pokemon_V2_Moveeffect_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Moveeffect_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_moveeffect". */
export type Pokemon_V2_Moveeffect_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_moveeffect */
export type Pokemon_V2_Moveeffect_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_moveeffect" */
export enum Pokemon_V2_Moveeffect_Select_Column {
  /** column name */
  Id = 'id'
}

/** input type for updating data in table "pokemon_v2_moveeffect" */
export type Pokemon_V2_Moveeffect_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Moveeffect_Stddev_Fields = {
  __typename?: 'pokemon_v2_moveeffect_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Moveeffect_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_moveeffect_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Moveeffect_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_moveeffect_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_moveeffect" */
export type Pokemon_V2_Moveeffect_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Moveeffect_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Moveeffect_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Moveeffect_Sum_Fields = {
  __typename?: 'pokemon_v2_moveeffect_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_moveeffect" */
export enum Pokemon_V2_Moveeffect_Update_Column {
  /** column name */
  Id = 'id'
}

export type Pokemon_V2_Moveeffect_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Moveeffect_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Moveeffect_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Moveeffect_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Moveeffect_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_moveeffect_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Moveeffect_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_moveeffect_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Moveeffect_Variance_Fields = {
  __typename?: 'pokemon_v2_moveeffect_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_moveeffectchange" */
export type Pokemon_V2_Moveeffectchange = {
  __typename?: 'pokemon_v2_moveeffectchange';
  id: Scalars['Int']['output'];
  move_effect_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_moveeffectchange" */
export type Pokemon_V2_Moveeffectchange_Aggregate = {
  __typename?: 'pokemon_v2_moveeffectchange_aggregate';
  aggregate?: Maybe<Pokemon_V2_Moveeffectchange_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Moveeffectchange>;
};

/** aggregate fields of "pokemon_v2_moveeffectchange" */
export type Pokemon_V2_Moveeffectchange_Aggregate_Fields = {
  __typename?: 'pokemon_v2_moveeffectchange_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Moveeffectchange_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Moveeffectchange_Max_Fields>;
  min?: Maybe<Pokemon_V2_Moveeffectchange_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Moveeffectchange_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Moveeffectchange_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Moveeffectchange_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Moveeffectchange_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Moveeffectchange_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Moveeffectchange_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Moveeffectchange_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_moveeffectchange" */
export type Pokemon_V2_Moveeffectchange_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Moveeffectchange_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Moveeffectchange_Avg_Fields = {
  __typename?: 'pokemon_v2_moveeffectchange_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_moveeffectchange". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Moveeffectchange_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Moveeffectchange_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Moveeffectchange_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Moveeffectchange_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  move_effect_id?: InputMaybe<Int_Comparison_Exp>;
  version_group_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_moveeffectchange" */
export enum Pokemon_V2_Moveeffectchange_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2MoveeffectchangePkey = 'pokemon_v2_moveeffectchange_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_moveeffectchange" */
export type Pokemon_V2_Moveeffectchange_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  move_effect_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_moveeffectchange" */
export type Pokemon_V2_Moveeffectchange_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  move_effect_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Moveeffectchange_Max_Fields = {
  __typename?: 'pokemon_v2_moveeffectchange_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  move_effect_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Moveeffectchange_Min_Fields = {
  __typename?: 'pokemon_v2_moveeffectchange_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  move_effect_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_moveeffectchange" */
export type Pokemon_V2_Moveeffectchange_Mutation_Response = {
  __typename?: 'pokemon_v2_moveeffectchange_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Moveeffectchange>;
};

/** on_conflict condition type for table "pokemon_v2_moveeffectchange" */
export type Pokemon_V2_Moveeffectchange_On_Conflict = {
  constraint: Pokemon_V2_Moveeffectchange_Constraint;
  update_columns?: Array<Pokemon_V2_Moveeffectchange_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Moveeffectchange_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_moveeffectchange". */
export type Pokemon_V2_Moveeffectchange_Order_By = {
  id?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_moveeffectchange */
export type Pokemon_V2_Moveeffectchange_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_moveeffectchange" */
export enum Pokemon_V2_Moveeffectchange_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  MoveEffectId = 'move_effect_id',
  /** column name */
  VersionGroupId = 'version_group_id'
}

/** input type for updating data in table "pokemon_v2_moveeffectchange" */
export type Pokemon_V2_Moveeffectchange_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  move_effect_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Moveeffectchange_Stddev_Fields = {
  __typename?: 'pokemon_v2_moveeffectchange_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Moveeffectchange_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_moveeffectchange_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Moveeffectchange_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_moveeffectchange_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_moveeffectchange" */
export type Pokemon_V2_Moveeffectchange_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Moveeffectchange_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Moveeffectchange_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  move_effect_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Moveeffectchange_Sum_Fields = {
  __typename?: 'pokemon_v2_moveeffectchange_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  move_effect_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_moveeffectchange" */
export enum Pokemon_V2_Moveeffectchange_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  MoveEffectId = 'move_effect_id',
  /** column name */
  VersionGroupId = 'version_group_id'
}

export type Pokemon_V2_Moveeffectchange_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Moveeffectchange_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Moveeffectchange_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Moveeffectchange_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Moveeffectchange_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_moveeffectchange_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Moveeffectchange_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_moveeffectchange_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Moveeffectchange_Variance_Fields = {
  __typename?: 'pokemon_v2_moveeffectchange_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_moveeffectchangeeffecttext" */
export type Pokemon_V2_Moveeffectchangeeffecttext = {
  __typename?: 'pokemon_v2_moveeffectchangeeffecttext';
  effect: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  move_effect_change_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_moveeffectchangeeffecttext" */
export type Pokemon_V2_Moveeffectchangeeffecttext_Aggregate = {
  __typename?: 'pokemon_v2_moveeffectchangeeffecttext_aggregate';
  aggregate?: Maybe<Pokemon_V2_Moveeffectchangeeffecttext_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Moveeffectchangeeffecttext>;
};

/** aggregate fields of "pokemon_v2_moveeffectchangeeffecttext" */
export type Pokemon_V2_Moveeffectchangeeffecttext_Aggregate_Fields = {
  __typename?: 'pokemon_v2_moveeffectchangeeffecttext_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Moveeffectchangeeffecttext_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Moveeffectchangeeffecttext_Max_Fields>;
  min?: Maybe<Pokemon_V2_Moveeffectchangeeffecttext_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Moveeffectchangeeffecttext_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Moveeffectchangeeffecttext_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Moveeffectchangeeffecttext_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Moveeffectchangeeffecttext_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Moveeffectchangeeffecttext_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Moveeffectchangeeffecttext_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Moveeffectchangeeffecttext_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_moveeffectchangeeffecttext" */
export type Pokemon_V2_Moveeffectchangeeffecttext_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Moveeffectchangeeffecttext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Moveeffectchangeeffecttext_Avg_Fields = {
  __typename?: 'pokemon_v2_moveeffectchangeeffecttext_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_effect_change_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_moveeffectchangeeffecttext". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Moveeffectchangeeffecttext_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Moveeffectchangeeffecttext_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Moveeffectchangeeffecttext_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Moveeffectchangeeffecttext_Bool_Exp>>;
  effect?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  move_effect_change_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_moveeffectchangeeffecttext" */
export enum Pokemon_V2_Moveeffectchangeeffecttext_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2MoveeffectchangeeffecttextPkey = 'pokemon_v2_moveeffectchangeeffecttext_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_moveeffectchangeeffecttext" */
export type Pokemon_V2_Moveeffectchangeeffecttext_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_effect_change_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_moveeffectchangeeffecttext" */
export type Pokemon_V2_Moveeffectchangeeffecttext_Insert_Input = {
  effect?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_effect_change_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Moveeffectchangeeffecttext_Max_Fields = {
  __typename?: 'pokemon_v2_moveeffectchangeeffecttext_max_fields';
  effect?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_effect_change_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Moveeffectchangeeffecttext_Min_Fields = {
  __typename?: 'pokemon_v2_moveeffectchangeeffecttext_min_fields';
  effect?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_effect_change_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_moveeffectchangeeffecttext" */
export type Pokemon_V2_Moveeffectchangeeffecttext_Mutation_Response = {
  __typename?: 'pokemon_v2_moveeffectchangeeffecttext_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Moveeffectchangeeffecttext>;
};

/** on_conflict condition type for table "pokemon_v2_moveeffectchangeeffecttext" */
export type Pokemon_V2_Moveeffectchangeeffecttext_On_Conflict = {
  constraint: Pokemon_V2_Moveeffectchangeeffecttext_Constraint;
  update_columns?: Array<Pokemon_V2_Moveeffectchangeeffecttext_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Moveeffectchangeeffecttext_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_moveeffectchangeeffecttext". */
export type Pokemon_V2_Moveeffectchangeeffecttext_Order_By = {
  effect?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_effect_change_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_moveeffectchangeeffecttext */
export type Pokemon_V2_Moveeffectchangeeffecttext_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_moveeffectchangeeffecttext" */
export enum Pokemon_V2_Moveeffectchangeeffecttext_Select_Column {
  /** column name */
  Effect = 'effect',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveEffectChangeId = 'move_effect_change_id'
}

/** input type for updating data in table "pokemon_v2_moveeffectchangeeffecttext" */
export type Pokemon_V2_Moveeffectchangeeffecttext_Set_Input = {
  effect?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_effect_change_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Moveeffectchangeeffecttext_Stddev_Fields = {
  __typename?: 'pokemon_v2_moveeffectchangeeffecttext_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_effect_change_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Moveeffectchangeeffecttext_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_moveeffectchangeeffecttext_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_effect_change_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Moveeffectchangeeffecttext_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_moveeffectchangeeffecttext_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_effect_change_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_moveeffectchangeeffecttext" */
export type Pokemon_V2_Moveeffectchangeeffecttext_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Moveeffectchangeeffecttext_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Moveeffectchangeeffecttext_Stream_Cursor_Value_Input = {
  effect?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_effect_change_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Moveeffectchangeeffecttext_Sum_Fields = {
  __typename?: 'pokemon_v2_moveeffectchangeeffecttext_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_effect_change_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_moveeffectchangeeffecttext" */
export enum Pokemon_V2_Moveeffectchangeeffecttext_Update_Column {
  /** column name */
  Effect = 'effect',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveEffectChangeId = 'move_effect_change_id'
}

export type Pokemon_V2_Moveeffectchangeeffecttext_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Moveeffectchangeeffecttext_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Moveeffectchangeeffecttext_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Moveeffectchangeeffecttext_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Moveeffectchangeeffecttext_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_moveeffectchangeeffecttext_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_effect_change_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Moveeffectchangeeffecttext_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_moveeffectchangeeffecttext_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_effect_change_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Moveeffectchangeeffecttext_Variance_Fields = {
  __typename?: 'pokemon_v2_moveeffectchangeeffecttext_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_effect_change_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_moveeffecteffecttext" */
export type Pokemon_V2_Moveeffecteffecttext = {
  __typename?: 'pokemon_v2_moveeffecteffecttext';
  effect: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  move_effect_id?: Maybe<Scalars['Int']['output']>;
  short_effect: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_moveeffecteffecttext" */
export type Pokemon_V2_Moveeffecteffecttext_Aggregate = {
  __typename?: 'pokemon_v2_moveeffecteffecttext_aggregate';
  aggregate?: Maybe<Pokemon_V2_Moveeffecteffecttext_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Moveeffecteffecttext>;
};

/** aggregate fields of "pokemon_v2_moveeffecteffecttext" */
export type Pokemon_V2_Moveeffecteffecttext_Aggregate_Fields = {
  __typename?: 'pokemon_v2_moveeffecteffecttext_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Moveeffecteffecttext_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Moveeffecteffecttext_Max_Fields>;
  min?: Maybe<Pokemon_V2_Moveeffecteffecttext_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Moveeffecteffecttext_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Moveeffecteffecttext_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Moveeffecteffecttext_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Moveeffecteffecttext_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Moveeffecteffecttext_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Moveeffecteffecttext_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Moveeffecteffecttext_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_moveeffecteffecttext" */
export type Pokemon_V2_Moveeffecteffecttext_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Moveeffecteffecttext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Moveeffecteffecttext_Avg_Fields = {
  __typename?: 'pokemon_v2_moveeffecteffecttext_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_moveeffecteffecttext". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Moveeffecteffecttext_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Moveeffecteffecttext_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Moveeffecteffecttext_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Moveeffecteffecttext_Bool_Exp>>;
  effect?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  move_effect_id?: InputMaybe<Int_Comparison_Exp>;
  short_effect?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_moveeffecteffecttext" */
export enum Pokemon_V2_Moveeffecteffecttext_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2MoveeffecteffecttextPkey = 'pokemon_v2_moveeffecteffecttext_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_moveeffecteffecttext" */
export type Pokemon_V2_Moveeffecteffecttext_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_effect_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_moveeffecteffecttext" */
export type Pokemon_V2_Moveeffecteffecttext_Insert_Input = {
  effect?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_effect_id?: InputMaybe<Scalars['Int']['input']>;
  short_effect?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Moveeffecteffecttext_Max_Fields = {
  __typename?: 'pokemon_v2_moveeffecteffecttext_max_fields';
  effect?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_effect_id?: Maybe<Scalars['Int']['output']>;
  short_effect?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Moveeffecteffecttext_Min_Fields = {
  __typename?: 'pokemon_v2_moveeffecteffecttext_min_fields';
  effect?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_effect_id?: Maybe<Scalars['Int']['output']>;
  short_effect?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_moveeffecteffecttext" */
export type Pokemon_V2_Moveeffecteffecttext_Mutation_Response = {
  __typename?: 'pokemon_v2_moveeffecteffecttext_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Moveeffecteffecttext>;
};

/** on_conflict condition type for table "pokemon_v2_moveeffecteffecttext" */
export type Pokemon_V2_Moveeffecteffecttext_On_Conflict = {
  constraint: Pokemon_V2_Moveeffecteffecttext_Constraint;
  update_columns?: Array<Pokemon_V2_Moveeffecteffecttext_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Moveeffecteffecttext_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_moveeffecteffecttext". */
export type Pokemon_V2_Moveeffecteffecttext_Order_By = {
  effect?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  short_effect?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_moveeffecteffecttext */
export type Pokemon_V2_Moveeffecteffecttext_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_moveeffecteffecttext" */
export enum Pokemon_V2_Moveeffecteffecttext_Select_Column {
  /** column name */
  Effect = 'effect',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveEffectId = 'move_effect_id',
  /** column name */
  ShortEffect = 'short_effect'
}

/** input type for updating data in table "pokemon_v2_moveeffecteffecttext" */
export type Pokemon_V2_Moveeffecteffecttext_Set_Input = {
  effect?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_effect_id?: InputMaybe<Scalars['Int']['input']>;
  short_effect?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Moveeffecteffecttext_Stddev_Fields = {
  __typename?: 'pokemon_v2_moveeffecteffecttext_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Moveeffecteffecttext_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_moveeffecteffecttext_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Moveeffecteffecttext_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_moveeffecteffecttext_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_moveeffecteffecttext" */
export type Pokemon_V2_Moveeffecteffecttext_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Moveeffecteffecttext_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Moveeffecteffecttext_Stream_Cursor_Value_Input = {
  effect?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_effect_id?: InputMaybe<Scalars['Int']['input']>;
  short_effect?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Moveeffecteffecttext_Sum_Fields = {
  __typename?: 'pokemon_v2_moveeffecteffecttext_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_effect_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_moveeffecteffecttext" */
export enum Pokemon_V2_Moveeffecteffecttext_Update_Column {
  /** column name */
  Effect = 'effect',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveEffectId = 'move_effect_id',
  /** column name */
  ShortEffect = 'short_effect'
}

export type Pokemon_V2_Moveeffecteffecttext_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Moveeffecteffecttext_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Moveeffecteffecttext_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Moveeffecteffecttext_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Moveeffecteffecttext_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_moveeffecteffecttext_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Moveeffecteffecttext_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_moveeffecteffecttext_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Moveeffecteffecttext_Variance_Fields = {
  __typename?: 'pokemon_v2_moveeffecteffecttext_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_moveflavortext" */
export type Pokemon_V2_Moveflavortext = {
  __typename?: 'pokemon_v2_moveflavortext';
  flavor_text: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_moveflavortext" */
export type Pokemon_V2_Moveflavortext_Aggregate = {
  __typename?: 'pokemon_v2_moveflavortext_aggregate';
  aggregate?: Maybe<Pokemon_V2_Moveflavortext_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Moveflavortext>;
};

/** aggregate fields of "pokemon_v2_moveflavortext" */
export type Pokemon_V2_Moveflavortext_Aggregate_Fields = {
  __typename?: 'pokemon_v2_moveflavortext_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Moveflavortext_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Moveflavortext_Max_Fields>;
  min?: Maybe<Pokemon_V2_Moveflavortext_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Moveflavortext_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Moveflavortext_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Moveflavortext_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Moveflavortext_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Moveflavortext_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Moveflavortext_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Moveflavortext_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_moveflavortext" */
export type Pokemon_V2_Moveflavortext_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Moveflavortext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Moveflavortext_Avg_Fields = {
  __typename?: 'pokemon_v2_moveflavortext_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_moveflavortext". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Moveflavortext_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Moveflavortext_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Moveflavortext_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Moveflavortext_Bool_Exp>>;
  flavor_text?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  move_id?: InputMaybe<Int_Comparison_Exp>;
  version_group_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_moveflavortext" */
export enum Pokemon_V2_Moveflavortext_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2MoveflavortextPkey = 'pokemon_v2_moveflavortext_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_moveflavortext" */
export type Pokemon_V2_Moveflavortext_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_moveflavortext" */
export type Pokemon_V2_Moveflavortext_Insert_Input = {
  flavor_text?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Moveflavortext_Max_Fields = {
  __typename?: 'pokemon_v2_moveflavortext_max_fields';
  flavor_text?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Moveflavortext_Min_Fields = {
  __typename?: 'pokemon_v2_moveflavortext_min_fields';
  flavor_text?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_moveflavortext" */
export type Pokemon_V2_Moveflavortext_Mutation_Response = {
  __typename?: 'pokemon_v2_moveflavortext_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Moveflavortext>;
};

/** on_conflict condition type for table "pokemon_v2_moveflavortext" */
export type Pokemon_V2_Moveflavortext_On_Conflict = {
  constraint: Pokemon_V2_Moveflavortext_Constraint;
  update_columns?: Array<Pokemon_V2_Moveflavortext_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Moveflavortext_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_moveflavortext". */
export type Pokemon_V2_Moveflavortext_Order_By = {
  flavor_text?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_moveflavortext */
export type Pokemon_V2_Moveflavortext_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_moveflavortext" */
export enum Pokemon_V2_Moveflavortext_Select_Column {
  /** column name */
  FlavorText = 'flavor_text',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveId = 'move_id',
  /** column name */
  VersionGroupId = 'version_group_id'
}

/** input type for updating data in table "pokemon_v2_moveflavortext" */
export type Pokemon_V2_Moveflavortext_Set_Input = {
  flavor_text?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Moveflavortext_Stddev_Fields = {
  __typename?: 'pokemon_v2_moveflavortext_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Moveflavortext_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_moveflavortext_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Moveflavortext_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_moveflavortext_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_moveflavortext" */
export type Pokemon_V2_Moveflavortext_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Moveflavortext_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Moveflavortext_Stream_Cursor_Value_Input = {
  flavor_text?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Moveflavortext_Sum_Fields = {
  __typename?: 'pokemon_v2_moveflavortext_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_moveflavortext" */
export enum Pokemon_V2_Moveflavortext_Update_Column {
  /** column name */
  FlavorText = 'flavor_text',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveId = 'move_id',
  /** column name */
  VersionGroupId = 'version_group_id'
}

export type Pokemon_V2_Moveflavortext_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Moveflavortext_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Moveflavortext_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Moveflavortext_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Moveflavortext_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_moveflavortext_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Moveflavortext_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_moveflavortext_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Moveflavortext_Variance_Fields = {
  __typename?: 'pokemon_v2_moveflavortext_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_movelearnmethod" */
export type Pokemon_V2_Movelearnmethod = {
  __typename?: 'pokemon_v2_movelearnmethod';
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_movelearnmethod" */
export type Pokemon_V2_Movelearnmethod_Aggregate = {
  __typename?: 'pokemon_v2_movelearnmethod_aggregate';
  aggregate?: Maybe<Pokemon_V2_Movelearnmethod_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Movelearnmethod>;
};

/** aggregate fields of "pokemon_v2_movelearnmethod" */
export type Pokemon_V2_Movelearnmethod_Aggregate_Fields = {
  __typename?: 'pokemon_v2_movelearnmethod_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Movelearnmethod_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Movelearnmethod_Max_Fields>;
  min?: Maybe<Pokemon_V2_Movelearnmethod_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Movelearnmethod_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Movelearnmethod_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Movelearnmethod_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Movelearnmethod_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Movelearnmethod_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Movelearnmethod_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Movelearnmethod_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movelearnmethod" */
export type Pokemon_V2_Movelearnmethod_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Movelearnmethod_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Movelearnmethod_Avg_Fields = {
  __typename?: 'pokemon_v2_movelearnmethod_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movelearnmethod". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Movelearnmethod_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Movelearnmethod_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Movelearnmethod_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Movelearnmethod_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_movelearnmethod" */
export enum Pokemon_V2_Movelearnmethod_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2MovelearnmethodPkey = 'pokemon_v2_movelearnmethod_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_movelearnmethod" */
export type Pokemon_V2_Movelearnmethod_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_movelearnmethod" */
export type Pokemon_V2_Movelearnmethod_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Movelearnmethod_Max_Fields = {
  __typename?: 'pokemon_v2_movelearnmethod_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Movelearnmethod_Min_Fields = {
  __typename?: 'pokemon_v2_movelearnmethod_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_movelearnmethod" */
export type Pokemon_V2_Movelearnmethod_Mutation_Response = {
  __typename?: 'pokemon_v2_movelearnmethod_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Movelearnmethod>;
};

/** on_conflict condition type for table "pokemon_v2_movelearnmethod" */
export type Pokemon_V2_Movelearnmethod_On_Conflict = {
  constraint: Pokemon_V2_Movelearnmethod_Constraint;
  update_columns?: Array<Pokemon_V2_Movelearnmethod_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Movelearnmethod_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_movelearnmethod". */
export type Pokemon_V2_Movelearnmethod_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_movelearnmethod */
export type Pokemon_V2_Movelearnmethod_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_movelearnmethod" */
export enum Pokemon_V2_Movelearnmethod_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_movelearnmethod" */
export type Pokemon_V2_Movelearnmethod_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Movelearnmethod_Stddev_Fields = {
  __typename?: 'pokemon_v2_movelearnmethod_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Movelearnmethod_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_movelearnmethod_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Movelearnmethod_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_movelearnmethod_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_movelearnmethod" */
export type Pokemon_V2_Movelearnmethod_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Movelearnmethod_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Movelearnmethod_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Movelearnmethod_Sum_Fields = {
  __typename?: 'pokemon_v2_movelearnmethod_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_movelearnmethod" */
export enum Pokemon_V2_Movelearnmethod_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Movelearnmethod_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Movelearnmethod_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Movelearnmethod_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Movelearnmethod_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Movelearnmethod_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_movelearnmethod_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Movelearnmethod_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_movelearnmethod_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Movelearnmethod_Variance_Fields = {
  __typename?: 'pokemon_v2_movelearnmethod_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_movelearnmethoddescription" */
export type Pokemon_V2_Movelearnmethoddescription = {
  __typename?: 'pokemon_v2_movelearnmethoddescription';
  description: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  move_learn_method_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_movelearnmethoddescription" */
export type Pokemon_V2_Movelearnmethoddescription_Aggregate = {
  __typename?: 'pokemon_v2_movelearnmethoddescription_aggregate';
  aggregate?: Maybe<Pokemon_V2_Movelearnmethoddescription_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Movelearnmethoddescription>;
};

/** aggregate fields of "pokemon_v2_movelearnmethoddescription" */
export type Pokemon_V2_Movelearnmethoddescription_Aggregate_Fields = {
  __typename?: 'pokemon_v2_movelearnmethoddescription_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Movelearnmethoddescription_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Movelearnmethoddescription_Max_Fields>;
  min?: Maybe<Pokemon_V2_Movelearnmethoddescription_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Movelearnmethoddescription_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Movelearnmethoddescription_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Movelearnmethoddescription_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Movelearnmethoddescription_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Movelearnmethoddescription_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Movelearnmethoddescription_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Movelearnmethoddescription_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movelearnmethoddescription" */
export type Pokemon_V2_Movelearnmethoddescription_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Movelearnmethoddescription_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Movelearnmethoddescription_Avg_Fields = {
  __typename?: 'pokemon_v2_movelearnmethoddescription_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movelearnmethoddescription". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Movelearnmethoddescription_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Movelearnmethoddescription_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Movelearnmethoddescription_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Movelearnmethoddescription_Bool_Exp>>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  move_learn_method_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_movelearnmethoddescription" */
export enum Pokemon_V2_Movelearnmethoddescription_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2MovelearnmethoddescriptionPkey = 'pokemon_v2_movelearnmethoddescription_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_movelearnmethoddescription" */
export type Pokemon_V2_Movelearnmethoddescription_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_learn_method_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_movelearnmethoddescription" */
export type Pokemon_V2_Movelearnmethoddescription_Insert_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_learn_method_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Movelearnmethoddescription_Max_Fields = {
  __typename?: 'pokemon_v2_movelearnmethoddescription_max_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_learn_method_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Movelearnmethoddescription_Min_Fields = {
  __typename?: 'pokemon_v2_movelearnmethoddescription_min_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_learn_method_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_movelearnmethoddescription" */
export type Pokemon_V2_Movelearnmethoddescription_Mutation_Response = {
  __typename?: 'pokemon_v2_movelearnmethoddescription_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Movelearnmethoddescription>;
};

/** on_conflict condition type for table "pokemon_v2_movelearnmethoddescription" */
export type Pokemon_V2_Movelearnmethoddescription_On_Conflict = {
  constraint: Pokemon_V2_Movelearnmethoddescription_Constraint;
  update_columns?: Array<Pokemon_V2_Movelearnmethoddescription_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Movelearnmethoddescription_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_movelearnmethoddescription". */
export type Pokemon_V2_Movelearnmethoddescription_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_movelearnmethoddescription */
export type Pokemon_V2_Movelearnmethoddescription_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_movelearnmethoddescription" */
export enum Pokemon_V2_Movelearnmethoddescription_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveLearnMethodId = 'move_learn_method_id'
}

/** input type for updating data in table "pokemon_v2_movelearnmethoddescription" */
export type Pokemon_V2_Movelearnmethoddescription_Set_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_learn_method_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Movelearnmethoddescription_Stddev_Fields = {
  __typename?: 'pokemon_v2_movelearnmethoddescription_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Movelearnmethoddescription_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_movelearnmethoddescription_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Movelearnmethoddescription_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_movelearnmethoddescription_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_movelearnmethoddescription" */
export type Pokemon_V2_Movelearnmethoddescription_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Movelearnmethoddescription_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Movelearnmethoddescription_Stream_Cursor_Value_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_learn_method_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Movelearnmethoddescription_Sum_Fields = {
  __typename?: 'pokemon_v2_movelearnmethoddescription_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_learn_method_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_movelearnmethoddescription" */
export enum Pokemon_V2_Movelearnmethoddescription_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveLearnMethodId = 'move_learn_method_id'
}

export type Pokemon_V2_Movelearnmethoddescription_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Movelearnmethoddescription_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Movelearnmethoddescription_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Movelearnmethoddescription_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Movelearnmethoddescription_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_movelearnmethoddescription_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Movelearnmethoddescription_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_movelearnmethoddescription_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Movelearnmethoddescription_Variance_Fields = {
  __typename?: 'pokemon_v2_movelearnmethoddescription_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_movelearnmethodname" */
export type Pokemon_V2_Movelearnmethodname = {
  __typename?: 'pokemon_v2_movelearnmethodname';
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  move_learn_method_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_movelearnmethodname" */
export type Pokemon_V2_Movelearnmethodname_Aggregate = {
  __typename?: 'pokemon_v2_movelearnmethodname_aggregate';
  aggregate?: Maybe<Pokemon_V2_Movelearnmethodname_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Movelearnmethodname>;
};

/** aggregate fields of "pokemon_v2_movelearnmethodname" */
export type Pokemon_V2_Movelearnmethodname_Aggregate_Fields = {
  __typename?: 'pokemon_v2_movelearnmethodname_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Movelearnmethodname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Movelearnmethodname_Max_Fields>;
  min?: Maybe<Pokemon_V2_Movelearnmethodname_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Movelearnmethodname_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Movelearnmethodname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Movelearnmethodname_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Movelearnmethodname_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Movelearnmethodname_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Movelearnmethodname_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Movelearnmethodname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movelearnmethodname" */
export type Pokemon_V2_Movelearnmethodname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Movelearnmethodname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Movelearnmethodname_Avg_Fields = {
  __typename?: 'pokemon_v2_movelearnmethodname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movelearnmethodname". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Movelearnmethodname_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Movelearnmethodname_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Movelearnmethodname_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Movelearnmethodname_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  move_learn_method_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_movelearnmethodname" */
export enum Pokemon_V2_Movelearnmethodname_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2MovelearnmethodnamePkey = 'pokemon_v2_movelearnmethodname_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_movelearnmethodname" */
export type Pokemon_V2_Movelearnmethodname_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_learn_method_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_movelearnmethodname" */
export type Pokemon_V2_Movelearnmethodname_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_learn_method_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Movelearnmethodname_Max_Fields = {
  __typename?: 'pokemon_v2_movelearnmethodname_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_learn_method_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Movelearnmethodname_Min_Fields = {
  __typename?: 'pokemon_v2_movelearnmethodname_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_learn_method_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_movelearnmethodname" */
export type Pokemon_V2_Movelearnmethodname_Mutation_Response = {
  __typename?: 'pokemon_v2_movelearnmethodname_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Movelearnmethodname>;
};

/** on_conflict condition type for table "pokemon_v2_movelearnmethodname" */
export type Pokemon_V2_Movelearnmethodname_On_Conflict = {
  constraint: Pokemon_V2_Movelearnmethodname_Constraint;
  update_columns?: Array<Pokemon_V2_Movelearnmethodname_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Movelearnmethodname_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_movelearnmethodname". */
export type Pokemon_V2_Movelearnmethodname_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_movelearnmethodname */
export type Pokemon_V2_Movelearnmethodname_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_movelearnmethodname" */
export enum Pokemon_V2_Movelearnmethodname_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveLearnMethodId = 'move_learn_method_id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_movelearnmethodname" */
export type Pokemon_V2_Movelearnmethodname_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_learn_method_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Movelearnmethodname_Stddev_Fields = {
  __typename?: 'pokemon_v2_movelearnmethodname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Movelearnmethodname_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_movelearnmethodname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Movelearnmethodname_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_movelearnmethodname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_movelearnmethodname" */
export type Pokemon_V2_Movelearnmethodname_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Movelearnmethodname_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Movelearnmethodname_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_learn_method_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Movelearnmethodname_Sum_Fields = {
  __typename?: 'pokemon_v2_movelearnmethodname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_learn_method_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_movelearnmethodname" */
export enum Pokemon_V2_Movelearnmethodname_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveLearnMethodId = 'move_learn_method_id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Movelearnmethodname_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Movelearnmethodname_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Movelearnmethodname_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Movelearnmethodname_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Movelearnmethodname_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_movelearnmethodname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Movelearnmethodname_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_movelearnmethodname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Movelearnmethodname_Variance_Fields = {
  __typename?: 'pokemon_v2_movelearnmethodname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_movemeta" */
export type Pokemon_V2_Movemeta = {
  __typename?: 'pokemon_v2_movemeta';
  ailment_chance?: Maybe<Scalars['Int']['output']>;
  crit_rate?: Maybe<Scalars['Int']['output']>;
  drain?: Maybe<Scalars['Int']['output']>;
  flinch_chance?: Maybe<Scalars['Int']['output']>;
  healing?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  max_hits?: Maybe<Scalars['Int']['output']>;
  max_turns?: Maybe<Scalars['Int']['output']>;
  min_hits?: Maybe<Scalars['Int']['output']>;
  min_turns?: Maybe<Scalars['Int']['output']>;
  move_id: Scalars['Int']['output'];
  move_meta_ailment_id?: Maybe<Scalars['Int']['output']>;
  move_meta_category_id?: Maybe<Scalars['Int']['output']>;
  stat_chance?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_movemeta" */
export type Pokemon_V2_Movemeta_Aggregate = {
  __typename?: 'pokemon_v2_movemeta_aggregate';
  aggregate?: Maybe<Pokemon_V2_Movemeta_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Movemeta>;
};

/** aggregate fields of "pokemon_v2_movemeta" */
export type Pokemon_V2_Movemeta_Aggregate_Fields = {
  __typename?: 'pokemon_v2_movemeta_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Movemeta_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Movemeta_Max_Fields>;
  min?: Maybe<Pokemon_V2_Movemeta_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Movemeta_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Movemeta_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Movemeta_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Movemeta_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Movemeta_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Movemeta_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Movemeta_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movemeta" */
export type Pokemon_V2_Movemeta_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Movemeta_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Movemeta_Avg_Fields = {
  __typename?: 'pokemon_v2_movemeta_avg_fields';
  ailment_chance?: Maybe<Scalars['Float']['output']>;
  crit_rate?: Maybe<Scalars['Float']['output']>;
  drain?: Maybe<Scalars['Float']['output']>;
  flinch_chance?: Maybe<Scalars['Float']['output']>;
  healing?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  max_hits?: Maybe<Scalars['Float']['output']>;
  max_turns?: Maybe<Scalars['Float']['output']>;
  min_hits?: Maybe<Scalars['Float']['output']>;
  min_turns?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Float']['output']>;
  move_meta_category_id?: Maybe<Scalars['Float']['output']>;
  stat_chance?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movemeta". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Movemeta_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Movemeta_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Movemeta_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Movemeta_Bool_Exp>>;
  ailment_chance?: InputMaybe<Int_Comparison_Exp>;
  crit_rate?: InputMaybe<Int_Comparison_Exp>;
  drain?: InputMaybe<Int_Comparison_Exp>;
  flinch_chance?: InputMaybe<Int_Comparison_Exp>;
  healing?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  max_hits?: InputMaybe<Int_Comparison_Exp>;
  max_turns?: InputMaybe<Int_Comparison_Exp>;
  min_hits?: InputMaybe<Int_Comparison_Exp>;
  min_turns?: InputMaybe<Int_Comparison_Exp>;
  move_id?: InputMaybe<Int_Comparison_Exp>;
  move_meta_ailment_id?: InputMaybe<Int_Comparison_Exp>;
  move_meta_category_id?: InputMaybe<Int_Comparison_Exp>;
  stat_chance?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_movemeta" */
export enum Pokemon_V2_Movemeta_Constraint {
  /** unique or primary key constraint on columns "move_id" */
  PokemonV2MovemetaMoveIdKey = 'pokemon_v2_movemeta_move_id_key',
  /** unique or primary key constraint on columns "id" */
  PokemonV2MovemetaPkey = 'pokemon_v2_movemeta_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_movemeta" */
export type Pokemon_V2_Movemeta_Inc_Input = {
  ailment_chance?: InputMaybe<Scalars['Int']['input']>;
  crit_rate?: InputMaybe<Scalars['Int']['input']>;
  drain?: InputMaybe<Scalars['Int']['input']>;
  flinch_chance?: InputMaybe<Scalars['Int']['input']>;
  healing?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  max_hits?: InputMaybe<Scalars['Int']['input']>;
  max_turns?: InputMaybe<Scalars['Int']['input']>;
  min_hits?: InputMaybe<Scalars['Int']['input']>;
  min_turns?: InputMaybe<Scalars['Int']['input']>;
  move_id?: InputMaybe<Scalars['Int']['input']>;
  move_meta_ailment_id?: InputMaybe<Scalars['Int']['input']>;
  move_meta_category_id?: InputMaybe<Scalars['Int']['input']>;
  stat_chance?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_movemeta" */
export type Pokemon_V2_Movemeta_Insert_Input = {
  ailment_chance?: InputMaybe<Scalars['Int']['input']>;
  crit_rate?: InputMaybe<Scalars['Int']['input']>;
  drain?: InputMaybe<Scalars['Int']['input']>;
  flinch_chance?: InputMaybe<Scalars['Int']['input']>;
  healing?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  max_hits?: InputMaybe<Scalars['Int']['input']>;
  max_turns?: InputMaybe<Scalars['Int']['input']>;
  min_hits?: InputMaybe<Scalars['Int']['input']>;
  min_turns?: InputMaybe<Scalars['Int']['input']>;
  move_id?: InputMaybe<Scalars['Int']['input']>;
  move_meta_ailment_id?: InputMaybe<Scalars['Int']['input']>;
  move_meta_category_id?: InputMaybe<Scalars['Int']['input']>;
  stat_chance?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Movemeta_Max_Fields = {
  __typename?: 'pokemon_v2_movemeta_max_fields';
  ailment_chance?: Maybe<Scalars['Int']['output']>;
  crit_rate?: Maybe<Scalars['Int']['output']>;
  drain?: Maybe<Scalars['Int']['output']>;
  flinch_chance?: Maybe<Scalars['Int']['output']>;
  healing?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  max_hits?: Maybe<Scalars['Int']['output']>;
  max_turns?: Maybe<Scalars['Int']['output']>;
  min_hits?: Maybe<Scalars['Int']['output']>;
  min_turns?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Int']['output']>;
  move_meta_category_id?: Maybe<Scalars['Int']['output']>;
  stat_chance?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Movemeta_Min_Fields = {
  __typename?: 'pokemon_v2_movemeta_min_fields';
  ailment_chance?: Maybe<Scalars['Int']['output']>;
  crit_rate?: Maybe<Scalars['Int']['output']>;
  drain?: Maybe<Scalars['Int']['output']>;
  flinch_chance?: Maybe<Scalars['Int']['output']>;
  healing?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  max_hits?: Maybe<Scalars['Int']['output']>;
  max_turns?: Maybe<Scalars['Int']['output']>;
  min_hits?: Maybe<Scalars['Int']['output']>;
  min_turns?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Int']['output']>;
  move_meta_category_id?: Maybe<Scalars['Int']['output']>;
  stat_chance?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_movemeta" */
export type Pokemon_V2_Movemeta_Mutation_Response = {
  __typename?: 'pokemon_v2_movemeta_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Movemeta>;
};

/** on_conflict condition type for table "pokemon_v2_movemeta" */
export type Pokemon_V2_Movemeta_On_Conflict = {
  constraint: Pokemon_V2_Movemeta_Constraint;
  update_columns?: Array<Pokemon_V2_Movemeta_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Movemeta_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_movemeta". */
export type Pokemon_V2_Movemeta_Order_By = {
  ailment_chance?: InputMaybe<Order_By>;
  crit_rate?: InputMaybe<Order_By>;
  drain?: InputMaybe<Order_By>;
  flinch_chance?: InputMaybe<Order_By>;
  healing?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  max_hits?: InputMaybe<Order_By>;
  max_turns?: InputMaybe<Order_By>;
  min_hits?: InputMaybe<Order_By>;
  min_turns?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  move_meta_ailment_id?: InputMaybe<Order_By>;
  move_meta_category_id?: InputMaybe<Order_By>;
  stat_chance?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_movemeta */
export type Pokemon_V2_Movemeta_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_movemeta" */
export enum Pokemon_V2_Movemeta_Select_Column {
  /** column name */
  AilmentChance = 'ailment_chance',
  /** column name */
  CritRate = 'crit_rate',
  /** column name */
  Drain = 'drain',
  /** column name */
  FlinchChance = 'flinch_chance',
  /** column name */
  Healing = 'healing',
  /** column name */
  Id = 'id',
  /** column name */
  MaxHits = 'max_hits',
  /** column name */
  MaxTurns = 'max_turns',
  /** column name */
  MinHits = 'min_hits',
  /** column name */
  MinTurns = 'min_turns',
  /** column name */
  MoveId = 'move_id',
  /** column name */
  MoveMetaAilmentId = 'move_meta_ailment_id',
  /** column name */
  MoveMetaCategoryId = 'move_meta_category_id',
  /** column name */
  StatChance = 'stat_chance'
}

/** input type for updating data in table "pokemon_v2_movemeta" */
export type Pokemon_V2_Movemeta_Set_Input = {
  ailment_chance?: InputMaybe<Scalars['Int']['input']>;
  crit_rate?: InputMaybe<Scalars['Int']['input']>;
  drain?: InputMaybe<Scalars['Int']['input']>;
  flinch_chance?: InputMaybe<Scalars['Int']['input']>;
  healing?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  max_hits?: InputMaybe<Scalars['Int']['input']>;
  max_turns?: InputMaybe<Scalars['Int']['input']>;
  min_hits?: InputMaybe<Scalars['Int']['input']>;
  min_turns?: InputMaybe<Scalars['Int']['input']>;
  move_id?: InputMaybe<Scalars['Int']['input']>;
  move_meta_ailment_id?: InputMaybe<Scalars['Int']['input']>;
  move_meta_category_id?: InputMaybe<Scalars['Int']['input']>;
  stat_chance?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Movemeta_Stddev_Fields = {
  __typename?: 'pokemon_v2_movemeta_stddev_fields';
  ailment_chance?: Maybe<Scalars['Float']['output']>;
  crit_rate?: Maybe<Scalars['Float']['output']>;
  drain?: Maybe<Scalars['Float']['output']>;
  flinch_chance?: Maybe<Scalars['Float']['output']>;
  healing?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  max_hits?: Maybe<Scalars['Float']['output']>;
  max_turns?: Maybe<Scalars['Float']['output']>;
  min_hits?: Maybe<Scalars['Float']['output']>;
  min_turns?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Float']['output']>;
  move_meta_category_id?: Maybe<Scalars['Float']['output']>;
  stat_chance?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Movemeta_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_movemeta_stddev_pop_fields';
  ailment_chance?: Maybe<Scalars['Float']['output']>;
  crit_rate?: Maybe<Scalars['Float']['output']>;
  drain?: Maybe<Scalars['Float']['output']>;
  flinch_chance?: Maybe<Scalars['Float']['output']>;
  healing?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  max_hits?: Maybe<Scalars['Float']['output']>;
  max_turns?: Maybe<Scalars['Float']['output']>;
  min_hits?: Maybe<Scalars['Float']['output']>;
  min_turns?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Float']['output']>;
  move_meta_category_id?: Maybe<Scalars['Float']['output']>;
  stat_chance?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Movemeta_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_movemeta_stddev_samp_fields';
  ailment_chance?: Maybe<Scalars['Float']['output']>;
  crit_rate?: Maybe<Scalars['Float']['output']>;
  drain?: Maybe<Scalars['Float']['output']>;
  flinch_chance?: Maybe<Scalars['Float']['output']>;
  healing?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  max_hits?: Maybe<Scalars['Float']['output']>;
  max_turns?: Maybe<Scalars['Float']['output']>;
  min_hits?: Maybe<Scalars['Float']['output']>;
  min_turns?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Float']['output']>;
  move_meta_category_id?: Maybe<Scalars['Float']['output']>;
  stat_chance?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_movemeta" */
export type Pokemon_V2_Movemeta_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Movemeta_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Movemeta_Stream_Cursor_Value_Input = {
  ailment_chance?: InputMaybe<Scalars['Int']['input']>;
  crit_rate?: InputMaybe<Scalars['Int']['input']>;
  drain?: InputMaybe<Scalars['Int']['input']>;
  flinch_chance?: InputMaybe<Scalars['Int']['input']>;
  healing?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  max_hits?: InputMaybe<Scalars['Int']['input']>;
  max_turns?: InputMaybe<Scalars['Int']['input']>;
  min_hits?: InputMaybe<Scalars['Int']['input']>;
  min_turns?: InputMaybe<Scalars['Int']['input']>;
  move_id?: InputMaybe<Scalars['Int']['input']>;
  move_meta_ailment_id?: InputMaybe<Scalars['Int']['input']>;
  move_meta_category_id?: InputMaybe<Scalars['Int']['input']>;
  stat_chance?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Movemeta_Sum_Fields = {
  __typename?: 'pokemon_v2_movemeta_sum_fields';
  ailment_chance?: Maybe<Scalars['Int']['output']>;
  crit_rate?: Maybe<Scalars['Int']['output']>;
  drain?: Maybe<Scalars['Int']['output']>;
  flinch_chance?: Maybe<Scalars['Int']['output']>;
  healing?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  max_hits?: Maybe<Scalars['Int']['output']>;
  max_turns?: Maybe<Scalars['Int']['output']>;
  min_hits?: Maybe<Scalars['Int']['output']>;
  min_turns?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Int']['output']>;
  move_meta_category_id?: Maybe<Scalars['Int']['output']>;
  stat_chance?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_movemeta" */
export enum Pokemon_V2_Movemeta_Update_Column {
  /** column name */
  AilmentChance = 'ailment_chance',
  /** column name */
  CritRate = 'crit_rate',
  /** column name */
  Drain = 'drain',
  /** column name */
  FlinchChance = 'flinch_chance',
  /** column name */
  Healing = 'healing',
  /** column name */
  Id = 'id',
  /** column name */
  MaxHits = 'max_hits',
  /** column name */
  MaxTurns = 'max_turns',
  /** column name */
  MinHits = 'min_hits',
  /** column name */
  MinTurns = 'min_turns',
  /** column name */
  MoveId = 'move_id',
  /** column name */
  MoveMetaAilmentId = 'move_meta_ailment_id',
  /** column name */
  MoveMetaCategoryId = 'move_meta_category_id',
  /** column name */
  StatChance = 'stat_chance'
}

export type Pokemon_V2_Movemeta_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Movemeta_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Movemeta_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Movemeta_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Movemeta_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_movemeta_var_pop_fields';
  ailment_chance?: Maybe<Scalars['Float']['output']>;
  crit_rate?: Maybe<Scalars['Float']['output']>;
  drain?: Maybe<Scalars['Float']['output']>;
  flinch_chance?: Maybe<Scalars['Float']['output']>;
  healing?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  max_hits?: Maybe<Scalars['Float']['output']>;
  max_turns?: Maybe<Scalars['Float']['output']>;
  min_hits?: Maybe<Scalars['Float']['output']>;
  min_turns?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Float']['output']>;
  move_meta_category_id?: Maybe<Scalars['Float']['output']>;
  stat_chance?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Movemeta_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_movemeta_var_samp_fields';
  ailment_chance?: Maybe<Scalars['Float']['output']>;
  crit_rate?: Maybe<Scalars['Float']['output']>;
  drain?: Maybe<Scalars['Float']['output']>;
  flinch_chance?: Maybe<Scalars['Float']['output']>;
  healing?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  max_hits?: Maybe<Scalars['Float']['output']>;
  max_turns?: Maybe<Scalars['Float']['output']>;
  min_hits?: Maybe<Scalars['Float']['output']>;
  min_turns?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Float']['output']>;
  move_meta_category_id?: Maybe<Scalars['Float']['output']>;
  stat_chance?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Movemeta_Variance_Fields = {
  __typename?: 'pokemon_v2_movemeta_variance_fields';
  ailment_chance?: Maybe<Scalars['Float']['output']>;
  crit_rate?: Maybe<Scalars['Float']['output']>;
  drain?: Maybe<Scalars['Float']['output']>;
  flinch_chance?: Maybe<Scalars['Float']['output']>;
  healing?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  max_hits?: Maybe<Scalars['Float']['output']>;
  max_turns?: Maybe<Scalars['Float']['output']>;
  min_hits?: Maybe<Scalars['Float']['output']>;
  min_turns?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Float']['output']>;
  move_meta_category_id?: Maybe<Scalars['Float']['output']>;
  stat_chance?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_movemetaailment" */
export type Pokemon_V2_Movemetaailment = {
  __typename?: 'pokemon_v2_movemetaailment';
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_movemetaailment" */
export type Pokemon_V2_Movemetaailment_Aggregate = {
  __typename?: 'pokemon_v2_movemetaailment_aggregate';
  aggregate?: Maybe<Pokemon_V2_Movemetaailment_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Movemetaailment>;
};

/** aggregate fields of "pokemon_v2_movemetaailment" */
export type Pokemon_V2_Movemetaailment_Aggregate_Fields = {
  __typename?: 'pokemon_v2_movemetaailment_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Movemetaailment_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Movemetaailment_Max_Fields>;
  min?: Maybe<Pokemon_V2_Movemetaailment_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Movemetaailment_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Movemetaailment_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Movemetaailment_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Movemetaailment_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Movemetaailment_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Movemetaailment_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Movemetaailment_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movemetaailment" */
export type Pokemon_V2_Movemetaailment_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Movemetaailment_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Movemetaailment_Avg_Fields = {
  __typename?: 'pokemon_v2_movemetaailment_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movemetaailment". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Movemetaailment_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Movemetaailment_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Movemetaailment_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Movemetaailment_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_movemetaailment" */
export enum Pokemon_V2_Movemetaailment_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2MovemetaailmentPkey = 'pokemon_v2_movemetaailment_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_movemetaailment" */
export type Pokemon_V2_Movemetaailment_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_movemetaailment" */
export type Pokemon_V2_Movemetaailment_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Movemetaailment_Max_Fields = {
  __typename?: 'pokemon_v2_movemetaailment_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Movemetaailment_Min_Fields = {
  __typename?: 'pokemon_v2_movemetaailment_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_movemetaailment" */
export type Pokemon_V2_Movemetaailment_Mutation_Response = {
  __typename?: 'pokemon_v2_movemetaailment_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Movemetaailment>;
};

/** on_conflict condition type for table "pokemon_v2_movemetaailment" */
export type Pokemon_V2_Movemetaailment_On_Conflict = {
  constraint: Pokemon_V2_Movemetaailment_Constraint;
  update_columns?: Array<Pokemon_V2_Movemetaailment_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Movemetaailment_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_movemetaailment". */
export type Pokemon_V2_Movemetaailment_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_movemetaailment */
export type Pokemon_V2_Movemetaailment_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_movemetaailment" */
export enum Pokemon_V2_Movemetaailment_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_movemetaailment" */
export type Pokemon_V2_Movemetaailment_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Movemetaailment_Stddev_Fields = {
  __typename?: 'pokemon_v2_movemetaailment_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Movemetaailment_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_movemetaailment_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Movemetaailment_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_movemetaailment_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_movemetaailment" */
export type Pokemon_V2_Movemetaailment_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Movemetaailment_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Movemetaailment_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Movemetaailment_Sum_Fields = {
  __typename?: 'pokemon_v2_movemetaailment_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_movemetaailment" */
export enum Pokemon_V2_Movemetaailment_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Movemetaailment_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Movemetaailment_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Movemetaailment_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Movemetaailment_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Movemetaailment_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_movemetaailment_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Movemetaailment_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_movemetaailment_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Movemetaailment_Variance_Fields = {
  __typename?: 'pokemon_v2_movemetaailment_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_movemetaailmentname" */
export type Pokemon_V2_Movemetaailmentname = {
  __typename?: 'pokemon_v2_movemetaailmentname';
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_movemetaailmentname" */
export type Pokemon_V2_Movemetaailmentname_Aggregate = {
  __typename?: 'pokemon_v2_movemetaailmentname_aggregate';
  aggregate?: Maybe<Pokemon_V2_Movemetaailmentname_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Movemetaailmentname>;
};

/** aggregate fields of "pokemon_v2_movemetaailmentname" */
export type Pokemon_V2_Movemetaailmentname_Aggregate_Fields = {
  __typename?: 'pokemon_v2_movemetaailmentname_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Movemetaailmentname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Movemetaailmentname_Max_Fields>;
  min?: Maybe<Pokemon_V2_Movemetaailmentname_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Movemetaailmentname_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Movemetaailmentname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Movemetaailmentname_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Movemetaailmentname_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Movemetaailmentname_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Movemetaailmentname_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Movemetaailmentname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movemetaailmentname" */
export type Pokemon_V2_Movemetaailmentname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Movemetaailmentname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Movemetaailmentname_Avg_Fields = {
  __typename?: 'pokemon_v2_movemetaailmentname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movemetaailmentname". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Movemetaailmentname_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Movemetaailmentname_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Movemetaailmentname_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Movemetaailmentname_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  move_meta_ailment_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_movemetaailmentname" */
export enum Pokemon_V2_Movemetaailmentname_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2MovemetaailmentnamePkey = 'pokemon_v2_movemetaailmentname_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_movemetaailmentname" */
export type Pokemon_V2_Movemetaailmentname_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_meta_ailment_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_movemetaailmentname" */
export type Pokemon_V2_Movemetaailmentname_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_meta_ailment_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Movemetaailmentname_Max_Fields = {
  __typename?: 'pokemon_v2_movemetaailmentname_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Movemetaailmentname_Min_Fields = {
  __typename?: 'pokemon_v2_movemetaailmentname_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_movemetaailmentname" */
export type Pokemon_V2_Movemetaailmentname_Mutation_Response = {
  __typename?: 'pokemon_v2_movemetaailmentname_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Movemetaailmentname>;
};

/** on_conflict condition type for table "pokemon_v2_movemetaailmentname" */
export type Pokemon_V2_Movemetaailmentname_On_Conflict = {
  constraint: Pokemon_V2_Movemetaailmentname_Constraint;
  update_columns?: Array<Pokemon_V2_Movemetaailmentname_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Movemetaailmentname_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_movemetaailmentname". */
export type Pokemon_V2_Movemetaailmentname_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_meta_ailment_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_movemetaailmentname */
export type Pokemon_V2_Movemetaailmentname_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_movemetaailmentname" */
export enum Pokemon_V2_Movemetaailmentname_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveMetaAilmentId = 'move_meta_ailment_id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_movemetaailmentname" */
export type Pokemon_V2_Movemetaailmentname_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_meta_ailment_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Movemetaailmentname_Stddev_Fields = {
  __typename?: 'pokemon_v2_movemetaailmentname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Movemetaailmentname_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_movemetaailmentname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Movemetaailmentname_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_movemetaailmentname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_movemetaailmentname" */
export type Pokemon_V2_Movemetaailmentname_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Movemetaailmentname_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Movemetaailmentname_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_meta_ailment_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Movemetaailmentname_Sum_Fields = {
  __typename?: 'pokemon_v2_movemetaailmentname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_movemetaailmentname" */
export enum Pokemon_V2_Movemetaailmentname_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveMetaAilmentId = 'move_meta_ailment_id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Movemetaailmentname_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Movemetaailmentname_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Movemetaailmentname_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Movemetaailmentname_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Movemetaailmentname_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_movemetaailmentname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Movemetaailmentname_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_movemetaailmentname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Movemetaailmentname_Variance_Fields = {
  __typename?: 'pokemon_v2_movemetaailmentname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_movemetacategory" */
export type Pokemon_V2_Movemetacategory = {
  __typename?: 'pokemon_v2_movemetacategory';
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_movemetacategory" */
export type Pokemon_V2_Movemetacategory_Aggregate = {
  __typename?: 'pokemon_v2_movemetacategory_aggregate';
  aggregate?: Maybe<Pokemon_V2_Movemetacategory_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Movemetacategory>;
};

/** aggregate fields of "pokemon_v2_movemetacategory" */
export type Pokemon_V2_Movemetacategory_Aggregate_Fields = {
  __typename?: 'pokemon_v2_movemetacategory_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Movemetacategory_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Movemetacategory_Max_Fields>;
  min?: Maybe<Pokemon_V2_Movemetacategory_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Movemetacategory_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Movemetacategory_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Movemetacategory_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Movemetacategory_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Movemetacategory_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Movemetacategory_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Movemetacategory_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movemetacategory" */
export type Pokemon_V2_Movemetacategory_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Movemetacategory_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Movemetacategory_Avg_Fields = {
  __typename?: 'pokemon_v2_movemetacategory_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movemetacategory". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Movemetacategory_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Movemetacategory_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Movemetacategory_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Movemetacategory_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_movemetacategory" */
export enum Pokemon_V2_Movemetacategory_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2MovemetacategoryPkey = 'pokemon_v2_movemetacategory_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_movemetacategory" */
export type Pokemon_V2_Movemetacategory_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_movemetacategory" */
export type Pokemon_V2_Movemetacategory_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Movemetacategory_Max_Fields = {
  __typename?: 'pokemon_v2_movemetacategory_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Movemetacategory_Min_Fields = {
  __typename?: 'pokemon_v2_movemetacategory_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_movemetacategory" */
export type Pokemon_V2_Movemetacategory_Mutation_Response = {
  __typename?: 'pokemon_v2_movemetacategory_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Movemetacategory>;
};

/** on_conflict condition type for table "pokemon_v2_movemetacategory" */
export type Pokemon_V2_Movemetacategory_On_Conflict = {
  constraint: Pokemon_V2_Movemetacategory_Constraint;
  update_columns?: Array<Pokemon_V2_Movemetacategory_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Movemetacategory_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_movemetacategory". */
export type Pokemon_V2_Movemetacategory_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_movemetacategory */
export type Pokemon_V2_Movemetacategory_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_movemetacategory" */
export enum Pokemon_V2_Movemetacategory_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_movemetacategory" */
export type Pokemon_V2_Movemetacategory_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Movemetacategory_Stddev_Fields = {
  __typename?: 'pokemon_v2_movemetacategory_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Movemetacategory_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_movemetacategory_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Movemetacategory_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_movemetacategory_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_movemetacategory" */
export type Pokemon_V2_Movemetacategory_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Movemetacategory_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Movemetacategory_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Movemetacategory_Sum_Fields = {
  __typename?: 'pokemon_v2_movemetacategory_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_movemetacategory" */
export enum Pokemon_V2_Movemetacategory_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Movemetacategory_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Movemetacategory_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Movemetacategory_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Movemetacategory_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Movemetacategory_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_movemetacategory_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Movemetacategory_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_movemetacategory_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Movemetacategory_Variance_Fields = {
  __typename?: 'pokemon_v2_movemetacategory_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_movemetacategorydescription" */
export type Pokemon_V2_Movemetacategorydescription = {
  __typename?: 'pokemon_v2_movemetacategorydescription';
  description: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  move_meta_category_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_movemetacategorydescription" */
export type Pokemon_V2_Movemetacategorydescription_Aggregate = {
  __typename?: 'pokemon_v2_movemetacategorydescription_aggregate';
  aggregate?: Maybe<Pokemon_V2_Movemetacategorydescription_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Movemetacategorydescription>;
};

/** aggregate fields of "pokemon_v2_movemetacategorydescription" */
export type Pokemon_V2_Movemetacategorydescription_Aggregate_Fields = {
  __typename?: 'pokemon_v2_movemetacategorydescription_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Movemetacategorydescription_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Movemetacategorydescription_Max_Fields>;
  min?: Maybe<Pokemon_V2_Movemetacategorydescription_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Movemetacategorydescription_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Movemetacategorydescription_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Movemetacategorydescription_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Movemetacategorydescription_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Movemetacategorydescription_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Movemetacategorydescription_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Movemetacategorydescription_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movemetacategorydescription" */
export type Pokemon_V2_Movemetacategorydescription_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Movemetacategorydescription_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Movemetacategorydescription_Avg_Fields = {
  __typename?: 'pokemon_v2_movemetacategorydescription_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_meta_category_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movemetacategorydescription". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Movemetacategorydescription_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Movemetacategorydescription_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Movemetacategorydescription_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Movemetacategorydescription_Bool_Exp>>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  move_meta_category_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_movemetacategorydescription" */
export enum Pokemon_V2_Movemetacategorydescription_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2MovemetacategorydescriptionPkey = 'pokemon_v2_movemetacategorydescription_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_movemetacategorydescription" */
export type Pokemon_V2_Movemetacategorydescription_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_meta_category_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_movemetacategorydescription" */
export type Pokemon_V2_Movemetacategorydescription_Insert_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_meta_category_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Movemetacategorydescription_Max_Fields = {
  __typename?: 'pokemon_v2_movemetacategorydescription_max_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_meta_category_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Movemetacategorydescription_Min_Fields = {
  __typename?: 'pokemon_v2_movemetacategorydescription_min_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_meta_category_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_movemetacategorydescription" */
export type Pokemon_V2_Movemetacategorydescription_Mutation_Response = {
  __typename?: 'pokemon_v2_movemetacategorydescription_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Movemetacategorydescription>;
};

/** on_conflict condition type for table "pokemon_v2_movemetacategorydescription" */
export type Pokemon_V2_Movemetacategorydescription_On_Conflict = {
  constraint: Pokemon_V2_Movemetacategorydescription_Constraint;
  update_columns?: Array<Pokemon_V2_Movemetacategorydescription_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Movemetacategorydescription_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_movemetacategorydescription". */
export type Pokemon_V2_Movemetacategorydescription_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_meta_category_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_movemetacategorydescription */
export type Pokemon_V2_Movemetacategorydescription_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_movemetacategorydescription" */
export enum Pokemon_V2_Movemetacategorydescription_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveMetaCategoryId = 'move_meta_category_id'
}

/** input type for updating data in table "pokemon_v2_movemetacategorydescription" */
export type Pokemon_V2_Movemetacategorydescription_Set_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_meta_category_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Movemetacategorydescription_Stddev_Fields = {
  __typename?: 'pokemon_v2_movemetacategorydescription_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_meta_category_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Movemetacategorydescription_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_movemetacategorydescription_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_meta_category_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Movemetacategorydescription_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_movemetacategorydescription_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_meta_category_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_movemetacategorydescription" */
export type Pokemon_V2_Movemetacategorydescription_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Movemetacategorydescription_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Movemetacategorydescription_Stream_Cursor_Value_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_meta_category_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Movemetacategorydescription_Sum_Fields = {
  __typename?: 'pokemon_v2_movemetacategorydescription_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_meta_category_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_movemetacategorydescription" */
export enum Pokemon_V2_Movemetacategorydescription_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveMetaCategoryId = 'move_meta_category_id'
}

export type Pokemon_V2_Movemetacategorydescription_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Movemetacategorydescription_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Movemetacategorydescription_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Movemetacategorydescription_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Movemetacategorydescription_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_movemetacategorydescription_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_meta_category_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Movemetacategorydescription_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_movemetacategorydescription_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_meta_category_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Movemetacategorydescription_Variance_Fields = {
  __typename?: 'pokemon_v2_movemetacategorydescription_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_meta_category_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_movemetastatchange" */
export type Pokemon_V2_Movemetastatchange = {
  __typename?: 'pokemon_v2_movemetastatchange';
  change: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  move_id?: Maybe<Scalars['Int']['output']>;
  stat_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_movemetastatchange" */
export type Pokemon_V2_Movemetastatchange_Aggregate = {
  __typename?: 'pokemon_v2_movemetastatchange_aggregate';
  aggregate?: Maybe<Pokemon_V2_Movemetastatchange_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Movemetastatchange>;
};

/** aggregate fields of "pokemon_v2_movemetastatchange" */
export type Pokemon_V2_Movemetastatchange_Aggregate_Fields = {
  __typename?: 'pokemon_v2_movemetastatchange_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Movemetastatchange_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Movemetastatchange_Max_Fields>;
  min?: Maybe<Pokemon_V2_Movemetastatchange_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Movemetastatchange_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Movemetastatchange_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Movemetastatchange_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Movemetastatchange_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Movemetastatchange_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Movemetastatchange_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Movemetastatchange_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movemetastatchange" */
export type Pokemon_V2_Movemetastatchange_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Movemetastatchange_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Movemetastatchange_Avg_Fields = {
  __typename?: 'pokemon_v2_movemetastatchange_avg_fields';
  change?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movemetastatchange". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Movemetastatchange_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Movemetastatchange_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Movemetastatchange_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Movemetastatchange_Bool_Exp>>;
  change?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  move_id?: InputMaybe<Int_Comparison_Exp>;
  stat_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_movemetastatchange" */
export enum Pokemon_V2_Movemetastatchange_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2MovemetastatchangePkey = 'pokemon_v2_movemetastatchange_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_movemetastatchange" */
export type Pokemon_V2_Movemetastatchange_Inc_Input = {
  change?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  move_id?: InputMaybe<Scalars['Int']['input']>;
  stat_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_movemetastatchange" */
export type Pokemon_V2_Movemetastatchange_Insert_Input = {
  change?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  move_id?: InputMaybe<Scalars['Int']['input']>;
  stat_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Movemetastatchange_Max_Fields = {
  __typename?: 'pokemon_v2_movemetastatchange_max_fields';
  change?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  stat_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Movemetastatchange_Min_Fields = {
  __typename?: 'pokemon_v2_movemetastatchange_min_fields';
  change?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  stat_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_movemetastatchange" */
export type Pokemon_V2_Movemetastatchange_Mutation_Response = {
  __typename?: 'pokemon_v2_movemetastatchange_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Movemetastatchange>;
};

/** on_conflict condition type for table "pokemon_v2_movemetastatchange" */
export type Pokemon_V2_Movemetastatchange_On_Conflict = {
  constraint: Pokemon_V2_Movemetastatchange_Constraint;
  update_columns?: Array<Pokemon_V2_Movemetastatchange_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Movemetastatchange_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_movemetastatchange". */
export type Pokemon_V2_Movemetastatchange_Order_By = {
  change?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_movemetastatchange */
export type Pokemon_V2_Movemetastatchange_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_movemetastatchange" */
export enum Pokemon_V2_Movemetastatchange_Select_Column {
  /** column name */
  Change = 'change',
  /** column name */
  Id = 'id',
  /** column name */
  MoveId = 'move_id',
  /** column name */
  StatId = 'stat_id'
}

/** input type for updating data in table "pokemon_v2_movemetastatchange" */
export type Pokemon_V2_Movemetastatchange_Set_Input = {
  change?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  move_id?: InputMaybe<Scalars['Int']['input']>;
  stat_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Movemetastatchange_Stddev_Fields = {
  __typename?: 'pokemon_v2_movemetastatchange_stddev_fields';
  change?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Movemetastatchange_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_movemetastatchange_stddev_pop_fields';
  change?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Movemetastatchange_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_movemetastatchange_stddev_samp_fields';
  change?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_movemetastatchange" */
export type Pokemon_V2_Movemetastatchange_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Movemetastatchange_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Movemetastatchange_Stream_Cursor_Value_Input = {
  change?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  move_id?: InputMaybe<Scalars['Int']['input']>;
  stat_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Movemetastatchange_Sum_Fields = {
  __typename?: 'pokemon_v2_movemetastatchange_sum_fields';
  change?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  stat_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_movemetastatchange" */
export enum Pokemon_V2_Movemetastatchange_Update_Column {
  /** column name */
  Change = 'change',
  /** column name */
  Id = 'id',
  /** column name */
  MoveId = 'move_id',
  /** column name */
  StatId = 'stat_id'
}

export type Pokemon_V2_Movemetastatchange_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Movemetastatchange_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Movemetastatchange_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Movemetastatchange_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Movemetastatchange_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_movemetastatchange_var_pop_fields';
  change?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Movemetastatchange_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_movemetastatchange_var_samp_fields';
  change?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Movemetastatchange_Variance_Fields = {
  __typename?: 'pokemon_v2_movemetastatchange_variance_fields';
  change?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_movename" */
export type Pokemon_V2_Movename = {
  __typename?: 'pokemon_v2_movename';
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_movename" */
export type Pokemon_V2_Movename_Aggregate = {
  __typename?: 'pokemon_v2_movename_aggregate';
  aggregate?: Maybe<Pokemon_V2_Movename_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Movename>;
};

/** aggregate fields of "pokemon_v2_movename" */
export type Pokemon_V2_Movename_Aggregate_Fields = {
  __typename?: 'pokemon_v2_movename_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Movename_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Movename_Max_Fields>;
  min?: Maybe<Pokemon_V2_Movename_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Movename_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Movename_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Movename_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Movename_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Movename_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Movename_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Movename_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movename" */
export type Pokemon_V2_Movename_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Movename_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Movename_Avg_Fields = {
  __typename?: 'pokemon_v2_movename_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movename". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Movename_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Movename_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Movename_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Movename_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  move_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_movename" */
export enum Pokemon_V2_Movename_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2MovenamePkey = 'pokemon_v2_movename_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_movename" */
export type Pokemon_V2_Movename_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_movename" */
export type Pokemon_V2_Movename_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Movename_Max_Fields = {
  __typename?: 'pokemon_v2_movename_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Movename_Min_Fields = {
  __typename?: 'pokemon_v2_movename_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_movename" */
export type Pokemon_V2_Movename_Mutation_Response = {
  __typename?: 'pokemon_v2_movename_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Movename>;
};

/** on_conflict condition type for table "pokemon_v2_movename" */
export type Pokemon_V2_Movename_On_Conflict = {
  constraint: Pokemon_V2_Movename_Constraint;
  update_columns?: Array<Pokemon_V2_Movename_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Movename_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_movename". */
export type Pokemon_V2_Movename_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_movename */
export type Pokemon_V2_Movename_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_movename" */
export enum Pokemon_V2_Movename_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveId = 'move_id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_movename" */
export type Pokemon_V2_Movename_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Movename_Stddev_Fields = {
  __typename?: 'pokemon_v2_movename_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Movename_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_movename_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Movename_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_movename_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_movename" */
export type Pokemon_V2_Movename_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Movename_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Movename_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Movename_Sum_Fields = {
  __typename?: 'pokemon_v2_movename_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_movename" */
export enum Pokemon_V2_Movename_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveId = 'move_id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Movename_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Movename_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Movename_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Movename_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Movename_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_movename_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Movename_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_movename_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Movename_Variance_Fields = {
  __typename?: 'pokemon_v2_movename_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_movetarget" */
export type Pokemon_V2_Movetarget = {
  __typename?: 'pokemon_v2_movetarget';
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_movetarget" */
export type Pokemon_V2_Movetarget_Aggregate = {
  __typename?: 'pokemon_v2_movetarget_aggregate';
  aggregate?: Maybe<Pokemon_V2_Movetarget_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Movetarget>;
};

/** aggregate fields of "pokemon_v2_movetarget" */
export type Pokemon_V2_Movetarget_Aggregate_Fields = {
  __typename?: 'pokemon_v2_movetarget_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Movetarget_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Movetarget_Max_Fields>;
  min?: Maybe<Pokemon_V2_Movetarget_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Movetarget_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Movetarget_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Movetarget_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Movetarget_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Movetarget_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Movetarget_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Movetarget_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movetarget" */
export type Pokemon_V2_Movetarget_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Movetarget_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Movetarget_Avg_Fields = {
  __typename?: 'pokemon_v2_movetarget_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movetarget". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Movetarget_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Movetarget_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Movetarget_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Movetarget_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_movetarget" */
export enum Pokemon_V2_Movetarget_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2MovetargetPkey = 'pokemon_v2_movetarget_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_movetarget" */
export type Pokemon_V2_Movetarget_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_movetarget" */
export type Pokemon_V2_Movetarget_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Movetarget_Max_Fields = {
  __typename?: 'pokemon_v2_movetarget_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Movetarget_Min_Fields = {
  __typename?: 'pokemon_v2_movetarget_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_movetarget" */
export type Pokemon_V2_Movetarget_Mutation_Response = {
  __typename?: 'pokemon_v2_movetarget_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Movetarget>;
};

/** on_conflict condition type for table "pokemon_v2_movetarget" */
export type Pokemon_V2_Movetarget_On_Conflict = {
  constraint: Pokemon_V2_Movetarget_Constraint;
  update_columns?: Array<Pokemon_V2_Movetarget_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Movetarget_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_movetarget". */
export type Pokemon_V2_Movetarget_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_movetarget */
export type Pokemon_V2_Movetarget_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_movetarget" */
export enum Pokemon_V2_Movetarget_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_movetarget" */
export type Pokemon_V2_Movetarget_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Movetarget_Stddev_Fields = {
  __typename?: 'pokemon_v2_movetarget_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Movetarget_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_movetarget_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Movetarget_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_movetarget_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_movetarget" */
export type Pokemon_V2_Movetarget_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Movetarget_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Movetarget_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Movetarget_Sum_Fields = {
  __typename?: 'pokemon_v2_movetarget_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_movetarget" */
export enum Pokemon_V2_Movetarget_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Movetarget_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Movetarget_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Movetarget_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Movetarget_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Movetarget_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_movetarget_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Movetarget_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_movetarget_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Movetarget_Variance_Fields = {
  __typename?: 'pokemon_v2_movetarget_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_movetargetdescription" */
export type Pokemon_V2_Movetargetdescription = {
  __typename?: 'pokemon_v2_movetargetdescription';
  description: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  move_target_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_movetargetdescription" */
export type Pokemon_V2_Movetargetdescription_Aggregate = {
  __typename?: 'pokemon_v2_movetargetdescription_aggregate';
  aggregate?: Maybe<Pokemon_V2_Movetargetdescription_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Movetargetdescription>;
};

/** aggregate fields of "pokemon_v2_movetargetdescription" */
export type Pokemon_V2_Movetargetdescription_Aggregate_Fields = {
  __typename?: 'pokemon_v2_movetargetdescription_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Movetargetdescription_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Movetargetdescription_Max_Fields>;
  min?: Maybe<Pokemon_V2_Movetargetdescription_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Movetargetdescription_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Movetargetdescription_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Movetargetdescription_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Movetargetdescription_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Movetargetdescription_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Movetargetdescription_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Movetargetdescription_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movetargetdescription" */
export type Pokemon_V2_Movetargetdescription_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Movetargetdescription_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Movetargetdescription_Avg_Fields = {
  __typename?: 'pokemon_v2_movetargetdescription_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movetargetdescription". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Movetargetdescription_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Movetargetdescription_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Movetargetdescription_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Movetargetdescription_Bool_Exp>>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  move_target_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_movetargetdescription" */
export enum Pokemon_V2_Movetargetdescription_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2MovetargetdescriptionPkey = 'pokemon_v2_movetargetdescription_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_movetargetdescription" */
export type Pokemon_V2_Movetargetdescription_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_target_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_movetargetdescription" */
export type Pokemon_V2_Movetargetdescription_Insert_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_target_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Movetargetdescription_Max_Fields = {
  __typename?: 'pokemon_v2_movetargetdescription_max_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_target_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Movetargetdescription_Min_Fields = {
  __typename?: 'pokemon_v2_movetargetdescription_min_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_target_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_movetargetdescription" */
export type Pokemon_V2_Movetargetdescription_Mutation_Response = {
  __typename?: 'pokemon_v2_movetargetdescription_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Movetargetdescription>;
};

/** on_conflict condition type for table "pokemon_v2_movetargetdescription" */
export type Pokemon_V2_Movetargetdescription_On_Conflict = {
  constraint: Pokemon_V2_Movetargetdescription_Constraint;
  update_columns?: Array<Pokemon_V2_Movetargetdescription_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Movetargetdescription_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_movetargetdescription". */
export type Pokemon_V2_Movetargetdescription_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_target_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_movetargetdescription */
export type Pokemon_V2_Movetargetdescription_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_movetargetdescription" */
export enum Pokemon_V2_Movetargetdescription_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveTargetId = 'move_target_id'
}

/** input type for updating data in table "pokemon_v2_movetargetdescription" */
export type Pokemon_V2_Movetargetdescription_Set_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_target_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Movetargetdescription_Stddev_Fields = {
  __typename?: 'pokemon_v2_movetargetdescription_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Movetargetdescription_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_movetargetdescription_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Movetargetdescription_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_movetargetdescription_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_movetargetdescription" */
export type Pokemon_V2_Movetargetdescription_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Movetargetdescription_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Movetargetdescription_Stream_Cursor_Value_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_target_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Movetargetdescription_Sum_Fields = {
  __typename?: 'pokemon_v2_movetargetdescription_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_target_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_movetargetdescription" */
export enum Pokemon_V2_Movetargetdescription_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveTargetId = 'move_target_id'
}

export type Pokemon_V2_Movetargetdescription_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Movetargetdescription_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Movetargetdescription_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Movetargetdescription_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Movetargetdescription_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_movetargetdescription_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Movetargetdescription_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_movetargetdescription_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Movetargetdescription_Variance_Fields = {
  __typename?: 'pokemon_v2_movetargetdescription_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_movetargetname" */
export type Pokemon_V2_Movetargetname = {
  __typename?: 'pokemon_v2_movetargetname';
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  move_target_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_movetargetname" */
export type Pokemon_V2_Movetargetname_Aggregate = {
  __typename?: 'pokemon_v2_movetargetname_aggregate';
  aggregate?: Maybe<Pokemon_V2_Movetargetname_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Movetargetname>;
};

/** aggregate fields of "pokemon_v2_movetargetname" */
export type Pokemon_V2_Movetargetname_Aggregate_Fields = {
  __typename?: 'pokemon_v2_movetargetname_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Movetargetname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Movetargetname_Max_Fields>;
  min?: Maybe<Pokemon_V2_Movetargetname_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Movetargetname_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Movetargetname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Movetargetname_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Movetargetname_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Movetargetname_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Movetargetname_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Movetargetname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movetargetname" */
export type Pokemon_V2_Movetargetname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Movetargetname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Movetargetname_Avg_Fields = {
  __typename?: 'pokemon_v2_movetargetname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movetargetname". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Movetargetname_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Movetargetname_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Movetargetname_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Movetargetname_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  move_target_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_movetargetname" */
export enum Pokemon_V2_Movetargetname_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2MovetargetnamePkey = 'pokemon_v2_movetargetname_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_movetargetname" */
export type Pokemon_V2_Movetargetname_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_target_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_movetargetname" */
export type Pokemon_V2_Movetargetname_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_target_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Movetargetname_Max_Fields = {
  __typename?: 'pokemon_v2_movetargetname_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_target_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Movetargetname_Min_Fields = {
  __typename?: 'pokemon_v2_movetargetname_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_target_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_movetargetname" */
export type Pokemon_V2_Movetargetname_Mutation_Response = {
  __typename?: 'pokemon_v2_movetargetname_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Movetargetname>;
};

/** on_conflict condition type for table "pokemon_v2_movetargetname" */
export type Pokemon_V2_Movetargetname_On_Conflict = {
  constraint: Pokemon_V2_Movetargetname_Constraint;
  update_columns?: Array<Pokemon_V2_Movetargetname_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Movetargetname_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_movetargetname". */
export type Pokemon_V2_Movetargetname_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_target_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_movetargetname */
export type Pokemon_V2_Movetargetname_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_movetargetname" */
export enum Pokemon_V2_Movetargetname_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveTargetId = 'move_target_id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_movetargetname" */
export type Pokemon_V2_Movetargetname_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_target_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Movetargetname_Stddev_Fields = {
  __typename?: 'pokemon_v2_movetargetname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Movetargetname_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_movetargetname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Movetargetname_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_movetargetname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_movetargetname" */
export type Pokemon_V2_Movetargetname_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Movetargetname_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Movetargetname_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  move_target_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Movetargetname_Sum_Fields = {
  __typename?: 'pokemon_v2_movetargetname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_target_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_movetargetname" */
export enum Pokemon_V2_Movetargetname_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveTargetId = 'move_target_id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Movetargetname_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Movetargetname_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Movetargetname_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Movetargetname_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Movetargetname_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_movetargetname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Movetargetname_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_movetargetname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Movetargetname_Variance_Fields = {
  __typename?: 'pokemon_v2_movetargetname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_nature" */
export type Pokemon_V2_Nature = {
  __typename?: 'pokemon_v2_nature';
  decreased_stat_id?: Maybe<Scalars['Int']['output']>;
  game_index: Scalars['Int']['output'];
  hates_flavor_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  increased_stat_id?: Maybe<Scalars['Int']['output']>;
  likes_flavor_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_nature" */
export type Pokemon_V2_Nature_Aggregate = {
  __typename?: 'pokemon_v2_nature_aggregate';
  aggregate?: Maybe<Pokemon_V2_Nature_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Nature>;
};

/** aggregate fields of "pokemon_v2_nature" */
export type Pokemon_V2_Nature_Aggregate_Fields = {
  __typename?: 'pokemon_v2_nature_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Nature_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Nature_Max_Fields>;
  min?: Maybe<Pokemon_V2_Nature_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Nature_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Nature_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Nature_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Nature_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Nature_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Nature_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Nature_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_nature" */
export type Pokemon_V2_Nature_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Nature_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Nature_Avg_Fields = {
  __typename?: 'pokemon_v2_nature_avg_fields';
  decreased_stat_id?: Maybe<Scalars['Float']['output']>;
  game_index?: Maybe<Scalars['Float']['output']>;
  hates_flavor_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  increased_stat_id?: Maybe<Scalars['Float']['output']>;
  likes_flavor_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_nature". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Nature_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Nature_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Nature_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Nature_Bool_Exp>>;
  decreased_stat_id?: InputMaybe<Int_Comparison_Exp>;
  game_index?: InputMaybe<Int_Comparison_Exp>;
  hates_flavor_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  increased_stat_id?: InputMaybe<Int_Comparison_Exp>;
  likes_flavor_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_nature" */
export enum Pokemon_V2_Nature_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2NaturePkey = 'pokemon_v2_nature_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_nature" */
export type Pokemon_V2_Nature_Inc_Input = {
  decreased_stat_id?: InputMaybe<Scalars['Int']['input']>;
  game_index?: InputMaybe<Scalars['Int']['input']>;
  hates_flavor_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  increased_stat_id?: InputMaybe<Scalars['Int']['input']>;
  likes_flavor_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_nature" */
export type Pokemon_V2_Nature_Insert_Input = {
  decreased_stat_id?: InputMaybe<Scalars['Int']['input']>;
  game_index?: InputMaybe<Scalars['Int']['input']>;
  hates_flavor_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  increased_stat_id?: InputMaybe<Scalars['Int']['input']>;
  likes_flavor_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Nature_Max_Fields = {
  __typename?: 'pokemon_v2_nature_max_fields';
  decreased_stat_id?: Maybe<Scalars['Int']['output']>;
  game_index?: Maybe<Scalars['Int']['output']>;
  hates_flavor_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  increased_stat_id?: Maybe<Scalars['Int']['output']>;
  likes_flavor_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Nature_Min_Fields = {
  __typename?: 'pokemon_v2_nature_min_fields';
  decreased_stat_id?: Maybe<Scalars['Int']['output']>;
  game_index?: Maybe<Scalars['Int']['output']>;
  hates_flavor_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  increased_stat_id?: Maybe<Scalars['Int']['output']>;
  likes_flavor_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_nature" */
export type Pokemon_V2_Nature_Mutation_Response = {
  __typename?: 'pokemon_v2_nature_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Nature>;
};

/** on_conflict condition type for table "pokemon_v2_nature" */
export type Pokemon_V2_Nature_On_Conflict = {
  constraint: Pokemon_V2_Nature_Constraint;
  update_columns?: Array<Pokemon_V2_Nature_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Nature_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_nature". */
export type Pokemon_V2_Nature_Order_By = {
  decreased_stat_id?: InputMaybe<Order_By>;
  game_index?: InputMaybe<Order_By>;
  hates_flavor_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  increased_stat_id?: InputMaybe<Order_By>;
  likes_flavor_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_nature */
export type Pokemon_V2_Nature_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_nature" */
export enum Pokemon_V2_Nature_Select_Column {
  /** column name */
  DecreasedStatId = 'decreased_stat_id',
  /** column name */
  GameIndex = 'game_index',
  /** column name */
  HatesFlavorId = 'hates_flavor_id',
  /** column name */
  Id = 'id',
  /** column name */
  IncreasedStatId = 'increased_stat_id',
  /** column name */
  LikesFlavorId = 'likes_flavor_id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_nature" */
export type Pokemon_V2_Nature_Set_Input = {
  decreased_stat_id?: InputMaybe<Scalars['Int']['input']>;
  game_index?: InputMaybe<Scalars['Int']['input']>;
  hates_flavor_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  increased_stat_id?: InputMaybe<Scalars['Int']['input']>;
  likes_flavor_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Nature_Stddev_Fields = {
  __typename?: 'pokemon_v2_nature_stddev_fields';
  decreased_stat_id?: Maybe<Scalars['Float']['output']>;
  game_index?: Maybe<Scalars['Float']['output']>;
  hates_flavor_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  increased_stat_id?: Maybe<Scalars['Float']['output']>;
  likes_flavor_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Nature_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_nature_stddev_pop_fields';
  decreased_stat_id?: Maybe<Scalars['Float']['output']>;
  game_index?: Maybe<Scalars['Float']['output']>;
  hates_flavor_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  increased_stat_id?: Maybe<Scalars['Float']['output']>;
  likes_flavor_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Nature_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_nature_stddev_samp_fields';
  decreased_stat_id?: Maybe<Scalars['Float']['output']>;
  game_index?: Maybe<Scalars['Float']['output']>;
  hates_flavor_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  increased_stat_id?: Maybe<Scalars['Float']['output']>;
  likes_flavor_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_nature" */
export type Pokemon_V2_Nature_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Nature_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Nature_Stream_Cursor_Value_Input = {
  decreased_stat_id?: InputMaybe<Scalars['Int']['input']>;
  game_index?: InputMaybe<Scalars['Int']['input']>;
  hates_flavor_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  increased_stat_id?: InputMaybe<Scalars['Int']['input']>;
  likes_flavor_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Nature_Sum_Fields = {
  __typename?: 'pokemon_v2_nature_sum_fields';
  decreased_stat_id?: Maybe<Scalars['Int']['output']>;
  game_index?: Maybe<Scalars['Int']['output']>;
  hates_flavor_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  increased_stat_id?: Maybe<Scalars['Int']['output']>;
  likes_flavor_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_nature" */
export enum Pokemon_V2_Nature_Update_Column {
  /** column name */
  DecreasedStatId = 'decreased_stat_id',
  /** column name */
  GameIndex = 'game_index',
  /** column name */
  HatesFlavorId = 'hates_flavor_id',
  /** column name */
  Id = 'id',
  /** column name */
  IncreasedStatId = 'increased_stat_id',
  /** column name */
  LikesFlavorId = 'likes_flavor_id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Nature_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Nature_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Nature_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Nature_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Nature_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_nature_var_pop_fields';
  decreased_stat_id?: Maybe<Scalars['Float']['output']>;
  game_index?: Maybe<Scalars['Float']['output']>;
  hates_flavor_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  increased_stat_id?: Maybe<Scalars['Float']['output']>;
  likes_flavor_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Nature_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_nature_var_samp_fields';
  decreased_stat_id?: Maybe<Scalars['Float']['output']>;
  game_index?: Maybe<Scalars['Float']['output']>;
  hates_flavor_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  increased_stat_id?: Maybe<Scalars['Float']['output']>;
  likes_flavor_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Nature_Variance_Fields = {
  __typename?: 'pokemon_v2_nature_variance_fields';
  decreased_stat_id?: Maybe<Scalars['Float']['output']>;
  game_index?: Maybe<Scalars['Float']['output']>;
  hates_flavor_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  increased_stat_id?: Maybe<Scalars['Float']['output']>;
  likes_flavor_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_naturebattlestylepreference" */
export type Pokemon_V2_Naturebattlestylepreference = {
  __typename?: 'pokemon_v2_naturebattlestylepreference';
  high_hp_preference: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  low_hp_preference: Scalars['Int']['output'];
  move_battle_style_id?: Maybe<Scalars['Int']['output']>;
  nature_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_naturebattlestylepreference" */
export type Pokemon_V2_Naturebattlestylepreference_Aggregate = {
  __typename?: 'pokemon_v2_naturebattlestylepreference_aggregate';
  aggregate?: Maybe<Pokemon_V2_Naturebattlestylepreference_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Naturebattlestylepreference>;
};

/** aggregate fields of "pokemon_v2_naturebattlestylepreference" */
export type Pokemon_V2_Naturebattlestylepreference_Aggregate_Fields = {
  __typename?: 'pokemon_v2_naturebattlestylepreference_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Naturebattlestylepreference_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Naturebattlestylepreference_Max_Fields>;
  min?: Maybe<Pokemon_V2_Naturebattlestylepreference_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Naturebattlestylepreference_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Naturebattlestylepreference_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Naturebattlestylepreference_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Naturebattlestylepreference_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Naturebattlestylepreference_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Naturebattlestylepreference_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Naturebattlestylepreference_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_naturebattlestylepreference" */
export type Pokemon_V2_Naturebattlestylepreference_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Naturebattlestylepreference_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Naturebattlestylepreference_Avg_Fields = {
  __typename?: 'pokemon_v2_naturebattlestylepreference_avg_fields';
  high_hp_preference?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  low_hp_preference?: Maybe<Scalars['Float']['output']>;
  move_battle_style_id?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_naturebattlestylepreference". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Naturebattlestylepreference_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Naturebattlestylepreference_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Naturebattlestylepreference_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Naturebattlestylepreference_Bool_Exp>>;
  high_hp_preference?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  low_hp_preference?: InputMaybe<Int_Comparison_Exp>;
  move_battle_style_id?: InputMaybe<Int_Comparison_Exp>;
  nature_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_naturebattlestylepreference" */
export enum Pokemon_V2_Naturebattlestylepreference_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2NaturebattlestylepreferencePkey = 'pokemon_v2_naturebattlestylepreference_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_naturebattlestylepreference" */
export type Pokemon_V2_Naturebattlestylepreference_Inc_Input = {
  high_hp_preference?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  low_hp_preference?: InputMaybe<Scalars['Int']['input']>;
  move_battle_style_id?: InputMaybe<Scalars['Int']['input']>;
  nature_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_naturebattlestylepreference" */
export type Pokemon_V2_Naturebattlestylepreference_Insert_Input = {
  high_hp_preference?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  low_hp_preference?: InputMaybe<Scalars['Int']['input']>;
  move_battle_style_id?: InputMaybe<Scalars['Int']['input']>;
  nature_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Naturebattlestylepreference_Max_Fields = {
  __typename?: 'pokemon_v2_naturebattlestylepreference_max_fields';
  high_hp_preference?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  low_hp_preference?: Maybe<Scalars['Int']['output']>;
  move_battle_style_id?: Maybe<Scalars['Int']['output']>;
  nature_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Naturebattlestylepreference_Min_Fields = {
  __typename?: 'pokemon_v2_naturebattlestylepreference_min_fields';
  high_hp_preference?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  low_hp_preference?: Maybe<Scalars['Int']['output']>;
  move_battle_style_id?: Maybe<Scalars['Int']['output']>;
  nature_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_naturebattlestylepreference" */
export type Pokemon_V2_Naturebattlestylepreference_Mutation_Response = {
  __typename?: 'pokemon_v2_naturebattlestylepreference_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Naturebattlestylepreference>;
};

/** on_conflict condition type for table "pokemon_v2_naturebattlestylepreference" */
export type Pokemon_V2_Naturebattlestylepreference_On_Conflict = {
  constraint: Pokemon_V2_Naturebattlestylepreference_Constraint;
  update_columns?: Array<Pokemon_V2_Naturebattlestylepreference_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Naturebattlestylepreference_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_naturebattlestylepreference". */
export type Pokemon_V2_Naturebattlestylepreference_Order_By = {
  high_hp_preference?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  low_hp_preference?: InputMaybe<Order_By>;
  move_battle_style_id?: InputMaybe<Order_By>;
  nature_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_naturebattlestylepreference */
export type Pokemon_V2_Naturebattlestylepreference_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_naturebattlestylepreference" */
export enum Pokemon_V2_Naturebattlestylepreference_Select_Column {
  /** column name */
  HighHpPreference = 'high_hp_preference',
  /** column name */
  Id = 'id',
  /** column name */
  LowHpPreference = 'low_hp_preference',
  /** column name */
  MoveBattleStyleId = 'move_battle_style_id',
  /** column name */
  NatureId = 'nature_id'
}

/** input type for updating data in table "pokemon_v2_naturebattlestylepreference" */
export type Pokemon_V2_Naturebattlestylepreference_Set_Input = {
  high_hp_preference?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  low_hp_preference?: InputMaybe<Scalars['Int']['input']>;
  move_battle_style_id?: InputMaybe<Scalars['Int']['input']>;
  nature_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Naturebattlestylepreference_Stddev_Fields = {
  __typename?: 'pokemon_v2_naturebattlestylepreference_stddev_fields';
  high_hp_preference?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  low_hp_preference?: Maybe<Scalars['Float']['output']>;
  move_battle_style_id?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Naturebattlestylepreference_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_naturebattlestylepreference_stddev_pop_fields';
  high_hp_preference?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  low_hp_preference?: Maybe<Scalars['Float']['output']>;
  move_battle_style_id?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Naturebattlestylepreference_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_naturebattlestylepreference_stddev_samp_fields';
  high_hp_preference?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  low_hp_preference?: Maybe<Scalars['Float']['output']>;
  move_battle_style_id?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_naturebattlestylepreference" */
export type Pokemon_V2_Naturebattlestylepreference_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Naturebattlestylepreference_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Naturebattlestylepreference_Stream_Cursor_Value_Input = {
  high_hp_preference?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  low_hp_preference?: InputMaybe<Scalars['Int']['input']>;
  move_battle_style_id?: InputMaybe<Scalars['Int']['input']>;
  nature_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Naturebattlestylepreference_Sum_Fields = {
  __typename?: 'pokemon_v2_naturebattlestylepreference_sum_fields';
  high_hp_preference?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  low_hp_preference?: Maybe<Scalars['Int']['output']>;
  move_battle_style_id?: Maybe<Scalars['Int']['output']>;
  nature_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_naturebattlestylepreference" */
export enum Pokemon_V2_Naturebattlestylepreference_Update_Column {
  /** column name */
  HighHpPreference = 'high_hp_preference',
  /** column name */
  Id = 'id',
  /** column name */
  LowHpPreference = 'low_hp_preference',
  /** column name */
  MoveBattleStyleId = 'move_battle_style_id',
  /** column name */
  NatureId = 'nature_id'
}

export type Pokemon_V2_Naturebattlestylepreference_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Naturebattlestylepreference_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Naturebattlestylepreference_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Naturebattlestylepreference_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Naturebattlestylepreference_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_naturebattlestylepreference_var_pop_fields';
  high_hp_preference?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  low_hp_preference?: Maybe<Scalars['Float']['output']>;
  move_battle_style_id?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Naturebattlestylepreference_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_naturebattlestylepreference_var_samp_fields';
  high_hp_preference?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  low_hp_preference?: Maybe<Scalars['Float']['output']>;
  move_battle_style_id?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Naturebattlestylepreference_Variance_Fields = {
  __typename?: 'pokemon_v2_naturebattlestylepreference_variance_fields';
  high_hp_preference?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  low_hp_preference?: Maybe<Scalars['Float']['output']>;
  move_battle_style_id?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_naturename" */
export type Pokemon_V2_Naturename = {
  __typename?: 'pokemon_v2_naturename';
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
  nature_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_naturename" */
export type Pokemon_V2_Naturename_Aggregate = {
  __typename?: 'pokemon_v2_naturename_aggregate';
  aggregate?: Maybe<Pokemon_V2_Naturename_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Naturename>;
};

/** aggregate fields of "pokemon_v2_naturename" */
export type Pokemon_V2_Naturename_Aggregate_Fields = {
  __typename?: 'pokemon_v2_naturename_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Naturename_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Naturename_Max_Fields>;
  min?: Maybe<Pokemon_V2_Naturename_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Naturename_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Naturename_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Naturename_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Naturename_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Naturename_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Naturename_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Naturename_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_naturename" */
export type Pokemon_V2_Naturename_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Naturename_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Naturename_Avg_Fields = {
  __typename?: 'pokemon_v2_naturename_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_naturename". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Naturename_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Naturename_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Naturename_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Naturename_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  nature_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_naturename" */
export enum Pokemon_V2_Naturename_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2NaturenamePkey = 'pokemon_v2_naturename_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_naturename" */
export type Pokemon_V2_Naturename_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  nature_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_naturename" */
export type Pokemon_V2_Naturename_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  nature_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Naturename_Max_Fields = {
  __typename?: 'pokemon_v2_naturename_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nature_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Naturename_Min_Fields = {
  __typename?: 'pokemon_v2_naturename_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nature_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_naturename" */
export type Pokemon_V2_Naturename_Mutation_Response = {
  __typename?: 'pokemon_v2_naturename_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Naturename>;
};

/** on_conflict condition type for table "pokemon_v2_naturename" */
export type Pokemon_V2_Naturename_On_Conflict = {
  constraint: Pokemon_V2_Naturename_Constraint;
  update_columns?: Array<Pokemon_V2_Naturename_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Naturename_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_naturename". */
export type Pokemon_V2_Naturename_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  nature_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_naturename */
export type Pokemon_V2_Naturename_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_naturename" */
export enum Pokemon_V2_Naturename_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  NatureId = 'nature_id'
}

/** input type for updating data in table "pokemon_v2_naturename" */
export type Pokemon_V2_Naturename_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  nature_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Naturename_Stddev_Fields = {
  __typename?: 'pokemon_v2_naturename_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Naturename_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_naturename_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Naturename_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_naturename_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_naturename" */
export type Pokemon_V2_Naturename_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Naturename_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Naturename_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  nature_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Naturename_Sum_Fields = {
  __typename?: 'pokemon_v2_naturename_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  nature_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_naturename" */
export enum Pokemon_V2_Naturename_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  NatureId = 'nature_id'
}

export type Pokemon_V2_Naturename_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Naturename_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Naturename_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Naturename_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Naturename_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_naturename_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Naturename_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_naturename_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Naturename_Variance_Fields = {
  __typename?: 'pokemon_v2_naturename_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_naturepokeathlonstat" */
export type Pokemon_V2_Naturepokeathlonstat = {
  __typename?: 'pokemon_v2_naturepokeathlonstat';
  id: Scalars['Int']['output'];
  max_change: Scalars['Int']['output'];
  nature_id?: Maybe<Scalars['Int']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_naturepokeathlonstat" */
export type Pokemon_V2_Naturepokeathlonstat_Aggregate = {
  __typename?: 'pokemon_v2_naturepokeathlonstat_aggregate';
  aggregate?: Maybe<Pokemon_V2_Naturepokeathlonstat_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Naturepokeathlonstat>;
};

/** aggregate fields of "pokemon_v2_naturepokeathlonstat" */
export type Pokemon_V2_Naturepokeathlonstat_Aggregate_Fields = {
  __typename?: 'pokemon_v2_naturepokeathlonstat_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Naturepokeathlonstat_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Naturepokeathlonstat_Max_Fields>;
  min?: Maybe<Pokemon_V2_Naturepokeathlonstat_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Naturepokeathlonstat_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Naturepokeathlonstat_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Naturepokeathlonstat_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Naturepokeathlonstat_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Naturepokeathlonstat_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Naturepokeathlonstat_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Naturepokeathlonstat_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_naturepokeathlonstat" */
export type Pokemon_V2_Naturepokeathlonstat_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Naturepokeathlonstat_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Naturepokeathlonstat_Avg_Fields = {
  __typename?: 'pokemon_v2_naturepokeathlonstat_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  max_change?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_naturepokeathlonstat". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Naturepokeathlonstat_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Naturepokeathlonstat_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Naturepokeathlonstat_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Naturepokeathlonstat_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  max_change?: InputMaybe<Int_Comparison_Exp>;
  nature_id?: InputMaybe<Int_Comparison_Exp>;
  pokeathlon_stat_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_naturepokeathlonstat" */
export enum Pokemon_V2_Naturepokeathlonstat_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2NaturepokeathlonstatPkey = 'pokemon_v2_naturepokeathlonstat_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_naturepokeathlonstat" */
export type Pokemon_V2_Naturepokeathlonstat_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  max_change?: InputMaybe<Scalars['Int']['input']>;
  nature_id?: InputMaybe<Scalars['Int']['input']>;
  pokeathlon_stat_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_naturepokeathlonstat" */
export type Pokemon_V2_Naturepokeathlonstat_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  max_change?: InputMaybe<Scalars['Int']['input']>;
  nature_id?: InputMaybe<Scalars['Int']['input']>;
  pokeathlon_stat_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Naturepokeathlonstat_Max_Fields = {
  __typename?: 'pokemon_v2_naturepokeathlonstat_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  max_change?: Maybe<Scalars['Int']['output']>;
  nature_id?: Maybe<Scalars['Int']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Naturepokeathlonstat_Min_Fields = {
  __typename?: 'pokemon_v2_naturepokeathlonstat_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  max_change?: Maybe<Scalars['Int']['output']>;
  nature_id?: Maybe<Scalars['Int']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_naturepokeathlonstat" */
export type Pokemon_V2_Naturepokeathlonstat_Mutation_Response = {
  __typename?: 'pokemon_v2_naturepokeathlonstat_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Naturepokeathlonstat>;
};

/** on_conflict condition type for table "pokemon_v2_naturepokeathlonstat" */
export type Pokemon_V2_Naturepokeathlonstat_On_Conflict = {
  constraint: Pokemon_V2_Naturepokeathlonstat_Constraint;
  update_columns?: Array<Pokemon_V2_Naturepokeathlonstat_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Naturepokeathlonstat_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_naturepokeathlonstat". */
export type Pokemon_V2_Naturepokeathlonstat_Order_By = {
  id?: InputMaybe<Order_By>;
  max_change?: InputMaybe<Order_By>;
  nature_id?: InputMaybe<Order_By>;
  pokeathlon_stat_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_naturepokeathlonstat */
export type Pokemon_V2_Naturepokeathlonstat_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_naturepokeathlonstat" */
export enum Pokemon_V2_Naturepokeathlonstat_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  MaxChange = 'max_change',
  /** column name */
  NatureId = 'nature_id',
  /** column name */
  PokeathlonStatId = 'pokeathlon_stat_id'
}

/** input type for updating data in table "pokemon_v2_naturepokeathlonstat" */
export type Pokemon_V2_Naturepokeathlonstat_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  max_change?: InputMaybe<Scalars['Int']['input']>;
  nature_id?: InputMaybe<Scalars['Int']['input']>;
  pokeathlon_stat_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Naturepokeathlonstat_Stddev_Fields = {
  __typename?: 'pokemon_v2_naturepokeathlonstat_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  max_change?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Naturepokeathlonstat_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_naturepokeathlonstat_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  max_change?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Naturepokeathlonstat_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_naturepokeathlonstat_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  max_change?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_naturepokeathlonstat" */
export type Pokemon_V2_Naturepokeathlonstat_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Naturepokeathlonstat_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Naturepokeathlonstat_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  max_change?: InputMaybe<Scalars['Int']['input']>;
  nature_id?: InputMaybe<Scalars['Int']['input']>;
  pokeathlon_stat_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Naturepokeathlonstat_Sum_Fields = {
  __typename?: 'pokemon_v2_naturepokeathlonstat_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  max_change?: Maybe<Scalars['Int']['output']>;
  nature_id?: Maybe<Scalars['Int']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_naturepokeathlonstat" */
export enum Pokemon_V2_Naturepokeathlonstat_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  MaxChange = 'max_change',
  /** column name */
  NatureId = 'nature_id',
  /** column name */
  PokeathlonStatId = 'pokeathlon_stat_id'
}

export type Pokemon_V2_Naturepokeathlonstat_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Naturepokeathlonstat_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Naturepokeathlonstat_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Naturepokeathlonstat_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Naturepokeathlonstat_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_naturepokeathlonstat_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  max_change?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Naturepokeathlonstat_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_naturepokeathlonstat_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  max_change?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Naturepokeathlonstat_Variance_Fields = {
  __typename?: 'pokemon_v2_naturepokeathlonstat_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  max_change?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_palpark" */
export type Pokemon_V2_Palpark = {
  __typename?: 'pokemon_v2_palpark';
  base_score?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  pal_park_area_id?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
  rate: Scalars['Int']['output'];
};

/** aggregated selection of "pokemon_v2_palpark" */
export type Pokemon_V2_Palpark_Aggregate = {
  __typename?: 'pokemon_v2_palpark_aggregate';
  aggregate?: Maybe<Pokemon_V2_Palpark_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Palpark>;
};

/** aggregate fields of "pokemon_v2_palpark" */
export type Pokemon_V2_Palpark_Aggregate_Fields = {
  __typename?: 'pokemon_v2_palpark_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Palpark_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Palpark_Max_Fields>;
  min?: Maybe<Pokemon_V2_Palpark_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Palpark_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Palpark_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Palpark_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Palpark_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Palpark_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Palpark_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Palpark_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_palpark" */
export type Pokemon_V2_Palpark_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Palpark_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Palpark_Avg_Fields = {
  __typename?: 'pokemon_v2_palpark_avg_fields';
  base_score?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pal_park_area_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  rate?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_palpark". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Palpark_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Palpark_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Palpark_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Palpark_Bool_Exp>>;
  base_score?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  pal_park_area_id?: InputMaybe<Int_Comparison_Exp>;
  pokemon_species_id?: InputMaybe<Int_Comparison_Exp>;
  rate?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_palpark" */
export enum Pokemon_V2_Palpark_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PalparkPkey = 'pokemon_v2_palpark_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_palpark" */
export type Pokemon_V2_Palpark_Inc_Input = {
  base_score?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  pal_park_area_id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_species_id?: InputMaybe<Scalars['Int']['input']>;
  rate?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_palpark" */
export type Pokemon_V2_Palpark_Insert_Input = {
  base_score?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  pal_park_area_id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_species_id?: InputMaybe<Scalars['Int']['input']>;
  rate?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Palpark_Max_Fields = {
  __typename?: 'pokemon_v2_palpark_max_fields';
  base_score?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pal_park_area_id?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
  rate?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Palpark_Min_Fields = {
  __typename?: 'pokemon_v2_palpark_min_fields';
  base_score?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pal_park_area_id?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
  rate?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_palpark" */
export type Pokemon_V2_Palpark_Mutation_Response = {
  __typename?: 'pokemon_v2_palpark_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Palpark>;
};

/** on_conflict condition type for table "pokemon_v2_palpark" */
export type Pokemon_V2_Palpark_On_Conflict = {
  constraint: Pokemon_V2_Palpark_Constraint;
  update_columns?: Array<Pokemon_V2_Palpark_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Palpark_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_palpark". */
export type Pokemon_V2_Palpark_Order_By = {
  base_score?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pal_park_area_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_palpark */
export type Pokemon_V2_Palpark_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_palpark" */
export enum Pokemon_V2_Palpark_Select_Column {
  /** column name */
  BaseScore = 'base_score',
  /** column name */
  Id = 'id',
  /** column name */
  PalParkAreaId = 'pal_park_area_id',
  /** column name */
  PokemonSpeciesId = 'pokemon_species_id',
  /** column name */
  Rate = 'rate'
}

/** input type for updating data in table "pokemon_v2_palpark" */
export type Pokemon_V2_Palpark_Set_Input = {
  base_score?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  pal_park_area_id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_species_id?: InputMaybe<Scalars['Int']['input']>;
  rate?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Palpark_Stddev_Fields = {
  __typename?: 'pokemon_v2_palpark_stddev_fields';
  base_score?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pal_park_area_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  rate?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Palpark_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_palpark_stddev_pop_fields';
  base_score?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pal_park_area_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  rate?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Palpark_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_palpark_stddev_samp_fields';
  base_score?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pal_park_area_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  rate?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_palpark" */
export type Pokemon_V2_Palpark_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Palpark_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Palpark_Stream_Cursor_Value_Input = {
  base_score?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  pal_park_area_id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_species_id?: InputMaybe<Scalars['Int']['input']>;
  rate?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Palpark_Sum_Fields = {
  __typename?: 'pokemon_v2_palpark_sum_fields';
  base_score?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pal_park_area_id?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
  rate?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_palpark" */
export enum Pokemon_V2_Palpark_Update_Column {
  /** column name */
  BaseScore = 'base_score',
  /** column name */
  Id = 'id',
  /** column name */
  PalParkAreaId = 'pal_park_area_id',
  /** column name */
  PokemonSpeciesId = 'pokemon_species_id',
  /** column name */
  Rate = 'rate'
}

export type Pokemon_V2_Palpark_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Palpark_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Palpark_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Palpark_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Palpark_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_palpark_var_pop_fields';
  base_score?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pal_park_area_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  rate?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Palpark_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_palpark_var_samp_fields';
  base_score?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pal_park_area_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  rate?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Palpark_Variance_Fields = {
  __typename?: 'pokemon_v2_palpark_variance_fields';
  base_score?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pal_park_area_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  rate?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_palparkarea" */
export type Pokemon_V2_Palparkarea = {
  __typename?: 'pokemon_v2_palparkarea';
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_palparkarea" */
export type Pokemon_V2_Palparkarea_Aggregate = {
  __typename?: 'pokemon_v2_palparkarea_aggregate';
  aggregate?: Maybe<Pokemon_V2_Palparkarea_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Palparkarea>;
};

/** aggregate fields of "pokemon_v2_palparkarea" */
export type Pokemon_V2_Palparkarea_Aggregate_Fields = {
  __typename?: 'pokemon_v2_palparkarea_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Palparkarea_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Palparkarea_Max_Fields>;
  min?: Maybe<Pokemon_V2_Palparkarea_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Palparkarea_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Palparkarea_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Palparkarea_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Palparkarea_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Palparkarea_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Palparkarea_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Palparkarea_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_palparkarea" */
export type Pokemon_V2_Palparkarea_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Palparkarea_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Palparkarea_Avg_Fields = {
  __typename?: 'pokemon_v2_palparkarea_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_palparkarea". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Palparkarea_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Palparkarea_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Palparkarea_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Palparkarea_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_palparkarea" */
export enum Pokemon_V2_Palparkarea_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PalparkareaPkey = 'pokemon_v2_palparkarea_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_palparkarea" */
export type Pokemon_V2_Palparkarea_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_palparkarea" */
export type Pokemon_V2_Palparkarea_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Palparkarea_Max_Fields = {
  __typename?: 'pokemon_v2_palparkarea_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Palparkarea_Min_Fields = {
  __typename?: 'pokemon_v2_palparkarea_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_palparkarea" */
export type Pokemon_V2_Palparkarea_Mutation_Response = {
  __typename?: 'pokemon_v2_palparkarea_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Palparkarea>;
};

/** on_conflict condition type for table "pokemon_v2_palparkarea" */
export type Pokemon_V2_Palparkarea_On_Conflict = {
  constraint: Pokemon_V2_Palparkarea_Constraint;
  update_columns?: Array<Pokemon_V2_Palparkarea_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Palparkarea_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_palparkarea". */
export type Pokemon_V2_Palparkarea_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_palparkarea */
export type Pokemon_V2_Palparkarea_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_palparkarea" */
export enum Pokemon_V2_Palparkarea_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_palparkarea" */
export type Pokemon_V2_Palparkarea_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Palparkarea_Stddev_Fields = {
  __typename?: 'pokemon_v2_palparkarea_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Palparkarea_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_palparkarea_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Palparkarea_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_palparkarea_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_palparkarea" */
export type Pokemon_V2_Palparkarea_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Palparkarea_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Palparkarea_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Palparkarea_Sum_Fields = {
  __typename?: 'pokemon_v2_palparkarea_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_palparkarea" */
export enum Pokemon_V2_Palparkarea_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Palparkarea_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Palparkarea_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Palparkarea_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Palparkarea_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Palparkarea_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_palparkarea_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Palparkarea_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_palparkarea_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Palparkarea_Variance_Fields = {
  __typename?: 'pokemon_v2_palparkarea_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_palparkareaname" */
export type Pokemon_V2_Palparkareaname = {
  __typename?: 'pokemon_v2_palparkareaname';
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
  pal_park_area_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_palparkareaname" */
export type Pokemon_V2_Palparkareaname_Aggregate = {
  __typename?: 'pokemon_v2_palparkareaname_aggregate';
  aggregate?: Maybe<Pokemon_V2_Palparkareaname_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Palparkareaname>;
};

/** aggregate fields of "pokemon_v2_palparkareaname" */
export type Pokemon_V2_Palparkareaname_Aggregate_Fields = {
  __typename?: 'pokemon_v2_palparkareaname_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Palparkareaname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Palparkareaname_Max_Fields>;
  min?: Maybe<Pokemon_V2_Palparkareaname_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Palparkareaname_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Palparkareaname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Palparkareaname_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Palparkareaname_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Palparkareaname_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Palparkareaname_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Palparkareaname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_palparkareaname" */
export type Pokemon_V2_Palparkareaname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Palparkareaname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Palparkareaname_Avg_Fields = {
  __typename?: 'pokemon_v2_palparkareaname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pal_park_area_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_palparkareaname". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Palparkareaname_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Palparkareaname_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Palparkareaname_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Palparkareaname_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  pal_park_area_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_palparkareaname" */
export enum Pokemon_V2_Palparkareaname_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PalparkareanamePkey = 'pokemon_v2_palparkareaname_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_palparkareaname" */
export type Pokemon_V2_Palparkareaname_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  pal_park_area_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_palparkareaname" */
export type Pokemon_V2_Palparkareaname_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  pal_park_area_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Palparkareaname_Max_Fields = {
  __typename?: 'pokemon_v2_palparkareaname_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pal_park_area_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Palparkareaname_Min_Fields = {
  __typename?: 'pokemon_v2_palparkareaname_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pal_park_area_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_palparkareaname" */
export type Pokemon_V2_Palparkareaname_Mutation_Response = {
  __typename?: 'pokemon_v2_palparkareaname_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Palparkareaname>;
};

/** on_conflict condition type for table "pokemon_v2_palparkareaname" */
export type Pokemon_V2_Palparkareaname_On_Conflict = {
  constraint: Pokemon_V2_Palparkareaname_Constraint;
  update_columns?: Array<Pokemon_V2_Palparkareaname_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Palparkareaname_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_palparkareaname". */
export type Pokemon_V2_Palparkareaname_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pal_park_area_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_palparkareaname */
export type Pokemon_V2_Palparkareaname_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_palparkareaname" */
export enum Pokemon_V2_Palparkareaname_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  PalParkAreaId = 'pal_park_area_id'
}

/** input type for updating data in table "pokemon_v2_palparkareaname" */
export type Pokemon_V2_Palparkareaname_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  pal_park_area_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Palparkareaname_Stddev_Fields = {
  __typename?: 'pokemon_v2_palparkareaname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pal_park_area_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Palparkareaname_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_palparkareaname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pal_park_area_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Palparkareaname_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_palparkareaname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pal_park_area_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_palparkareaname" */
export type Pokemon_V2_Palparkareaname_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Palparkareaname_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Palparkareaname_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  pal_park_area_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Palparkareaname_Sum_Fields = {
  __typename?: 'pokemon_v2_palparkareaname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  pal_park_area_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_palparkareaname" */
export enum Pokemon_V2_Palparkareaname_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  PalParkAreaId = 'pal_park_area_id'
}

export type Pokemon_V2_Palparkareaname_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Palparkareaname_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Palparkareaname_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Palparkareaname_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Palparkareaname_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_palparkareaname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pal_park_area_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Palparkareaname_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_palparkareaname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pal_park_area_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Palparkareaname_Variance_Fields = {
  __typename?: 'pokemon_v2_palparkareaname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pal_park_area_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokeathlonstat" */
export type Pokemon_V2_Pokeathlonstat = {
  __typename?: 'pokemon_v2_pokeathlonstat';
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_pokeathlonstat" */
export type Pokemon_V2_Pokeathlonstat_Aggregate = {
  __typename?: 'pokemon_v2_pokeathlonstat_aggregate';
  aggregate?: Maybe<Pokemon_V2_Pokeathlonstat_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Pokeathlonstat>;
};

/** aggregate fields of "pokemon_v2_pokeathlonstat" */
export type Pokemon_V2_Pokeathlonstat_Aggregate_Fields = {
  __typename?: 'pokemon_v2_pokeathlonstat_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Pokeathlonstat_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Pokeathlonstat_Max_Fields>;
  min?: Maybe<Pokemon_V2_Pokeathlonstat_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Pokeathlonstat_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Pokeathlonstat_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Pokeathlonstat_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Pokeathlonstat_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Pokeathlonstat_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Pokeathlonstat_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Pokeathlonstat_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokeathlonstat" */
export type Pokemon_V2_Pokeathlonstat_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Pokeathlonstat_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Pokeathlonstat_Avg_Fields = {
  __typename?: 'pokemon_v2_pokeathlonstat_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokeathlonstat". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Pokeathlonstat_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Pokeathlonstat_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Pokeathlonstat_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Pokeathlonstat_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_pokeathlonstat" */
export enum Pokemon_V2_Pokeathlonstat_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PokeathlonstatPkey = 'pokemon_v2_pokeathlonstat_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_pokeathlonstat" */
export type Pokemon_V2_Pokeathlonstat_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_pokeathlonstat" */
export type Pokemon_V2_Pokeathlonstat_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Pokeathlonstat_Max_Fields = {
  __typename?: 'pokemon_v2_pokeathlonstat_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Pokeathlonstat_Min_Fields = {
  __typename?: 'pokemon_v2_pokeathlonstat_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_pokeathlonstat" */
export type Pokemon_V2_Pokeathlonstat_Mutation_Response = {
  __typename?: 'pokemon_v2_pokeathlonstat_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Pokeathlonstat>;
};

/** on_conflict condition type for table "pokemon_v2_pokeathlonstat" */
export type Pokemon_V2_Pokeathlonstat_On_Conflict = {
  constraint: Pokemon_V2_Pokeathlonstat_Constraint;
  update_columns?: Array<Pokemon_V2_Pokeathlonstat_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Pokeathlonstat_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_pokeathlonstat". */
export type Pokemon_V2_Pokeathlonstat_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_pokeathlonstat */
export type Pokemon_V2_Pokeathlonstat_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_pokeathlonstat" */
export enum Pokemon_V2_Pokeathlonstat_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_pokeathlonstat" */
export type Pokemon_V2_Pokeathlonstat_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Pokeathlonstat_Stddev_Fields = {
  __typename?: 'pokemon_v2_pokeathlonstat_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Pokeathlonstat_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_pokeathlonstat_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Pokeathlonstat_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_pokeathlonstat_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_pokeathlonstat" */
export type Pokemon_V2_Pokeathlonstat_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Pokeathlonstat_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Pokeathlonstat_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Pokeathlonstat_Sum_Fields = {
  __typename?: 'pokemon_v2_pokeathlonstat_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_pokeathlonstat" */
export enum Pokemon_V2_Pokeathlonstat_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Pokeathlonstat_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Pokeathlonstat_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Pokeathlonstat_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Pokeathlonstat_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Pokeathlonstat_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_pokeathlonstat_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Pokeathlonstat_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_pokeathlonstat_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Pokeathlonstat_Variance_Fields = {
  __typename?: 'pokemon_v2_pokeathlonstat_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokeathlonstatname" */
export type Pokemon_V2_Pokeathlonstatname = {
  __typename?: 'pokemon_v2_pokeathlonstatname';
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
  pokeathlon_stat_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_pokeathlonstatname" */
export type Pokemon_V2_Pokeathlonstatname_Aggregate = {
  __typename?: 'pokemon_v2_pokeathlonstatname_aggregate';
  aggregate?: Maybe<Pokemon_V2_Pokeathlonstatname_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Pokeathlonstatname>;
};

/** aggregate fields of "pokemon_v2_pokeathlonstatname" */
export type Pokemon_V2_Pokeathlonstatname_Aggregate_Fields = {
  __typename?: 'pokemon_v2_pokeathlonstatname_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Pokeathlonstatname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Pokeathlonstatname_Max_Fields>;
  min?: Maybe<Pokemon_V2_Pokeathlonstatname_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Pokeathlonstatname_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Pokeathlonstatname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Pokeathlonstatname_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Pokeathlonstatname_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Pokeathlonstatname_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Pokeathlonstatname_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Pokeathlonstatname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokeathlonstatname" */
export type Pokemon_V2_Pokeathlonstatname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Pokeathlonstatname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Pokeathlonstatname_Avg_Fields = {
  __typename?: 'pokemon_v2_pokeathlonstatname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokeathlonstatname". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Pokeathlonstatname_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Pokeathlonstatname_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Pokeathlonstatname_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Pokeathlonstatname_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  pokeathlon_stat_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_pokeathlonstatname" */
export enum Pokemon_V2_Pokeathlonstatname_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PokeathlonstatnamePkey = 'pokemon_v2_pokeathlonstatname_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_pokeathlonstatname" */
export type Pokemon_V2_Pokeathlonstatname_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  pokeathlon_stat_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_pokeathlonstatname" */
export type Pokemon_V2_Pokeathlonstatname_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  pokeathlon_stat_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Pokeathlonstatname_Max_Fields = {
  __typename?: 'pokemon_v2_pokeathlonstatname_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Pokeathlonstatname_Min_Fields = {
  __typename?: 'pokemon_v2_pokeathlonstatname_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_pokeathlonstatname" */
export type Pokemon_V2_Pokeathlonstatname_Mutation_Response = {
  __typename?: 'pokemon_v2_pokeathlonstatname_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Pokeathlonstatname>;
};

/** on_conflict condition type for table "pokemon_v2_pokeathlonstatname" */
export type Pokemon_V2_Pokeathlonstatname_On_Conflict = {
  constraint: Pokemon_V2_Pokeathlonstatname_Constraint;
  update_columns?: Array<Pokemon_V2_Pokeathlonstatname_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Pokeathlonstatname_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_pokeathlonstatname". */
export type Pokemon_V2_Pokeathlonstatname_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pokeathlon_stat_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_pokeathlonstatname */
export type Pokemon_V2_Pokeathlonstatname_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_pokeathlonstatname" */
export enum Pokemon_V2_Pokeathlonstatname_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  PokeathlonStatId = 'pokeathlon_stat_id'
}

/** input type for updating data in table "pokemon_v2_pokeathlonstatname" */
export type Pokemon_V2_Pokeathlonstatname_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  pokeathlon_stat_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Pokeathlonstatname_Stddev_Fields = {
  __typename?: 'pokemon_v2_pokeathlonstatname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Pokeathlonstatname_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_pokeathlonstatname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Pokeathlonstatname_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_pokeathlonstatname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_pokeathlonstatname" */
export type Pokemon_V2_Pokeathlonstatname_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Pokeathlonstatname_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Pokeathlonstatname_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  pokeathlon_stat_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Pokeathlonstatname_Sum_Fields = {
  __typename?: 'pokemon_v2_pokeathlonstatname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_pokeathlonstatname" */
export enum Pokemon_V2_Pokeathlonstatname_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  PokeathlonStatId = 'pokeathlon_stat_id'
}

export type Pokemon_V2_Pokeathlonstatname_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Pokeathlonstatname_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Pokeathlonstatname_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Pokeathlonstatname_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Pokeathlonstatname_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_pokeathlonstatname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Pokeathlonstatname_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_pokeathlonstatname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Pokeathlonstatname_Variance_Fields = {
  __typename?: 'pokemon_v2_pokeathlonstatname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokedex" */
export type Pokemon_V2_Pokedex = {
  __typename?: 'pokemon_v2_pokedex';
  id: Scalars['Int']['output'];
  is_main_series: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  region_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_pokedex" */
export type Pokemon_V2_Pokedex_Aggregate = {
  __typename?: 'pokemon_v2_pokedex_aggregate';
  aggregate?: Maybe<Pokemon_V2_Pokedex_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Pokedex>;
};

/** aggregate fields of "pokemon_v2_pokedex" */
export type Pokemon_V2_Pokedex_Aggregate_Fields = {
  __typename?: 'pokemon_v2_pokedex_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Pokedex_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Pokedex_Max_Fields>;
  min?: Maybe<Pokemon_V2_Pokedex_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Pokedex_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Pokedex_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Pokedex_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Pokedex_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Pokedex_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Pokedex_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Pokedex_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokedex" */
export type Pokemon_V2_Pokedex_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Pokedex_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Pokedex_Avg_Fields = {
  __typename?: 'pokemon_v2_pokedex_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokedex". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Pokedex_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Pokedex_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Pokedex_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Pokedex_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  is_main_series?: InputMaybe<Boolean_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  region_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_pokedex" */
export enum Pokemon_V2_Pokedex_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PokedexPkey = 'pokemon_v2_pokedex_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_pokedex" */
export type Pokemon_V2_Pokedex_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  region_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_pokedex" */
export type Pokemon_V2_Pokedex_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  is_main_series?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  region_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Pokedex_Max_Fields = {
  __typename?: 'pokemon_v2_pokedex_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  region_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Pokedex_Min_Fields = {
  __typename?: 'pokemon_v2_pokedex_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  region_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_pokedex" */
export type Pokemon_V2_Pokedex_Mutation_Response = {
  __typename?: 'pokemon_v2_pokedex_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Pokedex>;
};

/** on_conflict condition type for table "pokemon_v2_pokedex" */
export type Pokemon_V2_Pokedex_On_Conflict = {
  constraint: Pokemon_V2_Pokedex_Constraint;
  update_columns?: Array<Pokemon_V2_Pokedex_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Pokedex_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_pokedex". */
export type Pokemon_V2_Pokedex_Order_By = {
  id?: InputMaybe<Order_By>;
  is_main_series?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_pokedex */
export type Pokemon_V2_Pokedex_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_pokedex" */
export enum Pokemon_V2_Pokedex_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  IsMainSeries = 'is_main_series',
  /** column name */
  Name = 'name',
  /** column name */
  RegionId = 'region_id'
}

/** input type for updating data in table "pokemon_v2_pokedex" */
export type Pokemon_V2_Pokedex_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  is_main_series?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  region_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Pokedex_Stddev_Fields = {
  __typename?: 'pokemon_v2_pokedex_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Pokedex_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_pokedex_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Pokedex_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_pokedex_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_pokedex" */
export type Pokemon_V2_Pokedex_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Pokedex_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Pokedex_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  is_main_series?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  region_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Pokedex_Sum_Fields = {
  __typename?: 'pokemon_v2_pokedex_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  region_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_pokedex" */
export enum Pokemon_V2_Pokedex_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  IsMainSeries = 'is_main_series',
  /** column name */
  Name = 'name',
  /** column name */
  RegionId = 'region_id'
}

export type Pokemon_V2_Pokedex_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Pokedex_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Pokedex_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Pokedex_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Pokedex_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_pokedex_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Pokedex_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_pokedex_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Pokedex_Variance_Fields = {
  __typename?: 'pokemon_v2_pokedex_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokedexdescription" */
export type Pokemon_V2_Pokedexdescription = {
  __typename?: 'pokemon_v2_pokedexdescription';
  description: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  pokedex_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_pokedexdescription" */
export type Pokemon_V2_Pokedexdescription_Aggregate = {
  __typename?: 'pokemon_v2_pokedexdescription_aggregate';
  aggregate?: Maybe<Pokemon_V2_Pokedexdescription_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Pokedexdescription>;
};

/** aggregate fields of "pokemon_v2_pokedexdescription" */
export type Pokemon_V2_Pokedexdescription_Aggregate_Fields = {
  __typename?: 'pokemon_v2_pokedexdescription_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Pokedexdescription_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Pokedexdescription_Max_Fields>;
  min?: Maybe<Pokemon_V2_Pokedexdescription_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Pokedexdescription_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Pokedexdescription_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Pokedexdescription_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Pokedexdescription_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Pokedexdescription_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Pokedexdescription_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Pokedexdescription_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokedexdescription" */
export type Pokemon_V2_Pokedexdescription_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Pokedexdescription_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Pokedexdescription_Avg_Fields = {
  __typename?: 'pokemon_v2_pokedexdescription_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokedexdescription". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Pokedexdescription_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Pokedexdescription_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Pokedexdescription_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Pokedexdescription_Bool_Exp>>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  pokedex_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_pokedexdescription" */
export enum Pokemon_V2_Pokedexdescription_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PokedexdescriptionPkey = 'pokemon_v2_pokedexdescription_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_pokedexdescription" */
export type Pokemon_V2_Pokedexdescription_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  pokedex_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_pokedexdescription" */
export type Pokemon_V2_Pokedexdescription_Insert_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  pokedex_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Pokedexdescription_Max_Fields = {
  __typename?: 'pokemon_v2_pokedexdescription_max_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  pokedex_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Pokedexdescription_Min_Fields = {
  __typename?: 'pokemon_v2_pokedexdescription_min_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  pokedex_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_pokedexdescription" */
export type Pokemon_V2_Pokedexdescription_Mutation_Response = {
  __typename?: 'pokemon_v2_pokedexdescription_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Pokedexdescription>;
};

/** on_conflict condition type for table "pokemon_v2_pokedexdescription" */
export type Pokemon_V2_Pokedexdescription_On_Conflict = {
  constraint: Pokemon_V2_Pokedexdescription_Constraint;
  update_columns?: Array<Pokemon_V2_Pokedexdescription_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Pokedexdescription_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_pokedexdescription". */
export type Pokemon_V2_Pokedexdescription_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_pokedexdescription */
export type Pokemon_V2_Pokedexdescription_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_pokedexdescription" */
export enum Pokemon_V2_Pokedexdescription_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  PokedexId = 'pokedex_id'
}

/** input type for updating data in table "pokemon_v2_pokedexdescription" */
export type Pokemon_V2_Pokedexdescription_Set_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  pokedex_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Pokedexdescription_Stddev_Fields = {
  __typename?: 'pokemon_v2_pokedexdescription_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Pokedexdescription_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_pokedexdescription_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Pokedexdescription_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_pokedexdescription_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_pokedexdescription" */
export type Pokemon_V2_Pokedexdescription_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Pokedexdescription_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Pokedexdescription_Stream_Cursor_Value_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  pokedex_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Pokedexdescription_Sum_Fields = {
  __typename?: 'pokemon_v2_pokedexdescription_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  pokedex_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_pokedexdescription" */
export enum Pokemon_V2_Pokedexdescription_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  PokedexId = 'pokedex_id'
}

export type Pokemon_V2_Pokedexdescription_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Pokedexdescription_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Pokedexdescription_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Pokedexdescription_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Pokedexdescription_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_pokedexdescription_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Pokedexdescription_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_pokedexdescription_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Pokedexdescription_Variance_Fields = {
  __typename?: 'pokemon_v2_pokedexdescription_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokedexname" */
export type Pokemon_V2_Pokedexname = {
  __typename?: 'pokemon_v2_pokedexname';
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
  pokedex_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_pokedexname" */
export type Pokemon_V2_Pokedexname_Aggregate = {
  __typename?: 'pokemon_v2_pokedexname_aggregate';
  aggregate?: Maybe<Pokemon_V2_Pokedexname_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Pokedexname>;
};

/** aggregate fields of "pokemon_v2_pokedexname" */
export type Pokemon_V2_Pokedexname_Aggregate_Fields = {
  __typename?: 'pokemon_v2_pokedexname_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Pokedexname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Pokedexname_Max_Fields>;
  min?: Maybe<Pokemon_V2_Pokedexname_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Pokedexname_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Pokedexname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Pokedexname_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Pokedexname_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Pokedexname_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Pokedexname_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Pokedexname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokedexname" */
export type Pokemon_V2_Pokedexname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Pokedexname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Pokedexname_Avg_Fields = {
  __typename?: 'pokemon_v2_pokedexname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokedexname". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Pokedexname_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Pokedexname_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Pokedexname_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Pokedexname_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  pokedex_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_pokedexname" */
export enum Pokemon_V2_Pokedexname_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PokedexnamePkey = 'pokemon_v2_pokedexname_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_pokedexname" */
export type Pokemon_V2_Pokedexname_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  pokedex_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_pokedexname" */
export type Pokemon_V2_Pokedexname_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  pokedex_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Pokedexname_Max_Fields = {
  __typename?: 'pokemon_v2_pokedexname_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pokedex_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Pokedexname_Min_Fields = {
  __typename?: 'pokemon_v2_pokedexname_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pokedex_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_pokedexname" */
export type Pokemon_V2_Pokedexname_Mutation_Response = {
  __typename?: 'pokemon_v2_pokedexname_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Pokedexname>;
};

/** on_conflict condition type for table "pokemon_v2_pokedexname" */
export type Pokemon_V2_Pokedexname_On_Conflict = {
  constraint: Pokemon_V2_Pokedexname_Constraint;
  update_columns?: Array<Pokemon_V2_Pokedexname_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Pokedexname_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_pokedexname". */
export type Pokemon_V2_Pokedexname_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_pokedexname */
export type Pokemon_V2_Pokedexname_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_pokedexname" */
export enum Pokemon_V2_Pokedexname_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  PokedexId = 'pokedex_id'
}

/** input type for updating data in table "pokemon_v2_pokedexname" */
export type Pokemon_V2_Pokedexname_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  pokedex_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Pokedexname_Stddev_Fields = {
  __typename?: 'pokemon_v2_pokedexname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Pokedexname_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_pokedexname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Pokedexname_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_pokedexname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_pokedexname" */
export type Pokemon_V2_Pokedexname_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Pokedexname_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Pokedexname_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  pokedex_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Pokedexname_Sum_Fields = {
  __typename?: 'pokemon_v2_pokedexname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  pokedex_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_pokedexname" */
export enum Pokemon_V2_Pokedexname_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  PokedexId = 'pokedex_id'
}

export type Pokemon_V2_Pokedexname_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Pokedexname_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Pokedexname_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Pokedexname_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Pokedexname_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_pokedexname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Pokedexname_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_pokedexname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Pokedexname_Variance_Fields = {
  __typename?: 'pokemon_v2_pokedexname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokedexversiongroup" */
export type Pokemon_V2_Pokedexversiongroup = {
  __typename?: 'pokemon_v2_pokedexversiongroup';
  id: Scalars['Int']['output'];
  pokedex_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_pokedexversiongroup" */
export type Pokemon_V2_Pokedexversiongroup_Aggregate = {
  __typename?: 'pokemon_v2_pokedexversiongroup_aggregate';
  aggregate?: Maybe<Pokemon_V2_Pokedexversiongroup_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Pokedexversiongroup>;
};

/** aggregate fields of "pokemon_v2_pokedexversiongroup" */
export type Pokemon_V2_Pokedexversiongroup_Aggregate_Fields = {
  __typename?: 'pokemon_v2_pokedexversiongroup_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Pokedexversiongroup_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Pokedexversiongroup_Max_Fields>;
  min?: Maybe<Pokemon_V2_Pokedexversiongroup_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Pokedexversiongroup_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Pokedexversiongroup_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Pokedexversiongroup_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Pokedexversiongroup_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Pokedexversiongroup_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Pokedexversiongroup_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Pokedexversiongroup_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokedexversiongroup" */
export type Pokemon_V2_Pokedexversiongroup_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Pokedexversiongroup_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Pokedexversiongroup_Avg_Fields = {
  __typename?: 'pokemon_v2_pokedexversiongroup_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokedexversiongroup". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Pokedexversiongroup_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Pokedexversiongroup_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Pokedexversiongroup_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Pokedexversiongroup_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  pokedex_id?: InputMaybe<Int_Comparison_Exp>;
  version_group_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_pokedexversiongroup" */
export enum Pokemon_V2_Pokedexversiongroup_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PokedexversiongroupPkey = 'pokemon_v2_pokedexversiongroup_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_pokedexversiongroup" */
export type Pokemon_V2_Pokedexversiongroup_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  pokedex_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_pokedexversiongroup" */
export type Pokemon_V2_Pokedexversiongroup_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  pokedex_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Pokedexversiongroup_Max_Fields = {
  __typename?: 'pokemon_v2_pokedexversiongroup_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokedex_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Pokedexversiongroup_Min_Fields = {
  __typename?: 'pokemon_v2_pokedexversiongroup_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokedex_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_pokedexversiongroup" */
export type Pokemon_V2_Pokedexversiongroup_Mutation_Response = {
  __typename?: 'pokemon_v2_pokedexversiongroup_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Pokedexversiongroup>;
};

/** on_conflict condition type for table "pokemon_v2_pokedexversiongroup" */
export type Pokemon_V2_Pokedexversiongroup_On_Conflict = {
  constraint: Pokemon_V2_Pokedexversiongroup_Constraint;
  update_columns?: Array<Pokemon_V2_Pokedexversiongroup_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Pokedexversiongroup_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_pokedexversiongroup". */
export type Pokemon_V2_Pokedexversiongroup_Order_By = {
  id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_pokedexversiongroup */
export type Pokemon_V2_Pokedexversiongroup_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_pokedexversiongroup" */
export enum Pokemon_V2_Pokedexversiongroup_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  PokedexId = 'pokedex_id',
  /** column name */
  VersionGroupId = 'version_group_id'
}

/** input type for updating data in table "pokemon_v2_pokedexversiongroup" */
export type Pokemon_V2_Pokedexversiongroup_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  pokedex_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Pokedexversiongroup_Stddev_Fields = {
  __typename?: 'pokemon_v2_pokedexversiongroup_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Pokedexversiongroup_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_pokedexversiongroup_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Pokedexversiongroup_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_pokedexversiongroup_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_pokedexversiongroup" */
export type Pokemon_V2_Pokedexversiongroup_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Pokedexversiongroup_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Pokedexversiongroup_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  pokedex_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Pokedexversiongroup_Sum_Fields = {
  __typename?: 'pokemon_v2_pokedexversiongroup_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokedex_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_pokedexversiongroup" */
export enum Pokemon_V2_Pokedexversiongroup_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  PokedexId = 'pokedex_id',
  /** column name */
  VersionGroupId = 'version_group_id'
}

export type Pokemon_V2_Pokedexversiongroup_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Pokedexversiongroup_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Pokedexversiongroup_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Pokedexversiongroup_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Pokedexversiongroup_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_pokedexversiongroup_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Pokedexversiongroup_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_pokedexversiongroup_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Pokedexversiongroup_Variance_Fields = {
  __typename?: 'pokemon_v2_pokedexversiongroup_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokemon" */
export type Pokemon_V2_Pokemon = {
  __typename?: 'pokemon_v2_pokemon';
  base_experience?: Maybe<Scalars['Int']['output']>;
  height?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  is_default: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  order?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
  weight?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_pokemon" */
export type Pokemon_V2_Pokemon_Aggregate = {
  __typename?: 'pokemon_v2_pokemon_aggregate';
  aggregate?: Maybe<Pokemon_V2_Pokemon_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Pokemon>;
};

/** aggregate fields of "pokemon_v2_pokemon" */
export type Pokemon_V2_Pokemon_Aggregate_Fields = {
  __typename?: 'pokemon_v2_pokemon_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Pokemon_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Pokemon_Max_Fields>;
  min?: Maybe<Pokemon_V2_Pokemon_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Pokemon_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Pokemon_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Pokemon_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Pokemon_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Pokemon_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Pokemon_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Pokemon_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemon" */
export type Pokemon_V2_Pokemon_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Pokemon_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Pokemon_Avg_Fields = {
  __typename?: 'pokemon_v2_pokemon_avg_fields';
  base_experience?: Maybe<Scalars['Float']['output']>;
  height?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  weight?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemon". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Pokemon_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Pokemon_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Pokemon_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Pokemon_Bool_Exp>>;
  base_experience?: InputMaybe<Int_Comparison_Exp>;
  height?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  is_default?: InputMaybe<Boolean_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  order?: InputMaybe<Int_Comparison_Exp>;
  pokemon_species_id?: InputMaybe<Int_Comparison_Exp>;
  weight?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_pokemon" */
export enum Pokemon_V2_Pokemon_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PokemonPkey = 'pokemon_v2_pokemon_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_pokemon" */
export type Pokemon_V2_Pokemon_Inc_Input = {
  base_experience?: InputMaybe<Scalars['Int']['input']>;
  height?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
  pokemon_species_id?: InputMaybe<Scalars['Int']['input']>;
  weight?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_pokemon" */
export type Pokemon_V2_Pokemon_Insert_Input = {
  base_experience?: InputMaybe<Scalars['Int']['input']>;
  height?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_default?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
  pokemon_species_id?: InputMaybe<Scalars['Int']['input']>;
  weight?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Pokemon_Max_Fields = {
  __typename?: 'pokemon_v2_pokemon_max_fields';
  base_experience?: Maybe<Scalars['Int']['output']>;
  height?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
  weight?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Pokemon_Min_Fields = {
  __typename?: 'pokemon_v2_pokemon_min_fields';
  base_experience?: Maybe<Scalars['Int']['output']>;
  height?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
  weight?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_pokemon" */
export type Pokemon_V2_Pokemon_Mutation_Response = {
  __typename?: 'pokemon_v2_pokemon_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Pokemon>;
};

/** on_conflict condition type for table "pokemon_v2_pokemon" */
export type Pokemon_V2_Pokemon_On_Conflict = {
  constraint: Pokemon_V2_Pokemon_Constraint;
  update_columns?: Array<Pokemon_V2_Pokemon_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Pokemon_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemon". */
export type Pokemon_V2_Pokemon_Order_By = {
  base_experience?: InputMaybe<Order_By>;
  height?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  is_default?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  weight?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_pokemon */
export type Pokemon_V2_Pokemon_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_pokemon" */
export enum Pokemon_V2_Pokemon_Select_Column {
  /** column name */
  BaseExperience = 'base_experience',
  /** column name */
  Height = 'height',
  /** column name */
  Id = 'id',
  /** column name */
  IsDefault = 'is_default',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  PokemonSpeciesId = 'pokemon_species_id',
  /** column name */
  Weight = 'weight'
}

/** input type for updating data in table "pokemon_v2_pokemon" */
export type Pokemon_V2_Pokemon_Set_Input = {
  base_experience?: InputMaybe<Scalars['Int']['input']>;
  height?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_default?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
  pokemon_species_id?: InputMaybe<Scalars['Int']['input']>;
  weight?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Pokemon_Stddev_Fields = {
  __typename?: 'pokemon_v2_pokemon_stddev_fields';
  base_experience?: Maybe<Scalars['Float']['output']>;
  height?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  weight?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Pokemon_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemon_stddev_pop_fields';
  base_experience?: Maybe<Scalars['Float']['output']>;
  height?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  weight?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Pokemon_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemon_stddev_samp_fields';
  base_experience?: Maybe<Scalars['Float']['output']>;
  height?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  weight?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_pokemon" */
export type Pokemon_V2_Pokemon_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Pokemon_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Pokemon_Stream_Cursor_Value_Input = {
  base_experience?: InputMaybe<Scalars['Int']['input']>;
  height?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_default?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
  pokemon_species_id?: InputMaybe<Scalars['Int']['input']>;
  weight?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Pokemon_Sum_Fields = {
  __typename?: 'pokemon_v2_pokemon_sum_fields';
  base_experience?: Maybe<Scalars['Int']['output']>;
  height?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
  weight?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_pokemon" */
export enum Pokemon_V2_Pokemon_Update_Column {
  /** column name */
  BaseExperience = 'base_experience',
  /** column name */
  Height = 'height',
  /** column name */
  Id = 'id',
  /** column name */
  IsDefault = 'is_default',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  PokemonSpeciesId = 'pokemon_species_id',
  /** column name */
  Weight = 'weight'
}

export type Pokemon_V2_Pokemon_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Pokemon_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Pokemon_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Pokemon_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Pokemon_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemon_var_pop_fields';
  base_experience?: Maybe<Scalars['Float']['output']>;
  height?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  weight?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Pokemon_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemon_var_samp_fields';
  base_experience?: Maybe<Scalars['Float']['output']>;
  height?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  weight?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Pokemon_Variance_Fields = {
  __typename?: 'pokemon_v2_pokemon_variance_fields';
  base_experience?: Maybe<Scalars['Float']['output']>;
  height?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  weight?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokemonability" */
export type Pokemon_V2_Pokemonability = {
  __typename?: 'pokemon_v2_pokemonability';
  ability_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  is_hidden: Scalars['Boolean']['output'];
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  slot: Scalars['Int']['output'];
};

/** aggregated selection of "pokemon_v2_pokemonability" */
export type Pokemon_V2_Pokemonability_Aggregate = {
  __typename?: 'pokemon_v2_pokemonability_aggregate';
  aggregate?: Maybe<Pokemon_V2_Pokemonability_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Pokemonability>;
};

/** aggregate fields of "pokemon_v2_pokemonability" */
export type Pokemon_V2_Pokemonability_Aggregate_Fields = {
  __typename?: 'pokemon_v2_pokemonability_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Pokemonability_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Pokemonability_Max_Fields>;
  min?: Maybe<Pokemon_V2_Pokemonability_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Pokemonability_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Pokemonability_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Pokemonability_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Pokemonability_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Pokemonability_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Pokemonability_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Pokemonability_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonability" */
export type Pokemon_V2_Pokemonability_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Pokemonability_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Pokemonability_Avg_Fields = {
  __typename?: 'pokemon_v2_pokemonability_avg_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonability". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Pokemonability_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Pokemonability_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Pokemonability_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Pokemonability_Bool_Exp>>;
  ability_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  is_hidden?: InputMaybe<Boolean_Comparison_Exp>;
  pokemon_id?: InputMaybe<Int_Comparison_Exp>;
  slot?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_pokemonability" */
export enum Pokemon_V2_Pokemonability_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PokemonabilityPkey = 'pokemon_v2_pokemonability_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_pokemonability" */
export type Pokemon_V2_Pokemonability_Inc_Input = {
  ability_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  slot?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_pokemonability" */
export type Pokemon_V2_Pokemonability_Insert_Input = {
  ability_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_hidden?: InputMaybe<Scalars['Boolean']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  slot?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Pokemonability_Max_Fields = {
  __typename?: 'pokemon_v2_pokemonability_max_fields';
  ability_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  slot?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Pokemonability_Min_Fields = {
  __typename?: 'pokemon_v2_pokemonability_min_fields';
  ability_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  slot?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_pokemonability" */
export type Pokemon_V2_Pokemonability_Mutation_Response = {
  __typename?: 'pokemon_v2_pokemonability_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Pokemonability>;
};

/** on_conflict condition type for table "pokemon_v2_pokemonability" */
export type Pokemon_V2_Pokemonability_On_Conflict = {
  constraint: Pokemon_V2_Pokemonability_Constraint;
  update_columns?: Array<Pokemon_V2_Pokemonability_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Pokemonability_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonability". */
export type Pokemon_V2_Pokemonability_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  is_hidden?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_pokemonability */
export type Pokemon_V2_Pokemonability_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_pokemonability" */
export enum Pokemon_V2_Pokemonability_Select_Column {
  /** column name */
  AbilityId = 'ability_id',
  /** column name */
  Id = 'id',
  /** column name */
  IsHidden = 'is_hidden',
  /** column name */
  PokemonId = 'pokemon_id',
  /** column name */
  Slot = 'slot'
}

/** input type for updating data in table "pokemon_v2_pokemonability" */
export type Pokemon_V2_Pokemonability_Set_Input = {
  ability_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_hidden?: InputMaybe<Scalars['Boolean']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  slot?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Pokemonability_Stddev_Fields = {
  __typename?: 'pokemon_v2_pokemonability_stddev_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Pokemonability_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonability_stddev_pop_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Pokemonability_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonability_stddev_samp_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_pokemonability" */
export type Pokemon_V2_Pokemonability_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Pokemonability_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Pokemonability_Stream_Cursor_Value_Input = {
  ability_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_hidden?: InputMaybe<Scalars['Boolean']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  slot?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Pokemonability_Sum_Fields = {
  __typename?: 'pokemon_v2_pokemonability_sum_fields';
  ability_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  slot?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_pokemonability" */
export enum Pokemon_V2_Pokemonability_Update_Column {
  /** column name */
  AbilityId = 'ability_id',
  /** column name */
  Id = 'id',
  /** column name */
  IsHidden = 'is_hidden',
  /** column name */
  PokemonId = 'pokemon_id',
  /** column name */
  Slot = 'slot'
}

export type Pokemon_V2_Pokemonability_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Pokemonability_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Pokemonability_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Pokemonability_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Pokemonability_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonability_var_pop_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Pokemonability_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonability_var_samp_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Pokemonability_Variance_Fields = {
  __typename?: 'pokemon_v2_pokemonability_variance_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokemonabilitypast" */
export type Pokemon_V2_Pokemonabilitypast = {
  __typename?: 'pokemon_v2_pokemonabilitypast';
  ability_id?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  is_hidden: Scalars['Boolean']['output'];
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  slot: Scalars['Int']['output'];
};

/** aggregated selection of "pokemon_v2_pokemonabilitypast" */
export type Pokemon_V2_Pokemonabilitypast_Aggregate = {
  __typename?: 'pokemon_v2_pokemonabilitypast_aggregate';
  aggregate?: Maybe<Pokemon_V2_Pokemonabilitypast_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Pokemonabilitypast>;
};

/** aggregate fields of "pokemon_v2_pokemonabilitypast" */
export type Pokemon_V2_Pokemonabilitypast_Aggregate_Fields = {
  __typename?: 'pokemon_v2_pokemonabilitypast_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Pokemonabilitypast_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Pokemonabilitypast_Max_Fields>;
  min?: Maybe<Pokemon_V2_Pokemonabilitypast_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Pokemonabilitypast_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Pokemonabilitypast_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Pokemonabilitypast_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Pokemonabilitypast_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Pokemonabilitypast_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Pokemonabilitypast_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Pokemonabilitypast_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonabilitypast" */
export type Pokemon_V2_Pokemonabilitypast_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Pokemonabilitypast_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Pokemonabilitypast_Avg_Fields = {
  __typename?: 'pokemon_v2_pokemonabilitypast_avg_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonabilitypast". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Pokemonabilitypast_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Pokemonabilitypast_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Pokemonabilitypast_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Pokemonabilitypast_Bool_Exp>>;
  ability_id?: InputMaybe<Int_Comparison_Exp>;
  generation_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  is_hidden?: InputMaybe<Boolean_Comparison_Exp>;
  pokemon_id?: InputMaybe<Int_Comparison_Exp>;
  slot?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_pokemonabilitypast" */
export enum Pokemon_V2_Pokemonabilitypast_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PokemonabilitypastPkey = 'pokemon_v2_pokemonabilitypast_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_pokemonabilitypast" */
export type Pokemon_V2_Pokemonabilitypast_Inc_Input = {
  ability_id?: InputMaybe<Scalars['Int']['input']>;
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  slot?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_pokemonabilitypast" */
export type Pokemon_V2_Pokemonabilitypast_Insert_Input = {
  ability_id?: InputMaybe<Scalars['Int']['input']>;
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_hidden?: InputMaybe<Scalars['Boolean']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  slot?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Pokemonabilitypast_Max_Fields = {
  __typename?: 'pokemon_v2_pokemonabilitypast_max_fields';
  ability_id?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  slot?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Pokemonabilitypast_Min_Fields = {
  __typename?: 'pokemon_v2_pokemonabilitypast_min_fields';
  ability_id?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  slot?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_pokemonabilitypast" */
export type Pokemon_V2_Pokemonabilitypast_Mutation_Response = {
  __typename?: 'pokemon_v2_pokemonabilitypast_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Pokemonabilitypast>;
};

/** on_conflict condition type for table "pokemon_v2_pokemonabilitypast" */
export type Pokemon_V2_Pokemonabilitypast_On_Conflict = {
  constraint: Pokemon_V2_Pokemonabilitypast_Constraint;
  update_columns?: Array<Pokemon_V2_Pokemonabilitypast_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Pokemonabilitypast_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonabilitypast". */
export type Pokemon_V2_Pokemonabilitypast_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  is_hidden?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_pokemonabilitypast */
export type Pokemon_V2_Pokemonabilitypast_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_pokemonabilitypast" */
export enum Pokemon_V2_Pokemonabilitypast_Select_Column {
  /** column name */
  AbilityId = 'ability_id',
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  Id = 'id',
  /** column name */
  IsHidden = 'is_hidden',
  /** column name */
  PokemonId = 'pokemon_id',
  /** column name */
  Slot = 'slot'
}

/** input type for updating data in table "pokemon_v2_pokemonabilitypast" */
export type Pokemon_V2_Pokemonabilitypast_Set_Input = {
  ability_id?: InputMaybe<Scalars['Int']['input']>;
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_hidden?: InputMaybe<Scalars['Boolean']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  slot?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Pokemonabilitypast_Stddev_Fields = {
  __typename?: 'pokemon_v2_pokemonabilitypast_stddev_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Pokemonabilitypast_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonabilitypast_stddev_pop_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Pokemonabilitypast_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonabilitypast_stddev_samp_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_pokemonabilitypast" */
export type Pokemon_V2_Pokemonabilitypast_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Pokemonabilitypast_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Pokemonabilitypast_Stream_Cursor_Value_Input = {
  ability_id?: InputMaybe<Scalars['Int']['input']>;
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_hidden?: InputMaybe<Scalars['Boolean']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  slot?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Pokemonabilitypast_Sum_Fields = {
  __typename?: 'pokemon_v2_pokemonabilitypast_sum_fields';
  ability_id?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  slot?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_pokemonabilitypast" */
export enum Pokemon_V2_Pokemonabilitypast_Update_Column {
  /** column name */
  AbilityId = 'ability_id',
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  Id = 'id',
  /** column name */
  IsHidden = 'is_hidden',
  /** column name */
  PokemonId = 'pokemon_id',
  /** column name */
  Slot = 'slot'
}

export type Pokemon_V2_Pokemonabilitypast_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Pokemonabilitypast_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Pokemonabilitypast_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Pokemonabilitypast_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Pokemonabilitypast_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonabilitypast_var_pop_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Pokemonabilitypast_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonabilitypast_var_samp_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Pokemonabilitypast_Variance_Fields = {
  __typename?: 'pokemon_v2_pokemonabilitypast_variance_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokemoncolor" */
export type Pokemon_V2_Pokemoncolor = {
  __typename?: 'pokemon_v2_pokemoncolor';
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_pokemoncolor" */
export type Pokemon_V2_Pokemoncolor_Aggregate = {
  __typename?: 'pokemon_v2_pokemoncolor_aggregate';
  aggregate?: Maybe<Pokemon_V2_Pokemoncolor_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Pokemoncolor>;
};

/** aggregate fields of "pokemon_v2_pokemoncolor" */
export type Pokemon_V2_Pokemoncolor_Aggregate_Fields = {
  __typename?: 'pokemon_v2_pokemoncolor_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Pokemoncolor_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Pokemoncolor_Max_Fields>;
  min?: Maybe<Pokemon_V2_Pokemoncolor_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Pokemoncolor_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Pokemoncolor_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Pokemoncolor_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Pokemoncolor_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Pokemoncolor_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Pokemoncolor_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Pokemoncolor_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemoncolor" */
export type Pokemon_V2_Pokemoncolor_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Pokemoncolor_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Pokemoncolor_Avg_Fields = {
  __typename?: 'pokemon_v2_pokemoncolor_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemoncolor". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Pokemoncolor_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Pokemoncolor_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Pokemoncolor_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Pokemoncolor_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_pokemoncolor" */
export enum Pokemon_V2_Pokemoncolor_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PokemoncolorPkey = 'pokemon_v2_pokemoncolor_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_pokemoncolor" */
export type Pokemon_V2_Pokemoncolor_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_pokemoncolor" */
export type Pokemon_V2_Pokemoncolor_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Pokemoncolor_Max_Fields = {
  __typename?: 'pokemon_v2_pokemoncolor_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Pokemoncolor_Min_Fields = {
  __typename?: 'pokemon_v2_pokemoncolor_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_pokemoncolor" */
export type Pokemon_V2_Pokemoncolor_Mutation_Response = {
  __typename?: 'pokemon_v2_pokemoncolor_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Pokemoncolor>;
};

/** on_conflict condition type for table "pokemon_v2_pokemoncolor" */
export type Pokemon_V2_Pokemoncolor_On_Conflict = {
  constraint: Pokemon_V2_Pokemoncolor_Constraint;
  update_columns?: Array<Pokemon_V2_Pokemoncolor_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Pokemoncolor_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemoncolor". */
export type Pokemon_V2_Pokemoncolor_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_pokemoncolor */
export type Pokemon_V2_Pokemoncolor_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_pokemoncolor" */
export enum Pokemon_V2_Pokemoncolor_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_pokemoncolor" */
export type Pokemon_V2_Pokemoncolor_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Pokemoncolor_Stddev_Fields = {
  __typename?: 'pokemon_v2_pokemoncolor_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Pokemoncolor_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemoncolor_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Pokemoncolor_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemoncolor_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_pokemoncolor" */
export type Pokemon_V2_Pokemoncolor_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Pokemoncolor_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Pokemoncolor_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Pokemoncolor_Sum_Fields = {
  __typename?: 'pokemon_v2_pokemoncolor_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_pokemoncolor" */
export enum Pokemon_V2_Pokemoncolor_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Pokemoncolor_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Pokemoncolor_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Pokemoncolor_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Pokemoncolor_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Pokemoncolor_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemoncolor_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Pokemoncolor_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemoncolor_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Pokemoncolor_Variance_Fields = {
  __typename?: 'pokemon_v2_pokemoncolor_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokemoncolorname" */
export type Pokemon_V2_Pokemoncolorname = {
  __typename?: 'pokemon_v2_pokemoncolorname';
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
  pokemon_color_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_pokemoncolorname" */
export type Pokemon_V2_Pokemoncolorname_Aggregate = {
  __typename?: 'pokemon_v2_pokemoncolorname_aggregate';
  aggregate?: Maybe<Pokemon_V2_Pokemoncolorname_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Pokemoncolorname>;
};

/** aggregate fields of "pokemon_v2_pokemoncolorname" */
export type Pokemon_V2_Pokemoncolorname_Aggregate_Fields = {
  __typename?: 'pokemon_v2_pokemoncolorname_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Pokemoncolorname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Pokemoncolorname_Max_Fields>;
  min?: Maybe<Pokemon_V2_Pokemoncolorname_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Pokemoncolorname_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Pokemoncolorname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Pokemoncolorname_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Pokemoncolorname_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Pokemoncolorname_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Pokemoncolorname_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Pokemoncolorname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemoncolorname" */
export type Pokemon_V2_Pokemoncolorname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Pokemoncolorname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Pokemoncolorname_Avg_Fields = {
  __typename?: 'pokemon_v2_pokemoncolorname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_color_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemoncolorname". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Pokemoncolorname_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Pokemoncolorname_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Pokemoncolorname_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Pokemoncolorname_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  pokemon_color_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_pokemoncolorname" */
export enum Pokemon_V2_Pokemoncolorname_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PokemoncolornamePkey = 'pokemon_v2_pokemoncolorname_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_pokemoncolorname" */
export type Pokemon_V2_Pokemoncolorname_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_color_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_pokemoncolorname" */
export type Pokemon_V2_Pokemoncolorname_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  pokemon_color_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Pokemoncolorname_Max_Fields = {
  __typename?: 'pokemon_v2_pokemoncolorname_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pokemon_color_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Pokemoncolorname_Min_Fields = {
  __typename?: 'pokemon_v2_pokemoncolorname_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pokemon_color_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_pokemoncolorname" */
export type Pokemon_V2_Pokemoncolorname_Mutation_Response = {
  __typename?: 'pokemon_v2_pokemoncolorname_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Pokemoncolorname>;
};

/** on_conflict condition type for table "pokemon_v2_pokemoncolorname" */
export type Pokemon_V2_Pokemoncolorname_On_Conflict = {
  constraint: Pokemon_V2_Pokemoncolorname_Constraint;
  update_columns?: Array<Pokemon_V2_Pokemoncolorname_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Pokemoncolorname_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemoncolorname". */
export type Pokemon_V2_Pokemoncolorname_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pokemon_color_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_pokemoncolorname */
export type Pokemon_V2_Pokemoncolorname_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_pokemoncolorname" */
export enum Pokemon_V2_Pokemoncolorname_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  PokemonColorId = 'pokemon_color_id'
}

/** input type for updating data in table "pokemon_v2_pokemoncolorname" */
export type Pokemon_V2_Pokemoncolorname_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  pokemon_color_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Pokemoncolorname_Stddev_Fields = {
  __typename?: 'pokemon_v2_pokemoncolorname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_color_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Pokemoncolorname_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemoncolorname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_color_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Pokemoncolorname_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemoncolorname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_color_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_pokemoncolorname" */
export type Pokemon_V2_Pokemoncolorname_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Pokemoncolorname_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Pokemoncolorname_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  pokemon_color_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Pokemoncolorname_Sum_Fields = {
  __typename?: 'pokemon_v2_pokemoncolorname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  pokemon_color_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_pokemoncolorname" */
export enum Pokemon_V2_Pokemoncolorname_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  PokemonColorId = 'pokemon_color_id'
}

export type Pokemon_V2_Pokemoncolorname_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Pokemoncolorname_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Pokemoncolorname_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Pokemoncolorname_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Pokemoncolorname_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemoncolorname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_color_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Pokemoncolorname_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemoncolorname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_color_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Pokemoncolorname_Variance_Fields = {
  __typename?: 'pokemon_v2_pokemoncolorname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_color_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokemoncries" */
export type Pokemon_V2_Pokemoncries = {
  __typename?: 'pokemon_v2_pokemoncries';
  cries: Scalars['jsonb']['output'];
  id: Scalars['Int']['output'];
  pokemon_id?: Maybe<Scalars['Int']['output']>;
};


/** columns and relationships of "pokemon_v2_pokemoncries" */
export type Pokemon_V2_PokemoncriesCriesArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "pokemon_v2_pokemoncries" */
export type Pokemon_V2_Pokemoncries_Aggregate = {
  __typename?: 'pokemon_v2_pokemoncries_aggregate';
  aggregate?: Maybe<Pokemon_V2_Pokemoncries_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Pokemoncries>;
};

/** aggregate fields of "pokemon_v2_pokemoncries" */
export type Pokemon_V2_Pokemoncries_Aggregate_Fields = {
  __typename?: 'pokemon_v2_pokemoncries_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Pokemoncries_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Pokemoncries_Max_Fields>;
  min?: Maybe<Pokemon_V2_Pokemoncries_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Pokemoncries_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Pokemoncries_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Pokemoncries_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Pokemoncries_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Pokemoncries_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Pokemoncries_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Pokemoncries_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemoncries" */
export type Pokemon_V2_Pokemoncries_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Pokemoncries_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Pokemon_V2_Pokemoncries_Append_Input = {
  cries?: InputMaybe<Scalars['jsonb']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Pokemoncries_Avg_Fields = {
  __typename?: 'pokemon_v2_pokemoncries_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemoncries". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Pokemoncries_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Pokemoncries_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Pokemoncries_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Pokemoncries_Bool_Exp>>;
  cries?: InputMaybe<Jsonb_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  pokemon_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_pokemoncries" */
export enum Pokemon_V2_Pokemoncries_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PokemoncriesPkey = 'pokemon_v2_pokemoncries_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Pokemon_V2_Pokemoncries_Delete_At_Path_Input = {
  cries?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Pokemon_V2_Pokemoncries_Delete_Elem_Input = {
  cries?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Pokemon_V2_Pokemoncries_Delete_Key_Input = {
  cries?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "pokemon_v2_pokemoncries" */
export type Pokemon_V2_Pokemoncries_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_pokemoncries" */
export type Pokemon_V2_Pokemoncries_Insert_Input = {
  cries?: InputMaybe<Scalars['jsonb']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Pokemoncries_Max_Fields = {
  __typename?: 'pokemon_v2_pokemoncries_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Pokemoncries_Min_Fields = {
  __typename?: 'pokemon_v2_pokemoncries_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_pokemoncries" */
export type Pokemon_V2_Pokemoncries_Mutation_Response = {
  __typename?: 'pokemon_v2_pokemoncries_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Pokemoncries>;
};

/** on_conflict condition type for table "pokemon_v2_pokemoncries" */
export type Pokemon_V2_Pokemoncries_On_Conflict = {
  constraint: Pokemon_V2_Pokemoncries_Constraint;
  update_columns?: Array<Pokemon_V2_Pokemoncries_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Pokemoncries_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemoncries". */
export type Pokemon_V2_Pokemoncries_Order_By = {
  cries?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_pokemoncries */
export type Pokemon_V2_Pokemoncries_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Pokemon_V2_Pokemoncries_Prepend_Input = {
  cries?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "pokemon_v2_pokemoncries" */
export enum Pokemon_V2_Pokemoncries_Select_Column {
  /** column name */
  Cries = 'cries',
  /** column name */
  Id = 'id',
  /** column name */
  PokemonId = 'pokemon_id'
}

/** input type for updating data in table "pokemon_v2_pokemoncries" */
export type Pokemon_V2_Pokemoncries_Set_Input = {
  cries?: InputMaybe<Scalars['jsonb']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Pokemoncries_Stddev_Fields = {
  __typename?: 'pokemon_v2_pokemoncries_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Pokemoncries_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemoncries_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Pokemoncries_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemoncries_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_pokemoncries" */
export type Pokemon_V2_Pokemoncries_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Pokemoncries_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Pokemoncries_Stream_Cursor_Value_Input = {
  cries?: InputMaybe<Scalars['jsonb']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Pokemoncries_Sum_Fields = {
  __typename?: 'pokemon_v2_pokemoncries_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_pokemoncries" */
export enum Pokemon_V2_Pokemoncries_Update_Column {
  /** column name */
  Cries = 'cries',
  /** column name */
  Id = 'id',
  /** column name */
  PokemonId = 'pokemon_id'
}

export type Pokemon_V2_Pokemoncries_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Pokemon_V2_Pokemoncries_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Pokemon_V2_Pokemoncries_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Pokemon_V2_Pokemoncries_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Pokemon_V2_Pokemoncries_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Pokemoncries_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Pokemon_V2_Pokemoncries_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Pokemoncries_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Pokemoncries_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Pokemoncries_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemoncries_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Pokemoncries_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemoncries_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Pokemoncries_Variance_Fields = {
  __typename?: 'pokemon_v2_pokemoncries_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokemondexnumber" */
export type Pokemon_V2_Pokemondexnumber = {
  __typename?: 'pokemon_v2_pokemondexnumber';
  id: Scalars['Int']['output'];
  pokedex_id?: Maybe<Scalars['Int']['output']>;
  pokedex_number: Scalars['Int']['output'];
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_pokemondexnumber" */
export type Pokemon_V2_Pokemondexnumber_Aggregate = {
  __typename?: 'pokemon_v2_pokemondexnumber_aggregate';
  aggregate?: Maybe<Pokemon_V2_Pokemondexnumber_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Pokemondexnumber>;
};

/** aggregate fields of "pokemon_v2_pokemondexnumber" */
export type Pokemon_V2_Pokemondexnumber_Aggregate_Fields = {
  __typename?: 'pokemon_v2_pokemondexnumber_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Pokemondexnumber_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Pokemondexnumber_Max_Fields>;
  min?: Maybe<Pokemon_V2_Pokemondexnumber_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Pokemondexnumber_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Pokemondexnumber_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Pokemondexnumber_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Pokemondexnumber_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Pokemondexnumber_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Pokemondexnumber_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Pokemondexnumber_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemondexnumber" */
export type Pokemon_V2_Pokemondexnumber_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Pokemondexnumber_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Pokemondexnumber_Avg_Fields = {
  __typename?: 'pokemon_v2_pokemondexnumber_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
  pokedex_number?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemondexnumber". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Pokemondexnumber_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Pokemondexnumber_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Pokemondexnumber_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Pokemondexnumber_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  pokedex_id?: InputMaybe<Int_Comparison_Exp>;
  pokedex_number?: InputMaybe<Int_Comparison_Exp>;
  pokemon_species_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_pokemondexnumber" */
export enum Pokemon_V2_Pokemondexnumber_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PokemondexnumberPkey = 'pokemon_v2_pokemondexnumber_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_pokemondexnumber" */
export type Pokemon_V2_Pokemondexnumber_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  pokedex_id?: InputMaybe<Scalars['Int']['input']>;
  pokedex_number?: InputMaybe<Scalars['Int']['input']>;
  pokemon_species_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_pokemondexnumber" */
export type Pokemon_V2_Pokemondexnumber_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  pokedex_id?: InputMaybe<Scalars['Int']['input']>;
  pokedex_number?: InputMaybe<Scalars['Int']['input']>;
  pokemon_species_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Pokemondexnumber_Max_Fields = {
  __typename?: 'pokemon_v2_pokemondexnumber_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokedex_id?: Maybe<Scalars['Int']['output']>;
  pokedex_number?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Pokemondexnumber_Min_Fields = {
  __typename?: 'pokemon_v2_pokemondexnumber_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokedex_id?: Maybe<Scalars['Int']['output']>;
  pokedex_number?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_pokemondexnumber" */
export type Pokemon_V2_Pokemondexnumber_Mutation_Response = {
  __typename?: 'pokemon_v2_pokemondexnumber_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Pokemondexnumber>;
};

/** on_conflict condition type for table "pokemon_v2_pokemondexnumber" */
export type Pokemon_V2_Pokemondexnumber_On_Conflict = {
  constraint: Pokemon_V2_Pokemondexnumber_Constraint;
  update_columns?: Array<Pokemon_V2_Pokemondexnumber_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Pokemondexnumber_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemondexnumber". */
export type Pokemon_V2_Pokemondexnumber_Order_By = {
  id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
  pokedex_number?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_pokemondexnumber */
export type Pokemon_V2_Pokemondexnumber_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_pokemondexnumber" */
export enum Pokemon_V2_Pokemondexnumber_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  PokedexId = 'pokedex_id',
  /** column name */
  PokedexNumber = 'pokedex_number',
  /** column name */
  PokemonSpeciesId = 'pokemon_species_id'
}

/** input type for updating data in table "pokemon_v2_pokemondexnumber" */
export type Pokemon_V2_Pokemondexnumber_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  pokedex_id?: InputMaybe<Scalars['Int']['input']>;
  pokedex_number?: InputMaybe<Scalars['Int']['input']>;
  pokemon_species_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Pokemondexnumber_Stddev_Fields = {
  __typename?: 'pokemon_v2_pokemondexnumber_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
  pokedex_number?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Pokemondexnumber_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemondexnumber_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
  pokedex_number?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Pokemondexnumber_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemondexnumber_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
  pokedex_number?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_pokemondexnumber" */
export type Pokemon_V2_Pokemondexnumber_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Pokemondexnumber_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Pokemondexnumber_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  pokedex_id?: InputMaybe<Scalars['Int']['input']>;
  pokedex_number?: InputMaybe<Scalars['Int']['input']>;
  pokemon_species_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Pokemondexnumber_Sum_Fields = {
  __typename?: 'pokemon_v2_pokemondexnumber_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokedex_id?: Maybe<Scalars['Int']['output']>;
  pokedex_number?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_pokemondexnumber" */
export enum Pokemon_V2_Pokemondexnumber_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  PokedexId = 'pokedex_id',
  /** column name */
  PokedexNumber = 'pokedex_number',
  /** column name */
  PokemonSpeciesId = 'pokemon_species_id'
}

export type Pokemon_V2_Pokemondexnumber_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Pokemondexnumber_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Pokemondexnumber_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Pokemondexnumber_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Pokemondexnumber_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemondexnumber_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
  pokedex_number?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Pokemondexnumber_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemondexnumber_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
  pokedex_number?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Pokemondexnumber_Variance_Fields = {
  __typename?: 'pokemon_v2_pokemondexnumber_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
  pokedex_number?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokemonegggroup" */
export type Pokemon_V2_Pokemonegggroup = {
  __typename?: 'pokemon_v2_pokemonegggroup';
  egg_group_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_pokemonegggroup" */
export type Pokemon_V2_Pokemonegggroup_Aggregate = {
  __typename?: 'pokemon_v2_pokemonegggroup_aggregate';
  aggregate?: Maybe<Pokemon_V2_Pokemonegggroup_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Pokemonegggroup>;
};

/** aggregate fields of "pokemon_v2_pokemonegggroup" */
export type Pokemon_V2_Pokemonegggroup_Aggregate_Fields = {
  __typename?: 'pokemon_v2_pokemonegggroup_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Pokemonegggroup_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Pokemonegggroup_Max_Fields>;
  min?: Maybe<Pokemon_V2_Pokemonegggroup_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Pokemonegggroup_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Pokemonegggroup_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Pokemonegggroup_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Pokemonegggroup_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Pokemonegggroup_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Pokemonegggroup_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Pokemonegggroup_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonegggroup" */
export type Pokemon_V2_Pokemonegggroup_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Pokemonegggroup_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Pokemonegggroup_Avg_Fields = {
  __typename?: 'pokemon_v2_pokemonegggroup_avg_fields';
  egg_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonegggroup". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Pokemonegggroup_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Pokemonegggroup_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Pokemonegggroup_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Pokemonegggroup_Bool_Exp>>;
  egg_group_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  pokemon_species_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_pokemonegggroup" */
export enum Pokemon_V2_Pokemonegggroup_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PokemonegggroupPkey = 'pokemon_v2_pokemonegggroup_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_pokemonegggroup" */
export type Pokemon_V2_Pokemonegggroup_Inc_Input = {
  egg_group_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_species_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_pokemonegggroup" */
export type Pokemon_V2_Pokemonegggroup_Insert_Input = {
  egg_group_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_species_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Pokemonegggroup_Max_Fields = {
  __typename?: 'pokemon_v2_pokemonegggroup_max_fields';
  egg_group_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Pokemonegggroup_Min_Fields = {
  __typename?: 'pokemon_v2_pokemonegggroup_min_fields';
  egg_group_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_pokemonegggroup" */
export type Pokemon_V2_Pokemonegggroup_Mutation_Response = {
  __typename?: 'pokemon_v2_pokemonegggroup_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Pokemonegggroup>;
};

/** on_conflict condition type for table "pokemon_v2_pokemonegggroup" */
export type Pokemon_V2_Pokemonegggroup_On_Conflict = {
  constraint: Pokemon_V2_Pokemonegggroup_Constraint;
  update_columns?: Array<Pokemon_V2_Pokemonegggroup_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Pokemonegggroup_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonegggroup". */
export type Pokemon_V2_Pokemonegggroup_Order_By = {
  egg_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_pokemonegggroup */
export type Pokemon_V2_Pokemonegggroup_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_pokemonegggroup" */
export enum Pokemon_V2_Pokemonegggroup_Select_Column {
  /** column name */
  EggGroupId = 'egg_group_id',
  /** column name */
  Id = 'id',
  /** column name */
  PokemonSpeciesId = 'pokemon_species_id'
}

/** input type for updating data in table "pokemon_v2_pokemonegggroup" */
export type Pokemon_V2_Pokemonegggroup_Set_Input = {
  egg_group_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_species_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Pokemonegggroup_Stddev_Fields = {
  __typename?: 'pokemon_v2_pokemonegggroup_stddev_fields';
  egg_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Pokemonegggroup_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonegggroup_stddev_pop_fields';
  egg_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Pokemonegggroup_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonegggroup_stddev_samp_fields';
  egg_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_pokemonegggroup" */
export type Pokemon_V2_Pokemonegggroup_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Pokemonegggroup_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Pokemonegggroup_Stream_Cursor_Value_Input = {
  egg_group_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_species_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Pokemonegggroup_Sum_Fields = {
  __typename?: 'pokemon_v2_pokemonegggroup_sum_fields';
  egg_group_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_pokemonegggroup" */
export enum Pokemon_V2_Pokemonegggroup_Update_Column {
  /** column name */
  EggGroupId = 'egg_group_id',
  /** column name */
  Id = 'id',
  /** column name */
  PokemonSpeciesId = 'pokemon_species_id'
}

export type Pokemon_V2_Pokemonegggroup_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Pokemonegggroup_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Pokemonegggroup_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Pokemonegggroup_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Pokemonegggroup_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonegggroup_var_pop_fields';
  egg_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Pokemonegggroup_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonegggroup_var_samp_fields';
  egg_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Pokemonegggroup_Variance_Fields = {
  __typename?: 'pokemon_v2_pokemonegggroup_variance_fields';
  egg_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokemonevolution" */
export type Pokemon_V2_Pokemonevolution = {
  __typename?: 'pokemon_v2_pokemonevolution';
  evolution_item_id?: Maybe<Scalars['Int']['output']>;
  evolution_trigger_id?: Maybe<Scalars['Int']['output']>;
  evolved_species_id?: Maybe<Scalars['Int']['output']>;
  gender_id?: Maybe<Scalars['Int']['output']>;
  held_item_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  known_move_id?: Maybe<Scalars['Int']['output']>;
  known_move_type_id?: Maybe<Scalars['Int']['output']>;
  location_id?: Maybe<Scalars['Int']['output']>;
  min_affection?: Maybe<Scalars['Int']['output']>;
  min_beauty?: Maybe<Scalars['Int']['output']>;
  min_happiness?: Maybe<Scalars['Int']['output']>;
  min_level?: Maybe<Scalars['Int']['output']>;
  needs_overworld_rain: Scalars['Boolean']['output'];
  party_species_id?: Maybe<Scalars['Int']['output']>;
  party_type_id?: Maybe<Scalars['Int']['output']>;
  relative_physical_stats?: Maybe<Scalars['Int']['output']>;
  time_of_day?: Maybe<Scalars['String']['output']>;
  trade_species_id?: Maybe<Scalars['Int']['output']>;
  turn_upside_down: Scalars['Boolean']['output'];
};

/** aggregated selection of "pokemon_v2_pokemonevolution" */
export type Pokemon_V2_Pokemonevolution_Aggregate = {
  __typename?: 'pokemon_v2_pokemonevolution_aggregate';
  aggregate?: Maybe<Pokemon_V2_Pokemonevolution_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Pokemonevolution>;
};

/** aggregate fields of "pokemon_v2_pokemonevolution" */
export type Pokemon_V2_Pokemonevolution_Aggregate_Fields = {
  __typename?: 'pokemon_v2_pokemonevolution_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Pokemonevolution_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Pokemonevolution_Max_Fields>;
  min?: Maybe<Pokemon_V2_Pokemonevolution_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Pokemonevolution_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Pokemonevolution_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Pokemonevolution_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Pokemonevolution_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Pokemonevolution_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Pokemonevolution_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Pokemonevolution_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonevolution" */
export type Pokemon_V2_Pokemonevolution_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Pokemonevolution_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Pokemonevolution_Avg_Fields = {
  __typename?: 'pokemon_v2_pokemonevolution_avg_fields';
  evolution_item_id?: Maybe<Scalars['Float']['output']>;
  evolution_trigger_id?: Maybe<Scalars['Float']['output']>;
  evolved_species_id?: Maybe<Scalars['Float']['output']>;
  gender_id?: Maybe<Scalars['Float']['output']>;
  held_item_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  known_move_id?: Maybe<Scalars['Float']['output']>;
  known_move_type_id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
  min_affection?: Maybe<Scalars['Float']['output']>;
  min_beauty?: Maybe<Scalars['Float']['output']>;
  min_happiness?: Maybe<Scalars['Float']['output']>;
  min_level?: Maybe<Scalars['Float']['output']>;
  party_species_id?: Maybe<Scalars['Float']['output']>;
  party_type_id?: Maybe<Scalars['Float']['output']>;
  relative_physical_stats?: Maybe<Scalars['Float']['output']>;
  trade_species_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonevolution". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Pokemonevolution_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Pokemonevolution_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Pokemonevolution_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Pokemonevolution_Bool_Exp>>;
  evolution_item_id?: InputMaybe<Int_Comparison_Exp>;
  evolution_trigger_id?: InputMaybe<Int_Comparison_Exp>;
  evolved_species_id?: InputMaybe<Int_Comparison_Exp>;
  gender_id?: InputMaybe<Int_Comparison_Exp>;
  held_item_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  known_move_id?: InputMaybe<Int_Comparison_Exp>;
  known_move_type_id?: InputMaybe<Int_Comparison_Exp>;
  location_id?: InputMaybe<Int_Comparison_Exp>;
  min_affection?: InputMaybe<Int_Comparison_Exp>;
  min_beauty?: InputMaybe<Int_Comparison_Exp>;
  min_happiness?: InputMaybe<Int_Comparison_Exp>;
  min_level?: InputMaybe<Int_Comparison_Exp>;
  needs_overworld_rain?: InputMaybe<Boolean_Comparison_Exp>;
  party_species_id?: InputMaybe<Int_Comparison_Exp>;
  party_type_id?: InputMaybe<Int_Comparison_Exp>;
  relative_physical_stats?: InputMaybe<Int_Comparison_Exp>;
  time_of_day?: InputMaybe<String_Comparison_Exp>;
  trade_species_id?: InputMaybe<Int_Comparison_Exp>;
  turn_upside_down?: InputMaybe<Boolean_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_pokemonevolution" */
export enum Pokemon_V2_Pokemonevolution_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PokemonevolutionPkey = 'pokemon_v2_pokemonevolution_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_pokemonevolution" */
export type Pokemon_V2_Pokemonevolution_Inc_Input = {
  evolution_item_id?: InputMaybe<Scalars['Int']['input']>;
  evolution_trigger_id?: InputMaybe<Scalars['Int']['input']>;
  evolved_species_id?: InputMaybe<Scalars['Int']['input']>;
  gender_id?: InputMaybe<Scalars['Int']['input']>;
  held_item_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  known_move_id?: InputMaybe<Scalars['Int']['input']>;
  known_move_type_id?: InputMaybe<Scalars['Int']['input']>;
  location_id?: InputMaybe<Scalars['Int']['input']>;
  min_affection?: InputMaybe<Scalars['Int']['input']>;
  min_beauty?: InputMaybe<Scalars['Int']['input']>;
  min_happiness?: InputMaybe<Scalars['Int']['input']>;
  min_level?: InputMaybe<Scalars['Int']['input']>;
  party_species_id?: InputMaybe<Scalars['Int']['input']>;
  party_type_id?: InputMaybe<Scalars['Int']['input']>;
  relative_physical_stats?: InputMaybe<Scalars['Int']['input']>;
  trade_species_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_pokemonevolution" */
export type Pokemon_V2_Pokemonevolution_Insert_Input = {
  evolution_item_id?: InputMaybe<Scalars['Int']['input']>;
  evolution_trigger_id?: InputMaybe<Scalars['Int']['input']>;
  evolved_species_id?: InputMaybe<Scalars['Int']['input']>;
  gender_id?: InputMaybe<Scalars['Int']['input']>;
  held_item_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  known_move_id?: InputMaybe<Scalars['Int']['input']>;
  known_move_type_id?: InputMaybe<Scalars['Int']['input']>;
  location_id?: InputMaybe<Scalars['Int']['input']>;
  min_affection?: InputMaybe<Scalars['Int']['input']>;
  min_beauty?: InputMaybe<Scalars['Int']['input']>;
  min_happiness?: InputMaybe<Scalars['Int']['input']>;
  min_level?: InputMaybe<Scalars['Int']['input']>;
  needs_overworld_rain?: InputMaybe<Scalars['Boolean']['input']>;
  party_species_id?: InputMaybe<Scalars['Int']['input']>;
  party_type_id?: InputMaybe<Scalars['Int']['input']>;
  relative_physical_stats?: InputMaybe<Scalars['Int']['input']>;
  time_of_day?: InputMaybe<Scalars['String']['input']>;
  trade_species_id?: InputMaybe<Scalars['Int']['input']>;
  turn_upside_down?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Pokemonevolution_Max_Fields = {
  __typename?: 'pokemon_v2_pokemonevolution_max_fields';
  evolution_item_id?: Maybe<Scalars['Int']['output']>;
  evolution_trigger_id?: Maybe<Scalars['Int']['output']>;
  evolved_species_id?: Maybe<Scalars['Int']['output']>;
  gender_id?: Maybe<Scalars['Int']['output']>;
  held_item_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  known_move_id?: Maybe<Scalars['Int']['output']>;
  known_move_type_id?: Maybe<Scalars['Int']['output']>;
  location_id?: Maybe<Scalars['Int']['output']>;
  min_affection?: Maybe<Scalars['Int']['output']>;
  min_beauty?: Maybe<Scalars['Int']['output']>;
  min_happiness?: Maybe<Scalars['Int']['output']>;
  min_level?: Maybe<Scalars['Int']['output']>;
  party_species_id?: Maybe<Scalars['Int']['output']>;
  party_type_id?: Maybe<Scalars['Int']['output']>;
  relative_physical_stats?: Maybe<Scalars['Int']['output']>;
  time_of_day?: Maybe<Scalars['String']['output']>;
  trade_species_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Pokemonevolution_Min_Fields = {
  __typename?: 'pokemon_v2_pokemonevolution_min_fields';
  evolution_item_id?: Maybe<Scalars['Int']['output']>;
  evolution_trigger_id?: Maybe<Scalars['Int']['output']>;
  evolved_species_id?: Maybe<Scalars['Int']['output']>;
  gender_id?: Maybe<Scalars['Int']['output']>;
  held_item_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  known_move_id?: Maybe<Scalars['Int']['output']>;
  known_move_type_id?: Maybe<Scalars['Int']['output']>;
  location_id?: Maybe<Scalars['Int']['output']>;
  min_affection?: Maybe<Scalars['Int']['output']>;
  min_beauty?: Maybe<Scalars['Int']['output']>;
  min_happiness?: Maybe<Scalars['Int']['output']>;
  min_level?: Maybe<Scalars['Int']['output']>;
  party_species_id?: Maybe<Scalars['Int']['output']>;
  party_type_id?: Maybe<Scalars['Int']['output']>;
  relative_physical_stats?: Maybe<Scalars['Int']['output']>;
  time_of_day?: Maybe<Scalars['String']['output']>;
  trade_species_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_pokemonevolution" */
export type Pokemon_V2_Pokemonevolution_Mutation_Response = {
  __typename?: 'pokemon_v2_pokemonevolution_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Pokemonevolution>;
};

/** on_conflict condition type for table "pokemon_v2_pokemonevolution" */
export type Pokemon_V2_Pokemonevolution_On_Conflict = {
  constraint: Pokemon_V2_Pokemonevolution_Constraint;
  update_columns?: Array<Pokemon_V2_Pokemonevolution_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Pokemonevolution_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonevolution". */
export type Pokemon_V2_Pokemonevolution_Order_By = {
  evolution_item_id?: InputMaybe<Order_By>;
  evolution_trigger_id?: InputMaybe<Order_By>;
  evolved_species_id?: InputMaybe<Order_By>;
  gender_id?: InputMaybe<Order_By>;
  held_item_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  known_move_id?: InputMaybe<Order_By>;
  known_move_type_id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  min_affection?: InputMaybe<Order_By>;
  min_beauty?: InputMaybe<Order_By>;
  min_happiness?: InputMaybe<Order_By>;
  min_level?: InputMaybe<Order_By>;
  needs_overworld_rain?: InputMaybe<Order_By>;
  party_species_id?: InputMaybe<Order_By>;
  party_type_id?: InputMaybe<Order_By>;
  relative_physical_stats?: InputMaybe<Order_By>;
  time_of_day?: InputMaybe<Order_By>;
  trade_species_id?: InputMaybe<Order_By>;
  turn_upside_down?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_pokemonevolution */
export type Pokemon_V2_Pokemonevolution_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_pokemonevolution" */
export enum Pokemon_V2_Pokemonevolution_Select_Column {
  /** column name */
  EvolutionItemId = 'evolution_item_id',
  /** column name */
  EvolutionTriggerId = 'evolution_trigger_id',
  /** column name */
  EvolvedSpeciesId = 'evolved_species_id',
  /** column name */
  GenderId = 'gender_id',
  /** column name */
  HeldItemId = 'held_item_id',
  /** column name */
  Id = 'id',
  /** column name */
  KnownMoveId = 'known_move_id',
  /** column name */
  KnownMoveTypeId = 'known_move_type_id',
  /** column name */
  LocationId = 'location_id',
  /** column name */
  MinAffection = 'min_affection',
  /** column name */
  MinBeauty = 'min_beauty',
  /** column name */
  MinHappiness = 'min_happiness',
  /** column name */
  MinLevel = 'min_level',
  /** column name */
  NeedsOverworldRain = 'needs_overworld_rain',
  /** column name */
  PartySpeciesId = 'party_species_id',
  /** column name */
  PartyTypeId = 'party_type_id',
  /** column name */
  RelativePhysicalStats = 'relative_physical_stats',
  /** column name */
  TimeOfDay = 'time_of_day',
  /** column name */
  TradeSpeciesId = 'trade_species_id',
  /** column name */
  TurnUpsideDown = 'turn_upside_down'
}

/** input type for updating data in table "pokemon_v2_pokemonevolution" */
export type Pokemon_V2_Pokemonevolution_Set_Input = {
  evolution_item_id?: InputMaybe<Scalars['Int']['input']>;
  evolution_trigger_id?: InputMaybe<Scalars['Int']['input']>;
  evolved_species_id?: InputMaybe<Scalars['Int']['input']>;
  gender_id?: InputMaybe<Scalars['Int']['input']>;
  held_item_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  known_move_id?: InputMaybe<Scalars['Int']['input']>;
  known_move_type_id?: InputMaybe<Scalars['Int']['input']>;
  location_id?: InputMaybe<Scalars['Int']['input']>;
  min_affection?: InputMaybe<Scalars['Int']['input']>;
  min_beauty?: InputMaybe<Scalars['Int']['input']>;
  min_happiness?: InputMaybe<Scalars['Int']['input']>;
  min_level?: InputMaybe<Scalars['Int']['input']>;
  needs_overworld_rain?: InputMaybe<Scalars['Boolean']['input']>;
  party_species_id?: InputMaybe<Scalars['Int']['input']>;
  party_type_id?: InputMaybe<Scalars['Int']['input']>;
  relative_physical_stats?: InputMaybe<Scalars['Int']['input']>;
  time_of_day?: InputMaybe<Scalars['String']['input']>;
  trade_species_id?: InputMaybe<Scalars['Int']['input']>;
  turn_upside_down?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Pokemonevolution_Stddev_Fields = {
  __typename?: 'pokemon_v2_pokemonevolution_stddev_fields';
  evolution_item_id?: Maybe<Scalars['Float']['output']>;
  evolution_trigger_id?: Maybe<Scalars['Float']['output']>;
  evolved_species_id?: Maybe<Scalars['Float']['output']>;
  gender_id?: Maybe<Scalars['Float']['output']>;
  held_item_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  known_move_id?: Maybe<Scalars['Float']['output']>;
  known_move_type_id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
  min_affection?: Maybe<Scalars['Float']['output']>;
  min_beauty?: Maybe<Scalars['Float']['output']>;
  min_happiness?: Maybe<Scalars['Float']['output']>;
  min_level?: Maybe<Scalars['Float']['output']>;
  party_species_id?: Maybe<Scalars['Float']['output']>;
  party_type_id?: Maybe<Scalars['Float']['output']>;
  relative_physical_stats?: Maybe<Scalars['Float']['output']>;
  trade_species_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Pokemonevolution_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonevolution_stddev_pop_fields';
  evolution_item_id?: Maybe<Scalars['Float']['output']>;
  evolution_trigger_id?: Maybe<Scalars['Float']['output']>;
  evolved_species_id?: Maybe<Scalars['Float']['output']>;
  gender_id?: Maybe<Scalars['Float']['output']>;
  held_item_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  known_move_id?: Maybe<Scalars['Float']['output']>;
  known_move_type_id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
  min_affection?: Maybe<Scalars['Float']['output']>;
  min_beauty?: Maybe<Scalars['Float']['output']>;
  min_happiness?: Maybe<Scalars['Float']['output']>;
  min_level?: Maybe<Scalars['Float']['output']>;
  party_species_id?: Maybe<Scalars['Float']['output']>;
  party_type_id?: Maybe<Scalars['Float']['output']>;
  relative_physical_stats?: Maybe<Scalars['Float']['output']>;
  trade_species_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Pokemonevolution_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonevolution_stddev_samp_fields';
  evolution_item_id?: Maybe<Scalars['Float']['output']>;
  evolution_trigger_id?: Maybe<Scalars['Float']['output']>;
  evolved_species_id?: Maybe<Scalars['Float']['output']>;
  gender_id?: Maybe<Scalars['Float']['output']>;
  held_item_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  known_move_id?: Maybe<Scalars['Float']['output']>;
  known_move_type_id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
  min_affection?: Maybe<Scalars['Float']['output']>;
  min_beauty?: Maybe<Scalars['Float']['output']>;
  min_happiness?: Maybe<Scalars['Float']['output']>;
  min_level?: Maybe<Scalars['Float']['output']>;
  party_species_id?: Maybe<Scalars['Float']['output']>;
  party_type_id?: Maybe<Scalars['Float']['output']>;
  relative_physical_stats?: Maybe<Scalars['Float']['output']>;
  trade_species_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_pokemonevolution" */
export type Pokemon_V2_Pokemonevolution_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Pokemonevolution_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Pokemonevolution_Stream_Cursor_Value_Input = {
  evolution_item_id?: InputMaybe<Scalars['Int']['input']>;
  evolution_trigger_id?: InputMaybe<Scalars['Int']['input']>;
  evolved_species_id?: InputMaybe<Scalars['Int']['input']>;
  gender_id?: InputMaybe<Scalars['Int']['input']>;
  held_item_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  known_move_id?: InputMaybe<Scalars['Int']['input']>;
  known_move_type_id?: InputMaybe<Scalars['Int']['input']>;
  location_id?: InputMaybe<Scalars['Int']['input']>;
  min_affection?: InputMaybe<Scalars['Int']['input']>;
  min_beauty?: InputMaybe<Scalars['Int']['input']>;
  min_happiness?: InputMaybe<Scalars['Int']['input']>;
  min_level?: InputMaybe<Scalars['Int']['input']>;
  needs_overworld_rain?: InputMaybe<Scalars['Boolean']['input']>;
  party_species_id?: InputMaybe<Scalars['Int']['input']>;
  party_type_id?: InputMaybe<Scalars['Int']['input']>;
  relative_physical_stats?: InputMaybe<Scalars['Int']['input']>;
  time_of_day?: InputMaybe<Scalars['String']['input']>;
  trade_species_id?: InputMaybe<Scalars['Int']['input']>;
  turn_upside_down?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Pokemonevolution_Sum_Fields = {
  __typename?: 'pokemon_v2_pokemonevolution_sum_fields';
  evolution_item_id?: Maybe<Scalars['Int']['output']>;
  evolution_trigger_id?: Maybe<Scalars['Int']['output']>;
  evolved_species_id?: Maybe<Scalars['Int']['output']>;
  gender_id?: Maybe<Scalars['Int']['output']>;
  held_item_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  known_move_id?: Maybe<Scalars['Int']['output']>;
  known_move_type_id?: Maybe<Scalars['Int']['output']>;
  location_id?: Maybe<Scalars['Int']['output']>;
  min_affection?: Maybe<Scalars['Int']['output']>;
  min_beauty?: Maybe<Scalars['Int']['output']>;
  min_happiness?: Maybe<Scalars['Int']['output']>;
  min_level?: Maybe<Scalars['Int']['output']>;
  party_species_id?: Maybe<Scalars['Int']['output']>;
  party_type_id?: Maybe<Scalars['Int']['output']>;
  relative_physical_stats?: Maybe<Scalars['Int']['output']>;
  trade_species_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_pokemonevolution" */
export enum Pokemon_V2_Pokemonevolution_Update_Column {
  /** column name */
  EvolutionItemId = 'evolution_item_id',
  /** column name */
  EvolutionTriggerId = 'evolution_trigger_id',
  /** column name */
  EvolvedSpeciesId = 'evolved_species_id',
  /** column name */
  GenderId = 'gender_id',
  /** column name */
  HeldItemId = 'held_item_id',
  /** column name */
  Id = 'id',
  /** column name */
  KnownMoveId = 'known_move_id',
  /** column name */
  KnownMoveTypeId = 'known_move_type_id',
  /** column name */
  LocationId = 'location_id',
  /** column name */
  MinAffection = 'min_affection',
  /** column name */
  MinBeauty = 'min_beauty',
  /** column name */
  MinHappiness = 'min_happiness',
  /** column name */
  MinLevel = 'min_level',
  /** column name */
  NeedsOverworldRain = 'needs_overworld_rain',
  /** column name */
  PartySpeciesId = 'party_species_id',
  /** column name */
  PartyTypeId = 'party_type_id',
  /** column name */
  RelativePhysicalStats = 'relative_physical_stats',
  /** column name */
  TimeOfDay = 'time_of_day',
  /** column name */
  TradeSpeciesId = 'trade_species_id',
  /** column name */
  TurnUpsideDown = 'turn_upside_down'
}

export type Pokemon_V2_Pokemonevolution_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Pokemonevolution_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Pokemonevolution_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Pokemonevolution_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Pokemonevolution_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonevolution_var_pop_fields';
  evolution_item_id?: Maybe<Scalars['Float']['output']>;
  evolution_trigger_id?: Maybe<Scalars['Float']['output']>;
  evolved_species_id?: Maybe<Scalars['Float']['output']>;
  gender_id?: Maybe<Scalars['Float']['output']>;
  held_item_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  known_move_id?: Maybe<Scalars['Float']['output']>;
  known_move_type_id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
  min_affection?: Maybe<Scalars['Float']['output']>;
  min_beauty?: Maybe<Scalars['Float']['output']>;
  min_happiness?: Maybe<Scalars['Float']['output']>;
  min_level?: Maybe<Scalars['Float']['output']>;
  party_species_id?: Maybe<Scalars['Float']['output']>;
  party_type_id?: Maybe<Scalars['Float']['output']>;
  relative_physical_stats?: Maybe<Scalars['Float']['output']>;
  trade_species_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Pokemonevolution_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonevolution_var_samp_fields';
  evolution_item_id?: Maybe<Scalars['Float']['output']>;
  evolution_trigger_id?: Maybe<Scalars['Float']['output']>;
  evolved_species_id?: Maybe<Scalars['Float']['output']>;
  gender_id?: Maybe<Scalars['Float']['output']>;
  held_item_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  known_move_id?: Maybe<Scalars['Float']['output']>;
  known_move_type_id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
  min_affection?: Maybe<Scalars['Float']['output']>;
  min_beauty?: Maybe<Scalars['Float']['output']>;
  min_happiness?: Maybe<Scalars['Float']['output']>;
  min_level?: Maybe<Scalars['Float']['output']>;
  party_species_id?: Maybe<Scalars['Float']['output']>;
  party_type_id?: Maybe<Scalars['Float']['output']>;
  relative_physical_stats?: Maybe<Scalars['Float']['output']>;
  trade_species_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Pokemonevolution_Variance_Fields = {
  __typename?: 'pokemon_v2_pokemonevolution_variance_fields';
  evolution_item_id?: Maybe<Scalars['Float']['output']>;
  evolution_trigger_id?: Maybe<Scalars['Float']['output']>;
  evolved_species_id?: Maybe<Scalars['Float']['output']>;
  gender_id?: Maybe<Scalars['Float']['output']>;
  held_item_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  known_move_id?: Maybe<Scalars['Float']['output']>;
  known_move_type_id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
  min_affection?: Maybe<Scalars['Float']['output']>;
  min_beauty?: Maybe<Scalars['Float']['output']>;
  min_happiness?: Maybe<Scalars['Float']['output']>;
  min_level?: Maybe<Scalars['Float']['output']>;
  party_species_id?: Maybe<Scalars['Float']['output']>;
  party_type_id?: Maybe<Scalars['Float']['output']>;
  relative_physical_stats?: Maybe<Scalars['Float']['output']>;
  trade_species_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokemonform" */
export type Pokemon_V2_Pokemonform = {
  __typename?: 'pokemon_v2_pokemonform';
  form_name: Scalars['String']['output'];
  form_order?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  is_battle_only: Scalars['Boolean']['output'];
  is_default: Scalars['Boolean']['output'];
  is_mega: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  order?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_pokemonform" */
export type Pokemon_V2_Pokemonform_Aggregate = {
  __typename?: 'pokemon_v2_pokemonform_aggregate';
  aggregate?: Maybe<Pokemon_V2_Pokemonform_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Pokemonform>;
};

/** aggregate fields of "pokemon_v2_pokemonform" */
export type Pokemon_V2_Pokemonform_Aggregate_Fields = {
  __typename?: 'pokemon_v2_pokemonform_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Pokemonform_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Pokemonform_Max_Fields>;
  min?: Maybe<Pokemon_V2_Pokemonform_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Pokemonform_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Pokemonform_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Pokemonform_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Pokemonform_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Pokemonform_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Pokemonform_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Pokemonform_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonform" */
export type Pokemon_V2_Pokemonform_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Pokemonform_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Pokemonform_Avg_Fields = {
  __typename?: 'pokemon_v2_pokemonform_avg_fields';
  form_order?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonform". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Pokemonform_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Pokemonform_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Pokemonform_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Pokemonform_Bool_Exp>>;
  form_name?: InputMaybe<String_Comparison_Exp>;
  form_order?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  is_battle_only?: InputMaybe<Boolean_Comparison_Exp>;
  is_default?: InputMaybe<Boolean_Comparison_Exp>;
  is_mega?: InputMaybe<Boolean_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  order?: InputMaybe<Int_Comparison_Exp>;
  pokemon_id?: InputMaybe<Int_Comparison_Exp>;
  version_group_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_pokemonform" */
export enum Pokemon_V2_Pokemonform_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PokemonformPkey = 'pokemon_v2_pokemonform_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_pokemonform" */
export type Pokemon_V2_Pokemonform_Inc_Input = {
  form_order?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_pokemonform" */
export type Pokemon_V2_Pokemonform_Insert_Input = {
  form_name?: InputMaybe<Scalars['String']['input']>;
  form_order?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_battle_only?: InputMaybe<Scalars['Boolean']['input']>;
  is_default?: InputMaybe<Scalars['Boolean']['input']>;
  is_mega?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Pokemonform_Max_Fields = {
  __typename?: 'pokemon_v2_pokemonform_max_fields';
  form_name?: Maybe<Scalars['String']['output']>;
  form_order?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Pokemonform_Min_Fields = {
  __typename?: 'pokemon_v2_pokemonform_min_fields';
  form_name?: Maybe<Scalars['String']['output']>;
  form_order?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_pokemonform" */
export type Pokemon_V2_Pokemonform_Mutation_Response = {
  __typename?: 'pokemon_v2_pokemonform_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Pokemonform>;
};

/** on_conflict condition type for table "pokemon_v2_pokemonform" */
export type Pokemon_V2_Pokemonform_On_Conflict = {
  constraint: Pokemon_V2_Pokemonform_Constraint;
  update_columns?: Array<Pokemon_V2_Pokemonform_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Pokemonform_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonform". */
export type Pokemon_V2_Pokemonform_Order_By = {
  form_name?: InputMaybe<Order_By>;
  form_order?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  is_battle_only?: InputMaybe<Order_By>;
  is_default?: InputMaybe<Order_By>;
  is_mega?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_pokemonform */
export type Pokemon_V2_Pokemonform_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_pokemonform" */
export enum Pokemon_V2_Pokemonform_Select_Column {
  /** column name */
  FormName = 'form_name',
  /** column name */
  FormOrder = 'form_order',
  /** column name */
  Id = 'id',
  /** column name */
  IsBattleOnly = 'is_battle_only',
  /** column name */
  IsDefault = 'is_default',
  /** column name */
  IsMega = 'is_mega',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  PokemonId = 'pokemon_id',
  /** column name */
  VersionGroupId = 'version_group_id'
}

/** input type for updating data in table "pokemon_v2_pokemonform" */
export type Pokemon_V2_Pokemonform_Set_Input = {
  form_name?: InputMaybe<Scalars['String']['input']>;
  form_order?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_battle_only?: InputMaybe<Scalars['Boolean']['input']>;
  is_default?: InputMaybe<Scalars['Boolean']['input']>;
  is_mega?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Pokemonform_Stddev_Fields = {
  __typename?: 'pokemon_v2_pokemonform_stddev_fields';
  form_order?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Pokemonform_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonform_stddev_pop_fields';
  form_order?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Pokemonform_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonform_stddev_samp_fields';
  form_order?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_pokemonform" */
export type Pokemon_V2_Pokemonform_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Pokemonform_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Pokemonform_Stream_Cursor_Value_Input = {
  form_name?: InputMaybe<Scalars['String']['input']>;
  form_order?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_battle_only?: InputMaybe<Scalars['Boolean']['input']>;
  is_default?: InputMaybe<Scalars['Boolean']['input']>;
  is_mega?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Pokemonform_Sum_Fields = {
  __typename?: 'pokemon_v2_pokemonform_sum_fields';
  form_order?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_pokemonform" */
export enum Pokemon_V2_Pokemonform_Update_Column {
  /** column name */
  FormName = 'form_name',
  /** column name */
  FormOrder = 'form_order',
  /** column name */
  Id = 'id',
  /** column name */
  IsBattleOnly = 'is_battle_only',
  /** column name */
  IsDefault = 'is_default',
  /** column name */
  IsMega = 'is_mega',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  PokemonId = 'pokemon_id',
  /** column name */
  VersionGroupId = 'version_group_id'
}

export type Pokemon_V2_Pokemonform_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Pokemonform_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Pokemonform_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Pokemonform_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Pokemonform_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonform_var_pop_fields';
  form_order?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Pokemonform_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonform_var_samp_fields';
  form_order?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Pokemonform_Variance_Fields = {
  __typename?: 'pokemon_v2_pokemonform_variance_fields';
  form_order?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokemonformgeneration" */
export type Pokemon_V2_Pokemonformgeneration = {
  __typename?: 'pokemon_v2_pokemonformgeneration';
  game_index: Scalars['Int']['output'];
  generation_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  pokemon_form_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_pokemonformgeneration" */
export type Pokemon_V2_Pokemonformgeneration_Aggregate = {
  __typename?: 'pokemon_v2_pokemonformgeneration_aggregate';
  aggregate?: Maybe<Pokemon_V2_Pokemonformgeneration_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Pokemonformgeneration>;
};

/** aggregate fields of "pokemon_v2_pokemonformgeneration" */
export type Pokemon_V2_Pokemonformgeneration_Aggregate_Fields = {
  __typename?: 'pokemon_v2_pokemonformgeneration_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Pokemonformgeneration_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Pokemonformgeneration_Max_Fields>;
  min?: Maybe<Pokemon_V2_Pokemonformgeneration_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Pokemonformgeneration_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Pokemonformgeneration_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Pokemonformgeneration_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Pokemonformgeneration_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Pokemonformgeneration_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Pokemonformgeneration_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Pokemonformgeneration_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonformgeneration" */
export type Pokemon_V2_Pokemonformgeneration_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Pokemonformgeneration_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Pokemonformgeneration_Avg_Fields = {
  __typename?: 'pokemon_v2_pokemonformgeneration_avg_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonformgeneration". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Pokemonformgeneration_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Pokemonformgeneration_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Pokemonformgeneration_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Pokemonformgeneration_Bool_Exp>>;
  game_index?: InputMaybe<Int_Comparison_Exp>;
  generation_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  pokemon_form_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_pokemonformgeneration" */
export enum Pokemon_V2_Pokemonformgeneration_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PokemonformgenerationPkey = 'pokemon_v2_pokemonformgeneration_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_pokemonformgeneration" */
export type Pokemon_V2_Pokemonformgeneration_Inc_Input = {
  game_index?: InputMaybe<Scalars['Int']['input']>;
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_form_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_pokemonformgeneration" */
export type Pokemon_V2_Pokemonformgeneration_Insert_Input = {
  game_index?: InputMaybe<Scalars['Int']['input']>;
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_form_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Pokemonformgeneration_Max_Fields = {
  __typename?: 'pokemon_v2_pokemonformgeneration_max_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_form_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Pokemonformgeneration_Min_Fields = {
  __typename?: 'pokemon_v2_pokemonformgeneration_min_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_form_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_pokemonformgeneration" */
export type Pokemon_V2_Pokemonformgeneration_Mutation_Response = {
  __typename?: 'pokemon_v2_pokemonformgeneration_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Pokemonformgeneration>;
};

/** on_conflict condition type for table "pokemon_v2_pokemonformgeneration" */
export type Pokemon_V2_Pokemonformgeneration_On_Conflict = {
  constraint: Pokemon_V2_Pokemonformgeneration_Constraint;
  update_columns?: Array<Pokemon_V2_Pokemonformgeneration_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Pokemonformgeneration_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonformgeneration". */
export type Pokemon_V2_Pokemonformgeneration_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_pokemonformgeneration */
export type Pokemon_V2_Pokemonformgeneration_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_pokemonformgeneration" */
export enum Pokemon_V2_Pokemonformgeneration_Select_Column {
  /** column name */
  GameIndex = 'game_index',
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  Id = 'id',
  /** column name */
  PokemonFormId = 'pokemon_form_id'
}

/** input type for updating data in table "pokemon_v2_pokemonformgeneration" */
export type Pokemon_V2_Pokemonformgeneration_Set_Input = {
  game_index?: InputMaybe<Scalars['Int']['input']>;
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_form_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Pokemonformgeneration_Stddev_Fields = {
  __typename?: 'pokemon_v2_pokemonformgeneration_stddev_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Pokemonformgeneration_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonformgeneration_stddev_pop_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Pokemonformgeneration_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonformgeneration_stddev_samp_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_pokemonformgeneration" */
export type Pokemon_V2_Pokemonformgeneration_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Pokemonformgeneration_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Pokemonformgeneration_Stream_Cursor_Value_Input = {
  game_index?: InputMaybe<Scalars['Int']['input']>;
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_form_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Pokemonformgeneration_Sum_Fields = {
  __typename?: 'pokemon_v2_pokemonformgeneration_sum_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_form_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_pokemonformgeneration" */
export enum Pokemon_V2_Pokemonformgeneration_Update_Column {
  /** column name */
  GameIndex = 'game_index',
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  Id = 'id',
  /** column name */
  PokemonFormId = 'pokemon_form_id'
}

export type Pokemon_V2_Pokemonformgeneration_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Pokemonformgeneration_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Pokemonformgeneration_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Pokemonformgeneration_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Pokemonformgeneration_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonformgeneration_var_pop_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Pokemonformgeneration_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonformgeneration_var_samp_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Pokemonformgeneration_Variance_Fields = {
  __typename?: 'pokemon_v2_pokemonformgeneration_variance_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokemonformname" */
export type Pokemon_V2_Pokemonformname = {
  __typename?: 'pokemon_v2_pokemonformname';
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
  pokemon_form_id?: Maybe<Scalars['Int']['output']>;
  pokemon_name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_pokemonformname" */
export type Pokemon_V2_Pokemonformname_Aggregate = {
  __typename?: 'pokemon_v2_pokemonformname_aggregate';
  aggregate?: Maybe<Pokemon_V2_Pokemonformname_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Pokemonformname>;
};

/** aggregate fields of "pokemon_v2_pokemonformname" */
export type Pokemon_V2_Pokemonformname_Aggregate_Fields = {
  __typename?: 'pokemon_v2_pokemonformname_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Pokemonformname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Pokemonformname_Max_Fields>;
  min?: Maybe<Pokemon_V2_Pokemonformname_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Pokemonformname_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Pokemonformname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Pokemonformname_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Pokemonformname_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Pokemonformname_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Pokemonformname_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Pokemonformname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonformname" */
export type Pokemon_V2_Pokemonformname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Pokemonformname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Pokemonformname_Avg_Fields = {
  __typename?: 'pokemon_v2_pokemonformname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonformname". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Pokemonformname_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Pokemonformname_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Pokemonformname_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Pokemonformname_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  pokemon_form_id?: InputMaybe<Int_Comparison_Exp>;
  pokemon_name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_pokemonformname" */
export enum Pokemon_V2_Pokemonformname_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PokemonformnamePkey = 'pokemon_v2_pokemonformname_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_pokemonformname" */
export type Pokemon_V2_Pokemonformname_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_form_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_pokemonformname" */
export type Pokemon_V2_Pokemonformname_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  pokemon_form_id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Pokemonformname_Max_Fields = {
  __typename?: 'pokemon_v2_pokemonformname_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pokemon_form_id?: Maybe<Scalars['Int']['output']>;
  pokemon_name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Pokemonformname_Min_Fields = {
  __typename?: 'pokemon_v2_pokemonformname_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pokemon_form_id?: Maybe<Scalars['Int']['output']>;
  pokemon_name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_pokemonformname" */
export type Pokemon_V2_Pokemonformname_Mutation_Response = {
  __typename?: 'pokemon_v2_pokemonformname_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Pokemonformname>;
};

/** on_conflict condition type for table "pokemon_v2_pokemonformname" */
export type Pokemon_V2_Pokemonformname_On_Conflict = {
  constraint: Pokemon_V2_Pokemonformname_Constraint;
  update_columns?: Array<Pokemon_V2_Pokemonformname_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Pokemonformname_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonformname". */
export type Pokemon_V2_Pokemonformname_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
  pokemon_name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_pokemonformname */
export type Pokemon_V2_Pokemonformname_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_pokemonformname" */
export enum Pokemon_V2_Pokemonformname_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  PokemonFormId = 'pokemon_form_id',
  /** column name */
  PokemonName = 'pokemon_name'
}

/** input type for updating data in table "pokemon_v2_pokemonformname" */
export type Pokemon_V2_Pokemonformname_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  pokemon_form_id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Pokemonformname_Stddev_Fields = {
  __typename?: 'pokemon_v2_pokemonformname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Pokemonformname_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonformname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Pokemonformname_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonformname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_pokemonformname" */
export type Pokemon_V2_Pokemonformname_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Pokemonformname_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Pokemonformname_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  pokemon_form_id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Pokemonformname_Sum_Fields = {
  __typename?: 'pokemon_v2_pokemonformname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  pokemon_form_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_pokemonformname" */
export enum Pokemon_V2_Pokemonformname_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  PokemonFormId = 'pokemon_form_id',
  /** column name */
  PokemonName = 'pokemon_name'
}

export type Pokemon_V2_Pokemonformname_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Pokemonformname_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Pokemonformname_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Pokemonformname_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Pokemonformname_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonformname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Pokemonformname_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonformname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Pokemonformname_Variance_Fields = {
  __typename?: 'pokemon_v2_pokemonformname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokemonformsprites" */
export type Pokemon_V2_Pokemonformsprites = {
  __typename?: 'pokemon_v2_pokemonformsprites';
  id: Scalars['Int']['output'];
  pokemon_form_id?: Maybe<Scalars['Int']['output']>;
  sprites: Scalars['jsonb']['output'];
};


/** columns and relationships of "pokemon_v2_pokemonformsprites" */
export type Pokemon_V2_PokemonformspritesSpritesArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "pokemon_v2_pokemonformsprites" */
export type Pokemon_V2_Pokemonformsprites_Aggregate = {
  __typename?: 'pokemon_v2_pokemonformsprites_aggregate';
  aggregate?: Maybe<Pokemon_V2_Pokemonformsprites_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Pokemonformsprites>;
};

/** aggregate fields of "pokemon_v2_pokemonformsprites" */
export type Pokemon_V2_Pokemonformsprites_Aggregate_Fields = {
  __typename?: 'pokemon_v2_pokemonformsprites_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Pokemonformsprites_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Pokemonformsprites_Max_Fields>;
  min?: Maybe<Pokemon_V2_Pokemonformsprites_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Pokemonformsprites_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Pokemonformsprites_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Pokemonformsprites_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Pokemonformsprites_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Pokemonformsprites_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Pokemonformsprites_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Pokemonformsprites_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonformsprites" */
export type Pokemon_V2_Pokemonformsprites_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Pokemonformsprites_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Pokemon_V2_Pokemonformsprites_Append_Input = {
  sprites?: InputMaybe<Scalars['jsonb']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Pokemonformsprites_Avg_Fields = {
  __typename?: 'pokemon_v2_pokemonformsprites_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonformsprites". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Pokemonformsprites_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Pokemonformsprites_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Pokemonformsprites_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Pokemonformsprites_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  pokemon_form_id?: InputMaybe<Int_Comparison_Exp>;
  sprites?: InputMaybe<Jsonb_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_pokemonformsprites" */
export enum Pokemon_V2_Pokemonformsprites_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PokemonformspritesPkey = 'pokemon_v2_pokemonformsprites_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Pokemon_V2_Pokemonformsprites_Delete_At_Path_Input = {
  sprites?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Pokemon_V2_Pokemonformsprites_Delete_Elem_Input = {
  sprites?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Pokemon_V2_Pokemonformsprites_Delete_Key_Input = {
  sprites?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "pokemon_v2_pokemonformsprites" */
export type Pokemon_V2_Pokemonformsprites_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_form_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_pokemonformsprites" */
export type Pokemon_V2_Pokemonformsprites_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_form_id?: InputMaybe<Scalars['Int']['input']>;
  sprites?: InputMaybe<Scalars['jsonb']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Pokemonformsprites_Max_Fields = {
  __typename?: 'pokemon_v2_pokemonformsprites_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_form_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Pokemonformsprites_Min_Fields = {
  __typename?: 'pokemon_v2_pokemonformsprites_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_form_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_pokemonformsprites" */
export type Pokemon_V2_Pokemonformsprites_Mutation_Response = {
  __typename?: 'pokemon_v2_pokemonformsprites_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Pokemonformsprites>;
};

/** on_conflict condition type for table "pokemon_v2_pokemonformsprites" */
export type Pokemon_V2_Pokemonformsprites_On_Conflict = {
  constraint: Pokemon_V2_Pokemonformsprites_Constraint;
  update_columns?: Array<Pokemon_V2_Pokemonformsprites_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Pokemonformsprites_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonformsprites". */
export type Pokemon_V2_Pokemonformsprites_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
  sprites?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_pokemonformsprites */
export type Pokemon_V2_Pokemonformsprites_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Pokemon_V2_Pokemonformsprites_Prepend_Input = {
  sprites?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "pokemon_v2_pokemonformsprites" */
export enum Pokemon_V2_Pokemonformsprites_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  PokemonFormId = 'pokemon_form_id',
  /** column name */
  Sprites = 'sprites'
}

/** input type for updating data in table "pokemon_v2_pokemonformsprites" */
export type Pokemon_V2_Pokemonformsprites_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_form_id?: InputMaybe<Scalars['Int']['input']>;
  sprites?: InputMaybe<Scalars['jsonb']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Pokemonformsprites_Stddev_Fields = {
  __typename?: 'pokemon_v2_pokemonformsprites_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Pokemonformsprites_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonformsprites_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Pokemonformsprites_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonformsprites_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_pokemonformsprites" */
export type Pokemon_V2_Pokemonformsprites_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Pokemonformsprites_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Pokemonformsprites_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_form_id?: InputMaybe<Scalars['Int']['input']>;
  sprites?: InputMaybe<Scalars['jsonb']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Pokemonformsprites_Sum_Fields = {
  __typename?: 'pokemon_v2_pokemonformsprites_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_form_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_pokemonformsprites" */
export enum Pokemon_V2_Pokemonformsprites_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  PokemonFormId = 'pokemon_form_id',
  /** column name */
  Sprites = 'sprites'
}

export type Pokemon_V2_Pokemonformsprites_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Pokemon_V2_Pokemonformsprites_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Pokemon_V2_Pokemonformsprites_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Pokemon_V2_Pokemonformsprites_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Pokemon_V2_Pokemonformsprites_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Pokemonformsprites_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Pokemon_V2_Pokemonformsprites_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Pokemonformsprites_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Pokemonformsprites_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Pokemonformsprites_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonformsprites_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Pokemonformsprites_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonformsprites_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Pokemonformsprites_Variance_Fields = {
  __typename?: 'pokemon_v2_pokemonformsprites_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokemonformtype" */
export type Pokemon_V2_Pokemonformtype = {
  __typename?: 'pokemon_v2_pokemonformtype';
  id: Scalars['Int']['output'];
  pokemon_form_id?: Maybe<Scalars['Int']['output']>;
  slot: Scalars['Int']['output'];
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_pokemonformtype" */
export type Pokemon_V2_Pokemonformtype_Aggregate = {
  __typename?: 'pokemon_v2_pokemonformtype_aggregate';
  aggregate?: Maybe<Pokemon_V2_Pokemonformtype_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Pokemonformtype>;
};

/** aggregate fields of "pokemon_v2_pokemonformtype" */
export type Pokemon_V2_Pokemonformtype_Aggregate_Fields = {
  __typename?: 'pokemon_v2_pokemonformtype_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Pokemonformtype_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Pokemonformtype_Max_Fields>;
  min?: Maybe<Pokemon_V2_Pokemonformtype_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Pokemonformtype_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Pokemonformtype_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Pokemonformtype_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Pokemonformtype_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Pokemonformtype_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Pokemonformtype_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Pokemonformtype_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonformtype" */
export type Pokemon_V2_Pokemonformtype_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Pokemonformtype_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Pokemonformtype_Avg_Fields = {
  __typename?: 'pokemon_v2_pokemonformtype_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonformtype". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Pokemonformtype_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Pokemonformtype_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Pokemonformtype_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Pokemonformtype_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  pokemon_form_id?: InputMaybe<Int_Comparison_Exp>;
  slot?: InputMaybe<Int_Comparison_Exp>;
  type_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_pokemonformtype" */
export enum Pokemon_V2_Pokemonformtype_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PokemonformtypePkey = 'pokemon_v2_pokemonformtype_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_pokemonformtype" */
export type Pokemon_V2_Pokemonformtype_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_form_id?: InputMaybe<Scalars['Int']['input']>;
  slot?: InputMaybe<Scalars['Int']['input']>;
  type_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_pokemonformtype" */
export type Pokemon_V2_Pokemonformtype_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_form_id?: InputMaybe<Scalars['Int']['input']>;
  slot?: InputMaybe<Scalars['Int']['input']>;
  type_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Pokemonformtype_Max_Fields = {
  __typename?: 'pokemon_v2_pokemonformtype_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_form_id?: Maybe<Scalars['Int']['output']>;
  slot?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Pokemonformtype_Min_Fields = {
  __typename?: 'pokemon_v2_pokemonformtype_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_form_id?: Maybe<Scalars['Int']['output']>;
  slot?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_pokemonformtype" */
export type Pokemon_V2_Pokemonformtype_Mutation_Response = {
  __typename?: 'pokemon_v2_pokemonformtype_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Pokemonformtype>;
};

/** on_conflict condition type for table "pokemon_v2_pokemonformtype" */
export type Pokemon_V2_Pokemonformtype_On_Conflict = {
  constraint: Pokemon_V2_Pokemonformtype_Constraint;
  update_columns?: Array<Pokemon_V2_Pokemonformtype_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Pokemonformtype_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonformtype". */
export type Pokemon_V2_Pokemonformtype_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_pokemonformtype */
export type Pokemon_V2_Pokemonformtype_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_pokemonformtype" */
export enum Pokemon_V2_Pokemonformtype_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  PokemonFormId = 'pokemon_form_id',
  /** column name */
  Slot = 'slot',
  /** column name */
  TypeId = 'type_id'
}

/** input type for updating data in table "pokemon_v2_pokemonformtype" */
export type Pokemon_V2_Pokemonformtype_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_form_id?: InputMaybe<Scalars['Int']['input']>;
  slot?: InputMaybe<Scalars['Int']['input']>;
  type_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Pokemonformtype_Stddev_Fields = {
  __typename?: 'pokemon_v2_pokemonformtype_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Pokemonformtype_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonformtype_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Pokemonformtype_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonformtype_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_pokemonformtype" */
export type Pokemon_V2_Pokemonformtype_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Pokemonformtype_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Pokemonformtype_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_form_id?: InputMaybe<Scalars['Int']['input']>;
  slot?: InputMaybe<Scalars['Int']['input']>;
  type_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Pokemonformtype_Sum_Fields = {
  __typename?: 'pokemon_v2_pokemonformtype_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_form_id?: Maybe<Scalars['Int']['output']>;
  slot?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_pokemonformtype" */
export enum Pokemon_V2_Pokemonformtype_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  PokemonFormId = 'pokemon_form_id',
  /** column name */
  Slot = 'slot',
  /** column name */
  TypeId = 'type_id'
}

export type Pokemon_V2_Pokemonformtype_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Pokemonformtype_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Pokemonformtype_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Pokemonformtype_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Pokemonformtype_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonformtype_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Pokemonformtype_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonformtype_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Pokemonformtype_Variance_Fields = {
  __typename?: 'pokemon_v2_pokemonformtype_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokemongameindex" */
export type Pokemon_V2_Pokemongameindex = {
  __typename?: 'pokemon_v2_pokemongameindex';
  game_index: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_pokemongameindex" */
export type Pokemon_V2_Pokemongameindex_Aggregate = {
  __typename?: 'pokemon_v2_pokemongameindex_aggregate';
  aggregate?: Maybe<Pokemon_V2_Pokemongameindex_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Pokemongameindex>;
};

/** aggregate fields of "pokemon_v2_pokemongameindex" */
export type Pokemon_V2_Pokemongameindex_Aggregate_Fields = {
  __typename?: 'pokemon_v2_pokemongameindex_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Pokemongameindex_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Pokemongameindex_Max_Fields>;
  min?: Maybe<Pokemon_V2_Pokemongameindex_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Pokemongameindex_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Pokemongameindex_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Pokemongameindex_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Pokemongameindex_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Pokemongameindex_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Pokemongameindex_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Pokemongameindex_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemongameindex" */
export type Pokemon_V2_Pokemongameindex_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Pokemongameindex_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Pokemongameindex_Avg_Fields = {
  __typename?: 'pokemon_v2_pokemongameindex_avg_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemongameindex". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Pokemongameindex_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Pokemongameindex_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Pokemongameindex_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Pokemongameindex_Bool_Exp>>;
  game_index?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  pokemon_id?: InputMaybe<Int_Comparison_Exp>;
  version_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_pokemongameindex" */
export enum Pokemon_V2_Pokemongameindex_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PokemongameindexPkey = 'pokemon_v2_pokemongameindex_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_pokemongameindex" */
export type Pokemon_V2_Pokemongameindex_Inc_Input = {
  game_index?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  version_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_pokemongameindex" */
export type Pokemon_V2_Pokemongameindex_Insert_Input = {
  game_index?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  version_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Pokemongameindex_Max_Fields = {
  __typename?: 'pokemon_v2_pokemongameindex_max_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Pokemongameindex_Min_Fields = {
  __typename?: 'pokemon_v2_pokemongameindex_min_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_pokemongameindex" */
export type Pokemon_V2_Pokemongameindex_Mutation_Response = {
  __typename?: 'pokemon_v2_pokemongameindex_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Pokemongameindex>;
};

/** on_conflict condition type for table "pokemon_v2_pokemongameindex" */
export type Pokemon_V2_Pokemongameindex_On_Conflict = {
  constraint: Pokemon_V2_Pokemongameindex_Constraint;
  update_columns?: Array<Pokemon_V2_Pokemongameindex_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Pokemongameindex_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemongameindex". */
export type Pokemon_V2_Pokemongameindex_Order_By = {
  game_index?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_pokemongameindex */
export type Pokemon_V2_Pokemongameindex_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_pokemongameindex" */
export enum Pokemon_V2_Pokemongameindex_Select_Column {
  /** column name */
  GameIndex = 'game_index',
  /** column name */
  Id = 'id',
  /** column name */
  PokemonId = 'pokemon_id',
  /** column name */
  VersionId = 'version_id'
}

/** input type for updating data in table "pokemon_v2_pokemongameindex" */
export type Pokemon_V2_Pokemongameindex_Set_Input = {
  game_index?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  version_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Pokemongameindex_Stddev_Fields = {
  __typename?: 'pokemon_v2_pokemongameindex_stddev_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Pokemongameindex_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemongameindex_stddev_pop_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Pokemongameindex_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemongameindex_stddev_samp_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_pokemongameindex" */
export type Pokemon_V2_Pokemongameindex_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Pokemongameindex_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Pokemongameindex_Stream_Cursor_Value_Input = {
  game_index?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  version_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Pokemongameindex_Sum_Fields = {
  __typename?: 'pokemon_v2_pokemongameindex_sum_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_pokemongameindex" */
export enum Pokemon_V2_Pokemongameindex_Update_Column {
  /** column name */
  GameIndex = 'game_index',
  /** column name */
  Id = 'id',
  /** column name */
  PokemonId = 'pokemon_id',
  /** column name */
  VersionId = 'version_id'
}

export type Pokemon_V2_Pokemongameindex_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Pokemongameindex_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Pokemongameindex_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Pokemongameindex_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Pokemongameindex_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemongameindex_var_pop_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Pokemongameindex_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemongameindex_var_samp_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Pokemongameindex_Variance_Fields = {
  __typename?: 'pokemon_v2_pokemongameindex_variance_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokemonhabitat" */
export type Pokemon_V2_Pokemonhabitat = {
  __typename?: 'pokemon_v2_pokemonhabitat';
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_pokemonhabitat" */
export type Pokemon_V2_Pokemonhabitat_Aggregate = {
  __typename?: 'pokemon_v2_pokemonhabitat_aggregate';
  aggregate?: Maybe<Pokemon_V2_Pokemonhabitat_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Pokemonhabitat>;
};

/** aggregate fields of "pokemon_v2_pokemonhabitat" */
export type Pokemon_V2_Pokemonhabitat_Aggregate_Fields = {
  __typename?: 'pokemon_v2_pokemonhabitat_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Pokemonhabitat_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Pokemonhabitat_Max_Fields>;
  min?: Maybe<Pokemon_V2_Pokemonhabitat_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Pokemonhabitat_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Pokemonhabitat_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Pokemonhabitat_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Pokemonhabitat_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Pokemonhabitat_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Pokemonhabitat_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Pokemonhabitat_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonhabitat" */
export type Pokemon_V2_Pokemonhabitat_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Pokemonhabitat_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Pokemonhabitat_Avg_Fields = {
  __typename?: 'pokemon_v2_pokemonhabitat_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonhabitat". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Pokemonhabitat_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Pokemonhabitat_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Pokemonhabitat_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Pokemonhabitat_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_pokemonhabitat" */
export enum Pokemon_V2_Pokemonhabitat_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PokemonhabitatPkey = 'pokemon_v2_pokemonhabitat_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_pokemonhabitat" */
export type Pokemon_V2_Pokemonhabitat_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_pokemonhabitat" */
export type Pokemon_V2_Pokemonhabitat_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Pokemonhabitat_Max_Fields = {
  __typename?: 'pokemon_v2_pokemonhabitat_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Pokemonhabitat_Min_Fields = {
  __typename?: 'pokemon_v2_pokemonhabitat_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_pokemonhabitat" */
export type Pokemon_V2_Pokemonhabitat_Mutation_Response = {
  __typename?: 'pokemon_v2_pokemonhabitat_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Pokemonhabitat>;
};

/** on_conflict condition type for table "pokemon_v2_pokemonhabitat" */
export type Pokemon_V2_Pokemonhabitat_On_Conflict = {
  constraint: Pokemon_V2_Pokemonhabitat_Constraint;
  update_columns?: Array<Pokemon_V2_Pokemonhabitat_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Pokemonhabitat_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonhabitat". */
export type Pokemon_V2_Pokemonhabitat_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_pokemonhabitat */
export type Pokemon_V2_Pokemonhabitat_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_pokemonhabitat" */
export enum Pokemon_V2_Pokemonhabitat_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_pokemonhabitat" */
export type Pokemon_V2_Pokemonhabitat_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Pokemonhabitat_Stddev_Fields = {
  __typename?: 'pokemon_v2_pokemonhabitat_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Pokemonhabitat_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonhabitat_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Pokemonhabitat_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonhabitat_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_pokemonhabitat" */
export type Pokemon_V2_Pokemonhabitat_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Pokemonhabitat_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Pokemonhabitat_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Pokemonhabitat_Sum_Fields = {
  __typename?: 'pokemon_v2_pokemonhabitat_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_pokemonhabitat" */
export enum Pokemon_V2_Pokemonhabitat_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Pokemonhabitat_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Pokemonhabitat_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Pokemonhabitat_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Pokemonhabitat_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Pokemonhabitat_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonhabitat_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Pokemonhabitat_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonhabitat_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Pokemonhabitat_Variance_Fields = {
  __typename?: 'pokemon_v2_pokemonhabitat_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokemonhabitatname" */
export type Pokemon_V2_Pokemonhabitatname = {
  __typename?: 'pokemon_v2_pokemonhabitatname';
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
  pokemon_habitat_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_pokemonhabitatname" */
export type Pokemon_V2_Pokemonhabitatname_Aggregate = {
  __typename?: 'pokemon_v2_pokemonhabitatname_aggregate';
  aggregate?: Maybe<Pokemon_V2_Pokemonhabitatname_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Pokemonhabitatname>;
};

/** aggregate fields of "pokemon_v2_pokemonhabitatname" */
export type Pokemon_V2_Pokemonhabitatname_Aggregate_Fields = {
  __typename?: 'pokemon_v2_pokemonhabitatname_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Pokemonhabitatname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Pokemonhabitatname_Max_Fields>;
  min?: Maybe<Pokemon_V2_Pokemonhabitatname_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Pokemonhabitatname_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Pokemonhabitatname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Pokemonhabitatname_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Pokemonhabitatname_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Pokemonhabitatname_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Pokemonhabitatname_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Pokemonhabitatname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonhabitatname" */
export type Pokemon_V2_Pokemonhabitatname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Pokemonhabitatname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Pokemonhabitatname_Avg_Fields = {
  __typename?: 'pokemon_v2_pokemonhabitatname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonhabitatname". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Pokemonhabitatname_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Pokemonhabitatname_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Pokemonhabitatname_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Pokemonhabitatname_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  pokemon_habitat_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_pokemonhabitatname" */
export enum Pokemon_V2_Pokemonhabitatname_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PokemonhabitatnamePkey = 'pokemon_v2_pokemonhabitatname_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_pokemonhabitatname" */
export type Pokemon_V2_Pokemonhabitatname_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_habitat_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_pokemonhabitatname" */
export type Pokemon_V2_Pokemonhabitatname_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  pokemon_habitat_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Pokemonhabitatname_Max_Fields = {
  __typename?: 'pokemon_v2_pokemonhabitatname_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Pokemonhabitatname_Min_Fields = {
  __typename?: 'pokemon_v2_pokemonhabitatname_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_pokemonhabitatname" */
export type Pokemon_V2_Pokemonhabitatname_Mutation_Response = {
  __typename?: 'pokemon_v2_pokemonhabitatname_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Pokemonhabitatname>;
};

/** on_conflict condition type for table "pokemon_v2_pokemonhabitatname" */
export type Pokemon_V2_Pokemonhabitatname_On_Conflict = {
  constraint: Pokemon_V2_Pokemonhabitatname_Constraint;
  update_columns?: Array<Pokemon_V2_Pokemonhabitatname_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Pokemonhabitatname_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonhabitatname". */
export type Pokemon_V2_Pokemonhabitatname_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pokemon_habitat_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_pokemonhabitatname */
export type Pokemon_V2_Pokemonhabitatname_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_pokemonhabitatname" */
export enum Pokemon_V2_Pokemonhabitatname_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  PokemonHabitatId = 'pokemon_habitat_id'
}

/** input type for updating data in table "pokemon_v2_pokemonhabitatname" */
export type Pokemon_V2_Pokemonhabitatname_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  pokemon_habitat_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Pokemonhabitatname_Stddev_Fields = {
  __typename?: 'pokemon_v2_pokemonhabitatname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Pokemonhabitatname_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonhabitatname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Pokemonhabitatname_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonhabitatname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_pokemonhabitatname" */
export type Pokemon_V2_Pokemonhabitatname_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Pokemonhabitatname_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Pokemonhabitatname_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  pokemon_habitat_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Pokemonhabitatname_Sum_Fields = {
  __typename?: 'pokemon_v2_pokemonhabitatname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_pokemonhabitatname" */
export enum Pokemon_V2_Pokemonhabitatname_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  PokemonHabitatId = 'pokemon_habitat_id'
}

export type Pokemon_V2_Pokemonhabitatname_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Pokemonhabitatname_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Pokemonhabitatname_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Pokemonhabitatname_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Pokemonhabitatname_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonhabitatname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Pokemonhabitatname_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonhabitatname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Pokemonhabitatname_Variance_Fields = {
  __typename?: 'pokemon_v2_pokemonhabitatname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokemonitem" */
export type Pokemon_V2_Pokemonitem = {
  __typename?: 'pokemon_v2_pokemonitem';
  id: Scalars['Int']['output'];
  item_id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  rarity: Scalars['Int']['output'];
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_pokemonitem" */
export type Pokemon_V2_Pokemonitem_Aggregate = {
  __typename?: 'pokemon_v2_pokemonitem_aggregate';
  aggregate?: Maybe<Pokemon_V2_Pokemonitem_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Pokemonitem>;
};

/** aggregate fields of "pokemon_v2_pokemonitem" */
export type Pokemon_V2_Pokemonitem_Aggregate_Fields = {
  __typename?: 'pokemon_v2_pokemonitem_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Pokemonitem_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Pokemonitem_Max_Fields>;
  min?: Maybe<Pokemon_V2_Pokemonitem_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Pokemonitem_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Pokemonitem_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Pokemonitem_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Pokemonitem_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Pokemonitem_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Pokemonitem_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Pokemonitem_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonitem" */
export type Pokemon_V2_Pokemonitem_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Pokemonitem_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Pokemonitem_Avg_Fields = {
  __typename?: 'pokemon_v2_pokemonitem_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  rarity?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonitem". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Pokemonitem_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Pokemonitem_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Pokemonitem_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Pokemonitem_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  item_id?: InputMaybe<Int_Comparison_Exp>;
  pokemon_id?: InputMaybe<Int_Comparison_Exp>;
  rarity?: InputMaybe<Int_Comparison_Exp>;
  version_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_pokemonitem" */
export enum Pokemon_V2_Pokemonitem_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PokemonitemPkey = 'pokemon_v2_pokemonitem_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_pokemonitem" */
export type Pokemon_V2_Pokemonitem_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  item_id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  rarity?: InputMaybe<Scalars['Int']['input']>;
  version_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_pokemonitem" */
export type Pokemon_V2_Pokemonitem_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  item_id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  rarity?: InputMaybe<Scalars['Int']['input']>;
  version_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Pokemonitem_Max_Fields = {
  __typename?: 'pokemon_v2_pokemonitem_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  rarity?: Maybe<Scalars['Int']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Pokemonitem_Min_Fields = {
  __typename?: 'pokemon_v2_pokemonitem_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  rarity?: Maybe<Scalars['Int']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_pokemonitem" */
export type Pokemon_V2_Pokemonitem_Mutation_Response = {
  __typename?: 'pokemon_v2_pokemonitem_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Pokemonitem>;
};

/** on_conflict condition type for table "pokemon_v2_pokemonitem" */
export type Pokemon_V2_Pokemonitem_On_Conflict = {
  constraint: Pokemon_V2_Pokemonitem_Constraint;
  update_columns?: Array<Pokemon_V2_Pokemonitem_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Pokemonitem_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonitem". */
export type Pokemon_V2_Pokemonitem_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  rarity?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_pokemonitem */
export type Pokemon_V2_Pokemonitem_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_pokemonitem" */
export enum Pokemon_V2_Pokemonitem_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ItemId = 'item_id',
  /** column name */
  PokemonId = 'pokemon_id',
  /** column name */
  Rarity = 'rarity',
  /** column name */
  VersionId = 'version_id'
}

/** input type for updating data in table "pokemon_v2_pokemonitem" */
export type Pokemon_V2_Pokemonitem_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  item_id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  rarity?: InputMaybe<Scalars['Int']['input']>;
  version_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Pokemonitem_Stddev_Fields = {
  __typename?: 'pokemon_v2_pokemonitem_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  rarity?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Pokemonitem_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonitem_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  rarity?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Pokemonitem_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonitem_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  rarity?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_pokemonitem" */
export type Pokemon_V2_Pokemonitem_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Pokemonitem_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Pokemonitem_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  item_id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  rarity?: InputMaybe<Scalars['Int']['input']>;
  version_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Pokemonitem_Sum_Fields = {
  __typename?: 'pokemon_v2_pokemonitem_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  rarity?: Maybe<Scalars['Int']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_pokemonitem" */
export enum Pokemon_V2_Pokemonitem_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ItemId = 'item_id',
  /** column name */
  PokemonId = 'pokemon_id',
  /** column name */
  Rarity = 'rarity',
  /** column name */
  VersionId = 'version_id'
}

export type Pokemon_V2_Pokemonitem_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Pokemonitem_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Pokemonitem_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Pokemonitem_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Pokemonitem_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonitem_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  rarity?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Pokemonitem_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonitem_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  rarity?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Pokemonitem_Variance_Fields = {
  __typename?: 'pokemon_v2_pokemonitem_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  rarity?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokemonmove" */
export type Pokemon_V2_Pokemonmove = {
  __typename?: 'pokemon_v2_pokemonmove';
  id: Scalars['Int']['output'];
  level: Scalars['Int']['output'];
  move_id?: Maybe<Scalars['Int']['output']>;
  move_learn_method_id?: Maybe<Scalars['Int']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_pokemonmove" */
export type Pokemon_V2_Pokemonmove_Aggregate = {
  __typename?: 'pokemon_v2_pokemonmove_aggregate';
  aggregate?: Maybe<Pokemon_V2_Pokemonmove_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Pokemonmove>;
};

/** aggregate fields of "pokemon_v2_pokemonmove" */
export type Pokemon_V2_Pokemonmove_Aggregate_Fields = {
  __typename?: 'pokemon_v2_pokemonmove_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Pokemonmove_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Pokemonmove_Max_Fields>;
  min?: Maybe<Pokemon_V2_Pokemonmove_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Pokemonmove_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Pokemonmove_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Pokemonmove_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Pokemonmove_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Pokemonmove_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Pokemonmove_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Pokemonmove_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonmove" */
export type Pokemon_V2_Pokemonmove_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Pokemonmove_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Pokemonmove_Avg_Fields = {
  __typename?: 'pokemon_v2_pokemonmove_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  level?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonmove". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Pokemonmove_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Pokemonmove_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Pokemonmove_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Pokemonmove_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  level?: InputMaybe<Int_Comparison_Exp>;
  move_id?: InputMaybe<Int_Comparison_Exp>;
  move_learn_method_id?: InputMaybe<Int_Comparison_Exp>;
  order?: InputMaybe<Int_Comparison_Exp>;
  pokemon_id?: InputMaybe<Int_Comparison_Exp>;
  version_group_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_pokemonmove" */
export enum Pokemon_V2_Pokemonmove_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PokemonmovePkey = 'pokemon_v2_pokemonmove_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_pokemonmove" */
export type Pokemon_V2_Pokemonmove_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  level?: InputMaybe<Scalars['Int']['input']>;
  move_id?: InputMaybe<Scalars['Int']['input']>;
  move_learn_method_id?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_pokemonmove" */
export type Pokemon_V2_Pokemonmove_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  level?: InputMaybe<Scalars['Int']['input']>;
  move_id?: InputMaybe<Scalars['Int']['input']>;
  move_learn_method_id?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Pokemonmove_Max_Fields = {
  __typename?: 'pokemon_v2_pokemonmove_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  level?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  move_learn_method_id?: Maybe<Scalars['Int']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Pokemonmove_Min_Fields = {
  __typename?: 'pokemon_v2_pokemonmove_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  level?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  move_learn_method_id?: Maybe<Scalars['Int']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_pokemonmove" */
export type Pokemon_V2_Pokemonmove_Mutation_Response = {
  __typename?: 'pokemon_v2_pokemonmove_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Pokemonmove>;
};

/** on_conflict condition type for table "pokemon_v2_pokemonmove" */
export type Pokemon_V2_Pokemonmove_On_Conflict = {
  constraint: Pokemon_V2_Pokemonmove_Constraint;
  update_columns?: Array<Pokemon_V2_Pokemonmove_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Pokemonmove_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonmove". */
export type Pokemon_V2_Pokemonmove_Order_By = {
  id?: InputMaybe<Order_By>;
  level?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_pokemonmove */
export type Pokemon_V2_Pokemonmove_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_pokemonmove" */
export enum Pokemon_V2_Pokemonmove_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Level = 'level',
  /** column name */
  MoveId = 'move_id',
  /** column name */
  MoveLearnMethodId = 'move_learn_method_id',
  /** column name */
  Order = 'order',
  /** column name */
  PokemonId = 'pokemon_id',
  /** column name */
  VersionGroupId = 'version_group_id'
}

/** input type for updating data in table "pokemon_v2_pokemonmove" */
export type Pokemon_V2_Pokemonmove_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  level?: InputMaybe<Scalars['Int']['input']>;
  move_id?: InputMaybe<Scalars['Int']['input']>;
  move_learn_method_id?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Pokemonmove_Stddev_Fields = {
  __typename?: 'pokemon_v2_pokemonmove_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  level?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Pokemonmove_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonmove_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  level?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Pokemonmove_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonmove_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  level?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_pokemonmove" */
export type Pokemon_V2_Pokemonmove_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Pokemonmove_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Pokemonmove_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  level?: InputMaybe<Scalars['Int']['input']>;
  move_id?: InputMaybe<Scalars['Int']['input']>;
  move_learn_method_id?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Pokemonmove_Sum_Fields = {
  __typename?: 'pokemon_v2_pokemonmove_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  level?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  move_learn_method_id?: Maybe<Scalars['Int']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_pokemonmove" */
export enum Pokemon_V2_Pokemonmove_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Level = 'level',
  /** column name */
  MoveId = 'move_id',
  /** column name */
  MoveLearnMethodId = 'move_learn_method_id',
  /** column name */
  Order = 'order',
  /** column name */
  PokemonId = 'pokemon_id',
  /** column name */
  VersionGroupId = 'version_group_id'
}

export type Pokemon_V2_Pokemonmove_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Pokemonmove_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Pokemonmove_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Pokemonmove_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Pokemonmove_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonmove_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  level?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Pokemonmove_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonmove_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  level?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Pokemonmove_Variance_Fields = {
  __typename?: 'pokemon_v2_pokemonmove_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  level?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokemonshape" */
export type Pokemon_V2_Pokemonshape = {
  __typename?: 'pokemon_v2_pokemonshape';
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_pokemonshape" */
export type Pokemon_V2_Pokemonshape_Aggregate = {
  __typename?: 'pokemon_v2_pokemonshape_aggregate';
  aggregate?: Maybe<Pokemon_V2_Pokemonshape_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Pokemonshape>;
};

/** aggregate fields of "pokemon_v2_pokemonshape" */
export type Pokemon_V2_Pokemonshape_Aggregate_Fields = {
  __typename?: 'pokemon_v2_pokemonshape_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Pokemonshape_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Pokemonshape_Max_Fields>;
  min?: Maybe<Pokemon_V2_Pokemonshape_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Pokemonshape_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Pokemonshape_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Pokemonshape_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Pokemonshape_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Pokemonshape_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Pokemonshape_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Pokemonshape_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonshape" */
export type Pokemon_V2_Pokemonshape_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Pokemonshape_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Pokemonshape_Avg_Fields = {
  __typename?: 'pokemon_v2_pokemonshape_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonshape". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Pokemonshape_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Pokemonshape_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Pokemonshape_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Pokemonshape_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_pokemonshape" */
export enum Pokemon_V2_Pokemonshape_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PokemonshapePkey = 'pokemon_v2_pokemonshape_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_pokemonshape" */
export type Pokemon_V2_Pokemonshape_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_pokemonshape" */
export type Pokemon_V2_Pokemonshape_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Pokemonshape_Max_Fields = {
  __typename?: 'pokemon_v2_pokemonshape_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Pokemonshape_Min_Fields = {
  __typename?: 'pokemon_v2_pokemonshape_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_pokemonshape" */
export type Pokemon_V2_Pokemonshape_Mutation_Response = {
  __typename?: 'pokemon_v2_pokemonshape_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Pokemonshape>;
};

/** on_conflict condition type for table "pokemon_v2_pokemonshape" */
export type Pokemon_V2_Pokemonshape_On_Conflict = {
  constraint: Pokemon_V2_Pokemonshape_Constraint;
  update_columns?: Array<Pokemon_V2_Pokemonshape_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Pokemonshape_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonshape". */
export type Pokemon_V2_Pokemonshape_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_pokemonshape */
export type Pokemon_V2_Pokemonshape_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_pokemonshape" */
export enum Pokemon_V2_Pokemonshape_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_pokemonshape" */
export type Pokemon_V2_Pokemonshape_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Pokemonshape_Stddev_Fields = {
  __typename?: 'pokemon_v2_pokemonshape_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Pokemonshape_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonshape_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Pokemonshape_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonshape_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_pokemonshape" */
export type Pokemon_V2_Pokemonshape_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Pokemonshape_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Pokemonshape_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Pokemonshape_Sum_Fields = {
  __typename?: 'pokemon_v2_pokemonshape_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_pokemonshape" */
export enum Pokemon_V2_Pokemonshape_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Pokemonshape_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Pokemonshape_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Pokemonshape_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Pokemonshape_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Pokemonshape_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonshape_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Pokemonshape_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonshape_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Pokemonshape_Variance_Fields = {
  __typename?: 'pokemon_v2_pokemonshape_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokemonshapename" */
export type Pokemon_V2_Pokemonshapename = {
  __typename?: 'pokemon_v2_pokemonshapename';
  awesome_name: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
  pokemon_shape_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_pokemonshapename" */
export type Pokemon_V2_Pokemonshapename_Aggregate = {
  __typename?: 'pokemon_v2_pokemonshapename_aggregate';
  aggregate?: Maybe<Pokemon_V2_Pokemonshapename_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Pokemonshapename>;
};

/** aggregate fields of "pokemon_v2_pokemonshapename" */
export type Pokemon_V2_Pokemonshapename_Aggregate_Fields = {
  __typename?: 'pokemon_v2_pokemonshapename_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Pokemonshapename_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Pokemonshapename_Max_Fields>;
  min?: Maybe<Pokemon_V2_Pokemonshapename_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Pokemonshapename_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Pokemonshapename_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Pokemonshapename_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Pokemonshapename_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Pokemonshapename_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Pokemonshapename_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Pokemonshapename_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonshapename" */
export type Pokemon_V2_Pokemonshapename_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Pokemonshapename_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Pokemonshapename_Avg_Fields = {
  __typename?: 'pokemon_v2_pokemonshapename_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonshapename". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Pokemonshapename_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Pokemonshapename_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Pokemonshapename_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Pokemonshapename_Bool_Exp>>;
  awesome_name?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  pokemon_shape_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_pokemonshapename" */
export enum Pokemon_V2_Pokemonshapename_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PokemonshapenamePkey = 'pokemon_v2_pokemonshapename_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_pokemonshapename" */
export type Pokemon_V2_Pokemonshapename_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_shape_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_pokemonshapename" */
export type Pokemon_V2_Pokemonshapename_Insert_Input = {
  awesome_name?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  pokemon_shape_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Pokemonshapename_Max_Fields = {
  __typename?: 'pokemon_v2_pokemonshapename_max_fields';
  awesome_name?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Pokemonshapename_Min_Fields = {
  __typename?: 'pokemon_v2_pokemonshapename_min_fields';
  awesome_name?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_pokemonshapename" */
export type Pokemon_V2_Pokemonshapename_Mutation_Response = {
  __typename?: 'pokemon_v2_pokemonshapename_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Pokemonshapename>;
};

/** on_conflict condition type for table "pokemon_v2_pokemonshapename" */
export type Pokemon_V2_Pokemonshapename_On_Conflict = {
  constraint: Pokemon_V2_Pokemonshapename_Constraint;
  update_columns?: Array<Pokemon_V2_Pokemonshapename_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Pokemonshapename_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonshapename". */
export type Pokemon_V2_Pokemonshapename_Order_By = {
  awesome_name?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pokemon_shape_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_pokemonshapename */
export type Pokemon_V2_Pokemonshapename_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_pokemonshapename" */
export enum Pokemon_V2_Pokemonshapename_Select_Column {
  /** column name */
  AwesomeName = 'awesome_name',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  PokemonShapeId = 'pokemon_shape_id'
}

/** input type for updating data in table "pokemon_v2_pokemonshapename" */
export type Pokemon_V2_Pokemonshapename_Set_Input = {
  awesome_name?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  pokemon_shape_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Pokemonshapename_Stddev_Fields = {
  __typename?: 'pokemon_v2_pokemonshapename_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Pokemonshapename_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonshapename_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Pokemonshapename_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonshapename_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_pokemonshapename" */
export type Pokemon_V2_Pokemonshapename_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Pokemonshapename_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Pokemonshapename_Stream_Cursor_Value_Input = {
  awesome_name?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  pokemon_shape_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Pokemonshapename_Sum_Fields = {
  __typename?: 'pokemon_v2_pokemonshapename_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_pokemonshapename" */
export enum Pokemon_V2_Pokemonshapename_Update_Column {
  /** column name */
  AwesomeName = 'awesome_name',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  PokemonShapeId = 'pokemon_shape_id'
}

export type Pokemon_V2_Pokemonshapename_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Pokemonshapename_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Pokemonshapename_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Pokemonshapename_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Pokemonshapename_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonshapename_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Pokemonshapename_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonshapename_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Pokemonshapename_Variance_Fields = {
  __typename?: 'pokemon_v2_pokemonshapename_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokemonspecies" */
export type Pokemon_V2_Pokemonspecies = {
  __typename?: 'pokemon_v2_pokemonspecies';
  base_happiness?: Maybe<Scalars['Int']['output']>;
  capture_rate?: Maybe<Scalars['Int']['output']>;
  evolution_chain_id?: Maybe<Scalars['Int']['output']>;
  evolves_from_species_id?: Maybe<Scalars['Int']['output']>;
  forms_switchable: Scalars['Boolean']['output'];
  gender_rate?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  growth_rate_id?: Maybe<Scalars['Int']['output']>;
  has_gender_differences: Scalars['Boolean']['output'];
  hatch_counter?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  is_baby: Scalars['Boolean']['output'];
  is_legendary: Scalars['Boolean']['output'];
  is_mythical: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  order?: Maybe<Scalars['Int']['output']>;
  pokemon_color_id?: Maybe<Scalars['Int']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Int']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_pokemonspecies" */
export type Pokemon_V2_Pokemonspecies_Aggregate = {
  __typename?: 'pokemon_v2_pokemonspecies_aggregate';
  aggregate?: Maybe<Pokemon_V2_Pokemonspecies_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Pokemonspecies>;
};

/** aggregate fields of "pokemon_v2_pokemonspecies" */
export type Pokemon_V2_Pokemonspecies_Aggregate_Fields = {
  __typename?: 'pokemon_v2_pokemonspecies_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Pokemonspecies_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Pokemonspecies_Max_Fields>;
  min?: Maybe<Pokemon_V2_Pokemonspecies_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Pokemonspecies_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Pokemonspecies_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Pokemonspecies_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Pokemonspecies_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Pokemonspecies_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Pokemonspecies_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Pokemonspecies_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonspecies" */
export type Pokemon_V2_Pokemonspecies_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Pokemonspecies_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Pokemonspecies_Avg_Fields = {
  __typename?: 'pokemon_v2_pokemonspecies_avg_fields';
  base_happiness?: Maybe<Scalars['Float']['output']>;
  capture_rate?: Maybe<Scalars['Float']['output']>;
  evolution_chain_id?: Maybe<Scalars['Float']['output']>;
  evolves_from_species_id?: Maybe<Scalars['Float']['output']>;
  gender_rate?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  hatch_counter?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_color_id?: Maybe<Scalars['Float']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Float']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonspecies". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Pokemonspecies_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Pokemonspecies_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Pokemonspecies_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Pokemonspecies_Bool_Exp>>;
  base_happiness?: InputMaybe<Int_Comparison_Exp>;
  capture_rate?: InputMaybe<Int_Comparison_Exp>;
  evolution_chain_id?: InputMaybe<Int_Comparison_Exp>;
  evolves_from_species_id?: InputMaybe<Int_Comparison_Exp>;
  forms_switchable?: InputMaybe<Boolean_Comparison_Exp>;
  gender_rate?: InputMaybe<Int_Comparison_Exp>;
  generation_id?: InputMaybe<Int_Comparison_Exp>;
  growth_rate_id?: InputMaybe<Int_Comparison_Exp>;
  has_gender_differences?: InputMaybe<Boolean_Comparison_Exp>;
  hatch_counter?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  is_baby?: InputMaybe<Boolean_Comparison_Exp>;
  is_legendary?: InputMaybe<Boolean_Comparison_Exp>;
  is_mythical?: InputMaybe<Boolean_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  order?: InputMaybe<Int_Comparison_Exp>;
  pokemon_color_id?: InputMaybe<Int_Comparison_Exp>;
  pokemon_habitat_id?: InputMaybe<Int_Comparison_Exp>;
  pokemon_shape_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_pokemonspecies" */
export enum Pokemon_V2_Pokemonspecies_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PokemonspeciesPkey = 'pokemon_v2_pokemonspecies_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_pokemonspecies" */
export type Pokemon_V2_Pokemonspecies_Inc_Input = {
  base_happiness?: InputMaybe<Scalars['Int']['input']>;
  capture_rate?: InputMaybe<Scalars['Int']['input']>;
  evolution_chain_id?: InputMaybe<Scalars['Int']['input']>;
  evolves_from_species_id?: InputMaybe<Scalars['Int']['input']>;
  gender_rate?: InputMaybe<Scalars['Int']['input']>;
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  growth_rate_id?: InputMaybe<Scalars['Int']['input']>;
  hatch_counter?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
  pokemon_color_id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_habitat_id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_shape_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_pokemonspecies" */
export type Pokemon_V2_Pokemonspecies_Insert_Input = {
  base_happiness?: InputMaybe<Scalars['Int']['input']>;
  capture_rate?: InputMaybe<Scalars['Int']['input']>;
  evolution_chain_id?: InputMaybe<Scalars['Int']['input']>;
  evolves_from_species_id?: InputMaybe<Scalars['Int']['input']>;
  forms_switchable?: InputMaybe<Scalars['Boolean']['input']>;
  gender_rate?: InputMaybe<Scalars['Int']['input']>;
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  growth_rate_id?: InputMaybe<Scalars['Int']['input']>;
  has_gender_differences?: InputMaybe<Scalars['Boolean']['input']>;
  hatch_counter?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_baby?: InputMaybe<Scalars['Boolean']['input']>;
  is_legendary?: InputMaybe<Scalars['Boolean']['input']>;
  is_mythical?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
  pokemon_color_id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_habitat_id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_shape_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Pokemonspecies_Max_Fields = {
  __typename?: 'pokemon_v2_pokemonspecies_max_fields';
  base_happiness?: Maybe<Scalars['Int']['output']>;
  capture_rate?: Maybe<Scalars['Int']['output']>;
  evolution_chain_id?: Maybe<Scalars['Int']['output']>;
  evolves_from_species_id?: Maybe<Scalars['Int']['output']>;
  gender_rate?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  growth_rate_id?: Maybe<Scalars['Int']['output']>;
  hatch_counter?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  pokemon_color_id?: Maybe<Scalars['Int']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Int']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Pokemonspecies_Min_Fields = {
  __typename?: 'pokemon_v2_pokemonspecies_min_fields';
  base_happiness?: Maybe<Scalars['Int']['output']>;
  capture_rate?: Maybe<Scalars['Int']['output']>;
  evolution_chain_id?: Maybe<Scalars['Int']['output']>;
  evolves_from_species_id?: Maybe<Scalars['Int']['output']>;
  gender_rate?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  growth_rate_id?: Maybe<Scalars['Int']['output']>;
  hatch_counter?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  pokemon_color_id?: Maybe<Scalars['Int']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Int']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_pokemonspecies" */
export type Pokemon_V2_Pokemonspecies_Mutation_Response = {
  __typename?: 'pokemon_v2_pokemonspecies_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Pokemonspecies>;
};

/** on_conflict condition type for table "pokemon_v2_pokemonspecies" */
export type Pokemon_V2_Pokemonspecies_On_Conflict = {
  constraint: Pokemon_V2_Pokemonspecies_Constraint;
  update_columns?: Array<Pokemon_V2_Pokemonspecies_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Pokemonspecies_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonspecies". */
export type Pokemon_V2_Pokemonspecies_Order_By = {
  base_happiness?: InputMaybe<Order_By>;
  capture_rate?: InputMaybe<Order_By>;
  evolution_chain_id?: InputMaybe<Order_By>;
  evolves_from_species_id?: InputMaybe<Order_By>;
  forms_switchable?: InputMaybe<Order_By>;
  gender_rate?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  growth_rate_id?: InputMaybe<Order_By>;
  has_gender_differences?: InputMaybe<Order_By>;
  hatch_counter?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  is_baby?: InputMaybe<Order_By>;
  is_legendary?: InputMaybe<Order_By>;
  is_mythical?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_color_id?: InputMaybe<Order_By>;
  pokemon_habitat_id?: InputMaybe<Order_By>;
  pokemon_shape_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_pokemonspecies */
export type Pokemon_V2_Pokemonspecies_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_pokemonspecies" */
export enum Pokemon_V2_Pokemonspecies_Select_Column {
  /** column name */
  BaseHappiness = 'base_happiness',
  /** column name */
  CaptureRate = 'capture_rate',
  /** column name */
  EvolutionChainId = 'evolution_chain_id',
  /** column name */
  EvolvesFromSpeciesId = 'evolves_from_species_id',
  /** column name */
  FormsSwitchable = 'forms_switchable',
  /** column name */
  GenderRate = 'gender_rate',
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  GrowthRateId = 'growth_rate_id',
  /** column name */
  HasGenderDifferences = 'has_gender_differences',
  /** column name */
  HatchCounter = 'hatch_counter',
  /** column name */
  Id = 'id',
  /** column name */
  IsBaby = 'is_baby',
  /** column name */
  IsLegendary = 'is_legendary',
  /** column name */
  IsMythical = 'is_mythical',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  PokemonColorId = 'pokemon_color_id',
  /** column name */
  PokemonHabitatId = 'pokemon_habitat_id',
  /** column name */
  PokemonShapeId = 'pokemon_shape_id'
}

/** input type for updating data in table "pokemon_v2_pokemonspecies" */
export type Pokemon_V2_Pokemonspecies_Set_Input = {
  base_happiness?: InputMaybe<Scalars['Int']['input']>;
  capture_rate?: InputMaybe<Scalars['Int']['input']>;
  evolution_chain_id?: InputMaybe<Scalars['Int']['input']>;
  evolves_from_species_id?: InputMaybe<Scalars['Int']['input']>;
  forms_switchable?: InputMaybe<Scalars['Boolean']['input']>;
  gender_rate?: InputMaybe<Scalars['Int']['input']>;
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  growth_rate_id?: InputMaybe<Scalars['Int']['input']>;
  has_gender_differences?: InputMaybe<Scalars['Boolean']['input']>;
  hatch_counter?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_baby?: InputMaybe<Scalars['Boolean']['input']>;
  is_legendary?: InputMaybe<Scalars['Boolean']['input']>;
  is_mythical?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
  pokemon_color_id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_habitat_id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_shape_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Pokemonspecies_Stddev_Fields = {
  __typename?: 'pokemon_v2_pokemonspecies_stddev_fields';
  base_happiness?: Maybe<Scalars['Float']['output']>;
  capture_rate?: Maybe<Scalars['Float']['output']>;
  evolution_chain_id?: Maybe<Scalars['Float']['output']>;
  evolves_from_species_id?: Maybe<Scalars['Float']['output']>;
  gender_rate?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  hatch_counter?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_color_id?: Maybe<Scalars['Float']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Float']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Pokemonspecies_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonspecies_stddev_pop_fields';
  base_happiness?: Maybe<Scalars['Float']['output']>;
  capture_rate?: Maybe<Scalars['Float']['output']>;
  evolution_chain_id?: Maybe<Scalars['Float']['output']>;
  evolves_from_species_id?: Maybe<Scalars['Float']['output']>;
  gender_rate?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  hatch_counter?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_color_id?: Maybe<Scalars['Float']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Float']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Pokemonspecies_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonspecies_stddev_samp_fields';
  base_happiness?: Maybe<Scalars['Float']['output']>;
  capture_rate?: Maybe<Scalars['Float']['output']>;
  evolution_chain_id?: Maybe<Scalars['Float']['output']>;
  evolves_from_species_id?: Maybe<Scalars['Float']['output']>;
  gender_rate?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  hatch_counter?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_color_id?: Maybe<Scalars['Float']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Float']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_pokemonspecies" */
export type Pokemon_V2_Pokemonspecies_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Pokemonspecies_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Pokemonspecies_Stream_Cursor_Value_Input = {
  base_happiness?: InputMaybe<Scalars['Int']['input']>;
  capture_rate?: InputMaybe<Scalars['Int']['input']>;
  evolution_chain_id?: InputMaybe<Scalars['Int']['input']>;
  evolves_from_species_id?: InputMaybe<Scalars['Int']['input']>;
  forms_switchable?: InputMaybe<Scalars['Boolean']['input']>;
  gender_rate?: InputMaybe<Scalars['Int']['input']>;
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  growth_rate_id?: InputMaybe<Scalars['Int']['input']>;
  has_gender_differences?: InputMaybe<Scalars['Boolean']['input']>;
  hatch_counter?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_baby?: InputMaybe<Scalars['Boolean']['input']>;
  is_legendary?: InputMaybe<Scalars['Boolean']['input']>;
  is_mythical?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
  pokemon_color_id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_habitat_id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_shape_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Pokemonspecies_Sum_Fields = {
  __typename?: 'pokemon_v2_pokemonspecies_sum_fields';
  base_happiness?: Maybe<Scalars['Int']['output']>;
  capture_rate?: Maybe<Scalars['Int']['output']>;
  evolution_chain_id?: Maybe<Scalars['Int']['output']>;
  evolves_from_species_id?: Maybe<Scalars['Int']['output']>;
  gender_rate?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  growth_rate_id?: Maybe<Scalars['Int']['output']>;
  hatch_counter?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  pokemon_color_id?: Maybe<Scalars['Int']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Int']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_pokemonspecies" */
export enum Pokemon_V2_Pokemonspecies_Update_Column {
  /** column name */
  BaseHappiness = 'base_happiness',
  /** column name */
  CaptureRate = 'capture_rate',
  /** column name */
  EvolutionChainId = 'evolution_chain_id',
  /** column name */
  EvolvesFromSpeciesId = 'evolves_from_species_id',
  /** column name */
  FormsSwitchable = 'forms_switchable',
  /** column name */
  GenderRate = 'gender_rate',
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  GrowthRateId = 'growth_rate_id',
  /** column name */
  HasGenderDifferences = 'has_gender_differences',
  /** column name */
  HatchCounter = 'hatch_counter',
  /** column name */
  Id = 'id',
  /** column name */
  IsBaby = 'is_baby',
  /** column name */
  IsLegendary = 'is_legendary',
  /** column name */
  IsMythical = 'is_mythical',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  PokemonColorId = 'pokemon_color_id',
  /** column name */
  PokemonHabitatId = 'pokemon_habitat_id',
  /** column name */
  PokemonShapeId = 'pokemon_shape_id'
}

export type Pokemon_V2_Pokemonspecies_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Pokemonspecies_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Pokemonspecies_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Pokemonspecies_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Pokemonspecies_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonspecies_var_pop_fields';
  base_happiness?: Maybe<Scalars['Float']['output']>;
  capture_rate?: Maybe<Scalars['Float']['output']>;
  evolution_chain_id?: Maybe<Scalars['Float']['output']>;
  evolves_from_species_id?: Maybe<Scalars['Float']['output']>;
  gender_rate?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  hatch_counter?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_color_id?: Maybe<Scalars['Float']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Float']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Pokemonspecies_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonspecies_var_samp_fields';
  base_happiness?: Maybe<Scalars['Float']['output']>;
  capture_rate?: Maybe<Scalars['Float']['output']>;
  evolution_chain_id?: Maybe<Scalars['Float']['output']>;
  evolves_from_species_id?: Maybe<Scalars['Float']['output']>;
  gender_rate?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  hatch_counter?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_color_id?: Maybe<Scalars['Float']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Float']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Pokemonspecies_Variance_Fields = {
  __typename?: 'pokemon_v2_pokemonspecies_variance_fields';
  base_happiness?: Maybe<Scalars['Float']['output']>;
  capture_rate?: Maybe<Scalars['Float']['output']>;
  evolution_chain_id?: Maybe<Scalars['Float']['output']>;
  evolves_from_species_id?: Maybe<Scalars['Float']['output']>;
  gender_rate?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  hatch_counter?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_color_id?: Maybe<Scalars['Float']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Float']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokemonspeciesdescription" */
export type Pokemon_V2_Pokemonspeciesdescription = {
  __typename?: 'pokemon_v2_pokemonspeciesdescription';
  description: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_pokemonspeciesdescription" */
export type Pokemon_V2_Pokemonspeciesdescription_Aggregate = {
  __typename?: 'pokemon_v2_pokemonspeciesdescription_aggregate';
  aggregate?: Maybe<Pokemon_V2_Pokemonspeciesdescription_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Pokemonspeciesdescription>;
};

/** aggregate fields of "pokemon_v2_pokemonspeciesdescription" */
export type Pokemon_V2_Pokemonspeciesdescription_Aggregate_Fields = {
  __typename?: 'pokemon_v2_pokemonspeciesdescription_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Pokemonspeciesdescription_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Pokemonspeciesdescription_Max_Fields>;
  min?: Maybe<Pokemon_V2_Pokemonspeciesdescription_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Pokemonspeciesdescription_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Pokemonspeciesdescription_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Pokemonspeciesdescription_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Pokemonspeciesdescription_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Pokemonspeciesdescription_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Pokemonspeciesdescription_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Pokemonspeciesdescription_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonspeciesdescription" */
export type Pokemon_V2_Pokemonspeciesdescription_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Pokemonspeciesdescription_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Pokemonspeciesdescription_Avg_Fields = {
  __typename?: 'pokemon_v2_pokemonspeciesdescription_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonspeciesdescription". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Pokemonspeciesdescription_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Pokemonspeciesdescription_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Pokemonspeciesdescription_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Pokemonspeciesdescription_Bool_Exp>>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  pokemon_species_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_pokemonspeciesdescription" */
export enum Pokemon_V2_Pokemonspeciesdescription_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PokemonspeciesdescriptionPkey = 'pokemon_v2_pokemonspeciesdescription_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_pokemonspeciesdescription" */
export type Pokemon_V2_Pokemonspeciesdescription_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_species_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_pokemonspeciesdescription" */
export type Pokemon_V2_Pokemonspeciesdescription_Insert_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_species_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Pokemonspeciesdescription_Max_Fields = {
  __typename?: 'pokemon_v2_pokemonspeciesdescription_max_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Pokemonspeciesdescription_Min_Fields = {
  __typename?: 'pokemon_v2_pokemonspeciesdescription_min_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_pokemonspeciesdescription" */
export type Pokemon_V2_Pokemonspeciesdescription_Mutation_Response = {
  __typename?: 'pokemon_v2_pokemonspeciesdescription_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Pokemonspeciesdescription>;
};

/** on_conflict condition type for table "pokemon_v2_pokemonspeciesdescription" */
export type Pokemon_V2_Pokemonspeciesdescription_On_Conflict = {
  constraint: Pokemon_V2_Pokemonspeciesdescription_Constraint;
  update_columns?: Array<Pokemon_V2_Pokemonspeciesdescription_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Pokemonspeciesdescription_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonspeciesdescription". */
export type Pokemon_V2_Pokemonspeciesdescription_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_pokemonspeciesdescription */
export type Pokemon_V2_Pokemonspeciesdescription_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_pokemonspeciesdescription" */
export enum Pokemon_V2_Pokemonspeciesdescription_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  PokemonSpeciesId = 'pokemon_species_id'
}

/** input type for updating data in table "pokemon_v2_pokemonspeciesdescription" */
export type Pokemon_V2_Pokemonspeciesdescription_Set_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_species_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Pokemonspeciesdescription_Stddev_Fields = {
  __typename?: 'pokemon_v2_pokemonspeciesdescription_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Pokemonspeciesdescription_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonspeciesdescription_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Pokemonspeciesdescription_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonspeciesdescription_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_pokemonspeciesdescription" */
export type Pokemon_V2_Pokemonspeciesdescription_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Pokemonspeciesdescription_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Pokemonspeciesdescription_Stream_Cursor_Value_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_species_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Pokemonspeciesdescription_Sum_Fields = {
  __typename?: 'pokemon_v2_pokemonspeciesdescription_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_pokemonspeciesdescription" */
export enum Pokemon_V2_Pokemonspeciesdescription_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  PokemonSpeciesId = 'pokemon_species_id'
}

export type Pokemon_V2_Pokemonspeciesdescription_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Pokemonspeciesdescription_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Pokemonspeciesdescription_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Pokemonspeciesdescription_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Pokemonspeciesdescription_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonspeciesdescription_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Pokemonspeciesdescription_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonspeciesdescription_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Pokemonspeciesdescription_Variance_Fields = {
  __typename?: 'pokemon_v2_pokemonspeciesdescription_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokemonspeciesflavortext" */
export type Pokemon_V2_Pokemonspeciesflavortext = {
  __typename?: 'pokemon_v2_pokemonspeciesflavortext';
  flavor_text: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_pokemonspeciesflavortext" */
export type Pokemon_V2_Pokemonspeciesflavortext_Aggregate = {
  __typename?: 'pokemon_v2_pokemonspeciesflavortext_aggregate';
  aggregate?: Maybe<Pokemon_V2_Pokemonspeciesflavortext_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Pokemonspeciesflavortext>;
};

/** aggregate fields of "pokemon_v2_pokemonspeciesflavortext" */
export type Pokemon_V2_Pokemonspeciesflavortext_Aggregate_Fields = {
  __typename?: 'pokemon_v2_pokemonspeciesflavortext_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Pokemonspeciesflavortext_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Pokemonspeciesflavortext_Max_Fields>;
  min?: Maybe<Pokemon_V2_Pokemonspeciesflavortext_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Pokemonspeciesflavortext_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Pokemonspeciesflavortext_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Pokemonspeciesflavortext_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Pokemonspeciesflavortext_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Pokemonspeciesflavortext_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Pokemonspeciesflavortext_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Pokemonspeciesflavortext_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonspeciesflavortext" */
export type Pokemon_V2_Pokemonspeciesflavortext_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Pokemonspeciesflavortext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Pokemonspeciesflavortext_Avg_Fields = {
  __typename?: 'pokemon_v2_pokemonspeciesflavortext_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonspeciesflavortext". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Pokemonspeciesflavortext_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Pokemonspeciesflavortext_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Pokemonspeciesflavortext_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Pokemonspeciesflavortext_Bool_Exp>>;
  flavor_text?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  pokemon_species_id?: InputMaybe<Int_Comparison_Exp>;
  version_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_pokemonspeciesflavortext" */
export enum Pokemon_V2_Pokemonspeciesflavortext_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PokemonspeciesflavortextPkey = 'pokemon_v2_pokemonspeciesflavortext_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_pokemonspeciesflavortext" */
export type Pokemon_V2_Pokemonspeciesflavortext_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_species_id?: InputMaybe<Scalars['Int']['input']>;
  version_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_pokemonspeciesflavortext" */
export type Pokemon_V2_Pokemonspeciesflavortext_Insert_Input = {
  flavor_text?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_species_id?: InputMaybe<Scalars['Int']['input']>;
  version_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Pokemonspeciesflavortext_Max_Fields = {
  __typename?: 'pokemon_v2_pokemonspeciesflavortext_max_fields';
  flavor_text?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Pokemonspeciesflavortext_Min_Fields = {
  __typename?: 'pokemon_v2_pokemonspeciesflavortext_min_fields';
  flavor_text?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_pokemonspeciesflavortext" */
export type Pokemon_V2_Pokemonspeciesflavortext_Mutation_Response = {
  __typename?: 'pokemon_v2_pokemonspeciesflavortext_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Pokemonspeciesflavortext>;
};

/** on_conflict condition type for table "pokemon_v2_pokemonspeciesflavortext" */
export type Pokemon_V2_Pokemonspeciesflavortext_On_Conflict = {
  constraint: Pokemon_V2_Pokemonspeciesflavortext_Constraint;
  update_columns?: Array<Pokemon_V2_Pokemonspeciesflavortext_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Pokemonspeciesflavortext_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonspeciesflavortext". */
export type Pokemon_V2_Pokemonspeciesflavortext_Order_By = {
  flavor_text?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_pokemonspeciesflavortext */
export type Pokemon_V2_Pokemonspeciesflavortext_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_pokemonspeciesflavortext" */
export enum Pokemon_V2_Pokemonspeciesflavortext_Select_Column {
  /** column name */
  FlavorText = 'flavor_text',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  PokemonSpeciesId = 'pokemon_species_id',
  /** column name */
  VersionId = 'version_id'
}

/** input type for updating data in table "pokemon_v2_pokemonspeciesflavortext" */
export type Pokemon_V2_Pokemonspeciesflavortext_Set_Input = {
  flavor_text?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_species_id?: InputMaybe<Scalars['Int']['input']>;
  version_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Pokemonspeciesflavortext_Stddev_Fields = {
  __typename?: 'pokemon_v2_pokemonspeciesflavortext_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Pokemonspeciesflavortext_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonspeciesflavortext_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Pokemonspeciesflavortext_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonspeciesflavortext_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_pokemonspeciesflavortext" */
export type Pokemon_V2_Pokemonspeciesflavortext_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Pokemonspeciesflavortext_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Pokemonspeciesflavortext_Stream_Cursor_Value_Input = {
  flavor_text?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_species_id?: InputMaybe<Scalars['Int']['input']>;
  version_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Pokemonspeciesflavortext_Sum_Fields = {
  __typename?: 'pokemon_v2_pokemonspeciesflavortext_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_pokemonspeciesflavortext" */
export enum Pokemon_V2_Pokemonspeciesflavortext_Update_Column {
  /** column name */
  FlavorText = 'flavor_text',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  PokemonSpeciesId = 'pokemon_species_id',
  /** column name */
  VersionId = 'version_id'
}

export type Pokemon_V2_Pokemonspeciesflavortext_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Pokemonspeciesflavortext_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Pokemonspeciesflavortext_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Pokemonspeciesflavortext_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Pokemonspeciesflavortext_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonspeciesflavortext_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Pokemonspeciesflavortext_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonspeciesflavortext_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Pokemonspeciesflavortext_Variance_Fields = {
  __typename?: 'pokemon_v2_pokemonspeciesflavortext_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokemonspeciesname" */
export type Pokemon_V2_Pokemonspeciesname = {
  __typename?: 'pokemon_v2_pokemonspeciesname';
  genus: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_pokemonspeciesname" */
export type Pokemon_V2_Pokemonspeciesname_Aggregate = {
  __typename?: 'pokemon_v2_pokemonspeciesname_aggregate';
  aggregate?: Maybe<Pokemon_V2_Pokemonspeciesname_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Pokemonspeciesname>;
};

/** aggregate fields of "pokemon_v2_pokemonspeciesname" */
export type Pokemon_V2_Pokemonspeciesname_Aggregate_Fields = {
  __typename?: 'pokemon_v2_pokemonspeciesname_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Pokemonspeciesname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Pokemonspeciesname_Max_Fields>;
  min?: Maybe<Pokemon_V2_Pokemonspeciesname_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Pokemonspeciesname_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Pokemonspeciesname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Pokemonspeciesname_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Pokemonspeciesname_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Pokemonspeciesname_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Pokemonspeciesname_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Pokemonspeciesname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonspeciesname" */
export type Pokemon_V2_Pokemonspeciesname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Pokemonspeciesname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Pokemonspeciesname_Avg_Fields = {
  __typename?: 'pokemon_v2_pokemonspeciesname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonspeciesname". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Pokemonspeciesname_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Pokemonspeciesname_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Pokemonspeciesname_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Pokemonspeciesname_Bool_Exp>>;
  genus?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  pokemon_species_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_pokemonspeciesname" */
export enum Pokemon_V2_Pokemonspeciesname_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PokemonspeciesnamePkey = 'pokemon_v2_pokemonspeciesname_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_pokemonspeciesname" */
export type Pokemon_V2_Pokemonspeciesname_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_species_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_pokemonspeciesname" */
export type Pokemon_V2_Pokemonspeciesname_Insert_Input = {
  genus?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  pokemon_species_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Pokemonspeciesname_Max_Fields = {
  __typename?: 'pokemon_v2_pokemonspeciesname_max_fields';
  genus?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Pokemonspeciesname_Min_Fields = {
  __typename?: 'pokemon_v2_pokemonspeciesname_min_fields';
  genus?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_pokemonspeciesname" */
export type Pokemon_V2_Pokemonspeciesname_Mutation_Response = {
  __typename?: 'pokemon_v2_pokemonspeciesname_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Pokemonspeciesname>;
};

/** on_conflict condition type for table "pokemon_v2_pokemonspeciesname" */
export type Pokemon_V2_Pokemonspeciesname_On_Conflict = {
  constraint: Pokemon_V2_Pokemonspeciesname_Constraint;
  update_columns?: Array<Pokemon_V2_Pokemonspeciesname_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Pokemonspeciesname_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonspeciesname". */
export type Pokemon_V2_Pokemonspeciesname_Order_By = {
  genus?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_pokemonspeciesname */
export type Pokemon_V2_Pokemonspeciesname_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_pokemonspeciesname" */
export enum Pokemon_V2_Pokemonspeciesname_Select_Column {
  /** column name */
  Genus = 'genus',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  PokemonSpeciesId = 'pokemon_species_id'
}

/** input type for updating data in table "pokemon_v2_pokemonspeciesname" */
export type Pokemon_V2_Pokemonspeciesname_Set_Input = {
  genus?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  pokemon_species_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Pokemonspeciesname_Stddev_Fields = {
  __typename?: 'pokemon_v2_pokemonspeciesname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Pokemonspeciesname_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonspeciesname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Pokemonspeciesname_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonspeciesname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_pokemonspeciesname" */
export type Pokemon_V2_Pokemonspeciesname_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Pokemonspeciesname_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Pokemonspeciesname_Stream_Cursor_Value_Input = {
  genus?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  pokemon_species_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Pokemonspeciesname_Sum_Fields = {
  __typename?: 'pokemon_v2_pokemonspeciesname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_pokemonspeciesname" */
export enum Pokemon_V2_Pokemonspeciesname_Update_Column {
  /** column name */
  Genus = 'genus',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  PokemonSpeciesId = 'pokemon_species_id'
}

export type Pokemon_V2_Pokemonspeciesname_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Pokemonspeciesname_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Pokemonspeciesname_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Pokemonspeciesname_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Pokemonspeciesname_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonspeciesname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Pokemonspeciesname_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonspeciesname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Pokemonspeciesname_Variance_Fields = {
  __typename?: 'pokemon_v2_pokemonspeciesname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokemonsprites" */
export type Pokemon_V2_Pokemonsprites = {
  __typename?: 'pokemon_v2_pokemonsprites';
  id: Scalars['Int']['output'];
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  sprites: Scalars['jsonb']['output'];
};


/** columns and relationships of "pokemon_v2_pokemonsprites" */
export type Pokemon_V2_PokemonspritesSpritesArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "pokemon_v2_pokemonsprites" */
export type Pokemon_V2_Pokemonsprites_Aggregate = {
  __typename?: 'pokemon_v2_pokemonsprites_aggregate';
  aggregate?: Maybe<Pokemon_V2_Pokemonsprites_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Pokemonsprites>;
};

/** aggregate fields of "pokemon_v2_pokemonsprites" */
export type Pokemon_V2_Pokemonsprites_Aggregate_Fields = {
  __typename?: 'pokemon_v2_pokemonsprites_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Pokemonsprites_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Pokemonsprites_Max_Fields>;
  min?: Maybe<Pokemon_V2_Pokemonsprites_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Pokemonsprites_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Pokemonsprites_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Pokemonsprites_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Pokemonsprites_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Pokemonsprites_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Pokemonsprites_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Pokemonsprites_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonsprites" */
export type Pokemon_V2_Pokemonsprites_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Pokemonsprites_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Pokemon_V2_Pokemonsprites_Append_Input = {
  sprites?: InputMaybe<Scalars['jsonb']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Pokemonsprites_Avg_Fields = {
  __typename?: 'pokemon_v2_pokemonsprites_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonsprites". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Pokemonsprites_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Pokemonsprites_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Pokemonsprites_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Pokemonsprites_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  pokemon_id?: InputMaybe<Int_Comparison_Exp>;
  sprites?: InputMaybe<Jsonb_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_pokemonsprites" */
export enum Pokemon_V2_Pokemonsprites_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PokemonspritesPkey = 'pokemon_v2_pokemonsprites_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Pokemon_V2_Pokemonsprites_Delete_At_Path_Input = {
  sprites?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Pokemon_V2_Pokemonsprites_Delete_Elem_Input = {
  sprites?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Pokemon_V2_Pokemonsprites_Delete_Key_Input = {
  sprites?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "pokemon_v2_pokemonsprites" */
export type Pokemon_V2_Pokemonsprites_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_pokemonsprites" */
export type Pokemon_V2_Pokemonsprites_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  sprites?: InputMaybe<Scalars['jsonb']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Pokemonsprites_Max_Fields = {
  __typename?: 'pokemon_v2_pokemonsprites_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Pokemonsprites_Min_Fields = {
  __typename?: 'pokemon_v2_pokemonsprites_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_pokemonsprites" */
export type Pokemon_V2_Pokemonsprites_Mutation_Response = {
  __typename?: 'pokemon_v2_pokemonsprites_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Pokemonsprites>;
};

/** on_conflict condition type for table "pokemon_v2_pokemonsprites" */
export type Pokemon_V2_Pokemonsprites_On_Conflict = {
  constraint: Pokemon_V2_Pokemonsprites_Constraint;
  update_columns?: Array<Pokemon_V2_Pokemonsprites_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Pokemonsprites_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonsprites". */
export type Pokemon_V2_Pokemonsprites_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  sprites?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_pokemonsprites */
export type Pokemon_V2_Pokemonsprites_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Pokemon_V2_Pokemonsprites_Prepend_Input = {
  sprites?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "pokemon_v2_pokemonsprites" */
export enum Pokemon_V2_Pokemonsprites_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  PokemonId = 'pokemon_id',
  /** column name */
  Sprites = 'sprites'
}

/** input type for updating data in table "pokemon_v2_pokemonsprites" */
export type Pokemon_V2_Pokemonsprites_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  sprites?: InputMaybe<Scalars['jsonb']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Pokemonsprites_Stddev_Fields = {
  __typename?: 'pokemon_v2_pokemonsprites_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Pokemonsprites_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonsprites_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Pokemonsprites_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonsprites_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_pokemonsprites" */
export type Pokemon_V2_Pokemonsprites_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Pokemonsprites_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Pokemonsprites_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  sprites?: InputMaybe<Scalars['jsonb']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Pokemonsprites_Sum_Fields = {
  __typename?: 'pokemon_v2_pokemonsprites_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_pokemonsprites" */
export enum Pokemon_V2_Pokemonsprites_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  PokemonId = 'pokemon_id',
  /** column name */
  Sprites = 'sprites'
}

export type Pokemon_V2_Pokemonsprites_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Pokemon_V2_Pokemonsprites_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Pokemon_V2_Pokemonsprites_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Pokemon_V2_Pokemonsprites_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Pokemon_V2_Pokemonsprites_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Pokemonsprites_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Pokemon_V2_Pokemonsprites_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Pokemonsprites_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Pokemonsprites_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Pokemonsprites_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonsprites_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Pokemonsprites_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonsprites_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Pokemonsprites_Variance_Fields = {
  __typename?: 'pokemon_v2_pokemonsprites_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokemonstat" */
export type Pokemon_V2_Pokemonstat = {
  __typename?: 'pokemon_v2_pokemonstat';
  base_stat: Scalars['Int']['output'];
  effort: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  stat_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_pokemonstat" */
export type Pokemon_V2_Pokemonstat_Aggregate = {
  __typename?: 'pokemon_v2_pokemonstat_aggregate';
  aggregate?: Maybe<Pokemon_V2_Pokemonstat_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Pokemonstat>;
};

/** aggregate fields of "pokemon_v2_pokemonstat" */
export type Pokemon_V2_Pokemonstat_Aggregate_Fields = {
  __typename?: 'pokemon_v2_pokemonstat_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Pokemonstat_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Pokemonstat_Max_Fields>;
  min?: Maybe<Pokemon_V2_Pokemonstat_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Pokemonstat_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Pokemonstat_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Pokemonstat_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Pokemonstat_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Pokemonstat_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Pokemonstat_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Pokemonstat_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonstat" */
export type Pokemon_V2_Pokemonstat_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Pokemonstat_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Pokemonstat_Avg_Fields = {
  __typename?: 'pokemon_v2_pokemonstat_avg_fields';
  base_stat?: Maybe<Scalars['Float']['output']>;
  effort?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonstat". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Pokemonstat_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Pokemonstat_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Pokemonstat_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Pokemonstat_Bool_Exp>>;
  base_stat?: InputMaybe<Int_Comparison_Exp>;
  effort?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  pokemon_id?: InputMaybe<Int_Comparison_Exp>;
  stat_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_pokemonstat" */
export enum Pokemon_V2_Pokemonstat_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PokemonstatPkey = 'pokemon_v2_pokemonstat_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_pokemonstat" */
export type Pokemon_V2_Pokemonstat_Inc_Input = {
  base_stat?: InputMaybe<Scalars['Int']['input']>;
  effort?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  stat_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_pokemonstat" */
export type Pokemon_V2_Pokemonstat_Insert_Input = {
  base_stat?: InputMaybe<Scalars['Int']['input']>;
  effort?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  stat_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Pokemonstat_Max_Fields = {
  __typename?: 'pokemon_v2_pokemonstat_max_fields';
  base_stat?: Maybe<Scalars['Int']['output']>;
  effort?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  stat_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Pokemonstat_Min_Fields = {
  __typename?: 'pokemon_v2_pokemonstat_min_fields';
  base_stat?: Maybe<Scalars['Int']['output']>;
  effort?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  stat_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_pokemonstat" */
export type Pokemon_V2_Pokemonstat_Mutation_Response = {
  __typename?: 'pokemon_v2_pokemonstat_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Pokemonstat>;
};

/** on_conflict condition type for table "pokemon_v2_pokemonstat" */
export type Pokemon_V2_Pokemonstat_On_Conflict = {
  constraint: Pokemon_V2_Pokemonstat_Constraint;
  update_columns?: Array<Pokemon_V2_Pokemonstat_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Pokemonstat_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonstat". */
export type Pokemon_V2_Pokemonstat_Order_By = {
  base_stat?: InputMaybe<Order_By>;
  effort?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_pokemonstat */
export type Pokemon_V2_Pokemonstat_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_pokemonstat" */
export enum Pokemon_V2_Pokemonstat_Select_Column {
  /** column name */
  BaseStat = 'base_stat',
  /** column name */
  Effort = 'effort',
  /** column name */
  Id = 'id',
  /** column name */
  PokemonId = 'pokemon_id',
  /** column name */
  StatId = 'stat_id'
}

/** input type for updating data in table "pokemon_v2_pokemonstat" */
export type Pokemon_V2_Pokemonstat_Set_Input = {
  base_stat?: InputMaybe<Scalars['Int']['input']>;
  effort?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  stat_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Pokemonstat_Stddev_Fields = {
  __typename?: 'pokemon_v2_pokemonstat_stddev_fields';
  base_stat?: Maybe<Scalars['Float']['output']>;
  effort?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Pokemonstat_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonstat_stddev_pop_fields';
  base_stat?: Maybe<Scalars['Float']['output']>;
  effort?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Pokemonstat_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonstat_stddev_samp_fields';
  base_stat?: Maybe<Scalars['Float']['output']>;
  effort?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_pokemonstat" */
export type Pokemon_V2_Pokemonstat_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Pokemonstat_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Pokemonstat_Stream_Cursor_Value_Input = {
  base_stat?: InputMaybe<Scalars['Int']['input']>;
  effort?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  stat_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Pokemonstat_Sum_Fields = {
  __typename?: 'pokemon_v2_pokemonstat_sum_fields';
  base_stat?: Maybe<Scalars['Int']['output']>;
  effort?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  stat_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_pokemonstat" */
export enum Pokemon_V2_Pokemonstat_Update_Column {
  /** column name */
  BaseStat = 'base_stat',
  /** column name */
  Effort = 'effort',
  /** column name */
  Id = 'id',
  /** column name */
  PokemonId = 'pokemon_id',
  /** column name */
  StatId = 'stat_id'
}

export type Pokemon_V2_Pokemonstat_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Pokemonstat_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Pokemonstat_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Pokemonstat_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Pokemonstat_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemonstat_var_pop_fields';
  base_stat?: Maybe<Scalars['Float']['output']>;
  effort?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Pokemonstat_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemonstat_var_samp_fields';
  base_stat?: Maybe<Scalars['Float']['output']>;
  effort?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Pokemonstat_Variance_Fields = {
  __typename?: 'pokemon_v2_pokemonstat_variance_fields';
  base_stat?: Maybe<Scalars['Float']['output']>;
  effort?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokemontype" */
export type Pokemon_V2_Pokemontype = {
  __typename?: 'pokemon_v2_pokemontype';
  id: Scalars['Int']['output'];
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  slot: Scalars['Int']['output'];
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_pokemontype" */
export type Pokemon_V2_Pokemontype_Aggregate = {
  __typename?: 'pokemon_v2_pokemontype_aggregate';
  aggregate?: Maybe<Pokemon_V2_Pokemontype_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Pokemontype>;
};

/** aggregate fields of "pokemon_v2_pokemontype" */
export type Pokemon_V2_Pokemontype_Aggregate_Fields = {
  __typename?: 'pokemon_v2_pokemontype_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Pokemontype_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Pokemontype_Max_Fields>;
  min?: Maybe<Pokemon_V2_Pokemontype_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Pokemontype_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Pokemontype_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Pokemontype_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Pokemontype_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Pokemontype_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Pokemontype_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Pokemontype_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemontype" */
export type Pokemon_V2_Pokemontype_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Pokemontype_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Pokemontype_Avg_Fields = {
  __typename?: 'pokemon_v2_pokemontype_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemontype". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Pokemontype_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Pokemontype_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Pokemontype_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Pokemontype_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  pokemon_id?: InputMaybe<Int_Comparison_Exp>;
  slot?: InputMaybe<Int_Comparison_Exp>;
  type_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_pokemontype" */
export enum Pokemon_V2_Pokemontype_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PokemontypePkey = 'pokemon_v2_pokemontype_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_pokemontype" */
export type Pokemon_V2_Pokemontype_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  slot?: InputMaybe<Scalars['Int']['input']>;
  type_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_pokemontype" */
export type Pokemon_V2_Pokemontype_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  slot?: InputMaybe<Scalars['Int']['input']>;
  type_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Pokemontype_Max_Fields = {
  __typename?: 'pokemon_v2_pokemontype_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  slot?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Pokemontype_Min_Fields = {
  __typename?: 'pokemon_v2_pokemontype_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  slot?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_pokemontype" */
export type Pokemon_V2_Pokemontype_Mutation_Response = {
  __typename?: 'pokemon_v2_pokemontype_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Pokemontype>;
};

/** on_conflict condition type for table "pokemon_v2_pokemontype" */
export type Pokemon_V2_Pokemontype_On_Conflict = {
  constraint: Pokemon_V2_Pokemontype_Constraint;
  update_columns?: Array<Pokemon_V2_Pokemontype_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Pokemontype_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemontype". */
export type Pokemon_V2_Pokemontype_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_pokemontype */
export type Pokemon_V2_Pokemontype_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_pokemontype" */
export enum Pokemon_V2_Pokemontype_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  PokemonId = 'pokemon_id',
  /** column name */
  Slot = 'slot',
  /** column name */
  TypeId = 'type_id'
}

/** input type for updating data in table "pokemon_v2_pokemontype" */
export type Pokemon_V2_Pokemontype_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  slot?: InputMaybe<Scalars['Int']['input']>;
  type_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Pokemontype_Stddev_Fields = {
  __typename?: 'pokemon_v2_pokemontype_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Pokemontype_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemontype_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Pokemontype_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemontype_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_pokemontype" */
export type Pokemon_V2_Pokemontype_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Pokemontype_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Pokemontype_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  slot?: InputMaybe<Scalars['Int']['input']>;
  type_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Pokemontype_Sum_Fields = {
  __typename?: 'pokemon_v2_pokemontype_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  slot?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_pokemontype" */
export enum Pokemon_V2_Pokemontype_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  PokemonId = 'pokemon_id',
  /** column name */
  Slot = 'slot',
  /** column name */
  TypeId = 'type_id'
}

export type Pokemon_V2_Pokemontype_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Pokemontype_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Pokemontype_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Pokemontype_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Pokemontype_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemontype_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Pokemontype_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemontype_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Pokemontype_Variance_Fields = {
  __typename?: 'pokemon_v2_pokemontype_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokemontypepast" */
export type Pokemon_V2_Pokemontypepast = {
  __typename?: 'pokemon_v2_pokemontypepast';
  generation_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  slot: Scalars['Int']['output'];
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_pokemontypepast" */
export type Pokemon_V2_Pokemontypepast_Aggregate = {
  __typename?: 'pokemon_v2_pokemontypepast_aggregate';
  aggregate?: Maybe<Pokemon_V2_Pokemontypepast_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Pokemontypepast>;
};

/** aggregate fields of "pokemon_v2_pokemontypepast" */
export type Pokemon_V2_Pokemontypepast_Aggregate_Fields = {
  __typename?: 'pokemon_v2_pokemontypepast_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Pokemontypepast_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Pokemontypepast_Max_Fields>;
  min?: Maybe<Pokemon_V2_Pokemontypepast_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Pokemontypepast_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Pokemontypepast_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Pokemontypepast_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Pokemontypepast_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Pokemontypepast_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Pokemontypepast_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Pokemontypepast_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemontypepast" */
export type Pokemon_V2_Pokemontypepast_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Pokemontypepast_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Pokemontypepast_Avg_Fields = {
  __typename?: 'pokemon_v2_pokemontypepast_avg_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemontypepast". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Pokemontypepast_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Pokemontypepast_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Pokemontypepast_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Pokemontypepast_Bool_Exp>>;
  generation_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  pokemon_id?: InputMaybe<Int_Comparison_Exp>;
  slot?: InputMaybe<Int_Comparison_Exp>;
  type_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_pokemontypepast" */
export enum Pokemon_V2_Pokemontypepast_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2PokemontypepastPkey = 'pokemon_v2_pokemontypepast_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_pokemontypepast" */
export type Pokemon_V2_Pokemontypepast_Inc_Input = {
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  slot?: InputMaybe<Scalars['Int']['input']>;
  type_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_pokemontypepast" */
export type Pokemon_V2_Pokemontypepast_Insert_Input = {
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  slot?: InputMaybe<Scalars['Int']['input']>;
  type_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Pokemontypepast_Max_Fields = {
  __typename?: 'pokemon_v2_pokemontypepast_max_fields';
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  slot?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Pokemontypepast_Min_Fields = {
  __typename?: 'pokemon_v2_pokemontypepast_min_fields';
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  slot?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_pokemontypepast" */
export type Pokemon_V2_Pokemontypepast_Mutation_Response = {
  __typename?: 'pokemon_v2_pokemontypepast_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Pokemontypepast>;
};

/** on_conflict condition type for table "pokemon_v2_pokemontypepast" */
export type Pokemon_V2_Pokemontypepast_On_Conflict = {
  constraint: Pokemon_V2_Pokemontypepast_Constraint;
  update_columns?: Array<Pokemon_V2_Pokemontypepast_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Pokemontypepast_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemontypepast". */
export type Pokemon_V2_Pokemontypepast_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_pokemontypepast */
export type Pokemon_V2_Pokemontypepast_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_pokemontypepast" */
export enum Pokemon_V2_Pokemontypepast_Select_Column {
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  Id = 'id',
  /** column name */
  PokemonId = 'pokemon_id',
  /** column name */
  Slot = 'slot',
  /** column name */
  TypeId = 'type_id'
}

/** input type for updating data in table "pokemon_v2_pokemontypepast" */
export type Pokemon_V2_Pokemontypepast_Set_Input = {
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  slot?: InputMaybe<Scalars['Int']['input']>;
  type_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Pokemontypepast_Stddev_Fields = {
  __typename?: 'pokemon_v2_pokemontypepast_stddev_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Pokemontypepast_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemontypepast_stddev_pop_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Pokemontypepast_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemontypepast_stddev_samp_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_pokemontypepast" */
export type Pokemon_V2_Pokemontypepast_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Pokemontypepast_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Pokemontypepast_Stream_Cursor_Value_Input = {
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  pokemon_id?: InputMaybe<Scalars['Int']['input']>;
  slot?: InputMaybe<Scalars['Int']['input']>;
  type_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Pokemontypepast_Sum_Fields = {
  __typename?: 'pokemon_v2_pokemontypepast_sum_fields';
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  slot?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_pokemontypepast" */
export enum Pokemon_V2_Pokemontypepast_Update_Column {
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  Id = 'id',
  /** column name */
  PokemonId = 'pokemon_id',
  /** column name */
  Slot = 'slot',
  /** column name */
  TypeId = 'type_id'
}

export type Pokemon_V2_Pokemontypepast_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Pokemontypepast_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Pokemontypepast_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Pokemontypepast_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Pokemontypepast_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_pokemontypepast_var_pop_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Pokemontypepast_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_pokemontypepast_var_samp_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Pokemontypepast_Variance_Fields = {
  __typename?: 'pokemon_v2_pokemontypepast_variance_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_region" */
export type Pokemon_V2_Region = {
  __typename?: 'pokemon_v2_region';
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_region" */
export type Pokemon_V2_Region_Aggregate = {
  __typename?: 'pokemon_v2_region_aggregate';
  aggregate?: Maybe<Pokemon_V2_Region_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Region>;
};

/** aggregate fields of "pokemon_v2_region" */
export type Pokemon_V2_Region_Aggregate_Fields = {
  __typename?: 'pokemon_v2_region_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Region_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Region_Max_Fields>;
  min?: Maybe<Pokemon_V2_Region_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Region_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Region_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Region_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Region_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Region_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Region_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Region_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_region" */
export type Pokemon_V2_Region_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Region_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Region_Avg_Fields = {
  __typename?: 'pokemon_v2_region_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_region". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Region_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Region_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Region_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Region_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_region" */
export enum Pokemon_V2_Region_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2RegionPkey = 'pokemon_v2_region_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_region" */
export type Pokemon_V2_Region_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_region" */
export type Pokemon_V2_Region_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Region_Max_Fields = {
  __typename?: 'pokemon_v2_region_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Region_Min_Fields = {
  __typename?: 'pokemon_v2_region_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_region" */
export type Pokemon_V2_Region_Mutation_Response = {
  __typename?: 'pokemon_v2_region_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Region>;
};

/** on_conflict condition type for table "pokemon_v2_region" */
export type Pokemon_V2_Region_On_Conflict = {
  constraint: Pokemon_V2_Region_Constraint;
  update_columns?: Array<Pokemon_V2_Region_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Region_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_region". */
export type Pokemon_V2_Region_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_region */
export type Pokemon_V2_Region_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_region" */
export enum Pokemon_V2_Region_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_region" */
export type Pokemon_V2_Region_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Region_Stddev_Fields = {
  __typename?: 'pokemon_v2_region_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Region_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_region_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Region_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_region_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_region" */
export type Pokemon_V2_Region_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Region_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Region_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Region_Sum_Fields = {
  __typename?: 'pokemon_v2_region_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_region" */
export enum Pokemon_V2_Region_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Region_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Region_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Region_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Region_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Region_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_region_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Region_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_region_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Region_Variance_Fields = {
  __typename?: 'pokemon_v2_region_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_regionname" */
export type Pokemon_V2_Regionname = {
  __typename?: 'pokemon_v2_regionname';
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
  region_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_regionname" */
export type Pokemon_V2_Regionname_Aggregate = {
  __typename?: 'pokemon_v2_regionname_aggregate';
  aggregate?: Maybe<Pokemon_V2_Regionname_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Regionname>;
};

/** aggregate fields of "pokemon_v2_regionname" */
export type Pokemon_V2_Regionname_Aggregate_Fields = {
  __typename?: 'pokemon_v2_regionname_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Regionname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Regionname_Max_Fields>;
  min?: Maybe<Pokemon_V2_Regionname_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Regionname_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Regionname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Regionname_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Regionname_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Regionname_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Regionname_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Regionname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_regionname" */
export type Pokemon_V2_Regionname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Regionname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Regionname_Avg_Fields = {
  __typename?: 'pokemon_v2_regionname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_regionname". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Regionname_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Regionname_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Regionname_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Regionname_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  region_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_regionname" */
export enum Pokemon_V2_Regionname_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2RegionnamePkey = 'pokemon_v2_regionname_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_regionname" */
export type Pokemon_V2_Regionname_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  region_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_regionname" */
export type Pokemon_V2_Regionname_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  region_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Regionname_Max_Fields = {
  __typename?: 'pokemon_v2_regionname_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  region_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Regionname_Min_Fields = {
  __typename?: 'pokemon_v2_regionname_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  region_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_regionname" */
export type Pokemon_V2_Regionname_Mutation_Response = {
  __typename?: 'pokemon_v2_regionname_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Regionname>;
};

/** on_conflict condition type for table "pokemon_v2_regionname" */
export type Pokemon_V2_Regionname_On_Conflict = {
  constraint: Pokemon_V2_Regionname_Constraint;
  update_columns?: Array<Pokemon_V2_Regionname_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Regionname_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_regionname". */
export type Pokemon_V2_Regionname_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_regionname */
export type Pokemon_V2_Regionname_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_regionname" */
export enum Pokemon_V2_Regionname_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  RegionId = 'region_id'
}

/** input type for updating data in table "pokemon_v2_regionname" */
export type Pokemon_V2_Regionname_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  region_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Regionname_Stddev_Fields = {
  __typename?: 'pokemon_v2_regionname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Regionname_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_regionname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Regionname_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_regionname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_regionname" */
export type Pokemon_V2_Regionname_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Regionname_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Regionname_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  region_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Regionname_Sum_Fields = {
  __typename?: 'pokemon_v2_regionname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  region_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_regionname" */
export enum Pokemon_V2_Regionname_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  RegionId = 'region_id'
}

export type Pokemon_V2_Regionname_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Regionname_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Regionname_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Regionname_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Regionname_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_regionname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Regionname_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_regionname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Regionname_Variance_Fields = {
  __typename?: 'pokemon_v2_regionname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_stat" */
export type Pokemon_V2_Stat = {
  __typename?: 'pokemon_v2_stat';
  game_index: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  is_battle_only: Scalars['Boolean']['output'];
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_stat" */
export type Pokemon_V2_Stat_Aggregate = {
  __typename?: 'pokemon_v2_stat_aggregate';
  aggregate?: Maybe<Pokemon_V2_Stat_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Stat>;
};

/** aggregate fields of "pokemon_v2_stat" */
export type Pokemon_V2_Stat_Aggregate_Fields = {
  __typename?: 'pokemon_v2_stat_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Stat_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Stat_Max_Fields>;
  min?: Maybe<Pokemon_V2_Stat_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Stat_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Stat_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Stat_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Stat_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Stat_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Stat_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Stat_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_stat" */
export type Pokemon_V2_Stat_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Stat_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Stat_Avg_Fields = {
  __typename?: 'pokemon_v2_stat_avg_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_stat". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Stat_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Stat_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Stat_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Stat_Bool_Exp>>;
  game_index?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  is_battle_only?: InputMaybe<Boolean_Comparison_Exp>;
  move_damage_class_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_stat" */
export enum Pokemon_V2_Stat_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2StatPkey = 'pokemon_v2_stat_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_stat" */
export type Pokemon_V2_Stat_Inc_Input = {
  game_index?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  move_damage_class_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_stat" */
export type Pokemon_V2_Stat_Insert_Input = {
  game_index?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_battle_only?: InputMaybe<Scalars['Boolean']['input']>;
  move_damage_class_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Stat_Max_Fields = {
  __typename?: 'pokemon_v2_stat_max_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Stat_Min_Fields = {
  __typename?: 'pokemon_v2_stat_min_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_stat" */
export type Pokemon_V2_Stat_Mutation_Response = {
  __typename?: 'pokemon_v2_stat_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Stat>;
};

/** on_conflict condition type for table "pokemon_v2_stat" */
export type Pokemon_V2_Stat_On_Conflict = {
  constraint: Pokemon_V2_Stat_Constraint;
  update_columns?: Array<Pokemon_V2_Stat_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Stat_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_stat". */
export type Pokemon_V2_Stat_Order_By = {
  game_index?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  is_battle_only?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_stat */
export type Pokemon_V2_Stat_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_stat" */
export enum Pokemon_V2_Stat_Select_Column {
  /** column name */
  GameIndex = 'game_index',
  /** column name */
  Id = 'id',
  /** column name */
  IsBattleOnly = 'is_battle_only',
  /** column name */
  MoveDamageClassId = 'move_damage_class_id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_stat" */
export type Pokemon_V2_Stat_Set_Input = {
  game_index?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_battle_only?: InputMaybe<Scalars['Boolean']['input']>;
  move_damage_class_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Stat_Stddev_Fields = {
  __typename?: 'pokemon_v2_stat_stddev_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Stat_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_stat_stddev_pop_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Stat_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_stat_stddev_samp_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_stat" */
export type Pokemon_V2_Stat_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Stat_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Stat_Stream_Cursor_Value_Input = {
  game_index?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_battle_only?: InputMaybe<Scalars['Boolean']['input']>;
  move_damage_class_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Stat_Sum_Fields = {
  __typename?: 'pokemon_v2_stat_sum_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_stat" */
export enum Pokemon_V2_Stat_Update_Column {
  /** column name */
  GameIndex = 'game_index',
  /** column name */
  Id = 'id',
  /** column name */
  IsBattleOnly = 'is_battle_only',
  /** column name */
  MoveDamageClassId = 'move_damage_class_id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Stat_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Stat_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Stat_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Stat_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Stat_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_stat_var_pop_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Stat_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_stat_var_samp_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Stat_Variance_Fields = {
  __typename?: 'pokemon_v2_stat_variance_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_statname" */
export type Pokemon_V2_Statname = {
  __typename?: 'pokemon_v2_statname';
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
  stat_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_statname" */
export type Pokemon_V2_Statname_Aggregate = {
  __typename?: 'pokemon_v2_statname_aggregate';
  aggregate?: Maybe<Pokemon_V2_Statname_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Statname>;
};

/** aggregate fields of "pokemon_v2_statname" */
export type Pokemon_V2_Statname_Aggregate_Fields = {
  __typename?: 'pokemon_v2_statname_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Statname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Statname_Max_Fields>;
  min?: Maybe<Pokemon_V2_Statname_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Statname_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Statname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Statname_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Statname_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Statname_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Statname_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Statname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_statname" */
export type Pokemon_V2_Statname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Statname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Statname_Avg_Fields = {
  __typename?: 'pokemon_v2_statname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_statname". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Statname_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Statname_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Statname_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Statname_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  stat_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_statname" */
export enum Pokemon_V2_Statname_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2StatnamePkey = 'pokemon_v2_statname_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_statname" */
export type Pokemon_V2_Statname_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  stat_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_statname" */
export type Pokemon_V2_Statname_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  stat_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Statname_Max_Fields = {
  __typename?: 'pokemon_v2_statname_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  stat_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Statname_Min_Fields = {
  __typename?: 'pokemon_v2_statname_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  stat_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_statname" */
export type Pokemon_V2_Statname_Mutation_Response = {
  __typename?: 'pokemon_v2_statname_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Statname>;
};

/** on_conflict condition type for table "pokemon_v2_statname" */
export type Pokemon_V2_Statname_On_Conflict = {
  constraint: Pokemon_V2_Statname_Constraint;
  update_columns?: Array<Pokemon_V2_Statname_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Statname_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_statname". */
export type Pokemon_V2_Statname_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_statname */
export type Pokemon_V2_Statname_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_statname" */
export enum Pokemon_V2_Statname_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  StatId = 'stat_id'
}

/** input type for updating data in table "pokemon_v2_statname" */
export type Pokemon_V2_Statname_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  stat_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Statname_Stddev_Fields = {
  __typename?: 'pokemon_v2_statname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Statname_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_statname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Statname_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_statname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_statname" */
export type Pokemon_V2_Statname_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Statname_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Statname_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  stat_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Statname_Sum_Fields = {
  __typename?: 'pokemon_v2_statname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  stat_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_statname" */
export enum Pokemon_V2_Statname_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  StatId = 'stat_id'
}

export type Pokemon_V2_Statname_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Statname_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Statname_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Statname_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Statname_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_statname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Statname_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_statname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Statname_Variance_Fields = {
  __typename?: 'pokemon_v2_statname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_supercontestcombo" */
export type Pokemon_V2_Supercontestcombo = {
  __typename?: 'pokemon_v2_supercontestcombo';
  first_move_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  second_move_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_supercontestcombo" */
export type Pokemon_V2_Supercontestcombo_Aggregate = {
  __typename?: 'pokemon_v2_supercontestcombo_aggregate';
  aggregate?: Maybe<Pokemon_V2_Supercontestcombo_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Supercontestcombo>;
};

/** aggregate fields of "pokemon_v2_supercontestcombo" */
export type Pokemon_V2_Supercontestcombo_Aggregate_Fields = {
  __typename?: 'pokemon_v2_supercontestcombo_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Supercontestcombo_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Supercontestcombo_Max_Fields>;
  min?: Maybe<Pokemon_V2_Supercontestcombo_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Supercontestcombo_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Supercontestcombo_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Supercontestcombo_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Supercontestcombo_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Supercontestcombo_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Supercontestcombo_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Supercontestcombo_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_supercontestcombo" */
export type Pokemon_V2_Supercontestcombo_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Supercontestcombo_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Supercontestcombo_Avg_Fields = {
  __typename?: 'pokemon_v2_supercontestcombo_avg_fields';
  first_move_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  second_move_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_supercontestcombo". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Supercontestcombo_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Supercontestcombo_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Supercontestcombo_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Supercontestcombo_Bool_Exp>>;
  first_move_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  second_move_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_supercontestcombo" */
export enum Pokemon_V2_Supercontestcombo_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2SupercontestcomboPkey = 'pokemon_v2_supercontestcombo_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_supercontestcombo" */
export type Pokemon_V2_Supercontestcombo_Inc_Input = {
  first_move_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  second_move_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_supercontestcombo" */
export type Pokemon_V2_Supercontestcombo_Insert_Input = {
  first_move_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  second_move_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Supercontestcombo_Max_Fields = {
  __typename?: 'pokemon_v2_supercontestcombo_max_fields';
  first_move_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  second_move_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Supercontestcombo_Min_Fields = {
  __typename?: 'pokemon_v2_supercontestcombo_min_fields';
  first_move_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  second_move_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_supercontestcombo" */
export type Pokemon_V2_Supercontestcombo_Mutation_Response = {
  __typename?: 'pokemon_v2_supercontestcombo_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Supercontestcombo>;
};

/** on_conflict condition type for table "pokemon_v2_supercontestcombo" */
export type Pokemon_V2_Supercontestcombo_On_Conflict = {
  constraint: Pokemon_V2_Supercontestcombo_Constraint;
  update_columns?: Array<Pokemon_V2_Supercontestcombo_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Supercontestcombo_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_supercontestcombo". */
export type Pokemon_V2_Supercontestcombo_Order_By = {
  first_move_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  second_move_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_supercontestcombo */
export type Pokemon_V2_Supercontestcombo_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_supercontestcombo" */
export enum Pokemon_V2_Supercontestcombo_Select_Column {
  /** column name */
  FirstMoveId = 'first_move_id',
  /** column name */
  Id = 'id',
  /** column name */
  SecondMoveId = 'second_move_id'
}

/** input type for updating data in table "pokemon_v2_supercontestcombo" */
export type Pokemon_V2_Supercontestcombo_Set_Input = {
  first_move_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  second_move_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Supercontestcombo_Stddev_Fields = {
  __typename?: 'pokemon_v2_supercontestcombo_stddev_fields';
  first_move_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  second_move_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Supercontestcombo_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_supercontestcombo_stddev_pop_fields';
  first_move_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  second_move_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Supercontestcombo_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_supercontestcombo_stddev_samp_fields';
  first_move_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  second_move_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_supercontestcombo" */
export type Pokemon_V2_Supercontestcombo_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Supercontestcombo_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Supercontestcombo_Stream_Cursor_Value_Input = {
  first_move_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  second_move_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Supercontestcombo_Sum_Fields = {
  __typename?: 'pokemon_v2_supercontestcombo_sum_fields';
  first_move_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  second_move_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_supercontestcombo" */
export enum Pokemon_V2_Supercontestcombo_Update_Column {
  /** column name */
  FirstMoveId = 'first_move_id',
  /** column name */
  Id = 'id',
  /** column name */
  SecondMoveId = 'second_move_id'
}

export type Pokemon_V2_Supercontestcombo_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Supercontestcombo_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Supercontestcombo_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Supercontestcombo_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Supercontestcombo_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_supercontestcombo_var_pop_fields';
  first_move_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  second_move_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Supercontestcombo_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_supercontestcombo_var_samp_fields';
  first_move_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  second_move_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Supercontestcombo_Variance_Fields = {
  __typename?: 'pokemon_v2_supercontestcombo_variance_fields';
  first_move_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  second_move_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_supercontesteffect" */
export type Pokemon_V2_Supercontesteffect = {
  __typename?: 'pokemon_v2_supercontesteffect';
  appeal: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
};

/** aggregated selection of "pokemon_v2_supercontesteffect" */
export type Pokemon_V2_Supercontesteffect_Aggregate = {
  __typename?: 'pokemon_v2_supercontesteffect_aggregate';
  aggregate?: Maybe<Pokemon_V2_Supercontesteffect_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Supercontesteffect>;
};

/** aggregate fields of "pokemon_v2_supercontesteffect" */
export type Pokemon_V2_Supercontesteffect_Aggregate_Fields = {
  __typename?: 'pokemon_v2_supercontesteffect_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Supercontesteffect_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Supercontesteffect_Max_Fields>;
  min?: Maybe<Pokemon_V2_Supercontesteffect_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Supercontesteffect_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Supercontesteffect_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Supercontesteffect_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Supercontesteffect_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Supercontesteffect_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Supercontesteffect_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Supercontesteffect_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_supercontesteffect" */
export type Pokemon_V2_Supercontesteffect_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Supercontesteffect_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Supercontesteffect_Avg_Fields = {
  __typename?: 'pokemon_v2_supercontesteffect_avg_fields';
  appeal?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_supercontesteffect". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Supercontesteffect_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Supercontesteffect_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Supercontesteffect_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Supercontesteffect_Bool_Exp>>;
  appeal?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_supercontesteffect" */
export enum Pokemon_V2_Supercontesteffect_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2SupercontesteffectPkey = 'pokemon_v2_supercontesteffect_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_supercontesteffect" */
export type Pokemon_V2_Supercontesteffect_Inc_Input = {
  appeal?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_supercontesteffect" */
export type Pokemon_V2_Supercontesteffect_Insert_Input = {
  appeal?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Supercontesteffect_Max_Fields = {
  __typename?: 'pokemon_v2_supercontesteffect_max_fields';
  appeal?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Supercontesteffect_Min_Fields = {
  __typename?: 'pokemon_v2_supercontesteffect_min_fields';
  appeal?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_supercontesteffect" */
export type Pokemon_V2_Supercontesteffect_Mutation_Response = {
  __typename?: 'pokemon_v2_supercontesteffect_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Supercontesteffect>;
};

/** on_conflict condition type for table "pokemon_v2_supercontesteffect" */
export type Pokemon_V2_Supercontesteffect_On_Conflict = {
  constraint: Pokemon_V2_Supercontesteffect_Constraint;
  update_columns?: Array<Pokemon_V2_Supercontesteffect_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Supercontesteffect_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_supercontesteffect". */
export type Pokemon_V2_Supercontesteffect_Order_By = {
  appeal?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_supercontesteffect */
export type Pokemon_V2_Supercontesteffect_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_supercontesteffect" */
export enum Pokemon_V2_Supercontesteffect_Select_Column {
  /** column name */
  Appeal = 'appeal',
  /** column name */
  Id = 'id'
}

/** input type for updating data in table "pokemon_v2_supercontesteffect" */
export type Pokemon_V2_Supercontesteffect_Set_Input = {
  appeal?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Supercontesteffect_Stddev_Fields = {
  __typename?: 'pokemon_v2_supercontesteffect_stddev_fields';
  appeal?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Supercontesteffect_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_supercontesteffect_stddev_pop_fields';
  appeal?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Supercontesteffect_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_supercontesteffect_stddev_samp_fields';
  appeal?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_supercontesteffect" */
export type Pokemon_V2_Supercontesteffect_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Supercontesteffect_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Supercontesteffect_Stream_Cursor_Value_Input = {
  appeal?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Supercontesteffect_Sum_Fields = {
  __typename?: 'pokemon_v2_supercontesteffect_sum_fields';
  appeal?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_supercontesteffect" */
export enum Pokemon_V2_Supercontesteffect_Update_Column {
  /** column name */
  Appeal = 'appeal',
  /** column name */
  Id = 'id'
}

export type Pokemon_V2_Supercontesteffect_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Supercontesteffect_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Supercontesteffect_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Supercontesteffect_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Supercontesteffect_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_supercontesteffect_var_pop_fields';
  appeal?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Supercontesteffect_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_supercontesteffect_var_samp_fields';
  appeal?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Supercontesteffect_Variance_Fields = {
  __typename?: 'pokemon_v2_supercontesteffect_variance_fields';
  appeal?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_supercontesteffectflavortext" */
export type Pokemon_V2_Supercontesteffectflavortext = {
  __typename?: 'pokemon_v2_supercontesteffectflavortext';
  flavor_text: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_supercontesteffectflavortext" */
export type Pokemon_V2_Supercontesteffectflavortext_Aggregate = {
  __typename?: 'pokemon_v2_supercontesteffectflavortext_aggregate';
  aggregate?: Maybe<Pokemon_V2_Supercontesteffectflavortext_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Supercontesteffectflavortext>;
};

/** aggregate fields of "pokemon_v2_supercontesteffectflavortext" */
export type Pokemon_V2_Supercontesteffectflavortext_Aggregate_Fields = {
  __typename?: 'pokemon_v2_supercontesteffectflavortext_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Supercontesteffectflavortext_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Supercontesteffectflavortext_Max_Fields>;
  min?: Maybe<Pokemon_V2_Supercontesteffectflavortext_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Supercontesteffectflavortext_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Supercontesteffectflavortext_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Supercontesteffectflavortext_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Supercontesteffectflavortext_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Supercontesteffectflavortext_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Supercontesteffectflavortext_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Supercontesteffectflavortext_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_supercontesteffectflavortext" */
export type Pokemon_V2_Supercontesteffectflavortext_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Supercontesteffectflavortext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Supercontesteffectflavortext_Avg_Fields = {
  __typename?: 'pokemon_v2_supercontesteffectflavortext_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_supercontesteffectflavortext". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Supercontesteffectflavortext_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Supercontesteffectflavortext_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Supercontesteffectflavortext_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Supercontesteffectflavortext_Bool_Exp>>;
  flavor_text?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  super_contest_effect_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_supercontesteffectflavortext" */
export enum Pokemon_V2_Supercontesteffectflavortext_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2SupercontesteffectflavortextPkey = 'pokemon_v2_supercontesteffectflavortext_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_supercontesteffectflavortext" */
export type Pokemon_V2_Supercontesteffectflavortext_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  super_contest_effect_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_supercontesteffectflavortext" */
export type Pokemon_V2_Supercontesteffectflavortext_Insert_Input = {
  flavor_text?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  super_contest_effect_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Supercontesteffectflavortext_Max_Fields = {
  __typename?: 'pokemon_v2_supercontesteffectflavortext_max_fields';
  flavor_text?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Supercontesteffectflavortext_Min_Fields = {
  __typename?: 'pokemon_v2_supercontesteffectflavortext_min_fields';
  flavor_text?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_supercontesteffectflavortext" */
export type Pokemon_V2_Supercontesteffectflavortext_Mutation_Response = {
  __typename?: 'pokemon_v2_supercontesteffectflavortext_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Supercontesteffectflavortext>;
};

/** on_conflict condition type for table "pokemon_v2_supercontesteffectflavortext" */
export type Pokemon_V2_Supercontesteffectflavortext_On_Conflict = {
  constraint: Pokemon_V2_Supercontesteffectflavortext_Constraint;
  update_columns?: Array<Pokemon_V2_Supercontesteffectflavortext_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Supercontesteffectflavortext_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_supercontesteffectflavortext". */
export type Pokemon_V2_Supercontesteffectflavortext_Order_By = {
  flavor_text?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  super_contest_effect_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_supercontesteffectflavortext */
export type Pokemon_V2_Supercontesteffectflavortext_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_supercontesteffectflavortext" */
export enum Pokemon_V2_Supercontesteffectflavortext_Select_Column {
  /** column name */
  FlavorText = 'flavor_text',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  SuperContestEffectId = 'super_contest_effect_id'
}

/** input type for updating data in table "pokemon_v2_supercontesteffectflavortext" */
export type Pokemon_V2_Supercontesteffectflavortext_Set_Input = {
  flavor_text?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  super_contest_effect_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Supercontesteffectflavortext_Stddev_Fields = {
  __typename?: 'pokemon_v2_supercontesteffectflavortext_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Supercontesteffectflavortext_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_supercontesteffectflavortext_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Supercontesteffectflavortext_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_supercontesteffectflavortext_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_supercontesteffectflavortext" */
export type Pokemon_V2_Supercontesteffectflavortext_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Supercontesteffectflavortext_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Supercontesteffectflavortext_Stream_Cursor_Value_Input = {
  flavor_text?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  super_contest_effect_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Supercontesteffectflavortext_Sum_Fields = {
  __typename?: 'pokemon_v2_supercontesteffectflavortext_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_supercontesteffectflavortext" */
export enum Pokemon_V2_Supercontesteffectflavortext_Update_Column {
  /** column name */
  FlavorText = 'flavor_text',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  SuperContestEffectId = 'super_contest_effect_id'
}

export type Pokemon_V2_Supercontesteffectflavortext_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Supercontesteffectflavortext_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Supercontesteffectflavortext_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Supercontesteffectflavortext_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Supercontesteffectflavortext_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_supercontesteffectflavortext_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Supercontesteffectflavortext_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_supercontesteffectflavortext_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Supercontesteffectflavortext_Variance_Fields = {
  __typename?: 'pokemon_v2_supercontesteffectflavortext_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_type" */
export type Pokemon_V2_Type = {
  __typename?: 'pokemon_v2_type';
  generation_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_type" */
export type Pokemon_V2_Type_Aggregate = {
  __typename?: 'pokemon_v2_type_aggregate';
  aggregate?: Maybe<Pokemon_V2_Type_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Type>;
};

/** aggregate fields of "pokemon_v2_type" */
export type Pokemon_V2_Type_Aggregate_Fields = {
  __typename?: 'pokemon_v2_type_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Type_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Type_Max_Fields>;
  min?: Maybe<Pokemon_V2_Type_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Type_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Type_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Type_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Type_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Type_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Type_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Type_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_type" */
export type Pokemon_V2_Type_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Type_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Type_Avg_Fields = {
  __typename?: 'pokemon_v2_type_avg_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_type". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Type_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Type_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Type_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Type_Bool_Exp>>;
  generation_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  move_damage_class_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_type" */
export enum Pokemon_V2_Type_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2TypePkey = 'pokemon_v2_type_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_type" */
export type Pokemon_V2_Type_Inc_Input = {
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  move_damage_class_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_type" */
export type Pokemon_V2_Type_Insert_Input = {
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  move_damage_class_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Type_Max_Fields = {
  __typename?: 'pokemon_v2_type_max_fields';
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Type_Min_Fields = {
  __typename?: 'pokemon_v2_type_min_fields';
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "pokemon_v2_type" */
export type Pokemon_V2_Type_Mutation_Response = {
  __typename?: 'pokemon_v2_type_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Type>;
};

/** on_conflict condition type for table "pokemon_v2_type" */
export type Pokemon_V2_Type_On_Conflict = {
  constraint: Pokemon_V2_Type_Constraint;
  update_columns?: Array<Pokemon_V2_Type_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Type_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_type". */
export type Pokemon_V2_Type_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_type */
export type Pokemon_V2_Type_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_type" */
export enum Pokemon_V2_Type_Select_Column {
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  Id = 'id',
  /** column name */
  MoveDamageClassId = 'move_damage_class_id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "pokemon_v2_type" */
export type Pokemon_V2_Type_Set_Input = {
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  move_damage_class_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Type_Stddev_Fields = {
  __typename?: 'pokemon_v2_type_stddev_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Type_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_type_stddev_pop_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Type_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_type_stddev_samp_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_type" */
export type Pokemon_V2_Type_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Type_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Type_Stream_Cursor_Value_Input = {
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  move_damage_class_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Type_Sum_Fields = {
  __typename?: 'pokemon_v2_type_sum_fields';
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_type" */
export enum Pokemon_V2_Type_Update_Column {
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  Id = 'id',
  /** column name */
  MoveDamageClassId = 'move_damage_class_id',
  /** column name */
  Name = 'name'
}

export type Pokemon_V2_Type_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Type_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Type_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Type_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Type_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_type_var_pop_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Type_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_type_var_samp_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Type_Variance_Fields = {
  __typename?: 'pokemon_v2_type_variance_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_typeefficacy" */
export type Pokemon_V2_Typeefficacy = {
  __typename?: 'pokemon_v2_typeefficacy';
  damage_factor: Scalars['Int']['output'];
  damage_type_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  target_type_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_typeefficacy" */
export type Pokemon_V2_Typeefficacy_Aggregate = {
  __typename?: 'pokemon_v2_typeefficacy_aggregate';
  aggregate?: Maybe<Pokemon_V2_Typeefficacy_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Typeefficacy>;
};

/** aggregate fields of "pokemon_v2_typeefficacy" */
export type Pokemon_V2_Typeefficacy_Aggregate_Fields = {
  __typename?: 'pokemon_v2_typeefficacy_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Typeefficacy_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Typeefficacy_Max_Fields>;
  min?: Maybe<Pokemon_V2_Typeefficacy_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Typeefficacy_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Typeefficacy_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Typeefficacy_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Typeefficacy_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Typeefficacy_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Typeefficacy_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Typeefficacy_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_typeefficacy" */
export type Pokemon_V2_Typeefficacy_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Typeefficacy_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Typeefficacy_Avg_Fields = {
  __typename?: 'pokemon_v2_typeefficacy_avg_fields';
  damage_factor?: Maybe<Scalars['Float']['output']>;
  damage_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  target_type_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_typeefficacy". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Typeefficacy_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Typeefficacy_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Typeefficacy_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Typeefficacy_Bool_Exp>>;
  damage_factor?: InputMaybe<Int_Comparison_Exp>;
  damage_type_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  target_type_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_typeefficacy" */
export enum Pokemon_V2_Typeefficacy_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2TypeefficacyPkey = 'pokemon_v2_typeefficacy_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_typeefficacy" */
export type Pokemon_V2_Typeefficacy_Inc_Input = {
  damage_factor?: InputMaybe<Scalars['Int']['input']>;
  damage_type_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  target_type_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_typeefficacy" */
export type Pokemon_V2_Typeefficacy_Insert_Input = {
  damage_factor?: InputMaybe<Scalars['Int']['input']>;
  damage_type_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  target_type_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Typeefficacy_Max_Fields = {
  __typename?: 'pokemon_v2_typeefficacy_max_fields';
  damage_factor?: Maybe<Scalars['Int']['output']>;
  damage_type_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  target_type_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Typeefficacy_Min_Fields = {
  __typename?: 'pokemon_v2_typeefficacy_min_fields';
  damage_factor?: Maybe<Scalars['Int']['output']>;
  damage_type_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  target_type_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_typeefficacy" */
export type Pokemon_V2_Typeefficacy_Mutation_Response = {
  __typename?: 'pokemon_v2_typeefficacy_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Typeefficacy>;
};

/** on_conflict condition type for table "pokemon_v2_typeefficacy" */
export type Pokemon_V2_Typeefficacy_On_Conflict = {
  constraint: Pokemon_V2_Typeefficacy_Constraint;
  update_columns?: Array<Pokemon_V2_Typeefficacy_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Typeefficacy_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_typeefficacy". */
export type Pokemon_V2_Typeefficacy_Order_By = {
  damage_factor?: InputMaybe<Order_By>;
  damage_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  target_type_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_typeefficacy */
export type Pokemon_V2_Typeefficacy_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_typeefficacy" */
export enum Pokemon_V2_Typeefficacy_Select_Column {
  /** column name */
  DamageFactor = 'damage_factor',
  /** column name */
  DamageTypeId = 'damage_type_id',
  /** column name */
  Id = 'id',
  /** column name */
  TargetTypeId = 'target_type_id'
}

/** input type for updating data in table "pokemon_v2_typeefficacy" */
export type Pokemon_V2_Typeefficacy_Set_Input = {
  damage_factor?: InputMaybe<Scalars['Int']['input']>;
  damage_type_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  target_type_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Typeefficacy_Stddev_Fields = {
  __typename?: 'pokemon_v2_typeefficacy_stddev_fields';
  damage_factor?: Maybe<Scalars['Float']['output']>;
  damage_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  target_type_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Typeefficacy_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_typeefficacy_stddev_pop_fields';
  damage_factor?: Maybe<Scalars['Float']['output']>;
  damage_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  target_type_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Typeefficacy_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_typeefficacy_stddev_samp_fields';
  damage_factor?: Maybe<Scalars['Float']['output']>;
  damage_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  target_type_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_typeefficacy" */
export type Pokemon_V2_Typeefficacy_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Typeefficacy_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Typeefficacy_Stream_Cursor_Value_Input = {
  damage_factor?: InputMaybe<Scalars['Int']['input']>;
  damage_type_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  target_type_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Typeefficacy_Sum_Fields = {
  __typename?: 'pokemon_v2_typeefficacy_sum_fields';
  damage_factor?: Maybe<Scalars['Int']['output']>;
  damage_type_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  target_type_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_typeefficacy" */
export enum Pokemon_V2_Typeefficacy_Update_Column {
  /** column name */
  DamageFactor = 'damage_factor',
  /** column name */
  DamageTypeId = 'damage_type_id',
  /** column name */
  Id = 'id',
  /** column name */
  TargetTypeId = 'target_type_id'
}

export type Pokemon_V2_Typeefficacy_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Typeefficacy_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Typeefficacy_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Typeefficacy_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Typeefficacy_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_typeefficacy_var_pop_fields';
  damage_factor?: Maybe<Scalars['Float']['output']>;
  damage_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  target_type_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Typeefficacy_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_typeefficacy_var_samp_fields';
  damage_factor?: Maybe<Scalars['Float']['output']>;
  damage_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  target_type_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Typeefficacy_Variance_Fields = {
  __typename?: 'pokemon_v2_typeefficacy_variance_fields';
  damage_factor?: Maybe<Scalars['Float']['output']>;
  damage_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  target_type_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_typeefficacypast" */
export type Pokemon_V2_Typeefficacypast = {
  __typename?: 'pokemon_v2_typeefficacypast';
  damage_factor: Scalars['Int']['output'];
  damage_type_id?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  target_type_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_typeefficacypast" */
export type Pokemon_V2_Typeefficacypast_Aggregate = {
  __typename?: 'pokemon_v2_typeefficacypast_aggregate';
  aggregate?: Maybe<Pokemon_V2_Typeefficacypast_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Typeefficacypast>;
};

/** aggregate fields of "pokemon_v2_typeefficacypast" */
export type Pokemon_V2_Typeefficacypast_Aggregate_Fields = {
  __typename?: 'pokemon_v2_typeefficacypast_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Typeefficacypast_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Typeefficacypast_Max_Fields>;
  min?: Maybe<Pokemon_V2_Typeefficacypast_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Typeefficacypast_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Typeefficacypast_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Typeefficacypast_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Typeefficacypast_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Typeefficacypast_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Typeefficacypast_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Typeefficacypast_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_typeefficacypast" */
export type Pokemon_V2_Typeefficacypast_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Typeefficacypast_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Typeefficacypast_Avg_Fields = {
  __typename?: 'pokemon_v2_typeefficacypast_avg_fields';
  damage_factor?: Maybe<Scalars['Float']['output']>;
  damage_type_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  target_type_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_typeefficacypast". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Typeefficacypast_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Typeefficacypast_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Typeefficacypast_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Typeefficacypast_Bool_Exp>>;
  damage_factor?: InputMaybe<Int_Comparison_Exp>;
  damage_type_id?: InputMaybe<Int_Comparison_Exp>;
  generation_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  target_type_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_typeefficacypast" */
export enum Pokemon_V2_Typeefficacypast_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2TypeefficacypastPkey = 'pokemon_v2_typeefficacypast_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_typeefficacypast" */
export type Pokemon_V2_Typeefficacypast_Inc_Input = {
  damage_factor?: InputMaybe<Scalars['Int']['input']>;
  damage_type_id?: InputMaybe<Scalars['Int']['input']>;
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  target_type_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_typeefficacypast" */
export type Pokemon_V2_Typeefficacypast_Insert_Input = {
  damage_factor?: InputMaybe<Scalars['Int']['input']>;
  damage_type_id?: InputMaybe<Scalars['Int']['input']>;
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  target_type_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Typeefficacypast_Max_Fields = {
  __typename?: 'pokemon_v2_typeefficacypast_max_fields';
  damage_factor?: Maybe<Scalars['Int']['output']>;
  damage_type_id?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  target_type_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Typeefficacypast_Min_Fields = {
  __typename?: 'pokemon_v2_typeefficacypast_min_fields';
  damage_factor?: Maybe<Scalars['Int']['output']>;
  damage_type_id?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  target_type_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_typeefficacypast" */
export type Pokemon_V2_Typeefficacypast_Mutation_Response = {
  __typename?: 'pokemon_v2_typeefficacypast_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Typeefficacypast>;
};

/** on_conflict condition type for table "pokemon_v2_typeefficacypast" */
export type Pokemon_V2_Typeefficacypast_On_Conflict = {
  constraint: Pokemon_V2_Typeefficacypast_Constraint;
  update_columns?: Array<Pokemon_V2_Typeefficacypast_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Typeefficacypast_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_typeefficacypast". */
export type Pokemon_V2_Typeefficacypast_Order_By = {
  damage_factor?: InputMaybe<Order_By>;
  damage_type_id?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  target_type_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_typeefficacypast */
export type Pokemon_V2_Typeefficacypast_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_typeefficacypast" */
export enum Pokemon_V2_Typeefficacypast_Select_Column {
  /** column name */
  DamageFactor = 'damage_factor',
  /** column name */
  DamageTypeId = 'damage_type_id',
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  Id = 'id',
  /** column name */
  TargetTypeId = 'target_type_id'
}

/** input type for updating data in table "pokemon_v2_typeefficacypast" */
export type Pokemon_V2_Typeefficacypast_Set_Input = {
  damage_factor?: InputMaybe<Scalars['Int']['input']>;
  damage_type_id?: InputMaybe<Scalars['Int']['input']>;
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  target_type_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Typeefficacypast_Stddev_Fields = {
  __typename?: 'pokemon_v2_typeefficacypast_stddev_fields';
  damage_factor?: Maybe<Scalars['Float']['output']>;
  damage_type_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  target_type_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Typeefficacypast_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_typeefficacypast_stddev_pop_fields';
  damage_factor?: Maybe<Scalars['Float']['output']>;
  damage_type_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  target_type_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Typeefficacypast_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_typeefficacypast_stddev_samp_fields';
  damage_factor?: Maybe<Scalars['Float']['output']>;
  damage_type_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  target_type_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_typeefficacypast" */
export type Pokemon_V2_Typeefficacypast_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Typeefficacypast_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Typeefficacypast_Stream_Cursor_Value_Input = {
  damage_factor?: InputMaybe<Scalars['Int']['input']>;
  damage_type_id?: InputMaybe<Scalars['Int']['input']>;
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  target_type_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Typeefficacypast_Sum_Fields = {
  __typename?: 'pokemon_v2_typeefficacypast_sum_fields';
  damage_factor?: Maybe<Scalars['Int']['output']>;
  damage_type_id?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  target_type_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_typeefficacypast" */
export enum Pokemon_V2_Typeefficacypast_Update_Column {
  /** column name */
  DamageFactor = 'damage_factor',
  /** column name */
  DamageTypeId = 'damage_type_id',
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  Id = 'id',
  /** column name */
  TargetTypeId = 'target_type_id'
}

export type Pokemon_V2_Typeefficacypast_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Typeefficacypast_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Typeefficacypast_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Typeefficacypast_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Typeefficacypast_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_typeefficacypast_var_pop_fields';
  damage_factor?: Maybe<Scalars['Float']['output']>;
  damage_type_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  target_type_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Typeefficacypast_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_typeefficacypast_var_samp_fields';
  damage_factor?: Maybe<Scalars['Float']['output']>;
  damage_type_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  target_type_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Typeefficacypast_Variance_Fields = {
  __typename?: 'pokemon_v2_typeefficacypast_variance_fields';
  damage_factor?: Maybe<Scalars['Float']['output']>;
  damage_type_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  target_type_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_typegameindex" */
export type Pokemon_V2_Typegameindex = {
  __typename?: 'pokemon_v2_typegameindex';
  game_index: Scalars['Int']['output'];
  generation_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_typegameindex" */
export type Pokemon_V2_Typegameindex_Aggregate = {
  __typename?: 'pokemon_v2_typegameindex_aggregate';
  aggregate?: Maybe<Pokemon_V2_Typegameindex_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Typegameindex>;
};

/** aggregate fields of "pokemon_v2_typegameindex" */
export type Pokemon_V2_Typegameindex_Aggregate_Fields = {
  __typename?: 'pokemon_v2_typegameindex_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Typegameindex_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Typegameindex_Max_Fields>;
  min?: Maybe<Pokemon_V2_Typegameindex_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Typegameindex_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Typegameindex_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Typegameindex_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Typegameindex_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Typegameindex_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Typegameindex_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Typegameindex_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_typegameindex" */
export type Pokemon_V2_Typegameindex_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Typegameindex_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Typegameindex_Avg_Fields = {
  __typename?: 'pokemon_v2_typegameindex_avg_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_typegameindex". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Typegameindex_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Typegameindex_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Typegameindex_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Typegameindex_Bool_Exp>>;
  game_index?: InputMaybe<Int_Comparison_Exp>;
  generation_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  type_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_typegameindex" */
export enum Pokemon_V2_Typegameindex_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2TypegameindexPkey = 'pokemon_v2_typegameindex_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_typegameindex" */
export type Pokemon_V2_Typegameindex_Inc_Input = {
  game_index?: InputMaybe<Scalars['Int']['input']>;
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  type_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_typegameindex" */
export type Pokemon_V2_Typegameindex_Insert_Input = {
  game_index?: InputMaybe<Scalars['Int']['input']>;
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  type_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Typegameindex_Max_Fields = {
  __typename?: 'pokemon_v2_typegameindex_max_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Typegameindex_Min_Fields = {
  __typename?: 'pokemon_v2_typegameindex_min_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_typegameindex" */
export type Pokemon_V2_Typegameindex_Mutation_Response = {
  __typename?: 'pokemon_v2_typegameindex_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Typegameindex>;
};

/** on_conflict condition type for table "pokemon_v2_typegameindex" */
export type Pokemon_V2_Typegameindex_On_Conflict = {
  constraint: Pokemon_V2_Typegameindex_Constraint;
  update_columns?: Array<Pokemon_V2_Typegameindex_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Typegameindex_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_typegameindex". */
export type Pokemon_V2_Typegameindex_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_typegameindex */
export type Pokemon_V2_Typegameindex_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_typegameindex" */
export enum Pokemon_V2_Typegameindex_Select_Column {
  /** column name */
  GameIndex = 'game_index',
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  Id = 'id',
  /** column name */
  TypeId = 'type_id'
}

/** input type for updating data in table "pokemon_v2_typegameindex" */
export type Pokemon_V2_Typegameindex_Set_Input = {
  game_index?: InputMaybe<Scalars['Int']['input']>;
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  type_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Typegameindex_Stddev_Fields = {
  __typename?: 'pokemon_v2_typegameindex_stddev_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Typegameindex_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_typegameindex_stddev_pop_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Typegameindex_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_typegameindex_stddev_samp_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_typegameindex" */
export type Pokemon_V2_Typegameindex_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Typegameindex_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Typegameindex_Stream_Cursor_Value_Input = {
  game_index?: InputMaybe<Scalars['Int']['input']>;
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  type_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Typegameindex_Sum_Fields = {
  __typename?: 'pokemon_v2_typegameindex_sum_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_typegameindex" */
export enum Pokemon_V2_Typegameindex_Update_Column {
  /** column name */
  GameIndex = 'game_index',
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  Id = 'id',
  /** column name */
  TypeId = 'type_id'
}

export type Pokemon_V2_Typegameindex_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Typegameindex_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Typegameindex_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Typegameindex_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Typegameindex_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_typegameindex_var_pop_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Typegameindex_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_typegameindex_var_samp_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Typegameindex_Variance_Fields = {
  __typename?: 'pokemon_v2_typegameindex_variance_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_typename" */
export type Pokemon_V2_Typename = {
  __typename?: 'pokemon_v2_typename';
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_typename" */
export type Pokemon_V2_Typename_Aggregate = {
  __typename?: 'pokemon_v2_typename_aggregate';
  aggregate?: Maybe<Pokemon_V2_Typename_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Typename>;
};

/** aggregate fields of "pokemon_v2_typename" */
export type Pokemon_V2_Typename_Aggregate_Fields = {
  __typename?: 'pokemon_v2_typename_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Typename_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Typename_Max_Fields>;
  min?: Maybe<Pokemon_V2_Typename_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Typename_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Typename_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Typename_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Typename_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Typename_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Typename_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Typename_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_typename" */
export type Pokemon_V2_Typename_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Typename_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Typename_Avg_Fields = {
  __typename?: 'pokemon_v2_typename_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_typename". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Typename_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Typename_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Typename_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Typename_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  type_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_typename" */
export enum Pokemon_V2_Typename_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2TypenamePkey = 'pokemon_v2_typename_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_typename" */
export type Pokemon_V2_Typename_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  type_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_typename" */
export type Pokemon_V2_Typename_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  type_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Typename_Max_Fields = {
  __typename?: 'pokemon_v2_typename_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Typename_Min_Fields = {
  __typename?: 'pokemon_v2_typename_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_typename" */
export type Pokemon_V2_Typename_Mutation_Response = {
  __typename?: 'pokemon_v2_typename_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Typename>;
};

/** on_conflict condition type for table "pokemon_v2_typename" */
export type Pokemon_V2_Typename_On_Conflict = {
  constraint: Pokemon_V2_Typename_Constraint;
  update_columns?: Array<Pokemon_V2_Typename_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Typename_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_typename". */
export type Pokemon_V2_Typename_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_typename */
export type Pokemon_V2_Typename_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_typename" */
export enum Pokemon_V2_Typename_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  TypeId = 'type_id'
}

/** input type for updating data in table "pokemon_v2_typename" */
export type Pokemon_V2_Typename_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  type_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Typename_Stddev_Fields = {
  __typename?: 'pokemon_v2_typename_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Typename_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_typename_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Typename_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_typename_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_typename" */
export type Pokemon_V2_Typename_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Typename_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Typename_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  type_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Typename_Sum_Fields = {
  __typename?: 'pokemon_v2_typename_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_typename" */
export enum Pokemon_V2_Typename_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  TypeId = 'type_id'
}

export type Pokemon_V2_Typename_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Typename_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Typename_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Typename_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Typename_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_typename_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Typename_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_typename_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Typename_Variance_Fields = {
  __typename?: 'pokemon_v2_typename_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_version" */
export type Pokemon_V2_Version = {
  __typename?: 'pokemon_v2_version';
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_version" */
export type Pokemon_V2_Version_Aggregate = {
  __typename?: 'pokemon_v2_version_aggregate';
  aggregate?: Maybe<Pokemon_V2_Version_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Version>;
};

/** aggregate fields of "pokemon_v2_version" */
export type Pokemon_V2_Version_Aggregate_Fields = {
  __typename?: 'pokemon_v2_version_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Version_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Version_Max_Fields>;
  min?: Maybe<Pokemon_V2_Version_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Version_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Version_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Version_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Version_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Version_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Version_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Version_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_version" */
export type Pokemon_V2_Version_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Version_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Version_Avg_Fields = {
  __typename?: 'pokemon_v2_version_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_version". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Version_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Version_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Version_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Version_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  version_group_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_version" */
export enum Pokemon_V2_Version_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2VersionPkey = 'pokemon_v2_version_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_version" */
export type Pokemon_V2_Version_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_version" */
export type Pokemon_V2_Version_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Version_Max_Fields = {
  __typename?: 'pokemon_v2_version_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Version_Min_Fields = {
  __typename?: 'pokemon_v2_version_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_version" */
export type Pokemon_V2_Version_Mutation_Response = {
  __typename?: 'pokemon_v2_version_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Version>;
};

/** on_conflict condition type for table "pokemon_v2_version" */
export type Pokemon_V2_Version_On_Conflict = {
  constraint: Pokemon_V2_Version_Constraint;
  update_columns?: Array<Pokemon_V2_Version_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Version_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_version". */
export type Pokemon_V2_Version_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_version */
export type Pokemon_V2_Version_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_version" */
export enum Pokemon_V2_Version_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  VersionGroupId = 'version_group_id'
}

/** input type for updating data in table "pokemon_v2_version" */
export type Pokemon_V2_Version_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Version_Stddev_Fields = {
  __typename?: 'pokemon_v2_version_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Version_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_version_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Version_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_version_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_version" */
export type Pokemon_V2_Version_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Version_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Version_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Version_Sum_Fields = {
  __typename?: 'pokemon_v2_version_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_version" */
export enum Pokemon_V2_Version_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  VersionGroupId = 'version_group_id'
}

export type Pokemon_V2_Version_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Version_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Version_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Version_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Version_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_version_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Version_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_version_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Version_Variance_Fields = {
  __typename?: 'pokemon_v2_version_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_versiongroup" */
export type Pokemon_V2_Versiongroup = {
  __typename?: 'pokemon_v2_versiongroup';
  generation_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  order?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_versiongroup" */
export type Pokemon_V2_Versiongroup_Aggregate = {
  __typename?: 'pokemon_v2_versiongroup_aggregate';
  aggregate?: Maybe<Pokemon_V2_Versiongroup_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Versiongroup>;
};

/** aggregate fields of "pokemon_v2_versiongroup" */
export type Pokemon_V2_Versiongroup_Aggregate_Fields = {
  __typename?: 'pokemon_v2_versiongroup_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Versiongroup_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Versiongroup_Max_Fields>;
  min?: Maybe<Pokemon_V2_Versiongroup_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Versiongroup_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Versiongroup_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Versiongroup_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Versiongroup_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Versiongroup_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Versiongroup_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Versiongroup_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_versiongroup" */
export type Pokemon_V2_Versiongroup_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Versiongroup_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Versiongroup_Avg_Fields = {
  __typename?: 'pokemon_v2_versiongroup_avg_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_versiongroup". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Versiongroup_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Versiongroup_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Versiongroup_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Versiongroup_Bool_Exp>>;
  generation_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  order?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_versiongroup" */
export enum Pokemon_V2_Versiongroup_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2VersiongroupPkey = 'pokemon_v2_versiongroup_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_versiongroup" */
export type Pokemon_V2_Versiongroup_Inc_Input = {
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_versiongroup" */
export type Pokemon_V2_Versiongroup_Insert_Input = {
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Versiongroup_Max_Fields = {
  __typename?: 'pokemon_v2_versiongroup_max_fields';
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Versiongroup_Min_Fields = {
  __typename?: 'pokemon_v2_versiongroup_min_fields';
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_versiongroup" */
export type Pokemon_V2_Versiongroup_Mutation_Response = {
  __typename?: 'pokemon_v2_versiongroup_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Versiongroup>;
};

/** on_conflict condition type for table "pokemon_v2_versiongroup" */
export type Pokemon_V2_Versiongroup_On_Conflict = {
  constraint: Pokemon_V2_Versiongroup_Constraint;
  update_columns?: Array<Pokemon_V2_Versiongroup_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Versiongroup_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_versiongroup". */
export type Pokemon_V2_Versiongroup_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_versiongroup */
export type Pokemon_V2_Versiongroup_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_versiongroup" */
export enum Pokemon_V2_Versiongroup_Select_Column {
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order'
}

/** input type for updating data in table "pokemon_v2_versiongroup" */
export type Pokemon_V2_Versiongroup_Set_Input = {
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Versiongroup_Stddev_Fields = {
  __typename?: 'pokemon_v2_versiongroup_stddev_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Versiongroup_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_versiongroup_stddev_pop_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Versiongroup_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_versiongroup_stddev_samp_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_versiongroup" */
export type Pokemon_V2_Versiongroup_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Versiongroup_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Versiongroup_Stream_Cursor_Value_Input = {
  generation_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Versiongroup_Sum_Fields = {
  __typename?: 'pokemon_v2_versiongroup_sum_fields';
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_versiongroup" */
export enum Pokemon_V2_Versiongroup_Update_Column {
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order'
}

export type Pokemon_V2_Versiongroup_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Versiongroup_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Versiongroup_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Versiongroup_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Versiongroup_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_versiongroup_var_pop_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Versiongroup_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_versiongroup_var_samp_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Versiongroup_Variance_Fields = {
  __typename?: 'pokemon_v2_versiongroup_variance_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_versiongroupmovelearnmethod" */
export type Pokemon_V2_Versiongroupmovelearnmethod = {
  __typename?: 'pokemon_v2_versiongroupmovelearnmethod';
  id: Scalars['Int']['output'];
  move_learn_method_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_versiongroupmovelearnmethod" */
export type Pokemon_V2_Versiongroupmovelearnmethod_Aggregate = {
  __typename?: 'pokemon_v2_versiongroupmovelearnmethod_aggregate';
  aggregate?: Maybe<Pokemon_V2_Versiongroupmovelearnmethod_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Versiongroupmovelearnmethod>;
};

/** aggregate fields of "pokemon_v2_versiongroupmovelearnmethod" */
export type Pokemon_V2_Versiongroupmovelearnmethod_Aggregate_Fields = {
  __typename?: 'pokemon_v2_versiongroupmovelearnmethod_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Versiongroupmovelearnmethod_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Versiongroupmovelearnmethod_Max_Fields>;
  min?: Maybe<Pokemon_V2_Versiongroupmovelearnmethod_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Versiongroupmovelearnmethod_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Versiongroupmovelearnmethod_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Versiongroupmovelearnmethod_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Versiongroupmovelearnmethod_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Versiongroupmovelearnmethod_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Versiongroupmovelearnmethod_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Versiongroupmovelearnmethod_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_versiongroupmovelearnmethod" */
export type Pokemon_V2_Versiongroupmovelearnmethod_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Versiongroupmovelearnmethod_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Versiongroupmovelearnmethod_Avg_Fields = {
  __typename?: 'pokemon_v2_versiongroupmovelearnmethod_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_versiongroupmovelearnmethod". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Versiongroupmovelearnmethod_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Versiongroupmovelearnmethod_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Versiongroupmovelearnmethod_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Versiongroupmovelearnmethod_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  move_learn_method_id?: InputMaybe<Int_Comparison_Exp>;
  version_group_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_versiongroupmovelearnmethod" */
export enum Pokemon_V2_Versiongroupmovelearnmethod_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2VersiongroupmovelearnmethodPkey = 'pokemon_v2_versiongroupmovelearnmethod_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_versiongroupmovelearnmethod" */
export type Pokemon_V2_Versiongroupmovelearnmethod_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  move_learn_method_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_versiongroupmovelearnmethod" */
export type Pokemon_V2_Versiongroupmovelearnmethod_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  move_learn_method_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Versiongroupmovelearnmethod_Max_Fields = {
  __typename?: 'pokemon_v2_versiongroupmovelearnmethod_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  move_learn_method_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Versiongroupmovelearnmethod_Min_Fields = {
  __typename?: 'pokemon_v2_versiongroupmovelearnmethod_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  move_learn_method_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_versiongroupmovelearnmethod" */
export type Pokemon_V2_Versiongroupmovelearnmethod_Mutation_Response = {
  __typename?: 'pokemon_v2_versiongroupmovelearnmethod_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Versiongroupmovelearnmethod>;
};

/** on_conflict condition type for table "pokemon_v2_versiongroupmovelearnmethod" */
export type Pokemon_V2_Versiongroupmovelearnmethod_On_Conflict = {
  constraint: Pokemon_V2_Versiongroupmovelearnmethod_Constraint;
  update_columns?: Array<Pokemon_V2_Versiongroupmovelearnmethod_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Versiongroupmovelearnmethod_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_versiongroupmovelearnmethod". */
export type Pokemon_V2_Versiongroupmovelearnmethod_Order_By = {
  id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_versiongroupmovelearnmethod */
export type Pokemon_V2_Versiongroupmovelearnmethod_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_versiongroupmovelearnmethod" */
export enum Pokemon_V2_Versiongroupmovelearnmethod_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  MoveLearnMethodId = 'move_learn_method_id',
  /** column name */
  VersionGroupId = 'version_group_id'
}

/** input type for updating data in table "pokemon_v2_versiongroupmovelearnmethod" */
export type Pokemon_V2_Versiongroupmovelearnmethod_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  move_learn_method_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Versiongroupmovelearnmethod_Stddev_Fields = {
  __typename?: 'pokemon_v2_versiongroupmovelearnmethod_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Versiongroupmovelearnmethod_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_versiongroupmovelearnmethod_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Versiongroupmovelearnmethod_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_versiongroupmovelearnmethod_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_versiongroupmovelearnmethod" */
export type Pokemon_V2_Versiongroupmovelearnmethod_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Versiongroupmovelearnmethod_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Versiongroupmovelearnmethod_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  move_learn_method_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Versiongroupmovelearnmethod_Sum_Fields = {
  __typename?: 'pokemon_v2_versiongroupmovelearnmethod_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  move_learn_method_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_versiongroupmovelearnmethod" */
export enum Pokemon_V2_Versiongroupmovelearnmethod_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  MoveLearnMethodId = 'move_learn_method_id',
  /** column name */
  VersionGroupId = 'version_group_id'
}

export type Pokemon_V2_Versiongroupmovelearnmethod_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Versiongroupmovelearnmethod_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Versiongroupmovelearnmethod_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Versiongroupmovelearnmethod_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Versiongroupmovelearnmethod_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_versiongroupmovelearnmethod_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Versiongroupmovelearnmethod_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_versiongroupmovelearnmethod_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Versiongroupmovelearnmethod_Variance_Fields = {
  __typename?: 'pokemon_v2_versiongroupmovelearnmethod_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_versiongroupregion" */
export type Pokemon_V2_Versiongroupregion = {
  __typename?: 'pokemon_v2_versiongroupregion';
  id: Scalars['Int']['output'];
  region_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_versiongroupregion" */
export type Pokemon_V2_Versiongroupregion_Aggregate = {
  __typename?: 'pokemon_v2_versiongroupregion_aggregate';
  aggregate?: Maybe<Pokemon_V2_Versiongroupregion_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Versiongroupregion>;
};

/** aggregate fields of "pokemon_v2_versiongroupregion" */
export type Pokemon_V2_Versiongroupregion_Aggregate_Fields = {
  __typename?: 'pokemon_v2_versiongroupregion_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Versiongroupregion_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Versiongroupregion_Max_Fields>;
  min?: Maybe<Pokemon_V2_Versiongroupregion_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Versiongroupregion_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Versiongroupregion_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Versiongroupregion_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Versiongroupregion_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Versiongroupregion_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Versiongroupregion_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Versiongroupregion_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_versiongroupregion" */
export type Pokemon_V2_Versiongroupregion_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Versiongroupregion_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Versiongroupregion_Avg_Fields = {
  __typename?: 'pokemon_v2_versiongroupregion_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_versiongroupregion". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Versiongroupregion_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Versiongroupregion_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Versiongroupregion_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Versiongroupregion_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  region_id?: InputMaybe<Int_Comparison_Exp>;
  version_group_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_versiongroupregion" */
export enum Pokemon_V2_Versiongroupregion_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2VersiongroupregionPkey = 'pokemon_v2_versiongroupregion_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_versiongroupregion" */
export type Pokemon_V2_Versiongroupregion_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  region_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_versiongroupregion" */
export type Pokemon_V2_Versiongroupregion_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  region_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Versiongroupregion_Max_Fields = {
  __typename?: 'pokemon_v2_versiongroupregion_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  region_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Versiongroupregion_Min_Fields = {
  __typename?: 'pokemon_v2_versiongroupregion_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  region_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_versiongroupregion" */
export type Pokemon_V2_Versiongroupregion_Mutation_Response = {
  __typename?: 'pokemon_v2_versiongroupregion_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Versiongroupregion>;
};

/** on_conflict condition type for table "pokemon_v2_versiongroupregion" */
export type Pokemon_V2_Versiongroupregion_On_Conflict = {
  constraint: Pokemon_V2_Versiongroupregion_Constraint;
  update_columns?: Array<Pokemon_V2_Versiongroupregion_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Versiongroupregion_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_versiongroupregion". */
export type Pokemon_V2_Versiongroupregion_Order_By = {
  id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_versiongroupregion */
export type Pokemon_V2_Versiongroupregion_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_versiongroupregion" */
export enum Pokemon_V2_Versiongroupregion_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  RegionId = 'region_id',
  /** column name */
  VersionGroupId = 'version_group_id'
}

/** input type for updating data in table "pokemon_v2_versiongroupregion" */
export type Pokemon_V2_Versiongroupregion_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  region_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Versiongroupregion_Stddev_Fields = {
  __typename?: 'pokemon_v2_versiongroupregion_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Versiongroupregion_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_versiongroupregion_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Versiongroupregion_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_versiongroupregion_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_versiongroupregion" */
export type Pokemon_V2_Versiongroupregion_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Versiongroupregion_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Versiongroupregion_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  region_id?: InputMaybe<Scalars['Int']['input']>;
  version_group_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Versiongroupregion_Sum_Fields = {
  __typename?: 'pokemon_v2_versiongroupregion_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  region_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_versiongroupregion" */
export enum Pokemon_V2_Versiongroupregion_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  RegionId = 'region_id',
  /** column name */
  VersionGroupId = 'version_group_id'
}

export type Pokemon_V2_Versiongroupregion_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Versiongroupregion_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Versiongroupregion_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Versiongroupregion_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Versiongroupregion_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_versiongroupregion_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Versiongroupregion_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_versiongroupregion_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Versiongroupregion_Variance_Fields = {
  __typename?: 'pokemon_v2_versiongroupregion_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_versionname" */
export type Pokemon_V2_Versionname = {
  __typename?: 'pokemon_v2_versionname';
  id: Scalars['Int']['output'];
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_versionname" */
export type Pokemon_V2_Versionname_Aggregate = {
  __typename?: 'pokemon_v2_versionname_aggregate';
  aggregate?: Maybe<Pokemon_V2_Versionname_Aggregate_Fields>;
  nodes: Array<Pokemon_V2_Versionname>;
};

/** aggregate fields of "pokemon_v2_versionname" */
export type Pokemon_V2_Versionname_Aggregate_Fields = {
  __typename?: 'pokemon_v2_versionname_aggregate_fields';
  avg?: Maybe<Pokemon_V2_Versionname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_V2_Versionname_Max_Fields>;
  min?: Maybe<Pokemon_V2_Versionname_Min_Fields>;
  stddev?: Maybe<Pokemon_V2_Versionname_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_V2_Versionname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_V2_Versionname_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_V2_Versionname_Sum_Fields>;
  var_pop?: Maybe<Pokemon_V2_Versionname_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_V2_Versionname_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_V2_Versionname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_versionname" */
export type Pokemon_V2_Versionname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_V2_Versionname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemon_V2_Versionname_Avg_Fields = {
  __typename?: 'pokemon_v2_versionname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_versionname". All fields are combined with a logical 'AND'. */
export type Pokemon_V2_Versionname_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_V2_Versionname_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_V2_Versionname_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_V2_Versionname_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  version_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pokemon_v2_versionname" */
export enum Pokemon_V2_Versionname_Constraint {
  /** unique or primary key constraint on columns "id" */
  PokemonV2VersionnamePkey = 'pokemon_v2_versionname_pkey'
}

/** input type for incrementing numeric columns in table "pokemon_v2_versionname" */
export type Pokemon_V2_Versionname_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  version_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "pokemon_v2_versionname" */
export type Pokemon_V2_Versionname_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  version_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Pokemon_V2_Versionname_Max_Fields = {
  __typename?: 'pokemon_v2_versionname_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Pokemon_V2_Versionname_Min_Fields = {
  __typename?: 'pokemon_v2_versionname_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "pokemon_v2_versionname" */
export type Pokemon_V2_Versionname_Mutation_Response = {
  __typename?: 'pokemon_v2_versionname_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Pokemon_V2_Versionname>;
};

/** on_conflict condition type for table "pokemon_v2_versionname" */
export type Pokemon_V2_Versionname_On_Conflict = {
  constraint: Pokemon_V2_Versionname_Constraint;
  update_columns?: Array<Pokemon_V2_Versionname_Update_Column>;
  where?: InputMaybe<Pokemon_V2_Versionname_Bool_Exp>;
};

/** Ordering options when selecting data from "pokemon_v2_versionname". */
export type Pokemon_V2_Versionname_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: pokemon_v2_versionname */
export type Pokemon_V2_Versionname_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "pokemon_v2_versionname" */
export enum Pokemon_V2_Versionname_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  VersionId = 'version_id'
}

/** input type for updating data in table "pokemon_v2_versionname" */
export type Pokemon_V2_Versionname_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  version_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Pokemon_V2_Versionname_Stddev_Fields = {
  __typename?: 'pokemon_v2_versionname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_V2_Versionname_Stddev_Pop_Fields = {
  __typename?: 'pokemon_v2_versionname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_V2_Versionname_Stddev_Samp_Fields = {
  __typename?: 'pokemon_v2_versionname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "pokemon_v2_versionname" */
export type Pokemon_V2_Versionname_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Pokemon_V2_Versionname_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Pokemon_V2_Versionname_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  language_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  version_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Pokemon_V2_Versionname_Sum_Fields = {
  __typename?: 'pokemon_v2_versionname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "pokemon_v2_versionname" */
export enum Pokemon_V2_Versionname_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  VersionId = 'version_id'
}

export type Pokemon_V2_Versionname_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Pokemon_V2_Versionname_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Pokemon_V2_Versionname_Set_Input>;
  /** filter the rows which have to be updated */
  where: Pokemon_V2_Versionname_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Pokemon_V2_Versionname_Var_Pop_Fields = {
  __typename?: 'pokemon_v2_versionname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemon_V2_Versionname_Var_Samp_Fields = {
  __typename?: 'pokemon_v2_versionname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemon_V2_Versionname_Variance_Fields = {
  __typename?: 'pokemon_v2_versionname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

export type Query_Root = {
  __typename?: 'query_root';
  /** fetch data from the table: "auth_group" */
  auth_group: Array<Auth_Group>;
  /** fetch aggregated fields from the table: "auth_group" */
  auth_group_aggregate: Auth_Group_Aggregate;
  /** fetch data from the table: "auth_group" using primary key columns */
  auth_group_by_pk?: Maybe<Auth_Group>;
  /** fetch data from the table: "auth_group_permissions" */
  auth_group_permissions: Array<Auth_Group_Permissions>;
  /** fetch aggregated fields from the table: "auth_group_permissions" */
  auth_group_permissions_aggregate: Auth_Group_Permissions_Aggregate;
  /** fetch data from the table: "auth_group_permissions" using primary key columns */
  auth_group_permissions_by_pk?: Maybe<Auth_Group_Permissions>;
  /** fetch data from the table: "auth_permission" */
  auth_permission: Array<Auth_Permission>;
  /** fetch aggregated fields from the table: "auth_permission" */
  auth_permission_aggregate: Auth_Permission_Aggregate;
  /** fetch data from the table: "auth_permission" using primary key columns */
  auth_permission_by_pk?: Maybe<Auth_Permission>;
  /** fetch data from the table: "auth_user" */
  auth_user: Array<Auth_User>;
  /** fetch aggregated fields from the table: "auth_user" */
  auth_user_aggregate: Auth_User_Aggregate;
  /** fetch data from the table: "auth_user" using primary key columns */
  auth_user_by_pk?: Maybe<Auth_User>;
  /** fetch data from the table: "auth_user_groups" */
  auth_user_groups: Array<Auth_User_Groups>;
  /** fetch aggregated fields from the table: "auth_user_groups" */
  auth_user_groups_aggregate: Auth_User_Groups_Aggregate;
  /** fetch data from the table: "auth_user_groups" using primary key columns */
  auth_user_groups_by_pk?: Maybe<Auth_User_Groups>;
  /** fetch data from the table: "auth_user_user_permissions" */
  auth_user_user_permissions: Array<Auth_User_User_Permissions>;
  /** fetch aggregated fields from the table: "auth_user_user_permissions" */
  auth_user_user_permissions_aggregate: Auth_User_User_Permissions_Aggregate;
  /** fetch data from the table: "auth_user_user_permissions" using primary key columns */
  auth_user_user_permissions_by_pk?: Maybe<Auth_User_User_Permissions>;
  /** fetch data from the table: "django_admin_log" */
  django_admin_log: Array<Django_Admin_Log>;
  /** fetch aggregated fields from the table: "django_admin_log" */
  django_admin_log_aggregate: Django_Admin_Log_Aggregate;
  /** fetch data from the table: "django_admin_log" using primary key columns */
  django_admin_log_by_pk?: Maybe<Django_Admin_Log>;
  /** fetch data from the table: "django_content_type" */
  django_content_type: Array<Django_Content_Type>;
  /** fetch aggregated fields from the table: "django_content_type" */
  django_content_type_aggregate: Django_Content_Type_Aggregate;
  /** fetch data from the table: "django_content_type" using primary key columns */
  django_content_type_by_pk?: Maybe<Django_Content_Type>;
  /** fetch data from the table: "django_migrations" */
  django_migrations: Array<Django_Migrations>;
  /** fetch aggregated fields from the table: "django_migrations" */
  django_migrations_aggregate: Django_Migrations_Aggregate;
  /** fetch data from the table: "django_migrations" using primary key columns */
  django_migrations_by_pk?: Maybe<Django_Migrations>;
  /** fetch data from the table: "django_session" */
  django_session: Array<Django_Session>;
  /** fetch aggregated fields from the table: "django_session" */
  django_session_aggregate: Django_Session_Aggregate;
  /** fetch data from the table: "django_session" using primary key columns */
  django_session_by_pk?: Maybe<Django_Session>;
  /** fetch data from the table: "django_site" */
  django_site: Array<Django_Site>;
  /** fetch aggregated fields from the table: "django_site" */
  django_site_aggregate: Django_Site_Aggregate;
  /** fetch data from the table: "django_site" using primary key columns */
  django_site_by_pk?: Maybe<Django_Site>;
  /** fetch data from the table: "pokemon_v2_ability" */
  pokemon_v2_ability: Array<Pokemon_V2_Ability>;
  /** fetch aggregated fields from the table: "pokemon_v2_ability" */
  pokemon_v2_ability_aggregate: Pokemon_V2_Ability_Aggregate;
  /** fetch data from the table: "pokemon_v2_ability" using primary key columns */
  pokemon_v2_ability_by_pk?: Maybe<Pokemon_V2_Ability>;
  /** fetch data from the table: "pokemon_v2_abilitychange" */
  pokemon_v2_abilitychange: Array<Pokemon_V2_Abilitychange>;
  /** fetch aggregated fields from the table: "pokemon_v2_abilitychange" */
  pokemon_v2_abilitychange_aggregate: Pokemon_V2_Abilitychange_Aggregate;
  /** fetch data from the table: "pokemon_v2_abilitychange" using primary key columns */
  pokemon_v2_abilitychange_by_pk?: Maybe<Pokemon_V2_Abilitychange>;
  /** fetch data from the table: "pokemon_v2_abilitychangeeffecttext" */
  pokemon_v2_abilitychangeeffecttext: Array<Pokemon_V2_Abilitychangeeffecttext>;
  /** fetch aggregated fields from the table: "pokemon_v2_abilitychangeeffecttext" */
  pokemon_v2_abilitychangeeffecttext_aggregate: Pokemon_V2_Abilitychangeeffecttext_Aggregate;
  /** fetch data from the table: "pokemon_v2_abilitychangeeffecttext" using primary key columns */
  pokemon_v2_abilitychangeeffecttext_by_pk?: Maybe<Pokemon_V2_Abilitychangeeffecttext>;
  /** fetch data from the table: "pokemon_v2_abilityeffecttext" */
  pokemon_v2_abilityeffecttext: Array<Pokemon_V2_Abilityeffecttext>;
  /** fetch aggregated fields from the table: "pokemon_v2_abilityeffecttext" */
  pokemon_v2_abilityeffecttext_aggregate: Pokemon_V2_Abilityeffecttext_Aggregate;
  /** fetch data from the table: "pokemon_v2_abilityeffecttext" using primary key columns */
  pokemon_v2_abilityeffecttext_by_pk?: Maybe<Pokemon_V2_Abilityeffecttext>;
  /** fetch data from the table: "pokemon_v2_abilityflavortext" */
  pokemon_v2_abilityflavortext: Array<Pokemon_V2_Abilityflavortext>;
  /** fetch aggregated fields from the table: "pokemon_v2_abilityflavortext" */
  pokemon_v2_abilityflavortext_aggregate: Pokemon_V2_Abilityflavortext_Aggregate;
  /** fetch data from the table: "pokemon_v2_abilityflavortext" using primary key columns */
  pokemon_v2_abilityflavortext_by_pk?: Maybe<Pokemon_V2_Abilityflavortext>;
  /** fetch data from the table: "pokemon_v2_abilityname" */
  pokemon_v2_abilityname: Array<Pokemon_V2_Abilityname>;
  /** fetch aggregated fields from the table: "pokemon_v2_abilityname" */
  pokemon_v2_abilityname_aggregate: Pokemon_V2_Abilityname_Aggregate;
  /** fetch data from the table: "pokemon_v2_abilityname" using primary key columns */
  pokemon_v2_abilityname_by_pk?: Maybe<Pokemon_V2_Abilityname>;
  /** fetch data from the table: "pokemon_v2_berry" */
  pokemon_v2_berry: Array<Pokemon_V2_Berry>;
  /** fetch aggregated fields from the table: "pokemon_v2_berry" */
  pokemon_v2_berry_aggregate: Pokemon_V2_Berry_Aggregate;
  /** fetch data from the table: "pokemon_v2_berry" using primary key columns */
  pokemon_v2_berry_by_pk?: Maybe<Pokemon_V2_Berry>;
  /** fetch data from the table: "pokemon_v2_berryfirmness" */
  pokemon_v2_berryfirmness: Array<Pokemon_V2_Berryfirmness>;
  /** fetch aggregated fields from the table: "pokemon_v2_berryfirmness" */
  pokemon_v2_berryfirmness_aggregate: Pokemon_V2_Berryfirmness_Aggregate;
  /** fetch data from the table: "pokemon_v2_berryfirmness" using primary key columns */
  pokemon_v2_berryfirmness_by_pk?: Maybe<Pokemon_V2_Berryfirmness>;
  /** fetch data from the table: "pokemon_v2_berryfirmnessname" */
  pokemon_v2_berryfirmnessname: Array<Pokemon_V2_Berryfirmnessname>;
  /** fetch aggregated fields from the table: "pokemon_v2_berryfirmnessname" */
  pokemon_v2_berryfirmnessname_aggregate: Pokemon_V2_Berryfirmnessname_Aggregate;
  /** fetch data from the table: "pokemon_v2_berryfirmnessname" using primary key columns */
  pokemon_v2_berryfirmnessname_by_pk?: Maybe<Pokemon_V2_Berryfirmnessname>;
  /** fetch data from the table: "pokemon_v2_berryflavor" */
  pokemon_v2_berryflavor: Array<Pokemon_V2_Berryflavor>;
  /** fetch aggregated fields from the table: "pokemon_v2_berryflavor" */
  pokemon_v2_berryflavor_aggregate: Pokemon_V2_Berryflavor_Aggregate;
  /** fetch data from the table: "pokemon_v2_berryflavor" using primary key columns */
  pokemon_v2_berryflavor_by_pk?: Maybe<Pokemon_V2_Berryflavor>;
  /** fetch data from the table: "pokemon_v2_berryflavormap" */
  pokemon_v2_berryflavormap: Array<Pokemon_V2_Berryflavormap>;
  /** fetch aggregated fields from the table: "pokemon_v2_berryflavormap" */
  pokemon_v2_berryflavormap_aggregate: Pokemon_V2_Berryflavormap_Aggregate;
  /** fetch data from the table: "pokemon_v2_berryflavormap" using primary key columns */
  pokemon_v2_berryflavormap_by_pk?: Maybe<Pokemon_V2_Berryflavormap>;
  /** fetch data from the table: "pokemon_v2_berryflavorname" */
  pokemon_v2_berryflavorname: Array<Pokemon_V2_Berryflavorname>;
  /** fetch aggregated fields from the table: "pokemon_v2_berryflavorname" */
  pokemon_v2_berryflavorname_aggregate: Pokemon_V2_Berryflavorname_Aggregate;
  /** fetch data from the table: "pokemon_v2_berryflavorname" using primary key columns */
  pokemon_v2_berryflavorname_by_pk?: Maybe<Pokemon_V2_Berryflavorname>;
  /** fetch data from the table: "pokemon_v2_characteristic" */
  pokemon_v2_characteristic: Array<Pokemon_V2_Characteristic>;
  /** fetch aggregated fields from the table: "pokemon_v2_characteristic" */
  pokemon_v2_characteristic_aggregate: Pokemon_V2_Characteristic_Aggregate;
  /** fetch data from the table: "pokemon_v2_characteristic" using primary key columns */
  pokemon_v2_characteristic_by_pk?: Maybe<Pokemon_V2_Characteristic>;
  /** fetch data from the table: "pokemon_v2_characteristicdescription" */
  pokemon_v2_characteristicdescription: Array<Pokemon_V2_Characteristicdescription>;
  /** fetch aggregated fields from the table: "pokemon_v2_characteristicdescription" */
  pokemon_v2_characteristicdescription_aggregate: Pokemon_V2_Characteristicdescription_Aggregate;
  /** fetch data from the table: "pokemon_v2_characteristicdescription" using primary key columns */
  pokemon_v2_characteristicdescription_by_pk?: Maybe<Pokemon_V2_Characteristicdescription>;
  /** fetch data from the table: "pokemon_v2_contestcombo" */
  pokemon_v2_contestcombo: Array<Pokemon_V2_Contestcombo>;
  /** fetch aggregated fields from the table: "pokemon_v2_contestcombo" */
  pokemon_v2_contestcombo_aggregate: Pokemon_V2_Contestcombo_Aggregate;
  /** fetch data from the table: "pokemon_v2_contestcombo" using primary key columns */
  pokemon_v2_contestcombo_by_pk?: Maybe<Pokemon_V2_Contestcombo>;
  /** fetch data from the table: "pokemon_v2_contesteffect" */
  pokemon_v2_contesteffect: Array<Pokemon_V2_Contesteffect>;
  /** fetch aggregated fields from the table: "pokemon_v2_contesteffect" */
  pokemon_v2_contesteffect_aggregate: Pokemon_V2_Contesteffect_Aggregate;
  /** fetch data from the table: "pokemon_v2_contesteffect" using primary key columns */
  pokemon_v2_contesteffect_by_pk?: Maybe<Pokemon_V2_Contesteffect>;
  /** fetch data from the table: "pokemon_v2_contesteffecteffecttext" */
  pokemon_v2_contesteffecteffecttext: Array<Pokemon_V2_Contesteffecteffecttext>;
  /** fetch aggregated fields from the table: "pokemon_v2_contesteffecteffecttext" */
  pokemon_v2_contesteffecteffecttext_aggregate: Pokemon_V2_Contesteffecteffecttext_Aggregate;
  /** fetch data from the table: "pokemon_v2_contesteffecteffecttext" using primary key columns */
  pokemon_v2_contesteffecteffecttext_by_pk?: Maybe<Pokemon_V2_Contesteffecteffecttext>;
  /** fetch data from the table: "pokemon_v2_contesteffectflavortext" */
  pokemon_v2_contesteffectflavortext: Array<Pokemon_V2_Contesteffectflavortext>;
  /** fetch aggregated fields from the table: "pokemon_v2_contesteffectflavortext" */
  pokemon_v2_contesteffectflavortext_aggregate: Pokemon_V2_Contesteffectflavortext_Aggregate;
  /** fetch data from the table: "pokemon_v2_contesteffectflavortext" using primary key columns */
  pokemon_v2_contesteffectflavortext_by_pk?: Maybe<Pokemon_V2_Contesteffectflavortext>;
  /** fetch data from the table: "pokemon_v2_contesttype" */
  pokemon_v2_contesttype: Array<Pokemon_V2_Contesttype>;
  /** fetch aggregated fields from the table: "pokemon_v2_contesttype" */
  pokemon_v2_contesttype_aggregate: Pokemon_V2_Contesttype_Aggregate;
  /** fetch data from the table: "pokemon_v2_contesttype" using primary key columns */
  pokemon_v2_contesttype_by_pk?: Maybe<Pokemon_V2_Contesttype>;
  /** fetch data from the table: "pokemon_v2_contesttypename" */
  pokemon_v2_contesttypename: Array<Pokemon_V2_Contesttypename>;
  /** fetch aggregated fields from the table: "pokemon_v2_contesttypename" */
  pokemon_v2_contesttypename_aggregate: Pokemon_V2_Contesttypename_Aggregate;
  /** fetch data from the table: "pokemon_v2_contesttypename" using primary key columns */
  pokemon_v2_contesttypename_by_pk?: Maybe<Pokemon_V2_Contesttypename>;
  /** fetch data from the table: "pokemon_v2_egggroup" */
  pokemon_v2_egggroup: Array<Pokemon_V2_Egggroup>;
  /** fetch aggregated fields from the table: "pokemon_v2_egggroup" */
  pokemon_v2_egggroup_aggregate: Pokemon_V2_Egggroup_Aggregate;
  /** fetch data from the table: "pokemon_v2_egggroup" using primary key columns */
  pokemon_v2_egggroup_by_pk?: Maybe<Pokemon_V2_Egggroup>;
  /** fetch data from the table: "pokemon_v2_egggroupname" */
  pokemon_v2_egggroupname: Array<Pokemon_V2_Egggroupname>;
  /** fetch aggregated fields from the table: "pokemon_v2_egggroupname" */
  pokemon_v2_egggroupname_aggregate: Pokemon_V2_Egggroupname_Aggregate;
  /** fetch data from the table: "pokemon_v2_egggroupname" using primary key columns */
  pokemon_v2_egggroupname_by_pk?: Maybe<Pokemon_V2_Egggroupname>;
  /** fetch data from the table: "pokemon_v2_encounter" */
  pokemon_v2_encounter: Array<Pokemon_V2_Encounter>;
  /** fetch aggregated fields from the table: "pokemon_v2_encounter" */
  pokemon_v2_encounter_aggregate: Pokemon_V2_Encounter_Aggregate;
  /** fetch data from the table: "pokemon_v2_encounter" using primary key columns */
  pokemon_v2_encounter_by_pk?: Maybe<Pokemon_V2_Encounter>;
  /** fetch data from the table: "pokemon_v2_encountercondition" */
  pokemon_v2_encountercondition: Array<Pokemon_V2_Encountercondition>;
  /** fetch aggregated fields from the table: "pokemon_v2_encountercondition" */
  pokemon_v2_encountercondition_aggregate: Pokemon_V2_Encountercondition_Aggregate;
  /** fetch data from the table: "pokemon_v2_encountercondition" using primary key columns */
  pokemon_v2_encountercondition_by_pk?: Maybe<Pokemon_V2_Encountercondition>;
  /** fetch data from the table: "pokemon_v2_encounterconditionname" */
  pokemon_v2_encounterconditionname: Array<Pokemon_V2_Encounterconditionname>;
  /** fetch aggregated fields from the table: "pokemon_v2_encounterconditionname" */
  pokemon_v2_encounterconditionname_aggregate: Pokemon_V2_Encounterconditionname_Aggregate;
  /** fetch data from the table: "pokemon_v2_encounterconditionname" using primary key columns */
  pokemon_v2_encounterconditionname_by_pk?: Maybe<Pokemon_V2_Encounterconditionname>;
  /** fetch data from the table: "pokemon_v2_encounterconditionvalue" */
  pokemon_v2_encounterconditionvalue: Array<Pokemon_V2_Encounterconditionvalue>;
  /** fetch aggregated fields from the table: "pokemon_v2_encounterconditionvalue" */
  pokemon_v2_encounterconditionvalue_aggregate: Pokemon_V2_Encounterconditionvalue_Aggregate;
  /** fetch data from the table: "pokemon_v2_encounterconditionvalue" using primary key columns */
  pokemon_v2_encounterconditionvalue_by_pk?: Maybe<Pokemon_V2_Encounterconditionvalue>;
  /** fetch data from the table: "pokemon_v2_encounterconditionvaluemap" */
  pokemon_v2_encounterconditionvaluemap: Array<Pokemon_V2_Encounterconditionvaluemap>;
  /** fetch aggregated fields from the table: "pokemon_v2_encounterconditionvaluemap" */
  pokemon_v2_encounterconditionvaluemap_aggregate: Pokemon_V2_Encounterconditionvaluemap_Aggregate;
  /** fetch data from the table: "pokemon_v2_encounterconditionvaluemap" using primary key columns */
  pokemon_v2_encounterconditionvaluemap_by_pk?: Maybe<Pokemon_V2_Encounterconditionvaluemap>;
  /** fetch data from the table: "pokemon_v2_encounterconditionvaluename" */
  pokemon_v2_encounterconditionvaluename: Array<Pokemon_V2_Encounterconditionvaluename>;
  /** fetch aggregated fields from the table: "pokemon_v2_encounterconditionvaluename" */
  pokemon_v2_encounterconditionvaluename_aggregate: Pokemon_V2_Encounterconditionvaluename_Aggregate;
  /** fetch data from the table: "pokemon_v2_encounterconditionvaluename" using primary key columns */
  pokemon_v2_encounterconditionvaluename_by_pk?: Maybe<Pokemon_V2_Encounterconditionvaluename>;
  /** fetch data from the table: "pokemon_v2_encountermethod" */
  pokemon_v2_encountermethod: Array<Pokemon_V2_Encountermethod>;
  /** fetch aggregated fields from the table: "pokemon_v2_encountermethod" */
  pokemon_v2_encountermethod_aggregate: Pokemon_V2_Encountermethod_Aggregate;
  /** fetch data from the table: "pokemon_v2_encountermethod" using primary key columns */
  pokemon_v2_encountermethod_by_pk?: Maybe<Pokemon_V2_Encountermethod>;
  /** fetch data from the table: "pokemon_v2_encountermethodname" */
  pokemon_v2_encountermethodname: Array<Pokemon_V2_Encountermethodname>;
  /** fetch aggregated fields from the table: "pokemon_v2_encountermethodname" */
  pokemon_v2_encountermethodname_aggregate: Pokemon_V2_Encountermethodname_Aggregate;
  /** fetch data from the table: "pokemon_v2_encountermethodname" using primary key columns */
  pokemon_v2_encountermethodname_by_pk?: Maybe<Pokemon_V2_Encountermethodname>;
  /** fetch data from the table: "pokemon_v2_encounterslot" */
  pokemon_v2_encounterslot: Array<Pokemon_V2_Encounterslot>;
  /** fetch aggregated fields from the table: "pokemon_v2_encounterslot" */
  pokemon_v2_encounterslot_aggregate: Pokemon_V2_Encounterslot_Aggregate;
  /** fetch data from the table: "pokemon_v2_encounterslot" using primary key columns */
  pokemon_v2_encounterslot_by_pk?: Maybe<Pokemon_V2_Encounterslot>;
  /** fetch data from the table: "pokemon_v2_evolutionchain" */
  pokemon_v2_evolutionchain: Array<Pokemon_V2_Evolutionchain>;
  /** fetch aggregated fields from the table: "pokemon_v2_evolutionchain" */
  pokemon_v2_evolutionchain_aggregate: Pokemon_V2_Evolutionchain_Aggregate;
  /** fetch data from the table: "pokemon_v2_evolutionchain" using primary key columns */
  pokemon_v2_evolutionchain_by_pk?: Maybe<Pokemon_V2_Evolutionchain>;
  /** fetch data from the table: "pokemon_v2_evolutiontrigger" */
  pokemon_v2_evolutiontrigger: Array<Pokemon_V2_Evolutiontrigger>;
  /** fetch aggregated fields from the table: "pokemon_v2_evolutiontrigger" */
  pokemon_v2_evolutiontrigger_aggregate: Pokemon_V2_Evolutiontrigger_Aggregate;
  /** fetch data from the table: "pokemon_v2_evolutiontrigger" using primary key columns */
  pokemon_v2_evolutiontrigger_by_pk?: Maybe<Pokemon_V2_Evolutiontrigger>;
  /** fetch data from the table: "pokemon_v2_evolutiontriggername" */
  pokemon_v2_evolutiontriggername: Array<Pokemon_V2_Evolutiontriggername>;
  /** fetch aggregated fields from the table: "pokemon_v2_evolutiontriggername" */
  pokemon_v2_evolutiontriggername_aggregate: Pokemon_V2_Evolutiontriggername_Aggregate;
  /** fetch data from the table: "pokemon_v2_evolutiontriggername" using primary key columns */
  pokemon_v2_evolutiontriggername_by_pk?: Maybe<Pokemon_V2_Evolutiontriggername>;
  /** fetch data from the table: "pokemon_v2_experience" */
  pokemon_v2_experience: Array<Pokemon_V2_Experience>;
  /** fetch aggregated fields from the table: "pokemon_v2_experience" */
  pokemon_v2_experience_aggregate: Pokemon_V2_Experience_Aggregate;
  /** fetch data from the table: "pokemon_v2_experience" using primary key columns */
  pokemon_v2_experience_by_pk?: Maybe<Pokemon_V2_Experience>;
  /** fetch data from the table: "pokemon_v2_gender" */
  pokemon_v2_gender: Array<Pokemon_V2_Gender>;
  /** fetch aggregated fields from the table: "pokemon_v2_gender" */
  pokemon_v2_gender_aggregate: Pokemon_V2_Gender_Aggregate;
  /** fetch data from the table: "pokemon_v2_gender" using primary key columns */
  pokemon_v2_gender_by_pk?: Maybe<Pokemon_V2_Gender>;
  /** fetch data from the table: "pokemon_v2_generation" */
  pokemon_v2_generation: Array<Pokemon_V2_Generation>;
  /** fetch aggregated fields from the table: "pokemon_v2_generation" */
  pokemon_v2_generation_aggregate: Pokemon_V2_Generation_Aggregate;
  /** fetch data from the table: "pokemon_v2_generation" using primary key columns */
  pokemon_v2_generation_by_pk?: Maybe<Pokemon_V2_Generation>;
  /** fetch data from the table: "pokemon_v2_generationname" */
  pokemon_v2_generationname: Array<Pokemon_V2_Generationname>;
  /** fetch aggregated fields from the table: "pokemon_v2_generationname" */
  pokemon_v2_generationname_aggregate: Pokemon_V2_Generationname_Aggregate;
  /** fetch data from the table: "pokemon_v2_generationname" using primary key columns */
  pokemon_v2_generationname_by_pk?: Maybe<Pokemon_V2_Generationname>;
  /** fetch data from the table: "pokemon_v2_growthrate" */
  pokemon_v2_growthrate: Array<Pokemon_V2_Growthrate>;
  /** fetch aggregated fields from the table: "pokemon_v2_growthrate" */
  pokemon_v2_growthrate_aggregate: Pokemon_V2_Growthrate_Aggregate;
  /** fetch data from the table: "pokemon_v2_growthrate" using primary key columns */
  pokemon_v2_growthrate_by_pk?: Maybe<Pokemon_V2_Growthrate>;
  /** fetch data from the table: "pokemon_v2_growthratedescription" */
  pokemon_v2_growthratedescription: Array<Pokemon_V2_Growthratedescription>;
  /** fetch aggregated fields from the table: "pokemon_v2_growthratedescription" */
  pokemon_v2_growthratedescription_aggregate: Pokemon_V2_Growthratedescription_Aggregate;
  /** fetch data from the table: "pokemon_v2_growthratedescription" using primary key columns */
  pokemon_v2_growthratedescription_by_pk?: Maybe<Pokemon_V2_Growthratedescription>;
  /** fetch data from the table: "pokemon_v2_item" */
  pokemon_v2_item: Array<Pokemon_V2_Item>;
  /** fetch aggregated fields from the table: "pokemon_v2_item" */
  pokemon_v2_item_aggregate: Pokemon_V2_Item_Aggregate;
  /** fetch data from the table: "pokemon_v2_item" using primary key columns */
  pokemon_v2_item_by_pk?: Maybe<Pokemon_V2_Item>;
  /** fetch data from the table: "pokemon_v2_itemattribute" */
  pokemon_v2_itemattribute: Array<Pokemon_V2_Itemattribute>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemattribute" */
  pokemon_v2_itemattribute_aggregate: Pokemon_V2_Itemattribute_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemattribute" using primary key columns */
  pokemon_v2_itemattribute_by_pk?: Maybe<Pokemon_V2_Itemattribute>;
  /** fetch data from the table: "pokemon_v2_itemattributedescription" */
  pokemon_v2_itemattributedescription: Array<Pokemon_V2_Itemattributedescription>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemattributedescription" */
  pokemon_v2_itemattributedescription_aggregate: Pokemon_V2_Itemattributedescription_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemattributedescription" using primary key columns */
  pokemon_v2_itemattributedescription_by_pk?: Maybe<Pokemon_V2_Itemattributedescription>;
  /** fetch data from the table: "pokemon_v2_itemattributemap" */
  pokemon_v2_itemattributemap: Array<Pokemon_V2_Itemattributemap>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemattributemap" */
  pokemon_v2_itemattributemap_aggregate: Pokemon_V2_Itemattributemap_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemattributemap" using primary key columns */
  pokemon_v2_itemattributemap_by_pk?: Maybe<Pokemon_V2_Itemattributemap>;
  /** fetch data from the table: "pokemon_v2_itemattributename" */
  pokemon_v2_itemattributename: Array<Pokemon_V2_Itemattributename>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemattributename" */
  pokemon_v2_itemattributename_aggregate: Pokemon_V2_Itemattributename_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemattributename" using primary key columns */
  pokemon_v2_itemattributename_by_pk?: Maybe<Pokemon_V2_Itemattributename>;
  /** fetch data from the table: "pokemon_v2_itemcategory" */
  pokemon_v2_itemcategory: Array<Pokemon_V2_Itemcategory>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemcategory" */
  pokemon_v2_itemcategory_aggregate: Pokemon_V2_Itemcategory_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemcategory" using primary key columns */
  pokemon_v2_itemcategory_by_pk?: Maybe<Pokemon_V2_Itemcategory>;
  /** fetch data from the table: "pokemon_v2_itemcategoryname" */
  pokemon_v2_itemcategoryname: Array<Pokemon_V2_Itemcategoryname>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemcategoryname" */
  pokemon_v2_itemcategoryname_aggregate: Pokemon_V2_Itemcategoryname_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemcategoryname" using primary key columns */
  pokemon_v2_itemcategoryname_by_pk?: Maybe<Pokemon_V2_Itemcategoryname>;
  /** fetch data from the table: "pokemon_v2_itemeffecttext" */
  pokemon_v2_itemeffecttext: Array<Pokemon_V2_Itemeffecttext>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemeffecttext" */
  pokemon_v2_itemeffecttext_aggregate: Pokemon_V2_Itemeffecttext_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemeffecttext" using primary key columns */
  pokemon_v2_itemeffecttext_by_pk?: Maybe<Pokemon_V2_Itemeffecttext>;
  /** fetch data from the table: "pokemon_v2_itemflavortext" */
  pokemon_v2_itemflavortext: Array<Pokemon_V2_Itemflavortext>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemflavortext" */
  pokemon_v2_itemflavortext_aggregate: Pokemon_V2_Itemflavortext_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemflavortext" using primary key columns */
  pokemon_v2_itemflavortext_by_pk?: Maybe<Pokemon_V2_Itemflavortext>;
  /** fetch data from the table: "pokemon_v2_itemflingeffect" */
  pokemon_v2_itemflingeffect: Array<Pokemon_V2_Itemflingeffect>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemflingeffect" */
  pokemon_v2_itemflingeffect_aggregate: Pokemon_V2_Itemflingeffect_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemflingeffect" using primary key columns */
  pokemon_v2_itemflingeffect_by_pk?: Maybe<Pokemon_V2_Itemflingeffect>;
  /** fetch data from the table: "pokemon_v2_itemflingeffecteffecttext" */
  pokemon_v2_itemflingeffecteffecttext: Array<Pokemon_V2_Itemflingeffecteffecttext>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemflingeffecteffecttext" */
  pokemon_v2_itemflingeffecteffecttext_aggregate: Pokemon_V2_Itemflingeffecteffecttext_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemflingeffecteffecttext" using primary key columns */
  pokemon_v2_itemflingeffecteffecttext_by_pk?: Maybe<Pokemon_V2_Itemflingeffecteffecttext>;
  /** fetch data from the table: "pokemon_v2_itemgameindex" */
  pokemon_v2_itemgameindex: Array<Pokemon_V2_Itemgameindex>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemgameindex" */
  pokemon_v2_itemgameindex_aggregate: Pokemon_V2_Itemgameindex_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemgameindex" using primary key columns */
  pokemon_v2_itemgameindex_by_pk?: Maybe<Pokemon_V2_Itemgameindex>;
  /** fetch data from the table: "pokemon_v2_itemname" */
  pokemon_v2_itemname: Array<Pokemon_V2_Itemname>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemname" */
  pokemon_v2_itemname_aggregate: Pokemon_V2_Itemname_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemname" using primary key columns */
  pokemon_v2_itemname_by_pk?: Maybe<Pokemon_V2_Itemname>;
  /** fetch data from the table: "pokemon_v2_itempocket" */
  pokemon_v2_itempocket: Array<Pokemon_V2_Itempocket>;
  /** fetch aggregated fields from the table: "pokemon_v2_itempocket" */
  pokemon_v2_itempocket_aggregate: Pokemon_V2_Itempocket_Aggregate;
  /** fetch data from the table: "pokemon_v2_itempocket" using primary key columns */
  pokemon_v2_itempocket_by_pk?: Maybe<Pokemon_V2_Itempocket>;
  /** fetch data from the table: "pokemon_v2_itempocketname" */
  pokemon_v2_itempocketname: Array<Pokemon_V2_Itempocketname>;
  /** fetch aggregated fields from the table: "pokemon_v2_itempocketname" */
  pokemon_v2_itempocketname_aggregate: Pokemon_V2_Itempocketname_Aggregate;
  /** fetch data from the table: "pokemon_v2_itempocketname" using primary key columns */
  pokemon_v2_itempocketname_by_pk?: Maybe<Pokemon_V2_Itempocketname>;
  /** fetch data from the table: "pokemon_v2_itemsprites" */
  pokemon_v2_itemsprites: Array<Pokemon_V2_Itemsprites>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemsprites" */
  pokemon_v2_itemsprites_aggregate: Pokemon_V2_Itemsprites_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemsprites" using primary key columns */
  pokemon_v2_itemsprites_by_pk?: Maybe<Pokemon_V2_Itemsprites>;
  /** fetch data from the table: "pokemon_v2_language" */
  pokemon_v2_language: Array<Pokemon_V2_Language>;
  /** fetch aggregated fields from the table: "pokemon_v2_language" */
  pokemon_v2_language_aggregate: Pokemon_V2_Language_Aggregate;
  /** fetch data from the table: "pokemon_v2_language" using primary key columns */
  pokemon_v2_language_by_pk?: Maybe<Pokemon_V2_Language>;
  /** fetch data from the table: "pokemon_v2_languagename" */
  pokemon_v2_languagename: Array<Pokemon_V2_Languagename>;
  /** fetch aggregated fields from the table: "pokemon_v2_languagename" */
  pokemon_v2_languagename_aggregate: Pokemon_V2_Languagename_Aggregate;
  /** fetch data from the table: "pokemon_v2_languagename" using primary key columns */
  pokemon_v2_languagename_by_pk?: Maybe<Pokemon_V2_Languagename>;
  /** fetch data from the table: "pokemon_v2_location" */
  pokemon_v2_location: Array<Pokemon_V2_Location>;
  /** fetch aggregated fields from the table: "pokemon_v2_location" */
  pokemon_v2_location_aggregate: Pokemon_V2_Location_Aggregate;
  /** fetch data from the table: "pokemon_v2_location" using primary key columns */
  pokemon_v2_location_by_pk?: Maybe<Pokemon_V2_Location>;
  /** fetch data from the table: "pokemon_v2_locationarea" */
  pokemon_v2_locationarea: Array<Pokemon_V2_Locationarea>;
  /** fetch aggregated fields from the table: "pokemon_v2_locationarea" */
  pokemon_v2_locationarea_aggregate: Pokemon_V2_Locationarea_Aggregate;
  /** fetch data from the table: "pokemon_v2_locationarea" using primary key columns */
  pokemon_v2_locationarea_by_pk?: Maybe<Pokemon_V2_Locationarea>;
  /** fetch data from the table: "pokemon_v2_locationareaencounterrate" */
  pokemon_v2_locationareaencounterrate: Array<Pokemon_V2_Locationareaencounterrate>;
  /** fetch aggregated fields from the table: "pokemon_v2_locationareaencounterrate" */
  pokemon_v2_locationareaencounterrate_aggregate: Pokemon_V2_Locationareaencounterrate_Aggregate;
  /** fetch data from the table: "pokemon_v2_locationareaencounterrate" using primary key columns */
  pokemon_v2_locationareaencounterrate_by_pk?: Maybe<Pokemon_V2_Locationareaencounterrate>;
  /** fetch data from the table: "pokemon_v2_locationareaname" */
  pokemon_v2_locationareaname: Array<Pokemon_V2_Locationareaname>;
  /** fetch aggregated fields from the table: "pokemon_v2_locationareaname" */
  pokemon_v2_locationareaname_aggregate: Pokemon_V2_Locationareaname_Aggregate;
  /** fetch data from the table: "pokemon_v2_locationareaname" using primary key columns */
  pokemon_v2_locationareaname_by_pk?: Maybe<Pokemon_V2_Locationareaname>;
  /** fetch data from the table: "pokemon_v2_locationgameindex" */
  pokemon_v2_locationgameindex: Array<Pokemon_V2_Locationgameindex>;
  /** fetch aggregated fields from the table: "pokemon_v2_locationgameindex" */
  pokemon_v2_locationgameindex_aggregate: Pokemon_V2_Locationgameindex_Aggregate;
  /** fetch data from the table: "pokemon_v2_locationgameindex" using primary key columns */
  pokemon_v2_locationgameindex_by_pk?: Maybe<Pokemon_V2_Locationgameindex>;
  /** fetch data from the table: "pokemon_v2_locationname" */
  pokemon_v2_locationname: Array<Pokemon_V2_Locationname>;
  /** fetch aggregated fields from the table: "pokemon_v2_locationname" */
  pokemon_v2_locationname_aggregate: Pokemon_V2_Locationname_Aggregate;
  /** fetch data from the table: "pokemon_v2_locationname" using primary key columns */
  pokemon_v2_locationname_by_pk?: Maybe<Pokemon_V2_Locationname>;
  /** fetch data from the table: "pokemon_v2_machine" */
  pokemon_v2_machine: Array<Pokemon_V2_Machine>;
  /** fetch aggregated fields from the table: "pokemon_v2_machine" */
  pokemon_v2_machine_aggregate: Pokemon_V2_Machine_Aggregate;
  /** fetch data from the table: "pokemon_v2_machine" using primary key columns */
  pokemon_v2_machine_by_pk?: Maybe<Pokemon_V2_Machine>;
  /** fetch data from the table: "pokemon_v2_move" */
  pokemon_v2_move: Array<Pokemon_V2_Move>;
  /** fetch aggregated fields from the table: "pokemon_v2_move" */
  pokemon_v2_move_aggregate: Pokemon_V2_Move_Aggregate;
  /** fetch data from the table: "pokemon_v2_move" using primary key columns */
  pokemon_v2_move_by_pk?: Maybe<Pokemon_V2_Move>;
  /** fetch data from the table: "pokemon_v2_moveattribute" */
  pokemon_v2_moveattribute: Array<Pokemon_V2_Moveattribute>;
  /** fetch aggregated fields from the table: "pokemon_v2_moveattribute" */
  pokemon_v2_moveattribute_aggregate: Pokemon_V2_Moveattribute_Aggregate;
  /** fetch data from the table: "pokemon_v2_moveattribute" using primary key columns */
  pokemon_v2_moveattribute_by_pk?: Maybe<Pokemon_V2_Moveattribute>;
  /** fetch data from the table: "pokemon_v2_moveattributedescription" */
  pokemon_v2_moveattributedescription: Array<Pokemon_V2_Moveattributedescription>;
  /** fetch aggregated fields from the table: "pokemon_v2_moveattributedescription" */
  pokemon_v2_moveattributedescription_aggregate: Pokemon_V2_Moveattributedescription_Aggregate;
  /** fetch data from the table: "pokemon_v2_moveattributedescription" using primary key columns */
  pokemon_v2_moveattributedescription_by_pk?: Maybe<Pokemon_V2_Moveattributedescription>;
  /** fetch data from the table: "pokemon_v2_moveattributemap" */
  pokemon_v2_moveattributemap: Array<Pokemon_V2_Moveattributemap>;
  /** fetch aggregated fields from the table: "pokemon_v2_moveattributemap" */
  pokemon_v2_moveattributemap_aggregate: Pokemon_V2_Moveattributemap_Aggregate;
  /** fetch data from the table: "pokemon_v2_moveattributemap" using primary key columns */
  pokemon_v2_moveattributemap_by_pk?: Maybe<Pokemon_V2_Moveattributemap>;
  /** fetch data from the table: "pokemon_v2_moveattributename" */
  pokemon_v2_moveattributename: Array<Pokemon_V2_Moveattributename>;
  /** fetch aggregated fields from the table: "pokemon_v2_moveattributename" */
  pokemon_v2_moveattributename_aggregate: Pokemon_V2_Moveattributename_Aggregate;
  /** fetch data from the table: "pokemon_v2_moveattributename" using primary key columns */
  pokemon_v2_moveattributename_by_pk?: Maybe<Pokemon_V2_Moveattributename>;
  /** fetch data from the table: "pokemon_v2_movebattlestyle" */
  pokemon_v2_movebattlestyle: Array<Pokemon_V2_Movebattlestyle>;
  /** fetch aggregated fields from the table: "pokemon_v2_movebattlestyle" */
  pokemon_v2_movebattlestyle_aggregate: Pokemon_V2_Movebattlestyle_Aggregate;
  /** fetch data from the table: "pokemon_v2_movebattlestyle" using primary key columns */
  pokemon_v2_movebattlestyle_by_pk?: Maybe<Pokemon_V2_Movebattlestyle>;
  /** fetch data from the table: "pokemon_v2_movebattlestylename" */
  pokemon_v2_movebattlestylename: Array<Pokemon_V2_Movebattlestylename>;
  /** fetch aggregated fields from the table: "pokemon_v2_movebattlestylename" */
  pokemon_v2_movebattlestylename_aggregate: Pokemon_V2_Movebattlestylename_Aggregate;
  /** fetch data from the table: "pokemon_v2_movebattlestylename" using primary key columns */
  pokemon_v2_movebattlestylename_by_pk?: Maybe<Pokemon_V2_Movebattlestylename>;
  /** fetch data from the table: "pokemon_v2_movechange" */
  pokemon_v2_movechange: Array<Pokemon_V2_Movechange>;
  /** fetch aggregated fields from the table: "pokemon_v2_movechange" */
  pokemon_v2_movechange_aggregate: Pokemon_V2_Movechange_Aggregate;
  /** fetch data from the table: "pokemon_v2_movechange" using primary key columns */
  pokemon_v2_movechange_by_pk?: Maybe<Pokemon_V2_Movechange>;
  /** fetch data from the table: "pokemon_v2_movedamageclass" */
  pokemon_v2_movedamageclass: Array<Pokemon_V2_Movedamageclass>;
  /** fetch aggregated fields from the table: "pokemon_v2_movedamageclass" */
  pokemon_v2_movedamageclass_aggregate: Pokemon_V2_Movedamageclass_Aggregate;
  /** fetch data from the table: "pokemon_v2_movedamageclass" using primary key columns */
  pokemon_v2_movedamageclass_by_pk?: Maybe<Pokemon_V2_Movedamageclass>;
  /** fetch data from the table: "pokemon_v2_movedamageclassdescription" */
  pokemon_v2_movedamageclassdescription: Array<Pokemon_V2_Movedamageclassdescription>;
  /** fetch aggregated fields from the table: "pokemon_v2_movedamageclassdescription" */
  pokemon_v2_movedamageclassdescription_aggregate: Pokemon_V2_Movedamageclassdescription_Aggregate;
  /** fetch data from the table: "pokemon_v2_movedamageclassdescription" using primary key columns */
  pokemon_v2_movedamageclassdescription_by_pk?: Maybe<Pokemon_V2_Movedamageclassdescription>;
  /** fetch data from the table: "pokemon_v2_movedamageclassname" */
  pokemon_v2_movedamageclassname: Array<Pokemon_V2_Movedamageclassname>;
  /** fetch aggregated fields from the table: "pokemon_v2_movedamageclassname" */
  pokemon_v2_movedamageclassname_aggregate: Pokemon_V2_Movedamageclassname_Aggregate;
  /** fetch data from the table: "pokemon_v2_movedamageclassname" using primary key columns */
  pokemon_v2_movedamageclassname_by_pk?: Maybe<Pokemon_V2_Movedamageclassname>;
  /** fetch data from the table: "pokemon_v2_moveeffect" */
  pokemon_v2_moveeffect: Array<Pokemon_V2_Moveeffect>;
  /** fetch aggregated fields from the table: "pokemon_v2_moveeffect" */
  pokemon_v2_moveeffect_aggregate: Pokemon_V2_Moveeffect_Aggregate;
  /** fetch data from the table: "pokemon_v2_moveeffect" using primary key columns */
  pokemon_v2_moveeffect_by_pk?: Maybe<Pokemon_V2_Moveeffect>;
  /** fetch data from the table: "pokemon_v2_moveeffectchange" */
  pokemon_v2_moveeffectchange: Array<Pokemon_V2_Moveeffectchange>;
  /** fetch aggregated fields from the table: "pokemon_v2_moveeffectchange" */
  pokemon_v2_moveeffectchange_aggregate: Pokemon_V2_Moveeffectchange_Aggregate;
  /** fetch data from the table: "pokemon_v2_moveeffectchange" using primary key columns */
  pokemon_v2_moveeffectchange_by_pk?: Maybe<Pokemon_V2_Moveeffectchange>;
  /** fetch data from the table: "pokemon_v2_moveeffectchangeeffecttext" */
  pokemon_v2_moveeffectchangeeffecttext: Array<Pokemon_V2_Moveeffectchangeeffecttext>;
  /** fetch aggregated fields from the table: "pokemon_v2_moveeffectchangeeffecttext" */
  pokemon_v2_moveeffectchangeeffecttext_aggregate: Pokemon_V2_Moveeffectchangeeffecttext_Aggregate;
  /** fetch data from the table: "pokemon_v2_moveeffectchangeeffecttext" using primary key columns */
  pokemon_v2_moveeffectchangeeffecttext_by_pk?: Maybe<Pokemon_V2_Moveeffectchangeeffecttext>;
  /** fetch data from the table: "pokemon_v2_moveeffecteffecttext" */
  pokemon_v2_moveeffecteffecttext: Array<Pokemon_V2_Moveeffecteffecttext>;
  /** fetch aggregated fields from the table: "pokemon_v2_moveeffecteffecttext" */
  pokemon_v2_moveeffecteffecttext_aggregate: Pokemon_V2_Moveeffecteffecttext_Aggregate;
  /** fetch data from the table: "pokemon_v2_moveeffecteffecttext" using primary key columns */
  pokemon_v2_moveeffecteffecttext_by_pk?: Maybe<Pokemon_V2_Moveeffecteffecttext>;
  /** fetch data from the table: "pokemon_v2_moveflavortext" */
  pokemon_v2_moveflavortext: Array<Pokemon_V2_Moveflavortext>;
  /** fetch aggregated fields from the table: "pokemon_v2_moveflavortext" */
  pokemon_v2_moveflavortext_aggregate: Pokemon_V2_Moveflavortext_Aggregate;
  /** fetch data from the table: "pokemon_v2_moveflavortext" using primary key columns */
  pokemon_v2_moveflavortext_by_pk?: Maybe<Pokemon_V2_Moveflavortext>;
  /** fetch data from the table: "pokemon_v2_movelearnmethod" */
  pokemon_v2_movelearnmethod: Array<Pokemon_V2_Movelearnmethod>;
  /** fetch aggregated fields from the table: "pokemon_v2_movelearnmethod" */
  pokemon_v2_movelearnmethod_aggregate: Pokemon_V2_Movelearnmethod_Aggregate;
  /** fetch data from the table: "pokemon_v2_movelearnmethod" using primary key columns */
  pokemon_v2_movelearnmethod_by_pk?: Maybe<Pokemon_V2_Movelearnmethod>;
  /** fetch data from the table: "pokemon_v2_movelearnmethoddescription" */
  pokemon_v2_movelearnmethoddescription: Array<Pokemon_V2_Movelearnmethoddescription>;
  /** fetch aggregated fields from the table: "pokemon_v2_movelearnmethoddescription" */
  pokemon_v2_movelearnmethoddescription_aggregate: Pokemon_V2_Movelearnmethoddescription_Aggregate;
  /** fetch data from the table: "pokemon_v2_movelearnmethoddescription" using primary key columns */
  pokemon_v2_movelearnmethoddescription_by_pk?: Maybe<Pokemon_V2_Movelearnmethoddescription>;
  /** fetch data from the table: "pokemon_v2_movelearnmethodname" */
  pokemon_v2_movelearnmethodname: Array<Pokemon_V2_Movelearnmethodname>;
  /** fetch aggregated fields from the table: "pokemon_v2_movelearnmethodname" */
  pokemon_v2_movelearnmethodname_aggregate: Pokemon_V2_Movelearnmethodname_Aggregate;
  /** fetch data from the table: "pokemon_v2_movelearnmethodname" using primary key columns */
  pokemon_v2_movelearnmethodname_by_pk?: Maybe<Pokemon_V2_Movelearnmethodname>;
  /** fetch data from the table: "pokemon_v2_movemeta" */
  pokemon_v2_movemeta: Array<Pokemon_V2_Movemeta>;
  /** fetch aggregated fields from the table: "pokemon_v2_movemeta" */
  pokemon_v2_movemeta_aggregate: Pokemon_V2_Movemeta_Aggregate;
  /** fetch data from the table: "pokemon_v2_movemeta" using primary key columns */
  pokemon_v2_movemeta_by_pk?: Maybe<Pokemon_V2_Movemeta>;
  /** fetch data from the table: "pokemon_v2_movemetaailment" */
  pokemon_v2_movemetaailment: Array<Pokemon_V2_Movemetaailment>;
  /** fetch aggregated fields from the table: "pokemon_v2_movemetaailment" */
  pokemon_v2_movemetaailment_aggregate: Pokemon_V2_Movemetaailment_Aggregate;
  /** fetch data from the table: "pokemon_v2_movemetaailment" using primary key columns */
  pokemon_v2_movemetaailment_by_pk?: Maybe<Pokemon_V2_Movemetaailment>;
  /** fetch data from the table: "pokemon_v2_movemetaailmentname" */
  pokemon_v2_movemetaailmentname: Array<Pokemon_V2_Movemetaailmentname>;
  /** fetch aggregated fields from the table: "pokemon_v2_movemetaailmentname" */
  pokemon_v2_movemetaailmentname_aggregate: Pokemon_V2_Movemetaailmentname_Aggregate;
  /** fetch data from the table: "pokemon_v2_movemetaailmentname" using primary key columns */
  pokemon_v2_movemetaailmentname_by_pk?: Maybe<Pokemon_V2_Movemetaailmentname>;
  /** fetch data from the table: "pokemon_v2_movemetacategory" */
  pokemon_v2_movemetacategory: Array<Pokemon_V2_Movemetacategory>;
  /** fetch aggregated fields from the table: "pokemon_v2_movemetacategory" */
  pokemon_v2_movemetacategory_aggregate: Pokemon_V2_Movemetacategory_Aggregate;
  /** fetch data from the table: "pokemon_v2_movemetacategory" using primary key columns */
  pokemon_v2_movemetacategory_by_pk?: Maybe<Pokemon_V2_Movemetacategory>;
  /** fetch data from the table: "pokemon_v2_movemetacategorydescription" */
  pokemon_v2_movemetacategorydescription: Array<Pokemon_V2_Movemetacategorydescription>;
  /** fetch aggregated fields from the table: "pokemon_v2_movemetacategorydescription" */
  pokemon_v2_movemetacategorydescription_aggregate: Pokemon_V2_Movemetacategorydescription_Aggregate;
  /** fetch data from the table: "pokemon_v2_movemetacategorydescription" using primary key columns */
  pokemon_v2_movemetacategorydescription_by_pk?: Maybe<Pokemon_V2_Movemetacategorydescription>;
  /** fetch data from the table: "pokemon_v2_movemetastatchange" */
  pokemon_v2_movemetastatchange: Array<Pokemon_V2_Movemetastatchange>;
  /** fetch aggregated fields from the table: "pokemon_v2_movemetastatchange" */
  pokemon_v2_movemetastatchange_aggregate: Pokemon_V2_Movemetastatchange_Aggregate;
  /** fetch data from the table: "pokemon_v2_movemetastatchange" using primary key columns */
  pokemon_v2_movemetastatchange_by_pk?: Maybe<Pokemon_V2_Movemetastatchange>;
  /** fetch data from the table: "pokemon_v2_movename" */
  pokemon_v2_movename: Array<Pokemon_V2_Movename>;
  /** fetch aggregated fields from the table: "pokemon_v2_movename" */
  pokemon_v2_movename_aggregate: Pokemon_V2_Movename_Aggregate;
  /** fetch data from the table: "pokemon_v2_movename" using primary key columns */
  pokemon_v2_movename_by_pk?: Maybe<Pokemon_V2_Movename>;
  /** fetch data from the table: "pokemon_v2_movetarget" */
  pokemon_v2_movetarget: Array<Pokemon_V2_Movetarget>;
  /** fetch aggregated fields from the table: "pokemon_v2_movetarget" */
  pokemon_v2_movetarget_aggregate: Pokemon_V2_Movetarget_Aggregate;
  /** fetch data from the table: "pokemon_v2_movetarget" using primary key columns */
  pokemon_v2_movetarget_by_pk?: Maybe<Pokemon_V2_Movetarget>;
  /** fetch data from the table: "pokemon_v2_movetargetdescription" */
  pokemon_v2_movetargetdescription: Array<Pokemon_V2_Movetargetdescription>;
  /** fetch aggregated fields from the table: "pokemon_v2_movetargetdescription" */
  pokemon_v2_movetargetdescription_aggregate: Pokemon_V2_Movetargetdescription_Aggregate;
  /** fetch data from the table: "pokemon_v2_movetargetdescription" using primary key columns */
  pokemon_v2_movetargetdescription_by_pk?: Maybe<Pokemon_V2_Movetargetdescription>;
  /** fetch data from the table: "pokemon_v2_movetargetname" */
  pokemon_v2_movetargetname: Array<Pokemon_V2_Movetargetname>;
  /** fetch aggregated fields from the table: "pokemon_v2_movetargetname" */
  pokemon_v2_movetargetname_aggregate: Pokemon_V2_Movetargetname_Aggregate;
  /** fetch data from the table: "pokemon_v2_movetargetname" using primary key columns */
  pokemon_v2_movetargetname_by_pk?: Maybe<Pokemon_V2_Movetargetname>;
  /** fetch data from the table: "pokemon_v2_nature" */
  pokemon_v2_nature: Array<Pokemon_V2_Nature>;
  /** fetch aggregated fields from the table: "pokemon_v2_nature" */
  pokemon_v2_nature_aggregate: Pokemon_V2_Nature_Aggregate;
  /** fetch data from the table: "pokemon_v2_nature" using primary key columns */
  pokemon_v2_nature_by_pk?: Maybe<Pokemon_V2_Nature>;
  /** fetch data from the table: "pokemon_v2_naturebattlestylepreference" */
  pokemon_v2_naturebattlestylepreference: Array<Pokemon_V2_Naturebattlestylepreference>;
  /** fetch aggregated fields from the table: "pokemon_v2_naturebattlestylepreference" */
  pokemon_v2_naturebattlestylepreference_aggregate: Pokemon_V2_Naturebattlestylepreference_Aggregate;
  /** fetch data from the table: "pokemon_v2_naturebattlestylepreference" using primary key columns */
  pokemon_v2_naturebattlestylepreference_by_pk?: Maybe<Pokemon_V2_Naturebattlestylepreference>;
  /** fetch data from the table: "pokemon_v2_naturename" */
  pokemon_v2_naturename: Array<Pokemon_V2_Naturename>;
  /** fetch aggregated fields from the table: "pokemon_v2_naturename" */
  pokemon_v2_naturename_aggregate: Pokemon_V2_Naturename_Aggregate;
  /** fetch data from the table: "pokemon_v2_naturename" using primary key columns */
  pokemon_v2_naturename_by_pk?: Maybe<Pokemon_V2_Naturename>;
  /** fetch data from the table: "pokemon_v2_naturepokeathlonstat" */
  pokemon_v2_naturepokeathlonstat: Array<Pokemon_V2_Naturepokeathlonstat>;
  /** fetch aggregated fields from the table: "pokemon_v2_naturepokeathlonstat" */
  pokemon_v2_naturepokeathlonstat_aggregate: Pokemon_V2_Naturepokeathlonstat_Aggregate;
  /** fetch data from the table: "pokemon_v2_naturepokeathlonstat" using primary key columns */
  pokemon_v2_naturepokeathlonstat_by_pk?: Maybe<Pokemon_V2_Naturepokeathlonstat>;
  /** fetch data from the table: "pokemon_v2_palpark" */
  pokemon_v2_palpark: Array<Pokemon_V2_Palpark>;
  /** fetch aggregated fields from the table: "pokemon_v2_palpark" */
  pokemon_v2_palpark_aggregate: Pokemon_V2_Palpark_Aggregate;
  /** fetch data from the table: "pokemon_v2_palpark" using primary key columns */
  pokemon_v2_palpark_by_pk?: Maybe<Pokemon_V2_Palpark>;
  /** fetch data from the table: "pokemon_v2_palparkarea" */
  pokemon_v2_palparkarea: Array<Pokemon_V2_Palparkarea>;
  /** fetch aggregated fields from the table: "pokemon_v2_palparkarea" */
  pokemon_v2_palparkarea_aggregate: Pokemon_V2_Palparkarea_Aggregate;
  /** fetch data from the table: "pokemon_v2_palparkarea" using primary key columns */
  pokemon_v2_palparkarea_by_pk?: Maybe<Pokemon_V2_Palparkarea>;
  /** fetch data from the table: "pokemon_v2_palparkareaname" */
  pokemon_v2_palparkareaname: Array<Pokemon_V2_Palparkareaname>;
  /** fetch aggregated fields from the table: "pokemon_v2_palparkareaname" */
  pokemon_v2_palparkareaname_aggregate: Pokemon_V2_Palparkareaname_Aggregate;
  /** fetch data from the table: "pokemon_v2_palparkareaname" using primary key columns */
  pokemon_v2_palparkareaname_by_pk?: Maybe<Pokemon_V2_Palparkareaname>;
  /** fetch data from the table: "pokemon_v2_pokeathlonstat" */
  pokemon_v2_pokeathlonstat: Array<Pokemon_V2_Pokeathlonstat>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokeathlonstat" */
  pokemon_v2_pokeathlonstat_aggregate: Pokemon_V2_Pokeathlonstat_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokeathlonstat" using primary key columns */
  pokemon_v2_pokeathlonstat_by_pk?: Maybe<Pokemon_V2_Pokeathlonstat>;
  /** fetch data from the table: "pokemon_v2_pokeathlonstatname" */
  pokemon_v2_pokeathlonstatname: Array<Pokemon_V2_Pokeathlonstatname>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokeathlonstatname" */
  pokemon_v2_pokeathlonstatname_aggregate: Pokemon_V2_Pokeathlonstatname_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokeathlonstatname" using primary key columns */
  pokemon_v2_pokeathlonstatname_by_pk?: Maybe<Pokemon_V2_Pokeathlonstatname>;
  /** fetch data from the table: "pokemon_v2_pokedex" */
  pokemon_v2_pokedex: Array<Pokemon_V2_Pokedex>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokedex" */
  pokemon_v2_pokedex_aggregate: Pokemon_V2_Pokedex_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokedex" using primary key columns */
  pokemon_v2_pokedex_by_pk?: Maybe<Pokemon_V2_Pokedex>;
  /** fetch data from the table: "pokemon_v2_pokedexdescription" */
  pokemon_v2_pokedexdescription: Array<Pokemon_V2_Pokedexdescription>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokedexdescription" */
  pokemon_v2_pokedexdescription_aggregate: Pokemon_V2_Pokedexdescription_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokedexdescription" using primary key columns */
  pokemon_v2_pokedexdescription_by_pk?: Maybe<Pokemon_V2_Pokedexdescription>;
  /** fetch data from the table: "pokemon_v2_pokedexname" */
  pokemon_v2_pokedexname: Array<Pokemon_V2_Pokedexname>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokedexname" */
  pokemon_v2_pokedexname_aggregate: Pokemon_V2_Pokedexname_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokedexname" using primary key columns */
  pokemon_v2_pokedexname_by_pk?: Maybe<Pokemon_V2_Pokedexname>;
  /** fetch data from the table: "pokemon_v2_pokedexversiongroup" */
  pokemon_v2_pokedexversiongroup: Array<Pokemon_V2_Pokedexversiongroup>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokedexversiongroup" */
  pokemon_v2_pokedexversiongroup_aggregate: Pokemon_V2_Pokedexversiongroup_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokedexversiongroup" using primary key columns */
  pokemon_v2_pokedexversiongroup_by_pk?: Maybe<Pokemon_V2_Pokedexversiongroup>;
  /** fetch data from the table: "pokemon_v2_pokemon" */
  pokemon_v2_pokemon: Array<Pokemon_V2_Pokemon>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemon" */
  pokemon_v2_pokemon_aggregate: Pokemon_V2_Pokemon_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemon" using primary key columns */
  pokemon_v2_pokemon_by_pk?: Maybe<Pokemon_V2_Pokemon>;
  /** fetch data from the table: "pokemon_v2_pokemonability" */
  pokemon_v2_pokemonability: Array<Pokemon_V2_Pokemonability>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonability" */
  pokemon_v2_pokemonability_aggregate: Pokemon_V2_Pokemonability_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonability" using primary key columns */
  pokemon_v2_pokemonability_by_pk?: Maybe<Pokemon_V2_Pokemonability>;
  /** fetch data from the table: "pokemon_v2_pokemonabilitypast" */
  pokemon_v2_pokemonabilitypast: Array<Pokemon_V2_Pokemonabilitypast>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonabilitypast" */
  pokemon_v2_pokemonabilitypast_aggregate: Pokemon_V2_Pokemonabilitypast_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonabilitypast" using primary key columns */
  pokemon_v2_pokemonabilitypast_by_pk?: Maybe<Pokemon_V2_Pokemonabilitypast>;
  /** fetch data from the table: "pokemon_v2_pokemoncolor" */
  pokemon_v2_pokemoncolor: Array<Pokemon_V2_Pokemoncolor>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemoncolor" */
  pokemon_v2_pokemoncolor_aggregate: Pokemon_V2_Pokemoncolor_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemoncolor" using primary key columns */
  pokemon_v2_pokemoncolor_by_pk?: Maybe<Pokemon_V2_Pokemoncolor>;
  /** fetch data from the table: "pokemon_v2_pokemoncolorname" */
  pokemon_v2_pokemoncolorname: Array<Pokemon_V2_Pokemoncolorname>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemoncolorname" */
  pokemon_v2_pokemoncolorname_aggregate: Pokemon_V2_Pokemoncolorname_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemoncolorname" using primary key columns */
  pokemon_v2_pokemoncolorname_by_pk?: Maybe<Pokemon_V2_Pokemoncolorname>;
  /** fetch data from the table: "pokemon_v2_pokemoncries" */
  pokemon_v2_pokemoncries: Array<Pokemon_V2_Pokemoncries>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemoncries" */
  pokemon_v2_pokemoncries_aggregate: Pokemon_V2_Pokemoncries_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemoncries" using primary key columns */
  pokemon_v2_pokemoncries_by_pk?: Maybe<Pokemon_V2_Pokemoncries>;
  /** fetch data from the table: "pokemon_v2_pokemondexnumber" */
  pokemon_v2_pokemondexnumber: Array<Pokemon_V2_Pokemondexnumber>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemondexnumber" */
  pokemon_v2_pokemondexnumber_aggregate: Pokemon_V2_Pokemondexnumber_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemondexnumber" using primary key columns */
  pokemon_v2_pokemondexnumber_by_pk?: Maybe<Pokemon_V2_Pokemondexnumber>;
  /** fetch data from the table: "pokemon_v2_pokemonegggroup" */
  pokemon_v2_pokemonegggroup: Array<Pokemon_V2_Pokemonegggroup>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonegggroup" */
  pokemon_v2_pokemonegggroup_aggregate: Pokemon_V2_Pokemonegggroup_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonegggroup" using primary key columns */
  pokemon_v2_pokemonegggroup_by_pk?: Maybe<Pokemon_V2_Pokemonegggroup>;
  /** fetch data from the table: "pokemon_v2_pokemonevolution" */
  pokemon_v2_pokemonevolution: Array<Pokemon_V2_Pokemonevolution>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonevolution" */
  pokemon_v2_pokemonevolution_aggregate: Pokemon_V2_Pokemonevolution_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonevolution" using primary key columns */
  pokemon_v2_pokemonevolution_by_pk?: Maybe<Pokemon_V2_Pokemonevolution>;
  /** fetch data from the table: "pokemon_v2_pokemonform" */
  pokemon_v2_pokemonform: Array<Pokemon_V2_Pokemonform>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonform" */
  pokemon_v2_pokemonform_aggregate: Pokemon_V2_Pokemonform_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonform" using primary key columns */
  pokemon_v2_pokemonform_by_pk?: Maybe<Pokemon_V2_Pokemonform>;
  /** fetch data from the table: "pokemon_v2_pokemonformgeneration" */
  pokemon_v2_pokemonformgeneration: Array<Pokemon_V2_Pokemonformgeneration>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonformgeneration" */
  pokemon_v2_pokemonformgeneration_aggregate: Pokemon_V2_Pokemonformgeneration_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonformgeneration" using primary key columns */
  pokemon_v2_pokemonformgeneration_by_pk?: Maybe<Pokemon_V2_Pokemonformgeneration>;
  /** fetch data from the table: "pokemon_v2_pokemonformname" */
  pokemon_v2_pokemonformname: Array<Pokemon_V2_Pokemonformname>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonformname" */
  pokemon_v2_pokemonformname_aggregate: Pokemon_V2_Pokemonformname_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonformname" using primary key columns */
  pokemon_v2_pokemonformname_by_pk?: Maybe<Pokemon_V2_Pokemonformname>;
  /** fetch data from the table: "pokemon_v2_pokemonformsprites" */
  pokemon_v2_pokemonformsprites: Array<Pokemon_V2_Pokemonformsprites>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonformsprites" */
  pokemon_v2_pokemonformsprites_aggregate: Pokemon_V2_Pokemonformsprites_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonformsprites" using primary key columns */
  pokemon_v2_pokemonformsprites_by_pk?: Maybe<Pokemon_V2_Pokemonformsprites>;
  /** fetch data from the table: "pokemon_v2_pokemonformtype" */
  pokemon_v2_pokemonformtype: Array<Pokemon_V2_Pokemonformtype>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonformtype" */
  pokemon_v2_pokemonformtype_aggregate: Pokemon_V2_Pokemonformtype_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonformtype" using primary key columns */
  pokemon_v2_pokemonformtype_by_pk?: Maybe<Pokemon_V2_Pokemonformtype>;
  /** fetch data from the table: "pokemon_v2_pokemongameindex" */
  pokemon_v2_pokemongameindex: Array<Pokemon_V2_Pokemongameindex>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemongameindex" */
  pokemon_v2_pokemongameindex_aggregate: Pokemon_V2_Pokemongameindex_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemongameindex" using primary key columns */
  pokemon_v2_pokemongameindex_by_pk?: Maybe<Pokemon_V2_Pokemongameindex>;
  /** fetch data from the table: "pokemon_v2_pokemonhabitat" */
  pokemon_v2_pokemonhabitat: Array<Pokemon_V2_Pokemonhabitat>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonhabitat" */
  pokemon_v2_pokemonhabitat_aggregate: Pokemon_V2_Pokemonhabitat_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonhabitat" using primary key columns */
  pokemon_v2_pokemonhabitat_by_pk?: Maybe<Pokemon_V2_Pokemonhabitat>;
  /** fetch data from the table: "pokemon_v2_pokemonhabitatname" */
  pokemon_v2_pokemonhabitatname: Array<Pokemon_V2_Pokemonhabitatname>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonhabitatname" */
  pokemon_v2_pokemonhabitatname_aggregate: Pokemon_V2_Pokemonhabitatname_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonhabitatname" using primary key columns */
  pokemon_v2_pokemonhabitatname_by_pk?: Maybe<Pokemon_V2_Pokemonhabitatname>;
  /** fetch data from the table: "pokemon_v2_pokemonitem" */
  pokemon_v2_pokemonitem: Array<Pokemon_V2_Pokemonitem>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonitem" */
  pokemon_v2_pokemonitem_aggregate: Pokemon_V2_Pokemonitem_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonitem" using primary key columns */
  pokemon_v2_pokemonitem_by_pk?: Maybe<Pokemon_V2_Pokemonitem>;
  /** fetch data from the table: "pokemon_v2_pokemonmove" */
  pokemon_v2_pokemonmove: Array<Pokemon_V2_Pokemonmove>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonmove" */
  pokemon_v2_pokemonmove_aggregate: Pokemon_V2_Pokemonmove_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonmove" using primary key columns */
  pokemon_v2_pokemonmove_by_pk?: Maybe<Pokemon_V2_Pokemonmove>;
  /** fetch data from the table: "pokemon_v2_pokemonshape" */
  pokemon_v2_pokemonshape: Array<Pokemon_V2_Pokemonshape>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonshape" */
  pokemon_v2_pokemonshape_aggregate: Pokemon_V2_Pokemonshape_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonshape" using primary key columns */
  pokemon_v2_pokemonshape_by_pk?: Maybe<Pokemon_V2_Pokemonshape>;
  /** fetch data from the table: "pokemon_v2_pokemonshapename" */
  pokemon_v2_pokemonshapename: Array<Pokemon_V2_Pokemonshapename>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonshapename" */
  pokemon_v2_pokemonshapename_aggregate: Pokemon_V2_Pokemonshapename_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonshapename" using primary key columns */
  pokemon_v2_pokemonshapename_by_pk?: Maybe<Pokemon_V2_Pokemonshapename>;
  /** fetch data from the table: "pokemon_v2_pokemonspecies" */
  pokemon_v2_pokemonspecies: Array<Pokemon_V2_Pokemonspecies>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonspecies" */
  pokemon_v2_pokemonspecies_aggregate: Pokemon_V2_Pokemonspecies_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonspecies" using primary key columns */
  pokemon_v2_pokemonspecies_by_pk?: Maybe<Pokemon_V2_Pokemonspecies>;
  /** fetch data from the table: "pokemon_v2_pokemonspeciesdescription" */
  pokemon_v2_pokemonspeciesdescription: Array<Pokemon_V2_Pokemonspeciesdescription>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonspeciesdescription" */
  pokemon_v2_pokemonspeciesdescription_aggregate: Pokemon_V2_Pokemonspeciesdescription_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonspeciesdescription" using primary key columns */
  pokemon_v2_pokemonspeciesdescription_by_pk?: Maybe<Pokemon_V2_Pokemonspeciesdescription>;
  /** fetch data from the table: "pokemon_v2_pokemonspeciesflavortext" */
  pokemon_v2_pokemonspeciesflavortext: Array<Pokemon_V2_Pokemonspeciesflavortext>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonspeciesflavortext" */
  pokemon_v2_pokemonspeciesflavortext_aggregate: Pokemon_V2_Pokemonspeciesflavortext_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonspeciesflavortext" using primary key columns */
  pokemon_v2_pokemonspeciesflavortext_by_pk?: Maybe<Pokemon_V2_Pokemonspeciesflavortext>;
  /** fetch data from the table: "pokemon_v2_pokemonspeciesname" */
  pokemon_v2_pokemonspeciesname: Array<Pokemon_V2_Pokemonspeciesname>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonspeciesname" */
  pokemon_v2_pokemonspeciesname_aggregate: Pokemon_V2_Pokemonspeciesname_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonspeciesname" using primary key columns */
  pokemon_v2_pokemonspeciesname_by_pk?: Maybe<Pokemon_V2_Pokemonspeciesname>;
  /** fetch data from the table: "pokemon_v2_pokemonsprites" */
  pokemon_v2_pokemonsprites: Array<Pokemon_V2_Pokemonsprites>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonsprites" */
  pokemon_v2_pokemonsprites_aggregate: Pokemon_V2_Pokemonsprites_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonsprites" using primary key columns */
  pokemon_v2_pokemonsprites_by_pk?: Maybe<Pokemon_V2_Pokemonsprites>;
  /** fetch data from the table: "pokemon_v2_pokemonstat" */
  pokemon_v2_pokemonstat: Array<Pokemon_V2_Pokemonstat>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonstat" */
  pokemon_v2_pokemonstat_aggregate: Pokemon_V2_Pokemonstat_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonstat" using primary key columns */
  pokemon_v2_pokemonstat_by_pk?: Maybe<Pokemon_V2_Pokemonstat>;
  /** fetch data from the table: "pokemon_v2_pokemontype" */
  pokemon_v2_pokemontype: Array<Pokemon_V2_Pokemontype>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemontype" */
  pokemon_v2_pokemontype_aggregate: Pokemon_V2_Pokemontype_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemontype" using primary key columns */
  pokemon_v2_pokemontype_by_pk?: Maybe<Pokemon_V2_Pokemontype>;
  /** fetch data from the table: "pokemon_v2_pokemontypepast" */
  pokemon_v2_pokemontypepast: Array<Pokemon_V2_Pokemontypepast>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemontypepast" */
  pokemon_v2_pokemontypepast_aggregate: Pokemon_V2_Pokemontypepast_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemontypepast" using primary key columns */
  pokemon_v2_pokemontypepast_by_pk?: Maybe<Pokemon_V2_Pokemontypepast>;
  /** fetch data from the table: "pokemon_v2_region" */
  pokemon_v2_region: Array<Pokemon_V2_Region>;
  /** fetch aggregated fields from the table: "pokemon_v2_region" */
  pokemon_v2_region_aggregate: Pokemon_V2_Region_Aggregate;
  /** fetch data from the table: "pokemon_v2_region" using primary key columns */
  pokemon_v2_region_by_pk?: Maybe<Pokemon_V2_Region>;
  /** fetch data from the table: "pokemon_v2_regionname" */
  pokemon_v2_regionname: Array<Pokemon_V2_Regionname>;
  /** fetch aggregated fields from the table: "pokemon_v2_regionname" */
  pokemon_v2_regionname_aggregate: Pokemon_V2_Regionname_Aggregate;
  /** fetch data from the table: "pokemon_v2_regionname" using primary key columns */
  pokemon_v2_regionname_by_pk?: Maybe<Pokemon_V2_Regionname>;
  /** fetch data from the table: "pokemon_v2_stat" */
  pokemon_v2_stat: Array<Pokemon_V2_Stat>;
  /** fetch aggregated fields from the table: "pokemon_v2_stat" */
  pokemon_v2_stat_aggregate: Pokemon_V2_Stat_Aggregate;
  /** fetch data from the table: "pokemon_v2_stat" using primary key columns */
  pokemon_v2_stat_by_pk?: Maybe<Pokemon_V2_Stat>;
  /** fetch data from the table: "pokemon_v2_statname" */
  pokemon_v2_statname: Array<Pokemon_V2_Statname>;
  /** fetch aggregated fields from the table: "pokemon_v2_statname" */
  pokemon_v2_statname_aggregate: Pokemon_V2_Statname_Aggregate;
  /** fetch data from the table: "pokemon_v2_statname" using primary key columns */
  pokemon_v2_statname_by_pk?: Maybe<Pokemon_V2_Statname>;
  /** fetch data from the table: "pokemon_v2_supercontestcombo" */
  pokemon_v2_supercontestcombo: Array<Pokemon_V2_Supercontestcombo>;
  /** fetch aggregated fields from the table: "pokemon_v2_supercontestcombo" */
  pokemon_v2_supercontestcombo_aggregate: Pokemon_V2_Supercontestcombo_Aggregate;
  /** fetch data from the table: "pokemon_v2_supercontestcombo" using primary key columns */
  pokemon_v2_supercontestcombo_by_pk?: Maybe<Pokemon_V2_Supercontestcombo>;
  /** fetch data from the table: "pokemon_v2_supercontesteffect" */
  pokemon_v2_supercontesteffect: Array<Pokemon_V2_Supercontesteffect>;
  /** fetch aggregated fields from the table: "pokemon_v2_supercontesteffect" */
  pokemon_v2_supercontesteffect_aggregate: Pokemon_V2_Supercontesteffect_Aggregate;
  /** fetch data from the table: "pokemon_v2_supercontesteffect" using primary key columns */
  pokemon_v2_supercontesteffect_by_pk?: Maybe<Pokemon_V2_Supercontesteffect>;
  /** fetch data from the table: "pokemon_v2_supercontesteffectflavortext" */
  pokemon_v2_supercontesteffectflavortext: Array<Pokemon_V2_Supercontesteffectflavortext>;
  /** fetch aggregated fields from the table: "pokemon_v2_supercontesteffectflavortext" */
  pokemon_v2_supercontesteffectflavortext_aggregate: Pokemon_V2_Supercontesteffectflavortext_Aggregate;
  /** fetch data from the table: "pokemon_v2_supercontesteffectflavortext" using primary key columns */
  pokemon_v2_supercontesteffectflavortext_by_pk?: Maybe<Pokemon_V2_Supercontesteffectflavortext>;
  /** fetch data from the table: "pokemon_v2_type" */
  pokemon_v2_type: Array<Pokemon_V2_Type>;
  /** fetch aggregated fields from the table: "pokemon_v2_type" */
  pokemon_v2_type_aggregate: Pokemon_V2_Type_Aggregate;
  /** fetch data from the table: "pokemon_v2_type" using primary key columns */
  pokemon_v2_type_by_pk?: Maybe<Pokemon_V2_Type>;
  /** fetch data from the table: "pokemon_v2_typeefficacy" */
  pokemon_v2_typeefficacy: Array<Pokemon_V2_Typeefficacy>;
  /** fetch aggregated fields from the table: "pokemon_v2_typeefficacy" */
  pokemon_v2_typeefficacy_aggregate: Pokemon_V2_Typeefficacy_Aggregate;
  /** fetch data from the table: "pokemon_v2_typeefficacy" using primary key columns */
  pokemon_v2_typeefficacy_by_pk?: Maybe<Pokemon_V2_Typeefficacy>;
  /** fetch data from the table: "pokemon_v2_typeefficacypast" */
  pokemon_v2_typeefficacypast: Array<Pokemon_V2_Typeefficacypast>;
  /** fetch aggregated fields from the table: "pokemon_v2_typeefficacypast" */
  pokemon_v2_typeefficacypast_aggregate: Pokemon_V2_Typeefficacypast_Aggregate;
  /** fetch data from the table: "pokemon_v2_typeefficacypast" using primary key columns */
  pokemon_v2_typeefficacypast_by_pk?: Maybe<Pokemon_V2_Typeefficacypast>;
  /** fetch data from the table: "pokemon_v2_typegameindex" */
  pokemon_v2_typegameindex: Array<Pokemon_V2_Typegameindex>;
  /** fetch aggregated fields from the table: "pokemon_v2_typegameindex" */
  pokemon_v2_typegameindex_aggregate: Pokemon_V2_Typegameindex_Aggregate;
  /** fetch data from the table: "pokemon_v2_typegameindex" using primary key columns */
  pokemon_v2_typegameindex_by_pk?: Maybe<Pokemon_V2_Typegameindex>;
  /** fetch data from the table: "pokemon_v2_typename" */
  pokemon_v2_typename: Array<Pokemon_V2_Typename>;
  /** fetch aggregated fields from the table: "pokemon_v2_typename" */
  pokemon_v2_typename_aggregate: Pokemon_V2_Typename_Aggregate;
  /** fetch data from the table: "pokemon_v2_typename" using primary key columns */
  pokemon_v2_typename_by_pk?: Maybe<Pokemon_V2_Typename>;
  /** fetch data from the table: "pokemon_v2_version" */
  pokemon_v2_version: Array<Pokemon_V2_Version>;
  /** fetch aggregated fields from the table: "pokemon_v2_version" */
  pokemon_v2_version_aggregate: Pokemon_V2_Version_Aggregate;
  /** fetch data from the table: "pokemon_v2_version" using primary key columns */
  pokemon_v2_version_by_pk?: Maybe<Pokemon_V2_Version>;
  /** fetch data from the table: "pokemon_v2_versiongroup" */
  pokemon_v2_versiongroup: Array<Pokemon_V2_Versiongroup>;
  /** fetch aggregated fields from the table: "pokemon_v2_versiongroup" */
  pokemon_v2_versiongroup_aggregate: Pokemon_V2_Versiongroup_Aggregate;
  /** fetch data from the table: "pokemon_v2_versiongroup" using primary key columns */
  pokemon_v2_versiongroup_by_pk?: Maybe<Pokemon_V2_Versiongroup>;
  /** fetch data from the table: "pokemon_v2_versiongroupmovelearnmethod" */
  pokemon_v2_versiongroupmovelearnmethod: Array<Pokemon_V2_Versiongroupmovelearnmethod>;
  /** fetch aggregated fields from the table: "pokemon_v2_versiongroupmovelearnmethod" */
  pokemon_v2_versiongroupmovelearnmethod_aggregate: Pokemon_V2_Versiongroupmovelearnmethod_Aggregate;
  /** fetch data from the table: "pokemon_v2_versiongroupmovelearnmethod" using primary key columns */
  pokemon_v2_versiongroupmovelearnmethod_by_pk?: Maybe<Pokemon_V2_Versiongroupmovelearnmethod>;
  /** fetch data from the table: "pokemon_v2_versiongroupregion" */
  pokemon_v2_versiongroupregion: Array<Pokemon_V2_Versiongroupregion>;
  /** fetch aggregated fields from the table: "pokemon_v2_versiongroupregion" */
  pokemon_v2_versiongroupregion_aggregate: Pokemon_V2_Versiongroupregion_Aggregate;
  /** fetch data from the table: "pokemon_v2_versiongroupregion" using primary key columns */
  pokemon_v2_versiongroupregion_by_pk?: Maybe<Pokemon_V2_Versiongroupregion>;
  /** fetch data from the table: "pokemon_v2_versionname" */
  pokemon_v2_versionname: Array<Pokemon_V2_Versionname>;
  /** fetch aggregated fields from the table: "pokemon_v2_versionname" */
  pokemon_v2_versionname_aggregate: Pokemon_V2_Versionname_Aggregate;
  /** fetch data from the table: "pokemon_v2_versionname" using primary key columns */
  pokemon_v2_versionname_by_pk?: Maybe<Pokemon_V2_Versionname>;
};


export type Query_RootAuth_GroupArgs = {
  distinct_on?: InputMaybe<Array<Auth_Group_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Auth_Group_Order_By>>;
  where?: InputMaybe<Auth_Group_Bool_Exp>;
};


export type Query_RootAuth_Group_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Auth_Group_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Auth_Group_Order_By>>;
  where?: InputMaybe<Auth_Group_Bool_Exp>;
};


export type Query_RootAuth_Group_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootAuth_Group_PermissionsArgs = {
  distinct_on?: InputMaybe<Array<Auth_Group_Permissions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Auth_Group_Permissions_Order_By>>;
  where?: InputMaybe<Auth_Group_Permissions_Bool_Exp>;
};


export type Query_RootAuth_Group_Permissions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Auth_Group_Permissions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Auth_Group_Permissions_Order_By>>;
  where?: InputMaybe<Auth_Group_Permissions_Bool_Exp>;
};


export type Query_RootAuth_Group_Permissions_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootAuth_PermissionArgs = {
  distinct_on?: InputMaybe<Array<Auth_Permission_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Auth_Permission_Order_By>>;
  where?: InputMaybe<Auth_Permission_Bool_Exp>;
};


export type Query_RootAuth_Permission_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Auth_Permission_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Auth_Permission_Order_By>>;
  where?: InputMaybe<Auth_Permission_Bool_Exp>;
};


export type Query_RootAuth_Permission_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootAuth_UserArgs = {
  distinct_on?: InputMaybe<Array<Auth_User_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Auth_User_Order_By>>;
  where?: InputMaybe<Auth_User_Bool_Exp>;
};


export type Query_RootAuth_User_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Auth_User_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Auth_User_Order_By>>;
  where?: InputMaybe<Auth_User_Bool_Exp>;
};


export type Query_RootAuth_User_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootAuth_User_GroupsArgs = {
  distinct_on?: InputMaybe<Array<Auth_User_Groups_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Auth_User_Groups_Order_By>>;
  where?: InputMaybe<Auth_User_Groups_Bool_Exp>;
};


export type Query_RootAuth_User_Groups_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Auth_User_Groups_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Auth_User_Groups_Order_By>>;
  where?: InputMaybe<Auth_User_Groups_Bool_Exp>;
};


export type Query_RootAuth_User_Groups_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootAuth_User_User_PermissionsArgs = {
  distinct_on?: InputMaybe<Array<Auth_User_User_Permissions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Auth_User_User_Permissions_Order_By>>;
  where?: InputMaybe<Auth_User_User_Permissions_Bool_Exp>;
};


export type Query_RootAuth_User_User_Permissions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Auth_User_User_Permissions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Auth_User_User_Permissions_Order_By>>;
  where?: InputMaybe<Auth_User_User_Permissions_Bool_Exp>;
};


export type Query_RootAuth_User_User_Permissions_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootDjango_Admin_LogArgs = {
  distinct_on?: InputMaybe<Array<Django_Admin_Log_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Django_Admin_Log_Order_By>>;
  where?: InputMaybe<Django_Admin_Log_Bool_Exp>;
};


export type Query_RootDjango_Admin_Log_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Django_Admin_Log_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Django_Admin_Log_Order_By>>;
  where?: InputMaybe<Django_Admin_Log_Bool_Exp>;
};


export type Query_RootDjango_Admin_Log_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootDjango_Content_TypeArgs = {
  distinct_on?: InputMaybe<Array<Django_Content_Type_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Django_Content_Type_Order_By>>;
  where?: InputMaybe<Django_Content_Type_Bool_Exp>;
};


export type Query_RootDjango_Content_Type_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Django_Content_Type_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Django_Content_Type_Order_By>>;
  where?: InputMaybe<Django_Content_Type_Bool_Exp>;
};


export type Query_RootDjango_Content_Type_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootDjango_MigrationsArgs = {
  distinct_on?: InputMaybe<Array<Django_Migrations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Django_Migrations_Order_By>>;
  where?: InputMaybe<Django_Migrations_Bool_Exp>;
};


export type Query_RootDjango_Migrations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Django_Migrations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Django_Migrations_Order_By>>;
  where?: InputMaybe<Django_Migrations_Bool_Exp>;
};


export type Query_RootDjango_Migrations_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootDjango_SessionArgs = {
  distinct_on?: InputMaybe<Array<Django_Session_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Django_Session_Order_By>>;
  where?: InputMaybe<Django_Session_Bool_Exp>;
};


export type Query_RootDjango_Session_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Django_Session_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Django_Session_Order_By>>;
  where?: InputMaybe<Django_Session_Bool_Exp>;
};


export type Query_RootDjango_Session_By_PkArgs = {
  session_key: Scalars['String']['input'];
};


export type Query_RootDjango_SiteArgs = {
  distinct_on?: InputMaybe<Array<Django_Site_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Django_Site_Order_By>>;
  where?: InputMaybe<Django_Site_Bool_Exp>;
};


export type Query_RootDjango_Site_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Django_Site_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Django_Site_Order_By>>;
  where?: InputMaybe<Django_Site_Bool_Exp>;
};


export type Query_RootDjango_Site_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_AbilityArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Ability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Ability_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Ability_Bool_Exp>;
};


export type Query_RootPokemon_V2_Ability_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Ability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Ability_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Ability_Bool_Exp>;
};


export type Query_RootPokemon_V2_Ability_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_AbilitychangeArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Abilitychange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Abilitychange_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Abilitychange_Bool_Exp>;
};


export type Query_RootPokemon_V2_Abilitychange_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Abilitychange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Abilitychange_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Abilitychange_Bool_Exp>;
};


export type Query_RootPokemon_V2_Abilitychange_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_AbilitychangeeffecttextArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Abilitychangeeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Abilitychangeeffecttext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Abilitychangeeffecttext_Bool_Exp>;
};


export type Query_RootPokemon_V2_Abilitychangeeffecttext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Abilitychangeeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Abilitychangeeffecttext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Abilitychangeeffecttext_Bool_Exp>;
};


export type Query_RootPokemon_V2_Abilitychangeeffecttext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_AbilityeffecttextArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Abilityeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Abilityeffecttext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Abilityeffecttext_Bool_Exp>;
};


export type Query_RootPokemon_V2_Abilityeffecttext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Abilityeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Abilityeffecttext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Abilityeffecttext_Bool_Exp>;
};


export type Query_RootPokemon_V2_Abilityeffecttext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_AbilityflavortextArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Abilityflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Abilityflavortext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Abilityflavortext_Bool_Exp>;
};


export type Query_RootPokemon_V2_Abilityflavortext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Abilityflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Abilityflavortext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Abilityflavortext_Bool_Exp>;
};


export type Query_RootPokemon_V2_Abilityflavortext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_AbilitynameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Abilityname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Abilityname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Abilityname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Abilityname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Abilityname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Abilityname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Abilityname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Abilityname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_BerryArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Berry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Berry_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Berry_Bool_Exp>;
};


export type Query_RootPokemon_V2_Berry_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Berry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Berry_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Berry_Bool_Exp>;
};


export type Query_RootPokemon_V2_Berry_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_BerryfirmnessArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Berryfirmness_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Berryfirmness_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Berryfirmness_Bool_Exp>;
};


export type Query_RootPokemon_V2_Berryfirmness_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Berryfirmness_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Berryfirmness_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Berryfirmness_Bool_Exp>;
};


export type Query_RootPokemon_V2_Berryfirmness_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_BerryfirmnessnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Berryfirmnessname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Berryfirmnessname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Berryfirmnessname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Berryfirmnessname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Berryfirmnessname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Berryfirmnessname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Berryfirmnessname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Berryfirmnessname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_BerryflavorArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Berryflavor_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Berryflavor_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Berryflavor_Bool_Exp>;
};


export type Query_RootPokemon_V2_Berryflavor_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Berryflavor_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Berryflavor_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Berryflavor_Bool_Exp>;
};


export type Query_RootPokemon_V2_Berryflavor_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_BerryflavormapArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Berryflavormap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Berryflavormap_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Berryflavormap_Bool_Exp>;
};


export type Query_RootPokemon_V2_Berryflavormap_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Berryflavormap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Berryflavormap_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Berryflavormap_Bool_Exp>;
};


export type Query_RootPokemon_V2_Berryflavormap_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_BerryflavornameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Berryflavorname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Berryflavorname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Berryflavorname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Berryflavorname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Berryflavorname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Berryflavorname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Berryflavorname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Berryflavorname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_CharacteristicArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Characteristic_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Characteristic_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Characteristic_Bool_Exp>;
};


export type Query_RootPokemon_V2_Characteristic_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Characteristic_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Characteristic_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Characteristic_Bool_Exp>;
};


export type Query_RootPokemon_V2_Characteristic_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_CharacteristicdescriptionArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Characteristicdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Characteristicdescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Characteristicdescription_Bool_Exp>;
};


export type Query_RootPokemon_V2_Characteristicdescription_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Characteristicdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Characteristicdescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Characteristicdescription_Bool_Exp>;
};


export type Query_RootPokemon_V2_Characteristicdescription_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_ContestcomboArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Contestcombo_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Contestcombo_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Contestcombo_Bool_Exp>;
};


export type Query_RootPokemon_V2_Contestcombo_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Contestcombo_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Contestcombo_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Contestcombo_Bool_Exp>;
};


export type Query_RootPokemon_V2_Contestcombo_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_ContesteffectArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Contesteffect_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Contesteffect_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Contesteffect_Bool_Exp>;
};


export type Query_RootPokemon_V2_Contesteffect_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Contesteffect_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Contesteffect_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Contesteffect_Bool_Exp>;
};


export type Query_RootPokemon_V2_Contesteffect_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_ContesteffecteffecttextArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Contesteffecteffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Contesteffecteffecttext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Contesteffecteffecttext_Bool_Exp>;
};


export type Query_RootPokemon_V2_Contesteffecteffecttext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Contesteffecteffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Contesteffecteffecttext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Contesteffecteffecttext_Bool_Exp>;
};


export type Query_RootPokemon_V2_Contesteffecteffecttext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_ContesteffectflavortextArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Contesteffectflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Contesteffectflavortext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Contesteffectflavortext_Bool_Exp>;
};


export type Query_RootPokemon_V2_Contesteffectflavortext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Contesteffectflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Contesteffectflavortext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Contesteffectflavortext_Bool_Exp>;
};


export type Query_RootPokemon_V2_Contesteffectflavortext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_ContesttypeArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Contesttype_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Contesttype_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Contesttype_Bool_Exp>;
};


export type Query_RootPokemon_V2_Contesttype_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Contesttype_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Contesttype_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Contesttype_Bool_Exp>;
};


export type Query_RootPokemon_V2_Contesttype_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_ContesttypenameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Contesttypename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Contesttypename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Contesttypename_Bool_Exp>;
};


export type Query_RootPokemon_V2_Contesttypename_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Contesttypename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Contesttypename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Contesttypename_Bool_Exp>;
};


export type Query_RootPokemon_V2_Contesttypename_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_EgggroupArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Egggroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Egggroup_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Egggroup_Bool_Exp>;
};


export type Query_RootPokemon_V2_Egggroup_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Egggroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Egggroup_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Egggroup_Bool_Exp>;
};


export type Query_RootPokemon_V2_Egggroup_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_EgggroupnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Egggroupname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Egggroupname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Egggroupname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Egggroupname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Egggroupname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Egggroupname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Egggroupname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Egggroupname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_EncounterArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Encounter_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Encounter_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Encounter_Bool_Exp>;
};


export type Query_RootPokemon_V2_Encounter_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Encounter_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Encounter_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Encounter_Bool_Exp>;
};


export type Query_RootPokemon_V2_Encounter_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_EncounterconditionArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Encountercondition_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Encountercondition_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Encountercondition_Bool_Exp>;
};


export type Query_RootPokemon_V2_Encountercondition_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Encountercondition_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Encountercondition_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Encountercondition_Bool_Exp>;
};


export type Query_RootPokemon_V2_Encountercondition_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_EncounterconditionnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Encounterconditionname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Encounterconditionname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Encounterconditionname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Encounterconditionname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Encounterconditionname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Encounterconditionname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Encounterconditionname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Encounterconditionname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_EncounterconditionvalueArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Encounterconditionvalue_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Encounterconditionvalue_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Encounterconditionvalue_Bool_Exp>;
};


export type Query_RootPokemon_V2_Encounterconditionvalue_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Encounterconditionvalue_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Encounterconditionvalue_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Encounterconditionvalue_Bool_Exp>;
};


export type Query_RootPokemon_V2_Encounterconditionvalue_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_EncounterconditionvaluemapArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Encounterconditionvaluemap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Encounterconditionvaluemap_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Encounterconditionvaluemap_Bool_Exp>;
};


export type Query_RootPokemon_V2_Encounterconditionvaluemap_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Encounterconditionvaluemap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Encounterconditionvaluemap_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Encounterconditionvaluemap_Bool_Exp>;
};


export type Query_RootPokemon_V2_Encounterconditionvaluemap_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_EncounterconditionvaluenameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Encounterconditionvaluename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Encounterconditionvaluename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Encounterconditionvaluename_Bool_Exp>;
};


export type Query_RootPokemon_V2_Encounterconditionvaluename_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Encounterconditionvaluename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Encounterconditionvaluename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Encounterconditionvaluename_Bool_Exp>;
};


export type Query_RootPokemon_V2_Encounterconditionvaluename_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_EncountermethodArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Encountermethod_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Encountermethod_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Encountermethod_Bool_Exp>;
};


export type Query_RootPokemon_V2_Encountermethod_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Encountermethod_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Encountermethod_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Encountermethod_Bool_Exp>;
};


export type Query_RootPokemon_V2_Encountermethod_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_EncountermethodnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Encountermethodname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Encountermethodname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Encountermethodname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Encountermethodname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Encountermethodname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Encountermethodname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Encountermethodname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Encountermethodname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_EncounterslotArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Encounterslot_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Encounterslot_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Encounterslot_Bool_Exp>;
};


export type Query_RootPokemon_V2_Encounterslot_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Encounterslot_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Encounterslot_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Encounterslot_Bool_Exp>;
};


export type Query_RootPokemon_V2_Encounterslot_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_EvolutionchainArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Evolutionchain_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Evolutionchain_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Evolutionchain_Bool_Exp>;
};


export type Query_RootPokemon_V2_Evolutionchain_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Evolutionchain_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Evolutionchain_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Evolutionchain_Bool_Exp>;
};


export type Query_RootPokemon_V2_Evolutionchain_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_EvolutiontriggerArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Evolutiontrigger_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Evolutiontrigger_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Evolutiontrigger_Bool_Exp>;
};


export type Query_RootPokemon_V2_Evolutiontrigger_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Evolutiontrigger_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Evolutiontrigger_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Evolutiontrigger_Bool_Exp>;
};


export type Query_RootPokemon_V2_Evolutiontrigger_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_EvolutiontriggernameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Evolutiontriggername_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Evolutiontriggername_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Evolutiontriggername_Bool_Exp>;
};


export type Query_RootPokemon_V2_Evolutiontriggername_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Evolutiontriggername_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Evolutiontriggername_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Evolutiontriggername_Bool_Exp>;
};


export type Query_RootPokemon_V2_Evolutiontriggername_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_ExperienceArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Experience_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Experience_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Experience_Bool_Exp>;
};


export type Query_RootPokemon_V2_Experience_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Experience_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Experience_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Experience_Bool_Exp>;
};


export type Query_RootPokemon_V2_Experience_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_GenderArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Gender_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Gender_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Gender_Bool_Exp>;
};


export type Query_RootPokemon_V2_Gender_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Gender_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Gender_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Gender_Bool_Exp>;
};


export type Query_RootPokemon_V2_Gender_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_GenerationArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Generation_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Generation_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Generation_Bool_Exp>;
};


export type Query_RootPokemon_V2_Generation_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Generation_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Generation_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Generation_Bool_Exp>;
};


export type Query_RootPokemon_V2_Generation_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_GenerationnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Generationname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Generationname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Generationname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Generationname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Generationname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Generationname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Generationname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Generationname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_GrowthrateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Growthrate_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Growthrate_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Growthrate_Bool_Exp>;
};


export type Query_RootPokemon_V2_Growthrate_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Growthrate_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Growthrate_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Growthrate_Bool_Exp>;
};


export type Query_RootPokemon_V2_Growthrate_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_GrowthratedescriptionArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Growthratedescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Growthratedescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Growthratedescription_Bool_Exp>;
};


export type Query_RootPokemon_V2_Growthratedescription_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Growthratedescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Growthratedescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Growthratedescription_Bool_Exp>;
};


export type Query_RootPokemon_V2_Growthratedescription_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_ItemArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Item_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Item_Bool_Exp>;
};


export type Query_RootPokemon_V2_Item_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Item_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Item_Bool_Exp>;
};


export type Query_RootPokemon_V2_Item_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_ItemattributeArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemattribute_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemattribute_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemattribute_Bool_Exp>;
};


export type Query_RootPokemon_V2_Itemattribute_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemattribute_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemattribute_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemattribute_Bool_Exp>;
};


export type Query_RootPokemon_V2_Itemattribute_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_ItemattributedescriptionArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemattributedescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemattributedescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemattributedescription_Bool_Exp>;
};


export type Query_RootPokemon_V2_Itemattributedescription_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemattributedescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemattributedescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemattributedescription_Bool_Exp>;
};


export type Query_RootPokemon_V2_Itemattributedescription_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_ItemattributemapArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemattributemap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemattributemap_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemattributemap_Bool_Exp>;
};


export type Query_RootPokemon_V2_Itemattributemap_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemattributemap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemattributemap_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemattributemap_Bool_Exp>;
};


export type Query_RootPokemon_V2_Itemattributemap_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_ItemattributenameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemattributename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemattributename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemattributename_Bool_Exp>;
};


export type Query_RootPokemon_V2_Itemattributename_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemattributename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemattributename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemattributename_Bool_Exp>;
};


export type Query_RootPokemon_V2_Itemattributename_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_ItemcategoryArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemcategory_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemcategory_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemcategory_Bool_Exp>;
};


export type Query_RootPokemon_V2_Itemcategory_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemcategory_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemcategory_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemcategory_Bool_Exp>;
};


export type Query_RootPokemon_V2_Itemcategory_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_ItemcategorynameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemcategoryname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemcategoryname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemcategoryname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Itemcategoryname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemcategoryname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemcategoryname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemcategoryname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Itemcategoryname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_ItemeffecttextArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemeffecttext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemeffecttext_Bool_Exp>;
};


export type Query_RootPokemon_V2_Itemeffecttext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemeffecttext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemeffecttext_Bool_Exp>;
};


export type Query_RootPokemon_V2_Itemeffecttext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_ItemflavortextArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemflavortext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemflavortext_Bool_Exp>;
};


export type Query_RootPokemon_V2_Itemflavortext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemflavortext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemflavortext_Bool_Exp>;
};


export type Query_RootPokemon_V2_Itemflavortext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_ItemflingeffectArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemflingeffect_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemflingeffect_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemflingeffect_Bool_Exp>;
};


export type Query_RootPokemon_V2_Itemflingeffect_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemflingeffect_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemflingeffect_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemflingeffect_Bool_Exp>;
};


export type Query_RootPokemon_V2_Itemflingeffect_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_ItemflingeffecteffecttextArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemflingeffecteffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemflingeffecteffecttext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemflingeffecteffecttext_Bool_Exp>;
};


export type Query_RootPokemon_V2_Itemflingeffecteffecttext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemflingeffecteffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemflingeffecteffecttext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemflingeffecteffecttext_Bool_Exp>;
};


export type Query_RootPokemon_V2_Itemflingeffecteffecttext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_ItemgameindexArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemgameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemgameindex_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemgameindex_Bool_Exp>;
};


export type Query_RootPokemon_V2_Itemgameindex_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemgameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemgameindex_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemgameindex_Bool_Exp>;
};


export type Query_RootPokemon_V2_Itemgameindex_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_ItemnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Itemname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Itemname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_ItempocketArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itempocket_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itempocket_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itempocket_Bool_Exp>;
};


export type Query_RootPokemon_V2_Itempocket_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itempocket_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itempocket_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itempocket_Bool_Exp>;
};


export type Query_RootPokemon_V2_Itempocket_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_ItempocketnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itempocketname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itempocketname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itempocketname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Itempocketname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itempocketname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itempocketname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itempocketname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Itempocketname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_ItemspritesArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemsprites_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemsprites_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemsprites_Bool_Exp>;
};


export type Query_RootPokemon_V2_Itemsprites_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemsprites_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemsprites_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemsprites_Bool_Exp>;
};


export type Query_RootPokemon_V2_Itemsprites_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_LanguageArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Language_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Language_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Language_Bool_Exp>;
};


export type Query_RootPokemon_V2_Language_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Language_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Language_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Language_Bool_Exp>;
};


export type Query_RootPokemon_V2_Language_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_LanguagenameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Languagename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Languagename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Languagename_Bool_Exp>;
};


export type Query_RootPokemon_V2_Languagename_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Languagename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Languagename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Languagename_Bool_Exp>;
};


export type Query_RootPokemon_V2_Languagename_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_LocationArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Location_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Location_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Location_Bool_Exp>;
};


export type Query_RootPokemon_V2_Location_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Location_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Location_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Location_Bool_Exp>;
};


export type Query_RootPokemon_V2_Location_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_LocationareaArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Locationarea_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Locationarea_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Locationarea_Bool_Exp>;
};


export type Query_RootPokemon_V2_Locationarea_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Locationarea_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Locationarea_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Locationarea_Bool_Exp>;
};


export type Query_RootPokemon_V2_Locationarea_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_LocationareaencounterrateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Locationareaencounterrate_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Locationareaencounterrate_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Locationareaencounterrate_Bool_Exp>;
};


export type Query_RootPokemon_V2_Locationareaencounterrate_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Locationareaencounterrate_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Locationareaencounterrate_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Locationareaencounterrate_Bool_Exp>;
};


export type Query_RootPokemon_V2_Locationareaencounterrate_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_LocationareanameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Locationareaname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Locationareaname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Locationareaname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Locationareaname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Locationareaname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Locationareaname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Locationareaname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Locationareaname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_LocationgameindexArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Locationgameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Locationgameindex_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Locationgameindex_Bool_Exp>;
};


export type Query_RootPokemon_V2_Locationgameindex_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Locationgameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Locationgameindex_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Locationgameindex_Bool_Exp>;
};


export type Query_RootPokemon_V2_Locationgameindex_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_LocationnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Locationname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Locationname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Locationname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Locationname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Locationname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Locationname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Locationname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Locationname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_MachineArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Machine_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Machine_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Machine_Bool_Exp>;
};


export type Query_RootPokemon_V2_Machine_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Machine_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Machine_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Machine_Bool_Exp>;
};


export type Query_RootPokemon_V2_Machine_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_MoveArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Move_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Move_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Move_Bool_Exp>;
};


export type Query_RootPokemon_V2_Move_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Move_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Move_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Move_Bool_Exp>;
};


export type Query_RootPokemon_V2_Move_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_MoveattributeArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Moveattribute_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Moveattribute_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Moveattribute_Bool_Exp>;
};


export type Query_RootPokemon_V2_Moveattribute_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Moveattribute_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Moveattribute_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Moveattribute_Bool_Exp>;
};


export type Query_RootPokemon_V2_Moveattribute_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_MoveattributedescriptionArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Moveattributedescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Moveattributedescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Moveattributedescription_Bool_Exp>;
};


export type Query_RootPokemon_V2_Moveattributedescription_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Moveattributedescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Moveattributedescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Moveattributedescription_Bool_Exp>;
};


export type Query_RootPokemon_V2_Moveattributedescription_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_MoveattributemapArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Moveattributemap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Moveattributemap_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Moveattributemap_Bool_Exp>;
};


export type Query_RootPokemon_V2_Moveattributemap_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Moveattributemap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Moveattributemap_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Moveattributemap_Bool_Exp>;
};


export type Query_RootPokemon_V2_Moveattributemap_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_MoveattributenameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Moveattributename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Moveattributename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Moveattributename_Bool_Exp>;
};


export type Query_RootPokemon_V2_Moveattributename_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Moveattributename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Moveattributename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Moveattributename_Bool_Exp>;
};


export type Query_RootPokemon_V2_Moveattributename_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_MovebattlestyleArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movebattlestyle_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movebattlestyle_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movebattlestyle_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movebattlestyle_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movebattlestyle_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movebattlestyle_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movebattlestyle_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movebattlestyle_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_MovebattlestylenameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movebattlestylename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movebattlestylename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movebattlestylename_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movebattlestylename_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movebattlestylename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movebattlestylename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movebattlestylename_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movebattlestylename_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_MovechangeArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movechange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movechange_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movechange_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movechange_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movechange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movechange_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movechange_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movechange_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_MovedamageclassArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movedamageclass_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movedamageclass_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movedamageclass_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movedamageclass_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movedamageclass_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movedamageclass_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movedamageclass_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movedamageclass_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_MovedamageclassdescriptionArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movedamageclassdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movedamageclassdescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movedamageclassdescription_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movedamageclassdescription_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movedamageclassdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movedamageclassdescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movedamageclassdescription_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movedamageclassdescription_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_MovedamageclassnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movedamageclassname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movedamageclassname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movedamageclassname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movedamageclassname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movedamageclassname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movedamageclassname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movedamageclassname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movedamageclassname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_MoveeffectArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Moveeffect_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Moveeffect_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Moveeffect_Bool_Exp>;
};


export type Query_RootPokemon_V2_Moveeffect_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Moveeffect_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Moveeffect_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Moveeffect_Bool_Exp>;
};


export type Query_RootPokemon_V2_Moveeffect_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_MoveeffectchangeArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Moveeffectchange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Moveeffectchange_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Moveeffectchange_Bool_Exp>;
};


export type Query_RootPokemon_V2_Moveeffectchange_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Moveeffectchange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Moveeffectchange_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Moveeffectchange_Bool_Exp>;
};


export type Query_RootPokemon_V2_Moveeffectchange_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_MoveeffectchangeeffecttextArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Moveeffectchangeeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Moveeffectchangeeffecttext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Moveeffectchangeeffecttext_Bool_Exp>;
};


export type Query_RootPokemon_V2_Moveeffectchangeeffecttext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Moveeffectchangeeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Moveeffectchangeeffecttext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Moveeffectchangeeffecttext_Bool_Exp>;
};


export type Query_RootPokemon_V2_Moveeffectchangeeffecttext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_MoveeffecteffecttextArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Moveeffecteffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Moveeffecteffecttext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Moveeffecteffecttext_Bool_Exp>;
};


export type Query_RootPokemon_V2_Moveeffecteffecttext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Moveeffecteffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Moveeffecteffecttext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Moveeffecteffecttext_Bool_Exp>;
};


export type Query_RootPokemon_V2_Moveeffecteffecttext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_MoveflavortextArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Moveflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Moveflavortext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Moveflavortext_Bool_Exp>;
};


export type Query_RootPokemon_V2_Moveflavortext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Moveflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Moveflavortext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Moveflavortext_Bool_Exp>;
};


export type Query_RootPokemon_V2_Moveflavortext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_MovelearnmethodArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movelearnmethod_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movelearnmethod_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movelearnmethod_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movelearnmethod_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movelearnmethod_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movelearnmethod_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movelearnmethod_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movelearnmethod_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_MovelearnmethoddescriptionArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movelearnmethoddescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movelearnmethoddescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movelearnmethoddescription_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movelearnmethoddescription_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movelearnmethoddescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movelearnmethoddescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movelearnmethoddescription_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movelearnmethoddescription_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_MovelearnmethodnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movelearnmethodname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movelearnmethodname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movelearnmethodname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movelearnmethodname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movelearnmethodname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movelearnmethodname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movelearnmethodname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movelearnmethodname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_MovemetaArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movemeta_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movemeta_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movemeta_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movemeta_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movemeta_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movemeta_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movemeta_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movemeta_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_MovemetaailmentArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movemetaailment_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movemetaailment_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movemetaailment_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movemetaailment_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movemetaailment_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movemetaailment_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movemetaailment_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movemetaailment_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_MovemetaailmentnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movemetaailmentname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movemetaailmentname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movemetaailmentname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movemetaailmentname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movemetaailmentname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movemetaailmentname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movemetaailmentname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movemetaailmentname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_MovemetacategoryArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movemetacategory_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movemetacategory_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movemetacategory_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movemetacategory_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movemetacategory_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movemetacategory_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movemetacategory_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movemetacategory_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_MovemetacategorydescriptionArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movemetacategorydescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movemetacategorydescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movemetacategorydescription_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movemetacategorydescription_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movemetacategorydescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movemetacategorydescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movemetacategorydescription_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movemetacategorydescription_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_MovemetastatchangeArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movemetastatchange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movemetastatchange_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movemetastatchange_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movemetastatchange_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movemetastatchange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movemetastatchange_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movemetastatchange_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movemetastatchange_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_MovenameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movename_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movename_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movename_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movename_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_MovetargetArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movetarget_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movetarget_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movetarget_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movetarget_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movetarget_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movetarget_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movetarget_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movetarget_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_MovetargetdescriptionArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movetargetdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movetargetdescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movetargetdescription_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movetargetdescription_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movetargetdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movetargetdescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movetargetdescription_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movetargetdescription_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_MovetargetnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movetargetname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movetargetname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movetargetname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movetargetname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movetargetname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movetargetname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movetargetname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Movetargetname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_NatureArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Nature_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Nature_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Nature_Bool_Exp>;
};


export type Query_RootPokemon_V2_Nature_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Nature_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Nature_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Nature_Bool_Exp>;
};


export type Query_RootPokemon_V2_Nature_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_NaturebattlestylepreferenceArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Naturebattlestylepreference_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Naturebattlestylepreference_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Naturebattlestylepreference_Bool_Exp>;
};


export type Query_RootPokemon_V2_Naturebattlestylepreference_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Naturebattlestylepreference_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Naturebattlestylepreference_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Naturebattlestylepreference_Bool_Exp>;
};


export type Query_RootPokemon_V2_Naturebattlestylepreference_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_NaturenameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Naturename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Naturename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Naturename_Bool_Exp>;
};


export type Query_RootPokemon_V2_Naturename_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Naturename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Naturename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Naturename_Bool_Exp>;
};


export type Query_RootPokemon_V2_Naturename_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_NaturepokeathlonstatArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Naturepokeathlonstat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Naturepokeathlonstat_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Naturepokeathlonstat_Bool_Exp>;
};


export type Query_RootPokemon_V2_Naturepokeathlonstat_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Naturepokeathlonstat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Naturepokeathlonstat_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Naturepokeathlonstat_Bool_Exp>;
};


export type Query_RootPokemon_V2_Naturepokeathlonstat_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PalparkArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Palpark_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Palpark_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Palpark_Bool_Exp>;
};


export type Query_RootPokemon_V2_Palpark_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Palpark_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Palpark_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Palpark_Bool_Exp>;
};


export type Query_RootPokemon_V2_Palpark_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PalparkareaArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Palparkarea_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Palparkarea_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Palparkarea_Bool_Exp>;
};


export type Query_RootPokemon_V2_Palparkarea_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Palparkarea_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Palparkarea_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Palparkarea_Bool_Exp>;
};


export type Query_RootPokemon_V2_Palparkarea_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PalparkareanameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Palparkareaname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Palparkareaname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Palparkareaname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Palparkareaname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Palparkareaname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Palparkareaname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Palparkareaname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Palparkareaname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PokeathlonstatArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokeathlonstat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokeathlonstat_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokeathlonstat_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokeathlonstat_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokeathlonstat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokeathlonstat_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokeathlonstat_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokeathlonstat_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PokeathlonstatnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokeathlonstatname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokeathlonstatname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokeathlonstatname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokeathlonstatname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokeathlonstatname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokeathlonstatname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokeathlonstatname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokeathlonstatname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PokedexArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokedex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokedex_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokedex_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokedex_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokedex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokedex_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokedex_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokedex_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PokedexdescriptionArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokedexdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokedexdescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokedexdescription_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokedexdescription_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokedexdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokedexdescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokedexdescription_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokedexdescription_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PokedexnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokedexname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokedexname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokedexname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokedexname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokedexname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokedexname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokedexname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokedexname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PokedexversiongroupArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokedexversiongroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokedexversiongroup_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokedexversiongroup_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokedexversiongroup_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokedexversiongroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokedexversiongroup_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokedexversiongroup_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokedexversiongroup_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PokemonArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemon_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemon_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemon_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemon_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemon_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemon_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemon_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemon_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PokemonabilityArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonability_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonability_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonability_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonability_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonability_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonability_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PokemonabilitypastArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonabilitypast_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonabilitypast_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonabilitypast_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonabilitypast_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonabilitypast_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonabilitypast_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonabilitypast_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonabilitypast_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PokemoncolorArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemoncolor_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemoncolor_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemoncolor_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemoncolor_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemoncolor_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemoncolor_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemoncolor_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemoncolor_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PokemoncolornameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemoncolorname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemoncolorname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemoncolorname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemoncolorname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemoncolorname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemoncolorname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemoncolorname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemoncolorname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PokemoncriesArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemoncries_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemoncries_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemoncries_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemoncries_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemoncries_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemoncries_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemoncries_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemoncries_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PokemondexnumberArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemondexnumber_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemondexnumber_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemondexnumber_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemondexnumber_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemondexnumber_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemondexnumber_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemondexnumber_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemondexnumber_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PokemonegggroupArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonegggroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonegggroup_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonegggroup_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonegggroup_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonegggroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonegggroup_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonegggroup_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonegggroup_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PokemonevolutionArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonevolution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonevolution_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonevolution_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonevolution_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonevolution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonevolution_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonevolution_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonevolution_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PokemonformArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonform_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonform_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonform_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonform_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonform_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonform_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonform_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonform_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PokemonformgenerationArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonformgeneration_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonformgeneration_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonformgeneration_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonformgeneration_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonformgeneration_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonformgeneration_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonformgeneration_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonformgeneration_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PokemonformnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonformname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonformname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonformname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonformname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonformname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonformname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonformname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonformname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PokemonformspritesArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonformsprites_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonformsprites_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonformsprites_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonformsprites_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonformsprites_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonformsprites_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonformsprites_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonformsprites_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PokemonformtypeArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonformtype_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonformtype_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonformtype_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonformtype_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonformtype_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonformtype_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonformtype_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonformtype_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PokemongameindexArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemongameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemongameindex_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemongameindex_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemongameindex_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemongameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemongameindex_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemongameindex_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemongameindex_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PokemonhabitatArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonhabitat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonhabitat_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonhabitat_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonhabitat_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonhabitat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonhabitat_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonhabitat_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonhabitat_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PokemonhabitatnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonhabitatname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonhabitatname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonhabitatname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonhabitatname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonhabitatname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonhabitatname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonhabitatname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonhabitatname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PokemonitemArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonitem_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonitem_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonitem_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonitem_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonitem_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonitem_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonitem_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonitem_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PokemonmoveArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonmove_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonmove_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonmove_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonmove_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonmove_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonmove_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonmove_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonmove_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PokemonshapeArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonshape_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonshape_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonshape_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonshape_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonshape_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonshape_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonshape_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonshape_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PokemonshapenameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonshapename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonshapename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonshapename_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonshapename_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonshapename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonshapename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonshapename_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonshapename_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PokemonspeciesArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonspecies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonspecies_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonspecies_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonspecies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonspecies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonspecies_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonspecies_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonspecies_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PokemonspeciesdescriptionArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonspeciesdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonspeciesdescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonspeciesdescription_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonspeciesdescription_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonspeciesdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonspeciesdescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonspeciesdescription_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonspeciesdescription_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PokemonspeciesflavortextArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonspeciesflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonspeciesflavortext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonspeciesflavortext_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonspeciesflavortext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonspeciesflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonspeciesflavortext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonspeciesflavortext_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonspeciesflavortext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PokemonspeciesnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonspeciesname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonspeciesname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonspeciesname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonspeciesname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonspeciesname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonspeciesname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonspeciesname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonspeciesname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PokemonspritesArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonsprites_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonsprites_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonsprites_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonsprites_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonsprites_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonsprites_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonsprites_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonsprites_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PokemonstatArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonstat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonstat_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonstat_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonstat_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonstat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonstat_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonstat_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemonstat_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PokemontypeArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemontype_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemontype_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemontype_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemontype_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemontype_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemontype_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemontype_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemontype_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_PokemontypepastArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemontypepast_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemontypepast_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemontypepast_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemontypepast_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemontypepast_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemontypepast_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemontypepast_Bool_Exp>;
};


export type Query_RootPokemon_V2_Pokemontypepast_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_RegionArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Region_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Region_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Region_Bool_Exp>;
};


export type Query_RootPokemon_V2_Region_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Region_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Region_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Region_Bool_Exp>;
};


export type Query_RootPokemon_V2_Region_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_RegionnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Regionname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Regionname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Regionname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Regionname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Regionname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Regionname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Regionname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Regionname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_StatArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Stat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Stat_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Stat_Bool_Exp>;
};


export type Query_RootPokemon_V2_Stat_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Stat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Stat_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Stat_Bool_Exp>;
};


export type Query_RootPokemon_V2_Stat_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_StatnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Statname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Statname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Statname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Statname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Statname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Statname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Statname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Statname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_SupercontestcomboArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Supercontestcombo_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Supercontestcombo_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Supercontestcombo_Bool_Exp>;
};


export type Query_RootPokemon_V2_Supercontestcombo_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Supercontestcombo_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Supercontestcombo_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Supercontestcombo_Bool_Exp>;
};


export type Query_RootPokemon_V2_Supercontestcombo_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_SupercontesteffectArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Supercontesteffect_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Supercontesteffect_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Supercontesteffect_Bool_Exp>;
};


export type Query_RootPokemon_V2_Supercontesteffect_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Supercontesteffect_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Supercontesteffect_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Supercontesteffect_Bool_Exp>;
};


export type Query_RootPokemon_V2_Supercontesteffect_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_SupercontesteffectflavortextArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Supercontesteffectflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Supercontesteffectflavortext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Supercontesteffectflavortext_Bool_Exp>;
};


export type Query_RootPokemon_V2_Supercontesteffectflavortext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Supercontesteffectflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Supercontesteffectflavortext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Supercontesteffectflavortext_Bool_Exp>;
};


export type Query_RootPokemon_V2_Supercontesteffectflavortext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_TypeArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Type_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Type_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Type_Bool_Exp>;
};


export type Query_RootPokemon_V2_Type_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Type_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Type_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Type_Bool_Exp>;
};


export type Query_RootPokemon_V2_Type_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_TypeefficacyArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Typeefficacy_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Typeefficacy_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Typeefficacy_Bool_Exp>;
};


export type Query_RootPokemon_V2_Typeefficacy_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Typeefficacy_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Typeefficacy_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Typeefficacy_Bool_Exp>;
};


export type Query_RootPokemon_V2_Typeefficacy_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_TypeefficacypastArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Typeefficacypast_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Typeefficacypast_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Typeefficacypast_Bool_Exp>;
};


export type Query_RootPokemon_V2_Typeefficacypast_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Typeefficacypast_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Typeefficacypast_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Typeefficacypast_Bool_Exp>;
};


export type Query_RootPokemon_V2_Typeefficacypast_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_TypegameindexArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Typegameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Typegameindex_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Typegameindex_Bool_Exp>;
};


export type Query_RootPokemon_V2_Typegameindex_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Typegameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Typegameindex_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Typegameindex_Bool_Exp>;
};


export type Query_RootPokemon_V2_Typegameindex_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_TypenameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Typename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Typename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Typename_Bool_Exp>;
};


export type Query_RootPokemon_V2_Typename_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Typename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Typename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Typename_Bool_Exp>;
};


export type Query_RootPokemon_V2_Typename_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_VersionArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Version_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Version_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Version_Bool_Exp>;
};


export type Query_RootPokemon_V2_Version_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Version_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Version_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Version_Bool_Exp>;
};


export type Query_RootPokemon_V2_Version_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_VersiongroupArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Versiongroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Versiongroup_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Versiongroup_Bool_Exp>;
};


export type Query_RootPokemon_V2_Versiongroup_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Versiongroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Versiongroup_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Versiongroup_Bool_Exp>;
};


export type Query_RootPokemon_V2_Versiongroup_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_VersiongroupmovelearnmethodArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Versiongroupmovelearnmethod_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Versiongroupmovelearnmethod_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Versiongroupmovelearnmethod_Bool_Exp>;
};


export type Query_RootPokemon_V2_Versiongroupmovelearnmethod_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Versiongroupmovelearnmethod_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Versiongroupmovelearnmethod_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Versiongroupmovelearnmethod_Bool_Exp>;
};


export type Query_RootPokemon_V2_Versiongroupmovelearnmethod_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_VersiongroupregionArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Versiongroupregion_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Versiongroupregion_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Versiongroupregion_Bool_Exp>;
};


export type Query_RootPokemon_V2_Versiongroupregion_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Versiongroupregion_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Versiongroupregion_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Versiongroupregion_Bool_Exp>;
};


export type Query_RootPokemon_V2_Versiongroupregion_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPokemon_V2_VersionnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Versionname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Versionname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Versionname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Versionname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Versionname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Versionname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Versionname_Bool_Exp>;
};


export type Query_RootPokemon_V2_Versionname_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** Boolean expression to compare columns of type "smallint". All fields are combined with logical 'AND'. */
export type Smallint_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['smallint']['input']>;
  _gt?: InputMaybe<Scalars['smallint']['input']>;
  _gte?: InputMaybe<Scalars['smallint']['input']>;
  _in?: InputMaybe<Array<Scalars['smallint']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['smallint']['input']>;
  _lte?: InputMaybe<Scalars['smallint']['input']>;
  _neq?: InputMaybe<Scalars['smallint']['input']>;
  _nin?: InputMaybe<Array<Scalars['smallint']['input']>>;
};

export type Subscription_Root = {
  __typename?: 'subscription_root';
  /** fetch data from the table: "auth_group" */
  auth_group: Array<Auth_Group>;
  /** fetch aggregated fields from the table: "auth_group" */
  auth_group_aggregate: Auth_Group_Aggregate;
  /** fetch data from the table: "auth_group" using primary key columns */
  auth_group_by_pk?: Maybe<Auth_Group>;
  /** fetch data from the table: "auth_group_permissions" */
  auth_group_permissions: Array<Auth_Group_Permissions>;
  /** fetch aggregated fields from the table: "auth_group_permissions" */
  auth_group_permissions_aggregate: Auth_Group_Permissions_Aggregate;
  /** fetch data from the table: "auth_group_permissions" using primary key columns */
  auth_group_permissions_by_pk?: Maybe<Auth_Group_Permissions>;
  /** fetch data from the table in a streaming manner: "auth_group_permissions" */
  auth_group_permissions_stream: Array<Auth_Group_Permissions>;
  /** fetch data from the table in a streaming manner: "auth_group" */
  auth_group_stream: Array<Auth_Group>;
  /** fetch data from the table: "auth_permission" */
  auth_permission: Array<Auth_Permission>;
  /** fetch aggregated fields from the table: "auth_permission" */
  auth_permission_aggregate: Auth_Permission_Aggregate;
  /** fetch data from the table: "auth_permission" using primary key columns */
  auth_permission_by_pk?: Maybe<Auth_Permission>;
  /** fetch data from the table in a streaming manner: "auth_permission" */
  auth_permission_stream: Array<Auth_Permission>;
  /** fetch data from the table: "auth_user" */
  auth_user: Array<Auth_User>;
  /** fetch aggregated fields from the table: "auth_user" */
  auth_user_aggregate: Auth_User_Aggregate;
  /** fetch data from the table: "auth_user" using primary key columns */
  auth_user_by_pk?: Maybe<Auth_User>;
  /** fetch data from the table: "auth_user_groups" */
  auth_user_groups: Array<Auth_User_Groups>;
  /** fetch aggregated fields from the table: "auth_user_groups" */
  auth_user_groups_aggregate: Auth_User_Groups_Aggregate;
  /** fetch data from the table: "auth_user_groups" using primary key columns */
  auth_user_groups_by_pk?: Maybe<Auth_User_Groups>;
  /** fetch data from the table in a streaming manner: "auth_user_groups" */
  auth_user_groups_stream: Array<Auth_User_Groups>;
  /** fetch data from the table in a streaming manner: "auth_user" */
  auth_user_stream: Array<Auth_User>;
  /** fetch data from the table: "auth_user_user_permissions" */
  auth_user_user_permissions: Array<Auth_User_User_Permissions>;
  /** fetch aggregated fields from the table: "auth_user_user_permissions" */
  auth_user_user_permissions_aggregate: Auth_User_User_Permissions_Aggregate;
  /** fetch data from the table: "auth_user_user_permissions" using primary key columns */
  auth_user_user_permissions_by_pk?: Maybe<Auth_User_User_Permissions>;
  /** fetch data from the table in a streaming manner: "auth_user_user_permissions" */
  auth_user_user_permissions_stream: Array<Auth_User_User_Permissions>;
  /** fetch data from the table: "django_admin_log" */
  django_admin_log: Array<Django_Admin_Log>;
  /** fetch aggregated fields from the table: "django_admin_log" */
  django_admin_log_aggregate: Django_Admin_Log_Aggregate;
  /** fetch data from the table: "django_admin_log" using primary key columns */
  django_admin_log_by_pk?: Maybe<Django_Admin_Log>;
  /** fetch data from the table in a streaming manner: "django_admin_log" */
  django_admin_log_stream: Array<Django_Admin_Log>;
  /** fetch data from the table: "django_content_type" */
  django_content_type: Array<Django_Content_Type>;
  /** fetch aggregated fields from the table: "django_content_type" */
  django_content_type_aggregate: Django_Content_Type_Aggregate;
  /** fetch data from the table: "django_content_type" using primary key columns */
  django_content_type_by_pk?: Maybe<Django_Content_Type>;
  /** fetch data from the table in a streaming manner: "django_content_type" */
  django_content_type_stream: Array<Django_Content_Type>;
  /** fetch data from the table: "django_migrations" */
  django_migrations: Array<Django_Migrations>;
  /** fetch aggregated fields from the table: "django_migrations" */
  django_migrations_aggregate: Django_Migrations_Aggregate;
  /** fetch data from the table: "django_migrations" using primary key columns */
  django_migrations_by_pk?: Maybe<Django_Migrations>;
  /** fetch data from the table in a streaming manner: "django_migrations" */
  django_migrations_stream: Array<Django_Migrations>;
  /** fetch data from the table: "django_session" */
  django_session: Array<Django_Session>;
  /** fetch aggregated fields from the table: "django_session" */
  django_session_aggregate: Django_Session_Aggregate;
  /** fetch data from the table: "django_session" using primary key columns */
  django_session_by_pk?: Maybe<Django_Session>;
  /** fetch data from the table in a streaming manner: "django_session" */
  django_session_stream: Array<Django_Session>;
  /** fetch data from the table: "django_site" */
  django_site: Array<Django_Site>;
  /** fetch aggregated fields from the table: "django_site" */
  django_site_aggregate: Django_Site_Aggregate;
  /** fetch data from the table: "django_site" using primary key columns */
  django_site_by_pk?: Maybe<Django_Site>;
  /** fetch data from the table in a streaming manner: "django_site" */
  django_site_stream: Array<Django_Site>;
  /** fetch data from the table: "pokemon_v2_ability" */
  pokemon_v2_ability: Array<Pokemon_V2_Ability>;
  /** fetch aggregated fields from the table: "pokemon_v2_ability" */
  pokemon_v2_ability_aggregate: Pokemon_V2_Ability_Aggregate;
  /** fetch data from the table: "pokemon_v2_ability" using primary key columns */
  pokemon_v2_ability_by_pk?: Maybe<Pokemon_V2_Ability>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_ability" */
  pokemon_v2_ability_stream: Array<Pokemon_V2_Ability>;
  /** fetch data from the table: "pokemon_v2_abilitychange" */
  pokemon_v2_abilitychange: Array<Pokemon_V2_Abilitychange>;
  /** fetch aggregated fields from the table: "pokemon_v2_abilitychange" */
  pokemon_v2_abilitychange_aggregate: Pokemon_V2_Abilitychange_Aggregate;
  /** fetch data from the table: "pokemon_v2_abilitychange" using primary key columns */
  pokemon_v2_abilitychange_by_pk?: Maybe<Pokemon_V2_Abilitychange>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_abilitychange" */
  pokemon_v2_abilitychange_stream: Array<Pokemon_V2_Abilitychange>;
  /** fetch data from the table: "pokemon_v2_abilitychangeeffecttext" */
  pokemon_v2_abilitychangeeffecttext: Array<Pokemon_V2_Abilitychangeeffecttext>;
  /** fetch aggregated fields from the table: "pokemon_v2_abilitychangeeffecttext" */
  pokemon_v2_abilitychangeeffecttext_aggregate: Pokemon_V2_Abilitychangeeffecttext_Aggregate;
  /** fetch data from the table: "pokemon_v2_abilitychangeeffecttext" using primary key columns */
  pokemon_v2_abilitychangeeffecttext_by_pk?: Maybe<Pokemon_V2_Abilitychangeeffecttext>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_abilitychangeeffecttext" */
  pokemon_v2_abilitychangeeffecttext_stream: Array<Pokemon_V2_Abilitychangeeffecttext>;
  /** fetch data from the table: "pokemon_v2_abilityeffecttext" */
  pokemon_v2_abilityeffecttext: Array<Pokemon_V2_Abilityeffecttext>;
  /** fetch aggregated fields from the table: "pokemon_v2_abilityeffecttext" */
  pokemon_v2_abilityeffecttext_aggregate: Pokemon_V2_Abilityeffecttext_Aggregate;
  /** fetch data from the table: "pokemon_v2_abilityeffecttext" using primary key columns */
  pokemon_v2_abilityeffecttext_by_pk?: Maybe<Pokemon_V2_Abilityeffecttext>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_abilityeffecttext" */
  pokemon_v2_abilityeffecttext_stream: Array<Pokemon_V2_Abilityeffecttext>;
  /** fetch data from the table: "pokemon_v2_abilityflavortext" */
  pokemon_v2_abilityflavortext: Array<Pokemon_V2_Abilityflavortext>;
  /** fetch aggregated fields from the table: "pokemon_v2_abilityflavortext" */
  pokemon_v2_abilityflavortext_aggregate: Pokemon_V2_Abilityflavortext_Aggregate;
  /** fetch data from the table: "pokemon_v2_abilityflavortext" using primary key columns */
  pokemon_v2_abilityflavortext_by_pk?: Maybe<Pokemon_V2_Abilityflavortext>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_abilityflavortext" */
  pokemon_v2_abilityflavortext_stream: Array<Pokemon_V2_Abilityflavortext>;
  /** fetch data from the table: "pokemon_v2_abilityname" */
  pokemon_v2_abilityname: Array<Pokemon_V2_Abilityname>;
  /** fetch aggregated fields from the table: "pokemon_v2_abilityname" */
  pokemon_v2_abilityname_aggregate: Pokemon_V2_Abilityname_Aggregate;
  /** fetch data from the table: "pokemon_v2_abilityname" using primary key columns */
  pokemon_v2_abilityname_by_pk?: Maybe<Pokemon_V2_Abilityname>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_abilityname" */
  pokemon_v2_abilityname_stream: Array<Pokemon_V2_Abilityname>;
  /** fetch data from the table: "pokemon_v2_berry" */
  pokemon_v2_berry: Array<Pokemon_V2_Berry>;
  /** fetch aggregated fields from the table: "pokemon_v2_berry" */
  pokemon_v2_berry_aggregate: Pokemon_V2_Berry_Aggregate;
  /** fetch data from the table: "pokemon_v2_berry" using primary key columns */
  pokemon_v2_berry_by_pk?: Maybe<Pokemon_V2_Berry>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_berry" */
  pokemon_v2_berry_stream: Array<Pokemon_V2_Berry>;
  /** fetch data from the table: "pokemon_v2_berryfirmness" */
  pokemon_v2_berryfirmness: Array<Pokemon_V2_Berryfirmness>;
  /** fetch aggregated fields from the table: "pokemon_v2_berryfirmness" */
  pokemon_v2_berryfirmness_aggregate: Pokemon_V2_Berryfirmness_Aggregate;
  /** fetch data from the table: "pokemon_v2_berryfirmness" using primary key columns */
  pokemon_v2_berryfirmness_by_pk?: Maybe<Pokemon_V2_Berryfirmness>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_berryfirmness" */
  pokemon_v2_berryfirmness_stream: Array<Pokemon_V2_Berryfirmness>;
  /** fetch data from the table: "pokemon_v2_berryfirmnessname" */
  pokemon_v2_berryfirmnessname: Array<Pokemon_V2_Berryfirmnessname>;
  /** fetch aggregated fields from the table: "pokemon_v2_berryfirmnessname" */
  pokemon_v2_berryfirmnessname_aggregate: Pokemon_V2_Berryfirmnessname_Aggregate;
  /** fetch data from the table: "pokemon_v2_berryfirmnessname" using primary key columns */
  pokemon_v2_berryfirmnessname_by_pk?: Maybe<Pokemon_V2_Berryfirmnessname>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_berryfirmnessname" */
  pokemon_v2_berryfirmnessname_stream: Array<Pokemon_V2_Berryfirmnessname>;
  /** fetch data from the table: "pokemon_v2_berryflavor" */
  pokemon_v2_berryflavor: Array<Pokemon_V2_Berryflavor>;
  /** fetch aggregated fields from the table: "pokemon_v2_berryflavor" */
  pokemon_v2_berryflavor_aggregate: Pokemon_V2_Berryflavor_Aggregate;
  /** fetch data from the table: "pokemon_v2_berryflavor" using primary key columns */
  pokemon_v2_berryflavor_by_pk?: Maybe<Pokemon_V2_Berryflavor>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_berryflavor" */
  pokemon_v2_berryflavor_stream: Array<Pokemon_V2_Berryflavor>;
  /** fetch data from the table: "pokemon_v2_berryflavormap" */
  pokemon_v2_berryflavormap: Array<Pokemon_V2_Berryflavormap>;
  /** fetch aggregated fields from the table: "pokemon_v2_berryflavormap" */
  pokemon_v2_berryflavormap_aggregate: Pokemon_V2_Berryflavormap_Aggregate;
  /** fetch data from the table: "pokemon_v2_berryflavormap" using primary key columns */
  pokemon_v2_berryflavormap_by_pk?: Maybe<Pokemon_V2_Berryflavormap>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_berryflavormap" */
  pokemon_v2_berryflavormap_stream: Array<Pokemon_V2_Berryflavormap>;
  /** fetch data from the table: "pokemon_v2_berryflavorname" */
  pokemon_v2_berryflavorname: Array<Pokemon_V2_Berryflavorname>;
  /** fetch aggregated fields from the table: "pokemon_v2_berryflavorname" */
  pokemon_v2_berryflavorname_aggregate: Pokemon_V2_Berryflavorname_Aggregate;
  /** fetch data from the table: "pokemon_v2_berryflavorname" using primary key columns */
  pokemon_v2_berryflavorname_by_pk?: Maybe<Pokemon_V2_Berryflavorname>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_berryflavorname" */
  pokemon_v2_berryflavorname_stream: Array<Pokemon_V2_Berryflavorname>;
  /** fetch data from the table: "pokemon_v2_characteristic" */
  pokemon_v2_characteristic: Array<Pokemon_V2_Characteristic>;
  /** fetch aggregated fields from the table: "pokemon_v2_characteristic" */
  pokemon_v2_characteristic_aggregate: Pokemon_V2_Characteristic_Aggregate;
  /** fetch data from the table: "pokemon_v2_characteristic" using primary key columns */
  pokemon_v2_characteristic_by_pk?: Maybe<Pokemon_V2_Characteristic>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_characteristic" */
  pokemon_v2_characteristic_stream: Array<Pokemon_V2_Characteristic>;
  /** fetch data from the table: "pokemon_v2_characteristicdescription" */
  pokemon_v2_characteristicdescription: Array<Pokemon_V2_Characteristicdescription>;
  /** fetch aggregated fields from the table: "pokemon_v2_characteristicdescription" */
  pokemon_v2_characteristicdescription_aggregate: Pokemon_V2_Characteristicdescription_Aggregate;
  /** fetch data from the table: "pokemon_v2_characteristicdescription" using primary key columns */
  pokemon_v2_characteristicdescription_by_pk?: Maybe<Pokemon_V2_Characteristicdescription>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_characteristicdescription" */
  pokemon_v2_characteristicdescription_stream: Array<Pokemon_V2_Characteristicdescription>;
  /** fetch data from the table: "pokemon_v2_contestcombo" */
  pokemon_v2_contestcombo: Array<Pokemon_V2_Contestcombo>;
  /** fetch aggregated fields from the table: "pokemon_v2_contestcombo" */
  pokemon_v2_contestcombo_aggregate: Pokemon_V2_Contestcombo_Aggregate;
  /** fetch data from the table: "pokemon_v2_contestcombo" using primary key columns */
  pokemon_v2_contestcombo_by_pk?: Maybe<Pokemon_V2_Contestcombo>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_contestcombo" */
  pokemon_v2_contestcombo_stream: Array<Pokemon_V2_Contestcombo>;
  /** fetch data from the table: "pokemon_v2_contesteffect" */
  pokemon_v2_contesteffect: Array<Pokemon_V2_Contesteffect>;
  /** fetch aggregated fields from the table: "pokemon_v2_contesteffect" */
  pokemon_v2_contesteffect_aggregate: Pokemon_V2_Contesteffect_Aggregate;
  /** fetch data from the table: "pokemon_v2_contesteffect" using primary key columns */
  pokemon_v2_contesteffect_by_pk?: Maybe<Pokemon_V2_Contesteffect>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_contesteffect" */
  pokemon_v2_contesteffect_stream: Array<Pokemon_V2_Contesteffect>;
  /** fetch data from the table: "pokemon_v2_contesteffecteffecttext" */
  pokemon_v2_contesteffecteffecttext: Array<Pokemon_V2_Contesteffecteffecttext>;
  /** fetch aggregated fields from the table: "pokemon_v2_contesteffecteffecttext" */
  pokemon_v2_contesteffecteffecttext_aggregate: Pokemon_V2_Contesteffecteffecttext_Aggregate;
  /** fetch data from the table: "pokemon_v2_contesteffecteffecttext" using primary key columns */
  pokemon_v2_contesteffecteffecttext_by_pk?: Maybe<Pokemon_V2_Contesteffecteffecttext>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_contesteffecteffecttext" */
  pokemon_v2_contesteffecteffecttext_stream: Array<Pokemon_V2_Contesteffecteffecttext>;
  /** fetch data from the table: "pokemon_v2_contesteffectflavortext" */
  pokemon_v2_contesteffectflavortext: Array<Pokemon_V2_Contesteffectflavortext>;
  /** fetch aggregated fields from the table: "pokemon_v2_contesteffectflavortext" */
  pokemon_v2_contesteffectflavortext_aggregate: Pokemon_V2_Contesteffectflavortext_Aggregate;
  /** fetch data from the table: "pokemon_v2_contesteffectflavortext" using primary key columns */
  pokemon_v2_contesteffectflavortext_by_pk?: Maybe<Pokemon_V2_Contesteffectflavortext>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_contesteffectflavortext" */
  pokemon_v2_contesteffectflavortext_stream: Array<Pokemon_V2_Contesteffectflavortext>;
  /** fetch data from the table: "pokemon_v2_contesttype" */
  pokemon_v2_contesttype: Array<Pokemon_V2_Contesttype>;
  /** fetch aggregated fields from the table: "pokemon_v2_contesttype" */
  pokemon_v2_contesttype_aggregate: Pokemon_V2_Contesttype_Aggregate;
  /** fetch data from the table: "pokemon_v2_contesttype" using primary key columns */
  pokemon_v2_contesttype_by_pk?: Maybe<Pokemon_V2_Contesttype>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_contesttype" */
  pokemon_v2_contesttype_stream: Array<Pokemon_V2_Contesttype>;
  /** fetch data from the table: "pokemon_v2_contesttypename" */
  pokemon_v2_contesttypename: Array<Pokemon_V2_Contesttypename>;
  /** fetch aggregated fields from the table: "pokemon_v2_contesttypename" */
  pokemon_v2_contesttypename_aggregate: Pokemon_V2_Contesttypename_Aggregate;
  /** fetch data from the table: "pokemon_v2_contesttypename" using primary key columns */
  pokemon_v2_contesttypename_by_pk?: Maybe<Pokemon_V2_Contesttypename>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_contesttypename" */
  pokemon_v2_contesttypename_stream: Array<Pokemon_V2_Contesttypename>;
  /** fetch data from the table: "pokemon_v2_egggroup" */
  pokemon_v2_egggroup: Array<Pokemon_V2_Egggroup>;
  /** fetch aggregated fields from the table: "pokemon_v2_egggroup" */
  pokemon_v2_egggroup_aggregate: Pokemon_V2_Egggroup_Aggregate;
  /** fetch data from the table: "pokemon_v2_egggroup" using primary key columns */
  pokemon_v2_egggroup_by_pk?: Maybe<Pokemon_V2_Egggroup>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_egggroup" */
  pokemon_v2_egggroup_stream: Array<Pokemon_V2_Egggroup>;
  /** fetch data from the table: "pokemon_v2_egggroupname" */
  pokemon_v2_egggroupname: Array<Pokemon_V2_Egggroupname>;
  /** fetch aggregated fields from the table: "pokemon_v2_egggroupname" */
  pokemon_v2_egggroupname_aggregate: Pokemon_V2_Egggroupname_Aggregate;
  /** fetch data from the table: "pokemon_v2_egggroupname" using primary key columns */
  pokemon_v2_egggroupname_by_pk?: Maybe<Pokemon_V2_Egggroupname>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_egggroupname" */
  pokemon_v2_egggroupname_stream: Array<Pokemon_V2_Egggroupname>;
  /** fetch data from the table: "pokemon_v2_encounter" */
  pokemon_v2_encounter: Array<Pokemon_V2_Encounter>;
  /** fetch aggregated fields from the table: "pokemon_v2_encounter" */
  pokemon_v2_encounter_aggregate: Pokemon_V2_Encounter_Aggregate;
  /** fetch data from the table: "pokemon_v2_encounter" using primary key columns */
  pokemon_v2_encounter_by_pk?: Maybe<Pokemon_V2_Encounter>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_encounter" */
  pokemon_v2_encounter_stream: Array<Pokemon_V2_Encounter>;
  /** fetch data from the table: "pokemon_v2_encountercondition" */
  pokemon_v2_encountercondition: Array<Pokemon_V2_Encountercondition>;
  /** fetch aggregated fields from the table: "pokemon_v2_encountercondition" */
  pokemon_v2_encountercondition_aggregate: Pokemon_V2_Encountercondition_Aggregate;
  /** fetch data from the table: "pokemon_v2_encountercondition" using primary key columns */
  pokemon_v2_encountercondition_by_pk?: Maybe<Pokemon_V2_Encountercondition>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_encountercondition" */
  pokemon_v2_encountercondition_stream: Array<Pokemon_V2_Encountercondition>;
  /** fetch data from the table: "pokemon_v2_encounterconditionname" */
  pokemon_v2_encounterconditionname: Array<Pokemon_V2_Encounterconditionname>;
  /** fetch aggregated fields from the table: "pokemon_v2_encounterconditionname" */
  pokemon_v2_encounterconditionname_aggregate: Pokemon_V2_Encounterconditionname_Aggregate;
  /** fetch data from the table: "pokemon_v2_encounterconditionname" using primary key columns */
  pokemon_v2_encounterconditionname_by_pk?: Maybe<Pokemon_V2_Encounterconditionname>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_encounterconditionname" */
  pokemon_v2_encounterconditionname_stream: Array<Pokemon_V2_Encounterconditionname>;
  /** fetch data from the table: "pokemon_v2_encounterconditionvalue" */
  pokemon_v2_encounterconditionvalue: Array<Pokemon_V2_Encounterconditionvalue>;
  /** fetch aggregated fields from the table: "pokemon_v2_encounterconditionvalue" */
  pokemon_v2_encounterconditionvalue_aggregate: Pokemon_V2_Encounterconditionvalue_Aggregate;
  /** fetch data from the table: "pokemon_v2_encounterconditionvalue" using primary key columns */
  pokemon_v2_encounterconditionvalue_by_pk?: Maybe<Pokemon_V2_Encounterconditionvalue>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_encounterconditionvalue" */
  pokemon_v2_encounterconditionvalue_stream: Array<Pokemon_V2_Encounterconditionvalue>;
  /** fetch data from the table: "pokemon_v2_encounterconditionvaluemap" */
  pokemon_v2_encounterconditionvaluemap: Array<Pokemon_V2_Encounterconditionvaluemap>;
  /** fetch aggregated fields from the table: "pokemon_v2_encounterconditionvaluemap" */
  pokemon_v2_encounterconditionvaluemap_aggregate: Pokemon_V2_Encounterconditionvaluemap_Aggregate;
  /** fetch data from the table: "pokemon_v2_encounterconditionvaluemap" using primary key columns */
  pokemon_v2_encounterconditionvaluemap_by_pk?: Maybe<Pokemon_V2_Encounterconditionvaluemap>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_encounterconditionvaluemap" */
  pokemon_v2_encounterconditionvaluemap_stream: Array<Pokemon_V2_Encounterconditionvaluemap>;
  /** fetch data from the table: "pokemon_v2_encounterconditionvaluename" */
  pokemon_v2_encounterconditionvaluename: Array<Pokemon_V2_Encounterconditionvaluename>;
  /** fetch aggregated fields from the table: "pokemon_v2_encounterconditionvaluename" */
  pokemon_v2_encounterconditionvaluename_aggregate: Pokemon_V2_Encounterconditionvaluename_Aggregate;
  /** fetch data from the table: "pokemon_v2_encounterconditionvaluename" using primary key columns */
  pokemon_v2_encounterconditionvaluename_by_pk?: Maybe<Pokemon_V2_Encounterconditionvaluename>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_encounterconditionvaluename" */
  pokemon_v2_encounterconditionvaluename_stream: Array<Pokemon_V2_Encounterconditionvaluename>;
  /** fetch data from the table: "pokemon_v2_encountermethod" */
  pokemon_v2_encountermethod: Array<Pokemon_V2_Encountermethod>;
  /** fetch aggregated fields from the table: "pokemon_v2_encountermethod" */
  pokemon_v2_encountermethod_aggregate: Pokemon_V2_Encountermethod_Aggregate;
  /** fetch data from the table: "pokemon_v2_encountermethod" using primary key columns */
  pokemon_v2_encountermethod_by_pk?: Maybe<Pokemon_V2_Encountermethod>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_encountermethod" */
  pokemon_v2_encountermethod_stream: Array<Pokemon_V2_Encountermethod>;
  /** fetch data from the table: "pokemon_v2_encountermethodname" */
  pokemon_v2_encountermethodname: Array<Pokemon_V2_Encountermethodname>;
  /** fetch aggregated fields from the table: "pokemon_v2_encountermethodname" */
  pokemon_v2_encountermethodname_aggregate: Pokemon_V2_Encountermethodname_Aggregate;
  /** fetch data from the table: "pokemon_v2_encountermethodname" using primary key columns */
  pokemon_v2_encountermethodname_by_pk?: Maybe<Pokemon_V2_Encountermethodname>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_encountermethodname" */
  pokemon_v2_encountermethodname_stream: Array<Pokemon_V2_Encountermethodname>;
  /** fetch data from the table: "pokemon_v2_encounterslot" */
  pokemon_v2_encounterslot: Array<Pokemon_V2_Encounterslot>;
  /** fetch aggregated fields from the table: "pokemon_v2_encounterslot" */
  pokemon_v2_encounterslot_aggregate: Pokemon_V2_Encounterslot_Aggregate;
  /** fetch data from the table: "pokemon_v2_encounterslot" using primary key columns */
  pokemon_v2_encounterslot_by_pk?: Maybe<Pokemon_V2_Encounterslot>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_encounterslot" */
  pokemon_v2_encounterslot_stream: Array<Pokemon_V2_Encounterslot>;
  /** fetch data from the table: "pokemon_v2_evolutionchain" */
  pokemon_v2_evolutionchain: Array<Pokemon_V2_Evolutionchain>;
  /** fetch aggregated fields from the table: "pokemon_v2_evolutionchain" */
  pokemon_v2_evolutionchain_aggregate: Pokemon_V2_Evolutionchain_Aggregate;
  /** fetch data from the table: "pokemon_v2_evolutionchain" using primary key columns */
  pokemon_v2_evolutionchain_by_pk?: Maybe<Pokemon_V2_Evolutionchain>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_evolutionchain" */
  pokemon_v2_evolutionchain_stream: Array<Pokemon_V2_Evolutionchain>;
  /** fetch data from the table: "pokemon_v2_evolutiontrigger" */
  pokemon_v2_evolutiontrigger: Array<Pokemon_V2_Evolutiontrigger>;
  /** fetch aggregated fields from the table: "pokemon_v2_evolutiontrigger" */
  pokemon_v2_evolutiontrigger_aggregate: Pokemon_V2_Evolutiontrigger_Aggregate;
  /** fetch data from the table: "pokemon_v2_evolutiontrigger" using primary key columns */
  pokemon_v2_evolutiontrigger_by_pk?: Maybe<Pokemon_V2_Evolutiontrigger>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_evolutiontrigger" */
  pokemon_v2_evolutiontrigger_stream: Array<Pokemon_V2_Evolutiontrigger>;
  /** fetch data from the table: "pokemon_v2_evolutiontriggername" */
  pokemon_v2_evolutiontriggername: Array<Pokemon_V2_Evolutiontriggername>;
  /** fetch aggregated fields from the table: "pokemon_v2_evolutiontriggername" */
  pokemon_v2_evolutiontriggername_aggregate: Pokemon_V2_Evolutiontriggername_Aggregate;
  /** fetch data from the table: "pokemon_v2_evolutiontriggername" using primary key columns */
  pokemon_v2_evolutiontriggername_by_pk?: Maybe<Pokemon_V2_Evolutiontriggername>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_evolutiontriggername" */
  pokemon_v2_evolutiontriggername_stream: Array<Pokemon_V2_Evolutiontriggername>;
  /** fetch data from the table: "pokemon_v2_experience" */
  pokemon_v2_experience: Array<Pokemon_V2_Experience>;
  /** fetch aggregated fields from the table: "pokemon_v2_experience" */
  pokemon_v2_experience_aggregate: Pokemon_V2_Experience_Aggregate;
  /** fetch data from the table: "pokemon_v2_experience" using primary key columns */
  pokemon_v2_experience_by_pk?: Maybe<Pokemon_V2_Experience>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_experience" */
  pokemon_v2_experience_stream: Array<Pokemon_V2_Experience>;
  /** fetch data from the table: "pokemon_v2_gender" */
  pokemon_v2_gender: Array<Pokemon_V2_Gender>;
  /** fetch aggregated fields from the table: "pokemon_v2_gender" */
  pokemon_v2_gender_aggregate: Pokemon_V2_Gender_Aggregate;
  /** fetch data from the table: "pokemon_v2_gender" using primary key columns */
  pokemon_v2_gender_by_pk?: Maybe<Pokemon_V2_Gender>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_gender" */
  pokemon_v2_gender_stream: Array<Pokemon_V2_Gender>;
  /** fetch data from the table: "pokemon_v2_generation" */
  pokemon_v2_generation: Array<Pokemon_V2_Generation>;
  /** fetch aggregated fields from the table: "pokemon_v2_generation" */
  pokemon_v2_generation_aggregate: Pokemon_V2_Generation_Aggregate;
  /** fetch data from the table: "pokemon_v2_generation" using primary key columns */
  pokemon_v2_generation_by_pk?: Maybe<Pokemon_V2_Generation>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_generation" */
  pokemon_v2_generation_stream: Array<Pokemon_V2_Generation>;
  /** fetch data from the table: "pokemon_v2_generationname" */
  pokemon_v2_generationname: Array<Pokemon_V2_Generationname>;
  /** fetch aggregated fields from the table: "pokemon_v2_generationname" */
  pokemon_v2_generationname_aggregate: Pokemon_V2_Generationname_Aggregate;
  /** fetch data from the table: "pokemon_v2_generationname" using primary key columns */
  pokemon_v2_generationname_by_pk?: Maybe<Pokemon_V2_Generationname>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_generationname" */
  pokemon_v2_generationname_stream: Array<Pokemon_V2_Generationname>;
  /** fetch data from the table: "pokemon_v2_growthrate" */
  pokemon_v2_growthrate: Array<Pokemon_V2_Growthrate>;
  /** fetch aggregated fields from the table: "pokemon_v2_growthrate" */
  pokemon_v2_growthrate_aggregate: Pokemon_V2_Growthrate_Aggregate;
  /** fetch data from the table: "pokemon_v2_growthrate" using primary key columns */
  pokemon_v2_growthrate_by_pk?: Maybe<Pokemon_V2_Growthrate>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_growthrate" */
  pokemon_v2_growthrate_stream: Array<Pokemon_V2_Growthrate>;
  /** fetch data from the table: "pokemon_v2_growthratedescription" */
  pokemon_v2_growthratedescription: Array<Pokemon_V2_Growthratedescription>;
  /** fetch aggregated fields from the table: "pokemon_v2_growthratedescription" */
  pokemon_v2_growthratedescription_aggregate: Pokemon_V2_Growthratedescription_Aggregate;
  /** fetch data from the table: "pokemon_v2_growthratedescription" using primary key columns */
  pokemon_v2_growthratedescription_by_pk?: Maybe<Pokemon_V2_Growthratedescription>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_growthratedescription" */
  pokemon_v2_growthratedescription_stream: Array<Pokemon_V2_Growthratedescription>;
  /** fetch data from the table: "pokemon_v2_item" */
  pokemon_v2_item: Array<Pokemon_V2_Item>;
  /** fetch aggregated fields from the table: "pokemon_v2_item" */
  pokemon_v2_item_aggregate: Pokemon_V2_Item_Aggregate;
  /** fetch data from the table: "pokemon_v2_item" using primary key columns */
  pokemon_v2_item_by_pk?: Maybe<Pokemon_V2_Item>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_item" */
  pokemon_v2_item_stream: Array<Pokemon_V2_Item>;
  /** fetch data from the table: "pokemon_v2_itemattribute" */
  pokemon_v2_itemattribute: Array<Pokemon_V2_Itemattribute>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemattribute" */
  pokemon_v2_itemattribute_aggregate: Pokemon_V2_Itemattribute_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemattribute" using primary key columns */
  pokemon_v2_itemattribute_by_pk?: Maybe<Pokemon_V2_Itemattribute>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_itemattribute" */
  pokemon_v2_itemattribute_stream: Array<Pokemon_V2_Itemattribute>;
  /** fetch data from the table: "pokemon_v2_itemattributedescription" */
  pokemon_v2_itemattributedescription: Array<Pokemon_V2_Itemattributedescription>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemattributedescription" */
  pokemon_v2_itemattributedescription_aggregate: Pokemon_V2_Itemattributedescription_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemattributedescription" using primary key columns */
  pokemon_v2_itemattributedescription_by_pk?: Maybe<Pokemon_V2_Itemattributedescription>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_itemattributedescription" */
  pokemon_v2_itemattributedescription_stream: Array<Pokemon_V2_Itemattributedescription>;
  /** fetch data from the table: "pokemon_v2_itemattributemap" */
  pokemon_v2_itemattributemap: Array<Pokemon_V2_Itemattributemap>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemattributemap" */
  pokemon_v2_itemattributemap_aggregate: Pokemon_V2_Itemattributemap_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemattributemap" using primary key columns */
  pokemon_v2_itemattributemap_by_pk?: Maybe<Pokemon_V2_Itemattributemap>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_itemattributemap" */
  pokemon_v2_itemattributemap_stream: Array<Pokemon_V2_Itemattributemap>;
  /** fetch data from the table: "pokemon_v2_itemattributename" */
  pokemon_v2_itemattributename: Array<Pokemon_V2_Itemattributename>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemattributename" */
  pokemon_v2_itemattributename_aggregate: Pokemon_V2_Itemattributename_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemattributename" using primary key columns */
  pokemon_v2_itemattributename_by_pk?: Maybe<Pokemon_V2_Itemattributename>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_itemattributename" */
  pokemon_v2_itemattributename_stream: Array<Pokemon_V2_Itemattributename>;
  /** fetch data from the table: "pokemon_v2_itemcategory" */
  pokemon_v2_itemcategory: Array<Pokemon_V2_Itemcategory>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemcategory" */
  pokemon_v2_itemcategory_aggregate: Pokemon_V2_Itemcategory_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemcategory" using primary key columns */
  pokemon_v2_itemcategory_by_pk?: Maybe<Pokemon_V2_Itemcategory>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_itemcategory" */
  pokemon_v2_itemcategory_stream: Array<Pokemon_V2_Itemcategory>;
  /** fetch data from the table: "pokemon_v2_itemcategoryname" */
  pokemon_v2_itemcategoryname: Array<Pokemon_V2_Itemcategoryname>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemcategoryname" */
  pokemon_v2_itemcategoryname_aggregate: Pokemon_V2_Itemcategoryname_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemcategoryname" using primary key columns */
  pokemon_v2_itemcategoryname_by_pk?: Maybe<Pokemon_V2_Itemcategoryname>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_itemcategoryname" */
  pokemon_v2_itemcategoryname_stream: Array<Pokemon_V2_Itemcategoryname>;
  /** fetch data from the table: "pokemon_v2_itemeffecttext" */
  pokemon_v2_itemeffecttext: Array<Pokemon_V2_Itemeffecttext>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemeffecttext" */
  pokemon_v2_itemeffecttext_aggregate: Pokemon_V2_Itemeffecttext_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemeffecttext" using primary key columns */
  pokemon_v2_itemeffecttext_by_pk?: Maybe<Pokemon_V2_Itemeffecttext>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_itemeffecttext" */
  pokemon_v2_itemeffecttext_stream: Array<Pokemon_V2_Itemeffecttext>;
  /** fetch data from the table: "pokemon_v2_itemflavortext" */
  pokemon_v2_itemflavortext: Array<Pokemon_V2_Itemflavortext>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemflavortext" */
  pokemon_v2_itemflavortext_aggregate: Pokemon_V2_Itemflavortext_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemflavortext" using primary key columns */
  pokemon_v2_itemflavortext_by_pk?: Maybe<Pokemon_V2_Itemflavortext>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_itemflavortext" */
  pokemon_v2_itemflavortext_stream: Array<Pokemon_V2_Itemflavortext>;
  /** fetch data from the table: "pokemon_v2_itemflingeffect" */
  pokemon_v2_itemflingeffect: Array<Pokemon_V2_Itemflingeffect>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemflingeffect" */
  pokemon_v2_itemflingeffect_aggregate: Pokemon_V2_Itemflingeffect_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemflingeffect" using primary key columns */
  pokemon_v2_itemflingeffect_by_pk?: Maybe<Pokemon_V2_Itemflingeffect>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_itemflingeffect" */
  pokemon_v2_itemflingeffect_stream: Array<Pokemon_V2_Itemflingeffect>;
  /** fetch data from the table: "pokemon_v2_itemflingeffecteffecttext" */
  pokemon_v2_itemflingeffecteffecttext: Array<Pokemon_V2_Itemflingeffecteffecttext>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemflingeffecteffecttext" */
  pokemon_v2_itemflingeffecteffecttext_aggregate: Pokemon_V2_Itemflingeffecteffecttext_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemflingeffecteffecttext" using primary key columns */
  pokemon_v2_itemflingeffecteffecttext_by_pk?: Maybe<Pokemon_V2_Itemflingeffecteffecttext>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_itemflingeffecteffecttext" */
  pokemon_v2_itemflingeffecteffecttext_stream: Array<Pokemon_V2_Itemflingeffecteffecttext>;
  /** fetch data from the table: "pokemon_v2_itemgameindex" */
  pokemon_v2_itemgameindex: Array<Pokemon_V2_Itemgameindex>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemgameindex" */
  pokemon_v2_itemgameindex_aggregate: Pokemon_V2_Itemgameindex_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemgameindex" using primary key columns */
  pokemon_v2_itemgameindex_by_pk?: Maybe<Pokemon_V2_Itemgameindex>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_itemgameindex" */
  pokemon_v2_itemgameindex_stream: Array<Pokemon_V2_Itemgameindex>;
  /** fetch data from the table: "pokemon_v2_itemname" */
  pokemon_v2_itemname: Array<Pokemon_V2_Itemname>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemname" */
  pokemon_v2_itemname_aggregate: Pokemon_V2_Itemname_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemname" using primary key columns */
  pokemon_v2_itemname_by_pk?: Maybe<Pokemon_V2_Itemname>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_itemname" */
  pokemon_v2_itemname_stream: Array<Pokemon_V2_Itemname>;
  /** fetch data from the table: "pokemon_v2_itempocket" */
  pokemon_v2_itempocket: Array<Pokemon_V2_Itempocket>;
  /** fetch aggregated fields from the table: "pokemon_v2_itempocket" */
  pokemon_v2_itempocket_aggregate: Pokemon_V2_Itempocket_Aggregate;
  /** fetch data from the table: "pokemon_v2_itempocket" using primary key columns */
  pokemon_v2_itempocket_by_pk?: Maybe<Pokemon_V2_Itempocket>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_itempocket" */
  pokemon_v2_itempocket_stream: Array<Pokemon_V2_Itempocket>;
  /** fetch data from the table: "pokemon_v2_itempocketname" */
  pokemon_v2_itempocketname: Array<Pokemon_V2_Itempocketname>;
  /** fetch aggregated fields from the table: "pokemon_v2_itempocketname" */
  pokemon_v2_itempocketname_aggregate: Pokemon_V2_Itempocketname_Aggregate;
  /** fetch data from the table: "pokemon_v2_itempocketname" using primary key columns */
  pokemon_v2_itempocketname_by_pk?: Maybe<Pokemon_V2_Itempocketname>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_itempocketname" */
  pokemon_v2_itempocketname_stream: Array<Pokemon_V2_Itempocketname>;
  /** fetch data from the table: "pokemon_v2_itemsprites" */
  pokemon_v2_itemsprites: Array<Pokemon_V2_Itemsprites>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemsprites" */
  pokemon_v2_itemsprites_aggregate: Pokemon_V2_Itemsprites_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemsprites" using primary key columns */
  pokemon_v2_itemsprites_by_pk?: Maybe<Pokemon_V2_Itemsprites>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_itemsprites" */
  pokemon_v2_itemsprites_stream: Array<Pokemon_V2_Itemsprites>;
  /** fetch data from the table: "pokemon_v2_language" */
  pokemon_v2_language: Array<Pokemon_V2_Language>;
  /** fetch aggregated fields from the table: "pokemon_v2_language" */
  pokemon_v2_language_aggregate: Pokemon_V2_Language_Aggregate;
  /** fetch data from the table: "pokemon_v2_language" using primary key columns */
  pokemon_v2_language_by_pk?: Maybe<Pokemon_V2_Language>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_language" */
  pokemon_v2_language_stream: Array<Pokemon_V2_Language>;
  /** fetch data from the table: "pokemon_v2_languagename" */
  pokemon_v2_languagename: Array<Pokemon_V2_Languagename>;
  /** fetch aggregated fields from the table: "pokemon_v2_languagename" */
  pokemon_v2_languagename_aggregate: Pokemon_V2_Languagename_Aggregate;
  /** fetch data from the table: "pokemon_v2_languagename" using primary key columns */
  pokemon_v2_languagename_by_pk?: Maybe<Pokemon_V2_Languagename>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_languagename" */
  pokemon_v2_languagename_stream: Array<Pokemon_V2_Languagename>;
  /** fetch data from the table: "pokemon_v2_location" */
  pokemon_v2_location: Array<Pokemon_V2_Location>;
  /** fetch aggregated fields from the table: "pokemon_v2_location" */
  pokemon_v2_location_aggregate: Pokemon_V2_Location_Aggregate;
  /** fetch data from the table: "pokemon_v2_location" using primary key columns */
  pokemon_v2_location_by_pk?: Maybe<Pokemon_V2_Location>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_location" */
  pokemon_v2_location_stream: Array<Pokemon_V2_Location>;
  /** fetch data from the table: "pokemon_v2_locationarea" */
  pokemon_v2_locationarea: Array<Pokemon_V2_Locationarea>;
  /** fetch aggregated fields from the table: "pokemon_v2_locationarea" */
  pokemon_v2_locationarea_aggregate: Pokemon_V2_Locationarea_Aggregate;
  /** fetch data from the table: "pokemon_v2_locationarea" using primary key columns */
  pokemon_v2_locationarea_by_pk?: Maybe<Pokemon_V2_Locationarea>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_locationarea" */
  pokemon_v2_locationarea_stream: Array<Pokemon_V2_Locationarea>;
  /** fetch data from the table: "pokemon_v2_locationareaencounterrate" */
  pokemon_v2_locationareaencounterrate: Array<Pokemon_V2_Locationareaencounterrate>;
  /** fetch aggregated fields from the table: "pokemon_v2_locationareaencounterrate" */
  pokemon_v2_locationareaencounterrate_aggregate: Pokemon_V2_Locationareaencounterrate_Aggregate;
  /** fetch data from the table: "pokemon_v2_locationareaencounterrate" using primary key columns */
  pokemon_v2_locationareaencounterrate_by_pk?: Maybe<Pokemon_V2_Locationareaencounterrate>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_locationareaencounterrate" */
  pokemon_v2_locationareaencounterrate_stream: Array<Pokemon_V2_Locationareaencounterrate>;
  /** fetch data from the table: "pokemon_v2_locationareaname" */
  pokemon_v2_locationareaname: Array<Pokemon_V2_Locationareaname>;
  /** fetch aggregated fields from the table: "pokemon_v2_locationareaname" */
  pokemon_v2_locationareaname_aggregate: Pokemon_V2_Locationareaname_Aggregate;
  /** fetch data from the table: "pokemon_v2_locationareaname" using primary key columns */
  pokemon_v2_locationareaname_by_pk?: Maybe<Pokemon_V2_Locationareaname>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_locationareaname" */
  pokemon_v2_locationareaname_stream: Array<Pokemon_V2_Locationareaname>;
  /** fetch data from the table: "pokemon_v2_locationgameindex" */
  pokemon_v2_locationgameindex: Array<Pokemon_V2_Locationgameindex>;
  /** fetch aggregated fields from the table: "pokemon_v2_locationgameindex" */
  pokemon_v2_locationgameindex_aggregate: Pokemon_V2_Locationgameindex_Aggregate;
  /** fetch data from the table: "pokemon_v2_locationgameindex" using primary key columns */
  pokemon_v2_locationgameindex_by_pk?: Maybe<Pokemon_V2_Locationgameindex>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_locationgameindex" */
  pokemon_v2_locationgameindex_stream: Array<Pokemon_V2_Locationgameindex>;
  /** fetch data from the table: "pokemon_v2_locationname" */
  pokemon_v2_locationname: Array<Pokemon_V2_Locationname>;
  /** fetch aggregated fields from the table: "pokemon_v2_locationname" */
  pokemon_v2_locationname_aggregate: Pokemon_V2_Locationname_Aggregate;
  /** fetch data from the table: "pokemon_v2_locationname" using primary key columns */
  pokemon_v2_locationname_by_pk?: Maybe<Pokemon_V2_Locationname>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_locationname" */
  pokemon_v2_locationname_stream: Array<Pokemon_V2_Locationname>;
  /** fetch data from the table: "pokemon_v2_machine" */
  pokemon_v2_machine: Array<Pokemon_V2_Machine>;
  /** fetch aggregated fields from the table: "pokemon_v2_machine" */
  pokemon_v2_machine_aggregate: Pokemon_V2_Machine_Aggregate;
  /** fetch data from the table: "pokemon_v2_machine" using primary key columns */
  pokemon_v2_machine_by_pk?: Maybe<Pokemon_V2_Machine>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_machine" */
  pokemon_v2_machine_stream: Array<Pokemon_V2_Machine>;
  /** fetch data from the table: "pokemon_v2_move" */
  pokemon_v2_move: Array<Pokemon_V2_Move>;
  /** fetch aggregated fields from the table: "pokemon_v2_move" */
  pokemon_v2_move_aggregate: Pokemon_V2_Move_Aggregate;
  /** fetch data from the table: "pokemon_v2_move" using primary key columns */
  pokemon_v2_move_by_pk?: Maybe<Pokemon_V2_Move>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_move" */
  pokemon_v2_move_stream: Array<Pokemon_V2_Move>;
  /** fetch data from the table: "pokemon_v2_moveattribute" */
  pokemon_v2_moveattribute: Array<Pokemon_V2_Moveattribute>;
  /** fetch aggregated fields from the table: "pokemon_v2_moveattribute" */
  pokemon_v2_moveattribute_aggregate: Pokemon_V2_Moveattribute_Aggregate;
  /** fetch data from the table: "pokemon_v2_moveattribute" using primary key columns */
  pokemon_v2_moveattribute_by_pk?: Maybe<Pokemon_V2_Moveattribute>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_moveattribute" */
  pokemon_v2_moveattribute_stream: Array<Pokemon_V2_Moveattribute>;
  /** fetch data from the table: "pokemon_v2_moveattributedescription" */
  pokemon_v2_moveattributedescription: Array<Pokemon_V2_Moveattributedescription>;
  /** fetch aggregated fields from the table: "pokemon_v2_moveattributedescription" */
  pokemon_v2_moveattributedescription_aggregate: Pokemon_V2_Moveattributedescription_Aggregate;
  /** fetch data from the table: "pokemon_v2_moveattributedescription" using primary key columns */
  pokemon_v2_moveattributedescription_by_pk?: Maybe<Pokemon_V2_Moveattributedescription>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_moveattributedescription" */
  pokemon_v2_moveattributedescription_stream: Array<Pokemon_V2_Moveattributedescription>;
  /** fetch data from the table: "pokemon_v2_moveattributemap" */
  pokemon_v2_moveattributemap: Array<Pokemon_V2_Moveattributemap>;
  /** fetch aggregated fields from the table: "pokemon_v2_moveattributemap" */
  pokemon_v2_moveattributemap_aggregate: Pokemon_V2_Moveattributemap_Aggregate;
  /** fetch data from the table: "pokemon_v2_moveattributemap" using primary key columns */
  pokemon_v2_moveattributemap_by_pk?: Maybe<Pokemon_V2_Moveattributemap>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_moveattributemap" */
  pokemon_v2_moveattributemap_stream: Array<Pokemon_V2_Moveattributemap>;
  /** fetch data from the table: "pokemon_v2_moveattributename" */
  pokemon_v2_moveattributename: Array<Pokemon_V2_Moveattributename>;
  /** fetch aggregated fields from the table: "pokemon_v2_moveattributename" */
  pokemon_v2_moveattributename_aggregate: Pokemon_V2_Moveattributename_Aggregate;
  /** fetch data from the table: "pokemon_v2_moveattributename" using primary key columns */
  pokemon_v2_moveattributename_by_pk?: Maybe<Pokemon_V2_Moveattributename>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_moveattributename" */
  pokemon_v2_moveattributename_stream: Array<Pokemon_V2_Moveattributename>;
  /** fetch data from the table: "pokemon_v2_movebattlestyle" */
  pokemon_v2_movebattlestyle: Array<Pokemon_V2_Movebattlestyle>;
  /** fetch aggregated fields from the table: "pokemon_v2_movebattlestyle" */
  pokemon_v2_movebattlestyle_aggregate: Pokemon_V2_Movebattlestyle_Aggregate;
  /** fetch data from the table: "pokemon_v2_movebattlestyle" using primary key columns */
  pokemon_v2_movebattlestyle_by_pk?: Maybe<Pokemon_V2_Movebattlestyle>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_movebattlestyle" */
  pokemon_v2_movebattlestyle_stream: Array<Pokemon_V2_Movebattlestyle>;
  /** fetch data from the table: "pokemon_v2_movebattlestylename" */
  pokemon_v2_movebattlestylename: Array<Pokemon_V2_Movebattlestylename>;
  /** fetch aggregated fields from the table: "pokemon_v2_movebattlestylename" */
  pokemon_v2_movebattlestylename_aggregate: Pokemon_V2_Movebattlestylename_Aggregate;
  /** fetch data from the table: "pokemon_v2_movebattlestylename" using primary key columns */
  pokemon_v2_movebattlestylename_by_pk?: Maybe<Pokemon_V2_Movebattlestylename>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_movebattlestylename" */
  pokemon_v2_movebattlestylename_stream: Array<Pokemon_V2_Movebattlestylename>;
  /** fetch data from the table: "pokemon_v2_movechange" */
  pokemon_v2_movechange: Array<Pokemon_V2_Movechange>;
  /** fetch aggregated fields from the table: "pokemon_v2_movechange" */
  pokemon_v2_movechange_aggregate: Pokemon_V2_Movechange_Aggregate;
  /** fetch data from the table: "pokemon_v2_movechange" using primary key columns */
  pokemon_v2_movechange_by_pk?: Maybe<Pokemon_V2_Movechange>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_movechange" */
  pokemon_v2_movechange_stream: Array<Pokemon_V2_Movechange>;
  /** fetch data from the table: "pokemon_v2_movedamageclass" */
  pokemon_v2_movedamageclass: Array<Pokemon_V2_Movedamageclass>;
  /** fetch aggregated fields from the table: "pokemon_v2_movedamageclass" */
  pokemon_v2_movedamageclass_aggregate: Pokemon_V2_Movedamageclass_Aggregate;
  /** fetch data from the table: "pokemon_v2_movedamageclass" using primary key columns */
  pokemon_v2_movedamageclass_by_pk?: Maybe<Pokemon_V2_Movedamageclass>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_movedamageclass" */
  pokemon_v2_movedamageclass_stream: Array<Pokemon_V2_Movedamageclass>;
  /** fetch data from the table: "pokemon_v2_movedamageclassdescription" */
  pokemon_v2_movedamageclassdescription: Array<Pokemon_V2_Movedamageclassdescription>;
  /** fetch aggregated fields from the table: "pokemon_v2_movedamageclassdescription" */
  pokemon_v2_movedamageclassdescription_aggregate: Pokemon_V2_Movedamageclassdescription_Aggregate;
  /** fetch data from the table: "pokemon_v2_movedamageclassdescription" using primary key columns */
  pokemon_v2_movedamageclassdescription_by_pk?: Maybe<Pokemon_V2_Movedamageclassdescription>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_movedamageclassdescription" */
  pokemon_v2_movedamageclassdescription_stream: Array<Pokemon_V2_Movedamageclassdescription>;
  /** fetch data from the table: "pokemon_v2_movedamageclassname" */
  pokemon_v2_movedamageclassname: Array<Pokemon_V2_Movedamageclassname>;
  /** fetch aggregated fields from the table: "pokemon_v2_movedamageclassname" */
  pokemon_v2_movedamageclassname_aggregate: Pokemon_V2_Movedamageclassname_Aggregate;
  /** fetch data from the table: "pokemon_v2_movedamageclassname" using primary key columns */
  pokemon_v2_movedamageclassname_by_pk?: Maybe<Pokemon_V2_Movedamageclassname>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_movedamageclassname" */
  pokemon_v2_movedamageclassname_stream: Array<Pokemon_V2_Movedamageclassname>;
  /** fetch data from the table: "pokemon_v2_moveeffect" */
  pokemon_v2_moveeffect: Array<Pokemon_V2_Moveeffect>;
  /** fetch aggregated fields from the table: "pokemon_v2_moveeffect" */
  pokemon_v2_moveeffect_aggregate: Pokemon_V2_Moveeffect_Aggregate;
  /** fetch data from the table: "pokemon_v2_moveeffect" using primary key columns */
  pokemon_v2_moveeffect_by_pk?: Maybe<Pokemon_V2_Moveeffect>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_moveeffect" */
  pokemon_v2_moveeffect_stream: Array<Pokemon_V2_Moveeffect>;
  /** fetch data from the table: "pokemon_v2_moveeffectchange" */
  pokemon_v2_moveeffectchange: Array<Pokemon_V2_Moveeffectchange>;
  /** fetch aggregated fields from the table: "pokemon_v2_moveeffectchange" */
  pokemon_v2_moveeffectchange_aggregate: Pokemon_V2_Moveeffectchange_Aggregate;
  /** fetch data from the table: "pokemon_v2_moveeffectchange" using primary key columns */
  pokemon_v2_moveeffectchange_by_pk?: Maybe<Pokemon_V2_Moveeffectchange>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_moveeffectchange" */
  pokemon_v2_moveeffectchange_stream: Array<Pokemon_V2_Moveeffectchange>;
  /** fetch data from the table: "pokemon_v2_moveeffectchangeeffecttext" */
  pokemon_v2_moveeffectchangeeffecttext: Array<Pokemon_V2_Moveeffectchangeeffecttext>;
  /** fetch aggregated fields from the table: "pokemon_v2_moveeffectchangeeffecttext" */
  pokemon_v2_moveeffectchangeeffecttext_aggregate: Pokemon_V2_Moveeffectchangeeffecttext_Aggregate;
  /** fetch data from the table: "pokemon_v2_moveeffectchangeeffecttext" using primary key columns */
  pokemon_v2_moveeffectchangeeffecttext_by_pk?: Maybe<Pokemon_V2_Moveeffectchangeeffecttext>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_moveeffectchangeeffecttext" */
  pokemon_v2_moveeffectchangeeffecttext_stream: Array<Pokemon_V2_Moveeffectchangeeffecttext>;
  /** fetch data from the table: "pokemon_v2_moveeffecteffecttext" */
  pokemon_v2_moveeffecteffecttext: Array<Pokemon_V2_Moveeffecteffecttext>;
  /** fetch aggregated fields from the table: "pokemon_v2_moveeffecteffecttext" */
  pokemon_v2_moveeffecteffecttext_aggregate: Pokemon_V2_Moveeffecteffecttext_Aggregate;
  /** fetch data from the table: "pokemon_v2_moveeffecteffecttext" using primary key columns */
  pokemon_v2_moveeffecteffecttext_by_pk?: Maybe<Pokemon_V2_Moveeffecteffecttext>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_moveeffecteffecttext" */
  pokemon_v2_moveeffecteffecttext_stream: Array<Pokemon_V2_Moveeffecteffecttext>;
  /** fetch data from the table: "pokemon_v2_moveflavortext" */
  pokemon_v2_moveflavortext: Array<Pokemon_V2_Moveflavortext>;
  /** fetch aggregated fields from the table: "pokemon_v2_moveflavortext" */
  pokemon_v2_moveflavortext_aggregate: Pokemon_V2_Moveflavortext_Aggregate;
  /** fetch data from the table: "pokemon_v2_moveflavortext" using primary key columns */
  pokemon_v2_moveflavortext_by_pk?: Maybe<Pokemon_V2_Moveflavortext>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_moveflavortext" */
  pokemon_v2_moveflavortext_stream: Array<Pokemon_V2_Moveflavortext>;
  /** fetch data from the table: "pokemon_v2_movelearnmethod" */
  pokemon_v2_movelearnmethod: Array<Pokemon_V2_Movelearnmethod>;
  /** fetch aggregated fields from the table: "pokemon_v2_movelearnmethod" */
  pokemon_v2_movelearnmethod_aggregate: Pokemon_V2_Movelearnmethod_Aggregate;
  /** fetch data from the table: "pokemon_v2_movelearnmethod" using primary key columns */
  pokemon_v2_movelearnmethod_by_pk?: Maybe<Pokemon_V2_Movelearnmethod>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_movelearnmethod" */
  pokemon_v2_movelearnmethod_stream: Array<Pokemon_V2_Movelearnmethod>;
  /** fetch data from the table: "pokemon_v2_movelearnmethoddescription" */
  pokemon_v2_movelearnmethoddescription: Array<Pokemon_V2_Movelearnmethoddescription>;
  /** fetch aggregated fields from the table: "pokemon_v2_movelearnmethoddescription" */
  pokemon_v2_movelearnmethoddescription_aggregate: Pokemon_V2_Movelearnmethoddescription_Aggregate;
  /** fetch data from the table: "pokemon_v2_movelearnmethoddescription" using primary key columns */
  pokemon_v2_movelearnmethoddescription_by_pk?: Maybe<Pokemon_V2_Movelearnmethoddescription>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_movelearnmethoddescription" */
  pokemon_v2_movelearnmethoddescription_stream: Array<Pokemon_V2_Movelearnmethoddescription>;
  /** fetch data from the table: "pokemon_v2_movelearnmethodname" */
  pokemon_v2_movelearnmethodname: Array<Pokemon_V2_Movelearnmethodname>;
  /** fetch aggregated fields from the table: "pokemon_v2_movelearnmethodname" */
  pokemon_v2_movelearnmethodname_aggregate: Pokemon_V2_Movelearnmethodname_Aggregate;
  /** fetch data from the table: "pokemon_v2_movelearnmethodname" using primary key columns */
  pokemon_v2_movelearnmethodname_by_pk?: Maybe<Pokemon_V2_Movelearnmethodname>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_movelearnmethodname" */
  pokemon_v2_movelearnmethodname_stream: Array<Pokemon_V2_Movelearnmethodname>;
  /** fetch data from the table: "pokemon_v2_movemeta" */
  pokemon_v2_movemeta: Array<Pokemon_V2_Movemeta>;
  /** fetch aggregated fields from the table: "pokemon_v2_movemeta" */
  pokemon_v2_movemeta_aggregate: Pokemon_V2_Movemeta_Aggregate;
  /** fetch data from the table: "pokemon_v2_movemeta" using primary key columns */
  pokemon_v2_movemeta_by_pk?: Maybe<Pokemon_V2_Movemeta>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_movemeta" */
  pokemon_v2_movemeta_stream: Array<Pokemon_V2_Movemeta>;
  /** fetch data from the table: "pokemon_v2_movemetaailment" */
  pokemon_v2_movemetaailment: Array<Pokemon_V2_Movemetaailment>;
  /** fetch aggregated fields from the table: "pokemon_v2_movemetaailment" */
  pokemon_v2_movemetaailment_aggregate: Pokemon_V2_Movemetaailment_Aggregate;
  /** fetch data from the table: "pokemon_v2_movemetaailment" using primary key columns */
  pokemon_v2_movemetaailment_by_pk?: Maybe<Pokemon_V2_Movemetaailment>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_movemetaailment" */
  pokemon_v2_movemetaailment_stream: Array<Pokemon_V2_Movemetaailment>;
  /** fetch data from the table: "pokemon_v2_movemetaailmentname" */
  pokemon_v2_movemetaailmentname: Array<Pokemon_V2_Movemetaailmentname>;
  /** fetch aggregated fields from the table: "pokemon_v2_movemetaailmentname" */
  pokemon_v2_movemetaailmentname_aggregate: Pokemon_V2_Movemetaailmentname_Aggregate;
  /** fetch data from the table: "pokemon_v2_movemetaailmentname" using primary key columns */
  pokemon_v2_movemetaailmentname_by_pk?: Maybe<Pokemon_V2_Movemetaailmentname>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_movemetaailmentname" */
  pokemon_v2_movemetaailmentname_stream: Array<Pokemon_V2_Movemetaailmentname>;
  /** fetch data from the table: "pokemon_v2_movemetacategory" */
  pokemon_v2_movemetacategory: Array<Pokemon_V2_Movemetacategory>;
  /** fetch aggregated fields from the table: "pokemon_v2_movemetacategory" */
  pokemon_v2_movemetacategory_aggregate: Pokemon_V2_Movemetacategory_Aggregate;
  /** fetch data from the table: "pokemon_v2_movemetacategory" using primary key columns */
  pokemon_v2_movemetacategory_by_pk?: Maybe<Pokemon_V2_Movemetacategory>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_movemetacategory" */
  pokemon_v2_movemetacategory_stream: Array<Pokemon_V2_Movemetacategory>;
  /** fetch data from the table: "pokemon_v2_movemetacategorydescription" */
  pokemon_v2_movemetacategorydescription: Array<Pokemon_V2_Movemetacategorydescription>;
  /** fetch aggregated fields from the table: "pokemon_v2_movemetacategorydescription" */
  pokemon_v2_movemetacategorydescription_aggregate: Pokemon_V2_Movemetacategorydescription_Aggregate;
  /** fetch data from the table: "pokemon_v2_movemetacategorydescription" using primary key columns */
  pokemon_v2_movemetacategorydescription_by_pk?: Maybe<Pokemon_V2_Movemetacategorydescription>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_movemetacategorydescription" */
  pokemon_v2_movemetacategorydescription_stream: Array<Pokemon_V2_Movemetacategorydescription>;
  /** fetch data from the table: "pokemon_v2_movemetastatchange" */
  pokemon_v2_movemetastatchange: Array<Pokemon_V2_Movemetastatchange>;
  /** fetch aggregated fields from the table: "pokemon_v2_movemetastatchange" */
  pokemon_v2_movemetastatchange_aggregate: Pokemon_V2_Movemetastatchange_Aggregate;
  /** fetch data from the table: "pokemon_v2_movemetastatchange" using primary key columns */
  pokemon_v2_movemetastatchange_by_pk?: Maybe<Pokemon_V2_Movemetastatchange>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_movemetastatchange" */
  pokemon_v2_movemetastatchange_stream: Array<Pokemon_V2_Movemetastatchange>;
  /** fetch data from the table: "pokemon_v2_movename" */
  pokemon_v2_movename: Array<Pokemon_V2_Movename>;
  /** fetch aggregated fields from the table: "pokemon_v2_movename" */
  pokemon_v2_movename_aggregate: Pokemon_V2_Movename_Aggregate;
  /** fetch data from the table: "pokemon_v2_movename" using primary key columns */
  pokemon_v2_movename_by_pk?: Maybe<Pokemon_V2_Movename>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_movename" */
  pokemon_v2_movename_stream: Array<Pokemon_V2_Movename>;
  /** fetch data from the table: "pokemon_v2_movetarget" */
  pokemon_v2_movetarget: Array<Pokemon_V2_Movetarget>;
  /** fetch aggregated fields from the table: "pokemon_v2_movetarget" */
  pokemon_v2_movetarget_aggregate: Pokemon_V2_Movetarget_Aggregate;
  /** fetch data from the table: "pokemon_v2_movetarget" using primary key columns */
  pokemon_v2_movetarget_by_pk?: Maybe<Pokemon_V2_Movetarget>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_movetarget" */
  pokemon_v2_movetarget_stream: Array<Pokemon_V2_Movetarget>;
  /** fetch data from the table: "pokemon_v2_movetargetdescription" */
  pokemon_v2_movetargetdescription: Array<Pokemon_V2_Movetargetdescription>;
  /** fetch aggregated fields from the table: "pokemon_v2_movetargetdescription" */
  pokemon_v2_movetargetdescription_aggregate: Pokemon_V2_Movetargetdescription_Aggregate;
  /** fetch data from the table: "pokemon_v2_movetargetdescription" using primary key columns */
  pokemon_v2_movetargetdescription_by_pk?: Maybe<Pokemon_V2_Movetargetdescription>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_movetargetdescription" */
  pokemon_v2_movetargetdescription_stream: Array<Pokemon_V2_Movetargetdescription>;
  /** fetch data from the table: "pokemon_v2_movetargetname" */
  pokemon_v2_movetargetname: Array<Pokemon_V2_Movetargetname>;
  /** fetch aggregated fields from the table: "pokemon_v2_movetargetname" */
  pokemon_v2_movetargetname_aggregate: Pokemon_V2_Movetargetname_Aggregate;
  /** fetch data from the table: "pokemon_v2_movetargetname" using primary key columns */
  pokemon_v2_movetargetname_by_pk?: Maybe<Pokemon_V2_Movetargetname>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_movetargetname" */
  pokemon_v2_movetargetname_stream: Array<Pokemon_V2_Movetargetname>;
  /** fetch data from the table: "pokemon_v2_nature" */
  pokemon_v2_nature: Array<Pokemon_V2_Nature>;
  /** fetch aggregated fields from the table: "pokemon_v2_nature" */
  pokemon_v2_nature_aggregate: Pokemon_V2_Nature_Aggregate;
  /** fetch data from the table: "pokemon_v2_nature" using primary key columns */
  pokemon_v2_nature_by_pk?: Maybe<Pokemon_V2_Nature>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_nature" */
  pokemon_v2_nature_stream: Array<Pokemon_V2_Nature>;
  /** fetch data from the table: "pokemon_v2_naturebattlestylepreference" */
  pokemon_v2_naturebattlestylepreference: Array<Pokemon_V2_Naturebattlestylepreference>;
  /** fetch aggregated fields from the table: "pokemon_v2_naturebattlestylepreference" */
  pokemon_v2_naturebattlestylepreference_aggregate: Pokemon_V2_Naturebattlestylepreference_Aggregate;
  /** fetch data from the table: "pokemon_v2_naturebattlestylepreference" using primary key columns */
  pokemon_v2_naturebattlestylepreference_by_pk?: Maybe<Pokemon_V2_Naturebattlestylepreference>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_naturebattlestylepreference" */
  pokemon_v2_naturebattlestylepreference_stream: Array<Pokemon_V2_Naturebattlestylepreference>;
  /** fetch data from the table: "pokemon_v2_naturename" */
  pokemon_v2_naturename: Array<Pokemon_V2_Naturename>;
  /** fetch aggregated fields from the table: "pokemon_v2_naturename" */
  pokemon_v2_naturename_aggregate: Pokemon_V2_Naturename_Aggregate;
  /** fetch data from the table: "pokemon_v2_naturename" using primary key columns */
  pokemon_v2_naturename_by_pk?: Maybe<Pokemon_V2_Naturename>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_naturename" */
  pokemon_v2_naturename_stream: Array<Pokemon_V2_Naturename>;
  /** fetch data from the table: "pokemon_v2_naturepokeathlonstat" */
  pokemon_v2_naturepokeathlonstat: Array<Pokemon_V2_Naturepokeathlonstat>;
  /** fetch aggregated fields from the table: "pokemon_v2_naturepokeathlonstat" */
  pokemon_v2_naturepokeathlonstat_aggregate: Pokemon_V2_Naturepokeathlonstat_Aggregate;
  /** fetch data from the table: "pokemon_v2_naturepokeathlonstat" using primary key columns */
  pokemon_v2_naturepokeathlonstat_by_pk?: Maybe<Pokemon_V2_Naturepokeathlonstat>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_naturepokeathlonstat" */
  pokemon_v2_naturepokeathlonstat_stream: Array<Pokemon_V2_Naturepokeathlonstat>;
  /** fetch data from the table: "pokemon_v2_palpark" */
  pokemon_v2_palpark: Array<Pokemon_V2_Palpark>;
  /** fetch aggregated fields from the table: "pokemon_v2_palpark" */
  pokemon_v2_palpark_aggregate: Pokemon_V2_Palpark_Aggregate;
  /** fetch data from the table: "pokemon_v2_palpark" using primary key columns */
  pokemon_v2_palpark_by_pk?: Maybe<Pokemon_V2_Palpark>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_palpark" */
  pokemon_v2_palpark_stream: Array<Pokemon_V2_Palpark>;
  /** fetch data from the table: "pokemon_v2_palparkarea" */
  pokemon_v2_palparkarea: Array<Pokemon_V2_Palparkarea>;
  /** fetch aggregated fields from the table: "pokemon_v2_palparkarea" */
  pokemon_v2_palparkarea_aggregate: Pokemon_V2_Palparkarea_Aggregate;
  /** fetch data from the table: "pokemon_v2_palparkarea" using primary key columns */
  pokemon_v2_palparkarea_by_pk?: Maybe<Pokemon_V2_Palparkarea>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_palparkarea" */
  pokemon_v2_palparkarea_stream: Array<Pokemon_V2_Palparkarea>;
  /** fetch data from the table: "pokemon_v2_palparkareaname" */
  pokemon_v2_palparkareaname: Array<Pokemon_V2_Palparkareaname>;
  /** fetch aggregated fields from the table: "pokemon_v2_palparkareaname" */
  pokemon_v2_palparkareaname_aggregate: Pokemon_V2_Palparkareaname_Aggregate;
  /** fetch data from the table: "pokemon_v2_palparkareaname" using primary key columns */
  pokemon_v2_palparkareaname_by_pk?: Maybe<Pokemon_V2_Palparkareaname>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_palparkareaname" */
  pokemon_v2_palparkareaname_stream: Array<Pokemon_V2_Palparkareaname>;
  /** fetch data from the table: "pokemon_v2_pokeathlonstat" */
  pokemon_v2_pokeathlonstat: Array<Pokemon_V2_Pokeathlonstat>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokeathlonstat" */
  pokemon_v2_pokeathlonstat_aggregate: Pokemon_V2_Pokeathlonstat_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokeathlonstat" using primary key columns */
  pokemon_v2_pokeathlonstat_by_pk?: Maybe<Pokemon_V2_Pokeathlonstat>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_pokeathlonstat" */
  pokemon_v2_pokeathlonstat_stream: Array<Pokemon_V2_Pokeathlonstat>;
  /** fetch data from the table: "pokemon_v2_pokeathlonstatname" */
  pokemon_v2_pokeathlonstatname: Array<Pokemon_V2_Pokeathlonstatname>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokeathlonstatname" */
  pokemon_v2_pokeathlonstatname_aggregate: Pokemon_V2_Pokeathlonstatname_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokeathlonstatname" using primary key columns */
  pokemon_v2_pokeathlonstatname_by_pk?: Maybe<Pokemon_V2_Pokeathlonstatname>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_pokeathlonstatname" */
  pokemon_v2_pokeathlonstatname_stream: Array<Pokemon_V2_Pokeathlonstatname>;
  /** fetch data from the table: "pokemon_v2_pokedex" */
  pokemon_v2_pokedex: Array<Pokemon_V2_Pokedex>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokedex" */
  pokemon_v2_pokedex_aggregate: Pokemon_V2_Pokedex_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokedex" using primary key columns */
  pokemon_v2_pokedex_by_pk?: Maybe<Pokemon_V2_Pokedex>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_pokedex" */
  pokemon_v2_pokedex_stream: Array<Pokemon_V2_Pokedex>;
  /** fetch data from the table: "pokemon_v2_pokedexdescription" */
  pokemon_v2_pokedexdescription: Array<Pokemon_V2_Pokedexdescription>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokedexdescription" */
  pokemon_v2_pokedexdescription_aggregate: Pokemon_V2_Pokedexdescription_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokedexdescription" using primary key columns */
  pokemon_v2_pokedexdescription_by_pk?: Maybe<Pokemon_V2_Pokedexdescription>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_pokedexdescription" */
  pokemon_v2_pokedexdescription_stream: Array<Pokemon_V2_Pokedexdescription>;
  /** fetch data from the table: "pokemon_v2_pokedexname" */
  pokemon_v2_pokedexname: Array<Pokemon_V2_Pokedexname>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokedexname" */
  pokemon_v2_pokedexname_aggregate: Pokemon_V2_Pokedexname_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokedexname" using primary key columns */
  pokemon_v2_pokedexname_by_pk?: Maybe<Pokemon_V2_Pokedexname>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_pokedexname" */
  pokemon_v2_pokedexname_stream: Array<Pokemon_V2_Pokedexname>;
  /** fetch data from the table: "pokemon_v2_pokedexversiongroup" */
  pokemon_v2_pokedexversiongroup: Array<Pokemon_V2_Pokedexversiongroup>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokedexversiongroup" */
  pokemon_v2_pokedexversiongroup_aggregate: Pokemon_V2_Pokedexversiongroup_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokedexversiongroup" using primary key columns */
  pokemon_v2_pokedexversiongroup_by_pk?: Maybe<Pokemon_V2_Pokedexversiongroup>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_pokedexversiongroup" */
  pokemon_v2_pokedexversiongroup_stream: Array<Pokemon_V2_Pokedexversiongroup>;
  /** fetch data from the table: "pokemon_v2_pokemon" */
  pokemon_v2_pokemon: Array<Pokemon_V2_Pokemon>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemon" */
  pokemon_v2_pokemon_aggregate: Pokemon_V2_Pokemon_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemon" using primary key columns */
  pokemon_v2_pokemon_by_pk?: Maybe<Pokemon_V2_Pokemon>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_pokemon" */
  pokemon_v2_pokemon_stream: Array<Pokemon_V2_Pokemon>;
  /** fetch data from the table: "pokemon_v2_pokemonability" */
  pokemon_v2_pokemonability: Array<Pokemon_V2_Pokemonability>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonability" */
  pokemon_v2_pokemonability_aggregate: Pokemon_V2_Pokemonability_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonability" using primary key columns */
  pokemon_v2_pokemonability_by_pk?: Maybe<Pokemon_V2_Pokemonability>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_pokemonability" */
  pokemon_v2_pokemonability_stream: Array<Pokemon_V2_Pokemonability>;
  /** fetch data from the table: "pokemon_v2_pokemonabilitypast" */
  pokemon_v2_pokemonabilitypast: Array<Pokemon_V2_Pokemonabilitypast>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonabilitypast" */
  pokemon_v2_pokemonabilitypast_aggregate: Pokemon_V2_Pokemonabilitypast_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonabilitypast" using primary key columns */
  pokemon_v2_pokemonabilitypast_by_pk?: Maybe<Pokemon_V2_Pokemonabilitypast>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_pokemonabilitypast" */
  pokemon_v2_pokemonabilitypast_stream: Array<Pokemon_V2_Pokemonabilitypast>;
  /** fetch data from the table: "pokemon_v2_pokemoncolor" */
  pokemon_v2_pokemoncolor: Array<Pokemon_V2_Pokemoncolor>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemoncolor" */
  pokemon_v2_pokemoncolor_aggregate: Pokemon_V2_Pokemoncolor_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemoncolor" using primary key columns */
  pokemon_v2_pokemoncolor_by_pk?: Maybe<Pokemon_V2_Pokemoncolor>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_pokemoncolor" */
  pokemon_v2_pokemoncolor_stream: Array<Pokemon_V2_Pokemoncolor>;
  /** fetch data from the table: "pokemon_v2_pokemoncolorname" */
  pokemon_v2_pokemoncolorname: Array<Pokemon_V2_Pokemoncolorname>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemoncolorname" */
  pokemon_v2_pokemoncolorname_aggregate: Pokemon_V2_Pokemoncolorname_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemoncolorname" using primary key columns */
  pokemon_v2_pokemoncolorname_by_pk?: Maybe<Pokemon_V2_Pokemoncolorname>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_pokemoncolorname" */
  pokemon_v2_pokemoncolorname_stream: Array<Pokemon_V2_Pokemoncolorname>;
  /** fetch data from the table: "pokemon_v2_pokemoncries" */
  pokemon_v2_pokemoncries: Array<Pokemon_V2_Pokemoncries>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemoncries" */
  pokemon_v2_pokemoncries_aggregate: Pokemon_V2_Pokemoncries_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemoncries" using primary key columns */
  pokemon_v2_pokemoncries_by_pk?: Maybe<Pokemon_V2_Pokemoncries>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_pokemoncries" */
  pokemon_v2_pokemoncries_stream: Array<Pokemon_V2_Pokemoncries>;
  /** fetch data from the table: "pokemon_v2_pokemondexnumber" */
  pokemon_v2_pokemondexnumber: Array<Pokemon_V2_Pokemondexnumber>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemondexnumber" */
  pokemon_v2_pokemondexnumber_aggregate: Pokemon_V2_Pokemondexnumber_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemondexnumber" using primary key columns */
  pokemon_v2_pokemondexnumber_by_pk?: Maybe<Pokemon_V2_Pokemondexnumber>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_pokemondexnumber" */
  pokemon_v2_pokemondexnumber_stream: Array<Pokemon_V2_Pokemondexnumber>;
  /** fetch data from the table: "pokemon_v2_pokemonegggroup" */
  pokemon_v2_pokemonegggroup: Array<Pokemon_V2_Pokemonegggroup>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonegggroup" */
  pokemon_v2_pokemonegggroup_aggregate: Pokemon_V2_Pokemonegggroup_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonegggroup" using primary key columns */
  pokemon_v2_pokemonegggroup_by_pk?: Maybe<Pokemon_V2_Pokemonegggroup>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_pokemonegggroup" */
  pokemon_v2_pokemonegggroup_stream: Array<Pokemon_V2_Pokemonegggroup>;
  /** fetch data from the table: "pokemon_v2_pokemonevolution" */
  pokemon_v2_pokemonevolution: Array<Pokemon_V2_Pokemonevolution>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonevolution" */
  pokemon_v2_pokemonevolution_aggregate: Pokemon_V2_Pokemonevolution_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonevolution" using primary key columns */
  pokemon_v2_pokemonevolution_by_pk?: Maybe<Pokemon_V2_Pokemonevolution>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_pokemonevolution" */
  pokemon_v2_pokemonevolution_stream: Array<Pokemon_V2_Pokemonevolution>;
  /** fetch data from the table: "pokemon_v2_pokemonform" */
  pokemon_v2_pokemonform: Array<Pokemon_V2_Pokemonform>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonform" */
  pokemon_v2_pokemonform_aggregate: Pokemon_V2_Pokemonform_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonform" using primary key columns */
  pokemon_v2_pokemonform_by_pk?: Maybe<Pokemon_V2_Pokemonform>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_pokemonform" */
  pokemon_v2_pokemonform_stream: Array<Pokemon_V2_Pokemonform>;
  /** fetch data from the table: "pokemon_v2_pokemonformgeneration" */
  pokemon_v2_pokemonformgeneration: Array<Pokemon_V2_Pokemonformgeneration>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonformgeneration" */
  pokemon_v2_pokemonformgeneration_aggregate: Pokemon_V2_Pokemonformgeneration_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonformgeneration" using primary key columns */
  pokemon_v2_pokemonformgeneration_by_pk?: Maybe<Pokemon_V2_Pokemonformgeneration>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_pokemonformgeneration" */
  pokemon_v2_pokemonformgeneration_stream: Array<Pokemon_V2_Pokemonformgeneration>;
  /** fetch data from the table: "pokemon_v2_pokemonformname" */
  pokemon_v2_pokemonformname: Array<Pokemon_V2_Pokemonformname>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonformname" */
  pokemon_v2_pokemonformname_aggregate: Pokemon_V2_Pokemonformname_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonformname" using primary key columns */
  pokemon_v2_pokemonformname_by_pk?: Maybe<Pokemon_V2_Pokemonformname>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_pokemonformname" */
  pokemon_v2_pokemonformname_stream: Array<Pokemon_V2_Pokemonformname>;
  /** fetch data from the table: "pokemon_v2_pokemonformsprites" */
  pokemon_v2_pokemonformsprites: Array<Pokemon_V2_Pokemonformsprites>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonformsprites" */
  pokemon_v2_pokemonformsprites_aggregate: Pokemon_V2_Pokemonformsprites_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonformsprites" using primary key columns */
  pokemon_v2_pokemonformsprites_by_pk?: Maybe<Pokemon_V2_Pokemonformsprites>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_pokemonformsprites" */
  pokemon_v2_pokemonformsprites_stream: Array<Pokemon_V2_Pokemonformsprites>;
  /** fetch data from the table: "pokemon_v2_pokemonformtype" */
  pokemon_v2_pokemonformtype: Array<Pokemon_V2_Pokemonformtype>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonformtype" */
  pokemon_v2_pokemonformtype_aggregate: Pokemon_V2_Pokemonformtype_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonformtype" using primary key columns */
  pokemon_v2_pokemonformtype_by_pk?: Maybe<Pokemon_V2_Pokemonformtype>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_pokemonformtype" */
  pokemon_v2_pokemonformtype_stream: Array<Pokemon_V2_Pokemonformtype>;
  /** fetch data from the table: "pokemon_v2_pokemongameindex" */
  pokemon_v2_pokemongameindex: Array<Pokemon_V2_Pokemongameindex>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemongameindex" */
  pokemon_v2_pokemongameindex_aggregate: Pokemon_V2_Pokemongameindex_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemongameindex" using primary key columns */
  pokemon_v2_pokemongameindex_by_pk?: Maybe<Pokemon_V2_Pokemongameindex>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_pokemongameindex" */
  pokemon_v2_pokemongameindex_stream: Array<Pokemon_V2_Pokemongameindex>;
  /** fetch data from the table: "pokemon_v2_pokemonhabitat" */
  pokemon_v2_pokemonhabitat: Array<Pokemon_V2_Pokemonhabitat>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonhabitat" */
  pokemon_v2_pokemonhabitat_aggregate: Pokemon_V2_Pokemonhabitat_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonhabitat" using primary key columns */
  pokemon_v2_pokemonhabitat_by_pk?: Maybe<Pokemon_V2_Pokemonhabitat>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_pokemonhabitat" */
  pokemon_v2_pokemonhabitat_stream: Array<Pokemon_V2_Pokemonhabitat>;
  /** fetch data from the table: "pokemon_v2_pokemonhabitatname" */
  pokemon_v2_pokemonhabitatname: Array<Pokemon_V2_Pokemonhabitatname>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonhabitatname" */
  pokemon_v2_pokemonhabitatname_aggregate: Pokemon_V2_Pokemonhabitatname_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonhabitatname" using primary key columns */
  pokemon_v2_pokemonhabitatname_by_pk?: Maybe<Pokemon_V2_Pokemonhabitatname>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_pokemonhabitatname" */
  pokemon_v2_pokemonhabitatname_stream: Array<Pokemon_V2_Pokemonhabitatname>;
  /** fetch data from the table: "pokemon_v2_pokemonitem" */
  pokemon_v2_pokemonitem: Array<Pokemon_V2_Pokemonitem>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonitem" */
  pokemon_v2_pokemonitem_aggregate: Pokemon_V2_Pokemonitem_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonitem" using primary key columns */
  pokemon_v2_pokemonitem_by_pk?: Maybe<Pokemon_V2_Pokemonitem>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_pokemonitem" */
  pokemon_v2_pokemonitem_stream: Array<Pokemon_V2_Pokemonitem>;
  /** fetch data from the table: "pokemon_v2_pokemonmove" */
  pokemon_v2_pokemonmove: Array<Pokemon_V2_Pokemonmove>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonmove" */
  pokemon_v2_pokemonmove_aggregate: Pokemon_V2_Pokemonmove_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonmove" using primary key columns */
  pokemon_v2_pokemonmove_by_pk?: Maybe<Pokemon_V2_Pokemonmove>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_pokemonmove" */
  pokemon_v2_pokemonmove_stream: Array<Pokemon_V2_Pokemonmove>;
  /** fetch data from the table: "pokemon_v2_pokemonshape" */
  pokemon_v2_pokemonshape: Array<Pokemon_V2_Pokemonshape>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonshape" */
  pokemon_v2_pokemonshape_aggregate: Pokemon_V2_Pokemonshape_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonshape" using primary key columns */
  pokemon_v2_pokemonshape_by_pk?: Maybe<Pokemon_V2_Pokemonshape>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_pokemonshape" */
  pokemon_v2_pokemonshape_stream: Array<Pokemon_V2_Pokemonshape>;
  /** fetch data from the table: "pokemon_v2_pokemonshapename" */
  pokemon_v2_pokemonshapename: Array<Pokemon_V2_Pokemonshapename>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonshapename" */
  pokemon_v2_pokemonshapename_aggregate: Pokemon_V2_Pokemonshapename_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonshapename" using primary key columns */
  pokemon_v2_pokemonshapename_by_pk?: Maybe<Pokemon_V2_Pokemonshapename>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_pokemonshapename" */
  pokemon_v2_pokemonshapename_stream: Array<Pokemon_V2_Pokemonshapename>;
  /** fetch data from the table: "pokemon_v2_pokemonspecies" */
  pokemon_v2_pokemonspecies: Array<Pokemon_V2_Pokemonspecies>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonspecies" */
  pokemon_v2_pokemonspecies_aggregate: Pokemon_V2_Pokemonspecies_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonspecies" using primary key columns */
  pokemon_v2_pokemonspecies_by_pk?: Maybe<Pokemon_V2_Pokemonspecies>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_pokemonspecies" */
  pokemon_v2_pokemonspecies_stream: Array<Pokemon_V2_Pokemonspecies>;
  /** fetch data from the table: "pokemon_v2_pokemonspeciesdescription" */
  pokemon_v2_pokemonspeciesdescription: Array<Pokemon_V2_Pokemonspeciesdescription>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonspeciesdescription" */
  pokemon_v2_pokemonspeciesdescription_aggregate: Pokemon_V2_Pokemonspeciesdescription_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonspeciesdescription" using primary key columns */
  pokemon_v2_pokemonspeciesdescription_by_pk?: Maybe<Pokemon_V2_Pokemonspeciesdescription>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_pokemonspeciesdescription" */
  pokemon_v2_pokemonspeciesdescription_stream: Array<Pokemon_V2_Pokemonspeciesdescription>;
  /** fetch data from the table: "pokemon_v2_pokemonspeciesflavortext" */
  pokemon_v2_pokemonspeciesflavortext: Array<Pokemon_V2_Pokemonspeciesflavortext>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonspeciesflavortext" */
  pokemon_v2_pokemonspeciesflavortext_aggregate: Pokemon_V2_Pokemonspeciesflavortext_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonspeciesflavortext" using primary key columns */
  pokemon_v2_pokemonspeciesflavortext_by_pk?: Maybe<Pokemon_V2_Pokemonspeciesflavortext>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_pokemonspeciesflavortext" */
  pokemon_v2_pokemonspeciesflavortext_stream: Array<Pokemon_V2_Pokemonspeciesflavortext>;
  /** fetch data from the table: "pokemon_v2_pokemonspeciesname" */
  pokemon_v2_pokemonspeciesname: Array<Pokemon_V2_Pokemonspeciesname>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonspeciesname" */
  pokemon_v2_pokemonspeciesname_aggregate: Pokemon_V2_Pokemonspeciesname_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonspeciesname" using primary key columns */
  pokemon_v2_pokemonspeciesname_by_pk?: Maybe<Pokemon_V2_Pokemonspeciesname>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_pokemonspeciesname" */
  pokemon_v2_pokemonspeciesname_stream: Array<Pokemon_V2_Pokemonspeciesname>;
  /** fetch data from the table: "pokemon_v2_pokemonsprites" */
  pokemon_v2_pokemonsprites: Array<Pokemon_V2_Pokemonsprites>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonsprites" */
  pokemon_v2_pokemonsprites_aggregate: Pokemon_V2_Pokemonsprites_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonsprites" using primary key columns */
  pokemon_v2_pokemonsprites_by_pk?: Maybe<Pokemon_V2_Pokemonsprites>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_pokemonsprites" */
  pokemon_v2_pokemonsprites_stream: Array<Pokemon_V2_Pokemonsprites>;
  /** fetch data from the table: "pokemon_v2_pokemonstat" */
  pokemon_v2_pokemonstat: Array<Pokemon_V2_Pokemonstat>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonstat" */
  pokemon_v2_pokemonstat_aggregate: Pokemon_V2_Pokemonstat_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonstat" using primary key columns */
  pokemon_v2_pokemonstat_by_pk?: Maybe<Pokemon_V2_Pokemonstat>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_pokemonstat" */
  pokemon_v2_pokemonstat_stream: Array<Pokemon_V2_Pokemonstat>;
  /** fetch data from the table: "pokemon_v2_pokemontype" */
  pokemon_v2_pokemontype: Array<Pokemon_V2_Pokemontype>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemontype" */
  pokemon_v2_pokemontype_aggregate: Pokemon_V2_Pokemontype_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemontype" using primary key columns */
  pokemon_v2_pokemontype_by_pk?: Maybe<Pokemon_V2_Pokemontype>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_pokemontype" */
  pokemon_v2_pokemontype_stream: Array<Pokemon_V2_Pokemontype>;
  /** fetch data from the table: "pokemon_v2_pokemontypepast" */
  pokemon_v2_pokemontypepast: Array<Pokemon_V2_Pokemontypepast>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemontypepast" */
  pokemon_v2_pokemontypepast_aggregate: Pokemon_V2_Pokemontypepast_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemontypepast" using primary key columns */
  pokemon_v2_pokemontypepast_by_pk?: Maybe<Pokemon_V2_Pokemontypepast>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_pokemontypepast" */
  pokemon_v2_pokemontypepast_stream: Array<Pokemon_V2_Pokemontypepast>;
  /** fetch data from the table: "pokemon_v2_region" */
  pokemon_v2_region: Array<Pokemon_V2_Region>;
  /** fetch aggregated fields from the table: "pokemon_v2_region" */
  pokemon_v2_region_aggregate: Pokemon_V2_Region_Aggregate;
  /** fetch data from the table: "pokemon_v2_region" using primary key columns */
  pokemon_v2_region_by_pk?: Maybe<Pokemon_V2_Region>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_region" */
  pokemon_v2_region_stream: Array<Pokemon_V2_Region>;
  /** fetch data from the table: "pokemon_v2_regionname" */
  pokemon_v2_regionname: Array<Pokemon_V2_Regionname>;
  /** fetch aggregated fields from the table: "pokemon_v2_regionname" */
  pokemon_v2_regionname_aggregate: Pokemon_V2_Regionname_Aggregate;
  /** fetch data from the table: "pokemon_v2_regionname" using primary key columns */
  pokemon_v2_regionname_by_pk?: Maybe<Pokemon_V2_Regionname>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_regionname" */
  pokemon_v2_regionname_stream: Array<Pokemon_V2_Regionname>;
  /** fetch data from the table: "pokemon_v2_stat" */
  pokemon_v2_stat: Array<Pokemon_V2_Stat>;
  /** fetch aggregated fields from the table: "pokemon_v2_stat" */
  pokemon_v2_stat_aggregate: Pokemon_V2_Stat_Aggregate;
  /** fetch data from the table: "pokemon_v2_stat" using primary key columns */
  pokemon_v2_stat_by_pk?: Maybe<Pokemon_V2_Stat>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_stat" */
  pokemon_v2_stat_stream: Array<Pokemon_V2_Stat>;
  /** fetch data from the table: "pokemon_v2_statname" */
  pokemon_v2_statname: Array<Pokemon_V2_Statname>;
  /** fetch aggregated fields from the table: "pokemon_v2_statname" */
  pokemon_v2_statname_aggregate: Pokemon_V2_Statname_Aggregate;
  /** fetch data from the table: "pokemon_v2_statname" using primary key columns */
  pokemon_v2_statname_by_pk?: Maybe<Pokemon_V2_Statname>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_statname" */
  pokemon_v2_statname_stream: Array<Pokemon_V2_Statname>;
  /** fetch data from the table: "pokemon_v2_supercontestcombo" */
  pokemon_v2_supercontestcombo: Array<Pokemon_V2_Supercontestcombo>;
  /** fetch aggregated fields from the table: "pokemon_v2_supercontestcombo" */
  pokemon_v2_supercontestcombo_aggregate: Pokemon_V2_Supercontestcombo_Aggregate;
  /** fetch data from the table: "pokemon_v2_supercontestcombo" using primary key columns */
  pokemon_v2_supercontestcombo_by_pk?: Maybe<Pokemon_V2_Supercontestcombo>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_supercontestcombo" */
  pokemon_v2_supercontestcombo_stream: Array<Pokemon_V2_Supercontestcombo>;
  /** fetch data from the table: "pokemon_v2_supercontesteffect" */
  pokemon_v2_supercontesteffect: Array<Pokemon_V2_Supercontesteffect>;
  /** fetch aggregated fields from the table: "pokemon_v2_supercontesteffect" */
  pokemon_v2_supercontesteffect_aggregate: Pokemon_V2_Supercontesteffect_Aggregate;
  /** fetch data from the table: "pokemon_v2_supercontesteffect" using primary key columns */
  pokemon_v2_supercontesteffect_by_pk?: Maybe<Pokemon_V2_Supercontesteffect>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_supercontesteffect" */
  pokemon_v2_supercontesteffect_stream: Array<Pokemon_V2_Supercontesteffect>;
  /** fetch data from the table: "pokemon_v2_supercontesteffectflavortext" */
  pokemon_v2_supercontesteffectflavortext: Array<Pokemon_V2_Supercontesteffectflavortext>;
  /** fetch aggregated fields from the table: "pokemon_v2_supercontesteffectflavortext" */
  pokemon_v2_supercontesteffectflavortext_aggregate: Pokemon_V2_Supercontesteffectflavortext_Aggregate;
  /** fetch data from the table: "pokemon_v2_supercontesteffectflavortext" using primary key columns */
  pokemon_v2_supercontesteffectflavortext_by_pk?: Maybe<Pokemon_V2_Supercontesteffectflavortext>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_supercontesteffectflavortext" */
  pokemon_v2_supercontesteffectflavortext_stream: Array<Pokemon_V2_Supercontesteffectflavortext>;
  /** fetch data from the table: "pokemon_v2_type" */
  pokemon_v2_type: Array<Pokemon_V2_Type>;
  /** fetch aggregated fields from the table: "pokemon_v2_type" */
  pokemon_v2_type_aggregate: Pokemon_V2_Type_Aggregate;
  /** fetch data from the table: "pokemon_v2_type" using primary key columns */
  pokemon_v2_type_by_pk?: Maybe<Pokemon_V2_Type>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_type" */
  pokemon_v2_type_stream: Array<Pokemon_V2_Type>;
  /** fetch data from the table: "pokemon_v2_typeefficacy" */
  pokemon_v2_typeefficacy: Array<Pokemon_V2_Typeefficacy>;
  /** fetch aggregated fields from the table: "pokemon_v2_typeefficacy" */
  pokemon_v2_typeefficacy_aggregate: Pokemon_V2_Typeefficacy_Aggregate;
  /** fetch data from the table: "pokemon_v2_typeefficacy" using primary key columns */
  pokemon_v2_typeefficacy_by_pk?: Maybe<Pokemon_V2_Typeefficacy>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_typeefficacy" */
  pokemon_v2_typeefficacy_stream: Array<Pokemon_V2_Typeefficacy>;
  /** fetch data from the table: "pokemon_v2_typeefficacypast" */
  pokemon_v2_typeefficacypast: Array<Pokemon_V2_Typeefficacypast>;
  /** fetch aggregated fields from the table: "pokemon_v2_typeefficacypast" */
  pokemon_v2_typeefficacypast_aggregate: Pokemon_V2_Typeefficacypast_Aggregate;
  /** fetch data from the table: "pokemon_v2_typeefficacypast" using primary key columns */
  pokemon_v2_typeefficacypast_by_pk?: Maybe<Pokemon_V2_Typeefficacypast>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_typeefficacypast" */
  pokemon_v2_typeefficacypast_stream: Array<Pokemon_V2_Typeefficacypast>;
  /** fetch data from the table: "pokemon_v2_typegameindex" */
  pokemon_v2_typegameindex: Array<Pokemon_V2_Typegameindex>;
  /** fetch aggregated fields from the table: "pokemon_v2_typegameindex" */
  pokemon_v2_typegameindex_aggregate: Pokemon_V2_Typegameindex_Aggregate;
  /** fetch data from the table: "pokemon_v2_typegameindex" using primary key columns */
  pokemon_v2_typegameindex_by_pk?: Maybe<Pokemon_V2_Typegameindex>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_typegameindex" */
  pokemon_v2_typegameindex_stream: Array<Pokemon_V2_Typegameindex>;
  /** fetch data from the table: "pokemon_v2_typename" */
  pokemon_v2_typename: Array<Pokemon_V2_Typename>;
  /** fetch aggregated fields from the table: "pokemon_v2_typename" */
  pokemon_v2_typename_aggregate: Pokemon_V2_Typename_Aggregate;
  /** fetch data from the table: "pokemon_v2_typename" using primary key columns */
  pokemon_v2_typename_by_pk?: Maybe<Pokemon_V2_Typename>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_typename" */
  pokemon_v2_typename_stream: Array<Pokemon_V2_Typename>;
  /** fetch data from the table: "pokemon_v2_version" */
  pokemon_v2_version: Array<Pokemon_V2_Version>;
  /** fetch aggregated fields from the table: "pokemon_v2_version" */
  pokemon_v2_version_aggregate: Pokemon_V2_Version_Aggregate;
  /** fetch data from the table: "pokemon_v2_version" using primary key columns */
  pokemon_v2_version_by_pk?: Maybe<Pokemon_V2_Version>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_version" */
  pokemon_v2_version_stream: Array<Pokemon_V2_Version>;
  /** fetch data from the table: "pokemon_v2_versiongroup" */
  pokemon_v2_versiongroup: Array<Pokemon_V2_Versiongroup>;
  /** fetch aggregated fields from the table: "pokemon_v2_versiongroup" */
  pokemon_v2_versiongroup_aggregate: Pokemon_V2_Versiongroup_Aggregate;
  /** fetch data from the table: "pokemon_v2_versiongroup" using primary key columns */
  pokemon_v2_versiongroup_by_pk?: Maybe<Pokemon_V2_Versiongroup>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_versiongroup" */
  pokemon_v2_versiongroup_stream: Array<Pokemon_V2_Versiongroup>;
  /** fetch data from the table: "pokemon_v2_versiongroupmovelearnmethod" */
  pokemon_v2_versiongroupmovelearnmethod: Array<Pokemon_V2_Versiongroupmovelearnmethod>;
  /** fetch aggregated fields from the table: "pokemon_v2_versiongroupmovelearnmethod" */
  pokemon_v2_versiongroupmovelearnmethod_aggregate: Pokemon_V2_Versiongroupmovelearnmethod_Aggregate;
  /** fetch data from the table: "pokemon_v2_versiongroupmovelearnmethod" using primary key columns */
  pokemon_v2_versiongroupmovelearnmethod_by_pk?: Maybe<Pokemon_V2_Versiongroupmovelearnmethod>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_versiongroupmovelearnmethod" */
  pokemon_v2_versiongroupmovelearnmethod_stream: Array<Pokemon_V2_Versiongroupmovelearnmethod>;
  /** fetch data from the table: "pokemon_v2_versiongroupregion" */
  pokemon_v2_versiongroupregion: Array<Pokemon_V2_Versiongroupregion>;
  /** fetch aggregated fields from the table: "pokemon_v2_versiongroupregion" */
  pokemon_v2_versiongroupregion_aggregate: Pokemon_V2_Versiongroupregion_Aggregate;
  /** fetch data from the table: "pokemon_v2_versiongroupregion" using primary key columns */
  pokemon_v2_versiongroupregion_by_pk?: Maybe<Pokemon_V2_Versiongroupregion>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_versiongroupregion" */
  pokemon_v2_versiongroupregion_stream: Array<Pokemon_V2_Versiongroupregion>;
  /** fetch data from the table: "pokemon_v2_versionname" */
  pokemon_v2_versionname: Array<Pokemon_V2_Versionname>;
  /** fetch aggregated fields from the table: "pokemon_v2_versionname" */
  pokemon_v2_versionname_aggregate: Pokemon_V2_Versionname_Aggregate;
  /** fetch data from the table: "pokemon_v2_versionname" using primary key columns */
  pokemon_v2_versionname_by_pk?: Maybe<Pokemon_V2_Versionname>;
  /** fetch data from the table in a streaming manner: "pokemon_v2_versionname" */
  pokemon_v2_versionname_stream: Array<Pokemon_V2_Versionname>;
};


export type Subscription_RootAuth_GroupArgs = {
  distinct_on?: InputMaybe<Array<Auth_Group_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Auth_Group_Order_By>>;
  where?: InputMaybe<Auth_Group_Bool_Exp>;
};


export type Subscription_RootAuth_Group_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Auth_Group_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Auth_Group_Order_By>>;
  where?: InputMaybe<Auth_Group_Bool_Exp>;
};


export type Subscription_RootAuth_Group_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootAuth_Group_PermissionsArgs = {
  distinct_on?: InputMaybe<Array<Auth_Group_Permissions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Auth_Group_Permissions_Order_By>>;
  where?: InputMaybe<Auth_Group_Permissions_Bool_Exp>;
};


export type Subscription_RootAuth_Group_Permissions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Auth_Group_Permissions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Auth_Group_Permissions_Order_By>>;
  where?: InputMaybe<Auth_Group_Permissions_Bool_Exp>;
};


export type Subscription_RootAuth_Group_Permissions_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootAuth_Group_Permissions_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Auth_Group_Permissions_Stream_Cursor_Input>>;
  where?: InputMaybe<Auth_Group_Permissions_Bool_Exp>;
};


export type Subscription_RootAuth_Group_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Auth_Group_Stream_Cursor_Input>>;
  where?: InputMaybe<Auth_Group_Bool_Exp>;
};


export type Subscription_RootAuth_PermissionArgs = {
  distinct_on?: InputMaybe<Array<Auth_Permission_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Auth_Permission_Order_By>>;
  where?: InputMaybe<Auth_Permission_Bool_Exp>;
};


export type Subscription_RootAuth_Permission_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Auth_Permission_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Auth_Permission_Order_By>>;
  where?: InputMaybe<Auth_Permission_Bool_Exp>;
};


export type Subscription_RootAuth_Permission_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootAuth_Permission_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Auth_Permission_Stream_Cursor_Input>>;
  where?: InputMaybe<Auth_Permission_Bool_Exp>;
};


export type Subscription_RootAuth_UserArgs = {
  distinct_on?: InputMaybe<Array<Auth_User_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Auth_User_Order_By>>;
  where?: InputMaybe<Auth_User_Bool_Exp>;
};


export type Subscription_RootAuth_User_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Auth_User_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Auth_User_Order_By>>;
  where?: InputMaybe<Auth_User_Bool_Exp>;
};


export type Subscription_RootAuth_User_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootAuth_User_GroupsArgs = {
  distinct_on?: InputMaybe<Array<Auth_User_Groups_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Auth_User_Groups_Order_By>>;
  where?: InputMaybe<Auth_User_Groups_Bool_Exp>;
};


export type Subscription_RootAuth_User_Groups_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Auth_User_Groups_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Auth_User_Groups_Order_By>>;
  where?: InputMaybe<Auth_User_Groups_Bool_Exp>;
};


export type Subscription_RootAuth_User_Groups_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootAuth_User_Groups_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Auth_User_Groups_Stream_Cursor_Input>>;
  where?: InputMaybe<Auth_User_Groups_Bool_Exp>;
};


export type Subscription_RootAuth_User_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Auth_User_Stream_Cursor_Input>>;
  where?: InputMaybe<Auth_User_Bool_Exp>;
};


export type Subscription_RootAuth_User_User_PermissionsArgs = {
  distinct_on?: InputMaybe<Array<Auth_User_User_Permissions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Auth_User_User_Permissions_Order_By>>;
  where?: InputMaybe<Auth_User_User_Permissions_Bool_Exp>;
};


export type Subscription_RootAuth_User_User_Permissions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Auth_User_User_Permissions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Auth_User_User_Permissions_Order_By>>;
  where?: InputMaybe<Auth_User_User_Permissions_Bool_Exp>;
};


export type Subscription_RootAuth_User_User_Permissions_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootAuth_User_User_Permissions_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Auth_User_User_Permissions_Stream_Cursor_Input>>;
  where?: InputMaybe<Auth_User_User_Permissions_Bool_Exp>;
};


export type Subscription_RootDjango_Admin_LogArgs = {
  distinct_on?: InputMaybe<Array<Django_Admin_Log_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Django_Admin_Log_Order_By>>;
  where?: InputMaybe<Django_Admin_Log_Bool_Exp>;
};


export type Subscription_RootDjango_Admin_Log_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Django_Admin_Log_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Django_Admin_Log_Order_By>>;
  where?: InputMaybe<Django_Admin_Log_Bool_Exp>;
};


export type Subscription_RootDjango_Admin_Log_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootDjango_Admin_Log_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Django_Admin_Log_Stream_Cursor_Input>>;
  where?: InputMaybe<Django_Admin_Log_Bool_Exp>;
};


export type Subscription_RootDjango_Content_TypeArgs = {
  distinct_on?: InputMaybe<Array<Django_Content_Type_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Django_Content_Type_Order_By>>;
  where?: InputMaybe<Django_Content_Type_Bool_Exp>;
};


export type Subscription_RootDjango_Content_Type_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Django_Content_Type_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Django_Content_Type_Order_By>>;
  where?: InputMaybe<Django_Content_Type_Bool_Exp>;
};


export type Subscription_RootDjango_Content_Type_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootDjango_Content_Type_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Django_Content_Type_Stream_Cursor_Input>>;
  where?: InputMaybe<Django_Content_Type_Bool_Exp>;
};


export type Subscription_RootDjango_MigrationsArgs = {
  distinct_on?: InputMaybe<Array<Django_Migrations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Django_Migrations_Order_By>>;
  where?: InputMaybe<Django_Migrations_Bool_Exp>;
};


export type Subscription_RootDjango_Migrations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Django_Migrations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Django_Migrations_Order_By>>;
  where?: InputMaybe<Django_Migrations_Bool_Exp>;
};


export type Subscription_RootDjango_Migrations_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootDjango_Migrations_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Django_Migrations_Stream_Cursor_Input>>;
  where?: InputMaybe<Django_Migrations_Bool_Exp>;
};


export type Subscription_RootDjango_SessionArgs = {
  distinct_on?: InputMaybe<Array<Django_Session_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Django_Session_Order_By>>;
  where?: InputMaybe<Django_Session_Bool_Exp>;
};


export type Subscription_RootDjango_Session_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Django_Session_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Django_Session_Order_By>>;
  where?: InputMaybe<Django_Session_Bool_Exp>;
};


export type Subscription_RootDjango_Session_By_PkArgs = {
  session_key: Scalars['String']['input'];
};


export type Subscription_RootDjango_Session_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Django_Session_Stream_Cursor_Input>>;
  where?: InputMaybe<Django_Session_Bool_Exp>;
};


export type Subscription_RootDjango_SiteArgs = {
  distinct_on?: InputMaybe<Array<Django_Site_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Django_Site_Order_By>>;
  where?: InputMaybe<Django_Site_Bool_Exp>;
};


export type Subscription_RootDjango_Site_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Django_Site_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Django_Site_Order_By>>;
  where?: InputMaybe<Django_Site_Bool_Exp>;
};


export type Subscription_RootDjango_Site_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootDjango_Site_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Django_Site_Stream_Cursor_Input>>;
  where?: InputMaybe<Django_Site_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_AbilityArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Ability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Ability_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Ability_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Ability_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Ability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Ability_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Ability_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Ability_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Ability_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Ability_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Ability_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_AbilitychangeArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Abilitychange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Abilitychange_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Abilitychange_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Abilitychange_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Abilitychange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Abilitychange_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Abilitychange_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Abilitychange_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Abilitychange_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Abilitychange_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Abilitychange_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_AbilitychangeeffecttextArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Abilitychangeeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Abilitychangeeffecttext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Abilitychangeeffecttext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Abilitychangeeffecttext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Abilitychangeeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Abilitychangeeffecttext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Abilitychangeeffecttext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Abilitychangeeffecttext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Abilitychangeeffecttext_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Abilitychangeeffecttext_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Abilitychangeeffecttext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_AbilityeffecttextArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Abilityeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Abilityeffecttext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Abilityeffecttext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Abilityeffecttext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Abilityeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Abilityeffecttext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Abilityeffecttext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Abilityeffecttext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Abilityeffecttext_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Abilityeffecttext_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Abilityeffecttext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_AbilityflavortextArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Abilityflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Abilityflavortext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Abilityflavortext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Abilityflavortext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Abilityflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Abilityflavortext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Abilityflavortext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Abilityflavortext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Abilityflavortext_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Abilityflavortext_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Abilityflavortext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_AbilitynameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Abilityname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Abilityname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Abilityname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Abilityname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Abilityname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Abilityname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Abilityname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Abilityname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Abilityname_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Abilityname_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Abilityname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_BerryArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Berry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Berry_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Berry_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Berry_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Berry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Berry_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Berry_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Berry_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Berry_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Berry_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Berry_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_BerryfirmnessArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Berryfirmness_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Berryfirmness_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Berryfirmness_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Berryfirmness_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Berryfirmness_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Berryfirmness_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Berryfirmness_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Berryfirmness_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Berryfirmness_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Berryfirmness_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Berryfirmness_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_BerryfirmnessnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Berryfirmnessname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Berryfirmnessname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Berryfirmnessname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Berryfirmnessname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Berryfirmnessname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Berryfirmnessname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Berryfirmnessname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Berryfirmnessname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Berryfirmnessname_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Berryfirmnessname_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Berryfirmnessname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_BerryflavorArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Berryflavor_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Berryflavor_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Berryflavor_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Berryflavor_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Berryflavor_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Berryflavor_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Berryflavor_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Berryflavor_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Berryflavor_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Berryflavor_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Berryflavor_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_BerryflavormapArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Berryflavormap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Berryflavormap_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Berryflavormap_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Berryflavormap_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Berryflavormap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Berryflavormap_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Berryflavormap_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Berryflavormap_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Berryflavormap_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Berryflavormap_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Berryflavormap_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_BerryflavornameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Berryflavorname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Berryflavorname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Berryflavorname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Berryflavorname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Berryflavorname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Berryflavorname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Berryflavorname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Berryflavorname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Berryflavorname_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Berryflavorname_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Berryflavorname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_CharacteristicArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Characteristic_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Characteristic_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Characteristic_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Characteristic_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Characteristic_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Characteristic_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Characteristic_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Characteristic_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Characteristic_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Characteristic_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Characteristic_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_CharacteristicdescriptionArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Characteristicdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Characteristicdescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Characteristicdescription_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Characteristicdescription_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Characteristicdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Characteristicdescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Characteristicdescription_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Characteristicdescription_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Characteristicdescription_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Characteristicdescription_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Characteristicdescription_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_ContestcomboArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Contestcombo_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Contestcombo_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Contestcombo_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Contestcombo_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Contestcombo_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Contestcombo_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Contestcombo_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Contestcombo_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Contestcombo_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Contestcombo_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Contestcombo_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_ContesteffectArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Contesteffect_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Contesteffect_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Contesteffect_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Contesteffect_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Contesteffect_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Contesteffect_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Contesteffect_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Contesteffect_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Contesteffect_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Contesteffect_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Contesteffect_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_ContesteffecteffecttextArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Contesteffecteffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Contesteffecteffecttext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Contesteffecteffecttext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Contesteffecteffecttext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Contesteffecteffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Contesteffecteffecttext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Contesteffecteffecttext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Contesteffecteffecttext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Contesteffecteffecttext_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Contesteffecteffecttext_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Contesteffecteffecttext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_ContesteffectflavortextArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Contesteffectflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Contesteffectflavortext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Contesteffectflavortext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Contesteffectflavortext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Contesteffectflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Contesteffectflavortext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Contesteffectflavortext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Contesteffectflavortext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Contesteffectflavortext_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Contesteffectflavortext_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Contesteffectflavortext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_ContesttypeArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Contesttype_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Contesttype_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Contesttype_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Contesttype_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Contesttype_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Contesttype_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Contesttype_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Contesttype_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Contesttype_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Contesttype_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Contesttype_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_ContesttypenameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Contesttypename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Contesttypename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Contesttypename_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Contesttypename_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Contesttypename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Contesttypename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Contesttypename_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Contesttypename_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Contesttypename_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Contesttypename_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Contesttypename_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_EgggroupArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Egggroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Egggroup_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Egggroup_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Egggroup_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Egggroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Egggroup_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Egggroup_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Egggroup_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Egggroup_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Egggroup_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Egggroup_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_EgggroupnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Egggroupname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Egggroupname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Egggroupname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Egggroupname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Egggroupname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Egggroupname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Egggroupname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Egggroupname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Egggroupname_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Egggroupname_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Egggroupname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_EncounterArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Encounter_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Encounter_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Encounter_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Encounter_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Encounter_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Encounter_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Encounter_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Encounter_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Encounter_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Encounter_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Encounter_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_EncounterconditionArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Encountercondition_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Encountercondition_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Encountercondition_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Encountercondition_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Encountercondition_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Encountercondition_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Encountercondition_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Encountercondition_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Encountercondition_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Encountercondition_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Encountercondition_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_EncounterconditionnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Encounterconditionname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Encounterconditionname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Encounterconditionname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Encounterconditionname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Encounterconditionname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Encounterconditionname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Encounterconditionname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Encounterconditionname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Encounterconditionname_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Encounterconditionname_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Encounterconditionname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_EncounterconditionvalueArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Encounterconditionvalue_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Encounterconditionvalue_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Encounterconditionvalue_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Encounterconditionvalue_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Encounterconditionvalue_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Encounterconditionvalue_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Encounterconditionvalue_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Encounterconditionvalue_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Encounterconditionvalue_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Encounterconditionvalue_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Encounterconditionvalue_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_EncounterconditionvaluemapArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Encounterconditionvaluemap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Encounterconditionvaluemap_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Encounterconditionvaluemap_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Encounterconditionvaluemap_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Encounterconditionvaluemap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Encounterconditionvaluemap_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Encounterconditionvaluemap_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Encounterconditionvaluemap_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Encounterconditionvaluemap_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Encounterconditionvaluemap_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Encounterconditionvaluemap_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_EncounterconditionvaluenameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Encounterconditionvaluename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Encounterconditionvaluename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Encounterconditionvaluename_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Encounterconditionvaluename_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Encounterconditionvaluename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Encounterconditionvaluename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Encounterconditionvaluename_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Encounterconditionvaluename_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Encounterconditionvaluename_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Encounterconditionvaluename_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Encounterconditionvaluename_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_EncountermethodArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Encountermethod_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Encountermethod_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Encountermethod_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Encountermethod_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Encountermethod_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Encountermethod_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Encountermethod_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Encountermethod_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Encountermethod_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Encountermethod_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Encountermethod_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_EncountermethodnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Encountermethodname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Encountermethodname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Encountermethodname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Encountermethodname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Encountermethodname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Encountermethodname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Encountermethodname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Encountermethodname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Encountermethodname_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Encountermethodname_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Encountermethodname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_EncounterslotArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Encounterslot_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Encounterslot_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Encounterslot_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Encounterslot_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Encounterslot_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Encounterslot_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Encounterslot_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Encounterslot_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Encounterslot_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Encounterslot_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Encounterslot_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_EvolutionchainArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Evolutionchain_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Evolutionchain_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Evolutionchain_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Evolutionchain_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Evolutionchain_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Evolutionchain_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Evolutionchain_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Evolutionchain_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Evolutionchain_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Evolutionchain_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Evolutionchain_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_EvolutiontriggerArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Evolutiontrigger_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Evolutiontrigger_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Evolutiontrigger_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Evolutiontrigger_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Evolutiontrigger_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Evolutiontrigger_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Evolutiontrigger_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Evolutiontrigger_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Evolutiontrigger_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Evolutiontrigger_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Evolutiontrigger_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_EvolutiontriggernameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Evolutiontriggername_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Evolutiontriggername_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Evolutiontriggername_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Evolutiontriggername_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Evolutiontriggername_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Evolutiontriggername_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Evolutiontriggername_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Evolutiontriggername_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Evolutiontriggername_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Evolutiontriggername_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Evolutiontriggername_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_ExperienceArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Experience_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Experience_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Experience_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Experience_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Experience_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Experience_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Experience_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Experience_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Experience_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Experience_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Experience_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_GenderArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Gender_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Gender_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Gender_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Gender_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Gender_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Gender_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Gender_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Gender_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Gender_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Gender_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Gender_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_GenerationArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Generation_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Generation_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Generation_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Generation_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Generation_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Generation_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Generation_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Generation_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Generation_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Generation_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Generation_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_GenerationnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Generationname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Generationname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Generationname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Generationname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Generationname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Generationname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Generationname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Generationname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Generationname_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Generationname_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Generationname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_GrowthrateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Growthrate_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Growthrate_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Growthrate_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Growthrate_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Growthrate_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Growthrate_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Growthrate_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Growthrate_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Growthrate_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Growthrate_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Growthrate_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_GrowthratedescriptionArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Growthratedescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Growthratedescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Growthratedescription_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Growthratedescription_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Growthratedescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Growthratedescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Growthratedescription_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Growthratedescription_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Growthratedescription_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Growthratedescription_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Growthratedescription_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_ItemArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Item_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Item_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Item_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Item_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Item_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Item_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Item_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Item_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Item_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_ItemattributeArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemattribute_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemattribute_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemattribute_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Itemattribute_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemattribute_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemattribute_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemattribute_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Itemattribute_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Itemattribute_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Itemattribute_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Itemattribute_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_ItemattributedescriptionArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemattributedescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemattributedescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemattributedescription_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Itemattributedescription_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemattributedescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemattributedescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemattributedescription_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Itemattributedescription_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Itemattributedescription_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Itemattributedescription_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Itemattributedescription_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_ItemattributemapArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemattributemap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemattributemap_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemattributemap_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Itemattributemap_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemattributemap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemattributemap_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemattributemap_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Itemattributemap_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Itemattributemap_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Itemattributemap_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Itemattributemap_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_ItemattributenameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemattributename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemattributename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemattributename_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Itemattributename_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemattributename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemattributename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemattributename_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Itemattributename_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Itemattributename_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Itemattributename_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Itemattributename_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_ItemcategoryArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemcategory_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemcategory_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemcategory_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Itemcategory_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemcategory_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemcategory_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemcategory_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Itemcategory_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Itemcategory_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Itemcategory_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Itemcategory_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_ItemcategorynameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemcategoryname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemcategoryname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemcategoryname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Itemcategoryname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemcategoryname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemcategoryname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemcategoryname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Itemcategoryname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Itemcategoryname_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Itemcategoryname_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Itemcategoryname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_ItemeffecttextArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemeffecttext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemeffecttext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Itemeffecttext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemeffecttext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemeffecttext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Itemeffecttext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Itemeffecttext_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Itemeffecttext_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Itemeffecttext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_ItemflavortextArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemflavortext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemflavortext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Itemflavortext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemflavortext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemflavortext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Itemflavortext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Itemflavortext_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Itemflavortext_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Itemflavortext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_ItemflingeffectArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemflingeffect_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemflingeffect_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemflingeffect_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Itemflingeffect_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemflingeffect_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemflingeffect_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemflingeffect_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Itemflingeffect_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Itemflingeffect_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Itemflingeffect_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Itemflingeffect_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_ItemflingeffecteffecttextArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemflingeffecteffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemflingeffecteffecttext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemflingeffecteffecttext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Itemflingeffecteffecttext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemflingeffecteffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemflingeffecteffecttext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemflingeffecteffecttext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Itemflingeffecteffecttext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Itemflingeffecteffecttext_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Itemflingeffecteffecttext_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Itemflingeffecteffecttext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_ItemgameindexArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemgameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemgameindex_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemgameindex_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Itemgameindex_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemgameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemgameindex_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemgameindex_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Itemgameindex_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Itemgameindex_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Itemgameindex_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Itemgameindex_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_ItemnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Itemname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Itemname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Itemname_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Itemname_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Itemname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_ItempocketArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itempocket_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itempocket_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itempocket_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Itempocket_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itempocket_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itempocket_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itempocket_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Itempocket_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Itempocket_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Itempocket_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Itempocket_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_ItempocketnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itempocketname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itempocketname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itempocketname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Itempocketname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itempocketname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itempocketname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itempocketname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Itempocketname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Itempocketname_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Itempocketname_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Itempocketname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_ItemspritesArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemsprites_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemsprites_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemsprites_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Itemsprites_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Itemsprites_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Itemsprites_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Itemsprites_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Itemsprites_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Itemsprites_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Itemsprites_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Itemsprites_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_LanguageArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Language_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Language_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Language_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Language_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Language_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Language_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Language_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Language_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Language_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Language_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Language_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_LanguagenameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Languagename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Languagename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Languagename_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Languagename_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Languagename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Languagename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Languagename_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Languagename_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Languagename_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Languagename_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Languagename_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_LocationArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Location_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Location_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Location_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Location_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Location_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Location_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Location_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Location_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Location_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Location_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Location_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_LocationareaArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Locationarea_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Locationarea_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Locationarea_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Locationarea_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Locationarea_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Locationarea_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Locationarea_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Locationarea_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Locationarea_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Locationarea_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Locationarea_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_LocationareaencounterrateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Locationareaencounterrate_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Locationareaencounterrate_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Locationareaencounterrate_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Locationareaencounterrate_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Locationareaencounterrate_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Locationareaencounterrate_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Locationareaencounterrate_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Locationareaencounterrate_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Locationareaencounterrate_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Locationareaencounterrate_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Locationareaencounterrate_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_LocationareanameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Locationareaname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Locationareaname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Locationareaname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Locationareaname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Locationareaname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Locationareaname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Locationareaname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Locationareaname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Locationareaname_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Locationareaname_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Locationareaname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_LocationgameindexArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Locationgameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Locationgameindex_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Locationgameindex_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Locationgameindex_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Locationgameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Locationgameindex_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Locationgameindex_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Locationgameindex_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Locationgameindex_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Locationgameindex_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Locationgameindex_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_LocationnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Locationname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Locationname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Locationname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Locationname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Locationname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Locationname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Locationname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Locationname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Locationname_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Locationname_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Locationname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_MachineArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Machine_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Machine_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Machine_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Machine_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Machine_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Machine_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Machine_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Machine_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Machine_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Machine_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Machine_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_MoveArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Move_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Move_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Move_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Move_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Move_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Move_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Move_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Move_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Move_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Move_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Move_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_MoveattributeArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Moveattribute_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Moveattribute_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Moveattribute_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Moveattribute_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Moveattribute_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Moveattribute_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Moveattribute_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Moveattribute_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Moveattribute_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Moveattribute_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Moveattribute_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_MoveattributedescriptionArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Moveattributedescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Moveattributedescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Moveattributedescription_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Moveattributedescription_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Moveattributedescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Moveattributedescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Moveattributedescription_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Moveattributedescription_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Moveattributedescription_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Moveattributedescription_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Moveattributedescription_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_MoveattributemapArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Moveattributemap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Moveattributemap_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Moveattributemap_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Moveattributemap_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Moveattributemap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Moveattributemap_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Moveattributemap_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Moveattributemap_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Moveattributemap_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Moveattributemap_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Moveattributemap_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_MoveattributenameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Moveattributename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Moveattributename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Moveattributename_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Moveattributename_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Moveattributename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Moveattributename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Moveattributename_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Moveattributename_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Moveattributename_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Moveattributename_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Moveattributename_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_MovebattlestyleArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movebattlestyle_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movebattlestyle_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movebattlestyle_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movebattlestyle_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movebattlestyle_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movebattlestyle_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movebattlestyle_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movebattlestyle_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Movebattlestyle_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Movebattlestyle_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Movebattlestyle_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_MovebattlestylenameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movebattlestylename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movebattlestylename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movebattlestylename_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movebattlestylename_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movebattlestylename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movebattlestylename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movebattlestylename_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movebattlestylename_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Movebattlestylename_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Movebattlestylename_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Movebattlestylename_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_MovechangeArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movechange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movechange_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movechange_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movechange_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movechange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movechange_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movechange_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movechange_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Movechange_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Movechange_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Movechange_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_MovedamageclassArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movedamageclass_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movedamageclass_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movedamageclass_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movedamageclass_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movedamageclass_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movedamageclass_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movedamageclass_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movedamageclass_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Movedamageclass_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Movedamageclass_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Movedamageclass_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_MovedamageclassdescriptionArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movedamageclassdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movedamageclassdescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movedamageclassdescription_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movedamageclassdescription_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movedamageclassdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movedamageclassdescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movedamageclassdescription_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movedamageclassdescription_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Movedamageclassdescription_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Movedamageclassdescription_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Movedamageclassdescription_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_MovedamageclassnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movedamageclassname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movedamageclassname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movedamageclassname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movedamageclassname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movedamageclassname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movedamageclassname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movedamageclassname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movedamageclassname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Movedamageclassname_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Movedamageclassname_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Movedamageclassname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_MoveeffectArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Moveeffect_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Moveeffect_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Moveeffect_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Moveeffect_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Moveeffect_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Moveeffect_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Moveeffect_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Moveeffect_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Moveeffect_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Moveeffect_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Moveeffect_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_MoveeffectchangeArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Moveeffectchange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Moveeffectchange_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Moveeffectchange_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Moveeffectchange_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Moveeffectchange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Moveeffectchange_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Moveeffectchange_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Moveeffectchange_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Moveeffectchange_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Moveeffectchange_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Moveeffectchange_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_MoveeffectchangeeffecttextArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Moveeffectchangeeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Moveeffectchangeeffecttext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Moveeffectchangeeffecttext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Moveeffectchangeeffecttext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Moveeffectchangeeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Moveeffectchangeeffecttext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Moveeffectchangeeffecttext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Moveeffectchangeeffecttext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Moveeffectchangeeffecttext_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Moveeffectchangeeffecttext_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Moveeffectchangeeffecttext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_MoveeffecteffecttextArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Moveeffecteffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Moveeffecteffecttext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Moveeffecteffecttext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Moveeffecteffecttext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Moveeffecteffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Moveeffecteffecttext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Moveeffecteffecttext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Moveeffecteffecttext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Moveeffecteffecttext_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Moveeffecteffecttext_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Moveeffecteffecttext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_MoveflavortextArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Moveflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Moveflavortext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Moveflavortext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Moveflavortext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Moveflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Moveflavortext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Moveflavortext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Moveflavortext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Moveflavortext_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Moveflavortext_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Moveflavortext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_MovelearnmethodArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movelearnmethod_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movelearnmethod_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movelearnmethod_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movelearnmethod_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movelearnmethod_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movelearnmethod_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movelearnmethod_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movelearnmethod_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Movelearnmethod_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Movelearnmethod_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Movelearnmethod_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_MovelearnmethoddescriptionArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movelearnmethoddescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movelearnmethoddescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movelearnmethoddescription_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movelearnmethoddescription_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movelearnmethoddescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movelearnmethoddescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movelearnmethoddescription_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movelearnmethoddescription_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Movelearnmethoddescription_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Movelearnmethoddescription_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Movelearnmethoddescription_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_MovelearnmethodnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movelearnmethodname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movelearnmethodname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movelearnmethodname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movelearnmethodname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movelearnmethodname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movelearnmethodname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movelearnmethodname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movelearnmethodname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Movelearnmethodname_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Movelearnmethodname_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Movelearnmethodname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_MovemetaArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movemeta_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movemeta_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movemeta_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movemeta_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movemeta_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movemeta_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movemeta_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movemeta_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Movemeta_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Movemeta_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Movemeta_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_MovemetaailmentArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movemetaailment_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movemetaailment_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movemetaailment_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movemetaailment_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movemetaailment_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movemetaailment_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movemetaailment_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movemetaailment_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Movemetaailment_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Movemetaailment_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Movemetaailment_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_MovemetaailmentnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movemetaailmentname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movemetaailmentname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movemetaailmentname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movemetaailmentname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movemetaailmentname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movemetaailmentname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movemetaailmentname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movemetaailmentname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Movemetaailmentname_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Movemetaailmentname_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Movemetaailmentname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_MovemetacategoryArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movemetacategory_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movemetacategory_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movemetacategory_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movemetacategory_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movemetacategory_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movemetacategory_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movemetacategory_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movemetacategory_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Movemetacategory_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Movemetacategory_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Movemetacategory_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_MovemetacategorydescriptionArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movemetacategorydescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movemetacategorydescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movemetacategorydescription_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movemetacategorydescription_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movemetacategorydescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movemetacategorydescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movemetacategorydescription_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movemetacategorydescription_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Movemetacategorydescription_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Movemetacategorydescription_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Movemetacategorydescription_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_MovemetastatchangeArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movemetastatchange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movemetastatchange_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movemetastatchange_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movemetastatchange_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movemetastatchange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movemetastatchange_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movemetastatchange_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movemetastatchange_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Movemetastatchange_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Movemetastatchange_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Movemetastatchange_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_MovenameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movename_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movename_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movename_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movename_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Movename_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Movename_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Movename_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_MovetargetArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movetarget_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movetarget_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movetarget_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movetarget_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movetarget_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movetarget_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movetarget_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movetarget_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Movetarget_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Movetarget_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Movetarget_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_MovetargetdescriptionArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movetargetdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movetargetdescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movetargetdescription_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movetargetdescription_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movetargetdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movetargetdescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movetargetdescription_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movetargetdescription_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Movetargetdescription_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Movetargetdescription_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Movetargetdescription_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_MovetargetnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movetargetname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movetargetname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movetargetname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movetargetname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Movetargetname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Movetargetname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Movetargetname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Movetargetname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Movetargetname_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Movetargetname_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Movetargetname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_NatureArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Nature_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Nature_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Nature_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Nature_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Nature_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Nature_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Nature_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Nature_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Nature_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Nature_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Nature_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_NaturebattlestylepreferenceArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Naturebattlestylepreference_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Naturebattlestylepreference_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Naturebattlestylepreference_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Naturebattlestylepreference_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Naturebattlestylepreference_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Naturebattlestylepreference_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Naturebattlestylepreference_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Naturebattlestylepreference_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Naturebattlestylepreference_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Naturebattlestylepreference_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Naturebattlestylepreference_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_NaturenameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Naturename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Naturename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Naturename_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Naturename_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Naturename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Naturename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Naturename_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Naturename_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Naturename_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Naturename_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Naturename_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_NaturepokeathlonstatArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Naturepokeathlonstat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Naturepokeathlonstat_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Naturepokeathlonstat_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Naturepokeathlonstat_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Naturepokeathlonstat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Naturepokeathlonstat_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Naturepokeathlonstat_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Naturepokeathlonstat_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Naturepokeathlonstat_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Naturepokeathlonstat_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Naturepokeathlonstat_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PalparkArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Palpark_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Palpark_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Palpark_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Palpark_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Palpark_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Palpark_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Palpark_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Palpark_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Palpark_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Palpark_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Palpark_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PalparkareaArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Palparkarea_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Palparkarea_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Palparkarea_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Palparkarea_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Palparkarea_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Palparkarea_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Palparkarea_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Palparkarea_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Palparkarea_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Palparkarea_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Palparkarea_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PalparkareanameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Palparkareaname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Palparkareaname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Palparkareaname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Palparkareaname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Palparkareaname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Palparkareaname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Palparkareaname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Palparkareaname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Palparkareaname_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Palparkareaname_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Palparkareaname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PokeathlonstatArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokeathlonstat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokeathlonstat_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokeathlonstat_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokeathlonstat_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokeathlonstat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokeathlonstat_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokeathlonstat_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokeathlonstat_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Pokeathlonstat_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Pokeathlonstat_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Pokeathlonstat_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PokeathlonstatnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokeathlonstatname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokeathlonstatname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokeathlonstatname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokeathlonstatname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokeathlonstatname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokeathlonstatname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokeathlonstatname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokeathlonstatname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Pokeathlonstatname_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Pokeathlonstatname_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Pokeathlonstatname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PokedexArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokedex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokedex_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokedex_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokedex_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokedex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokedex_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokedex_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokedex_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Pokedex_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Pokedex_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Pokedex_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PokedexdescriptionArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokedexdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokedexdescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokedexdescription_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokedexdescription_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokedexdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokedexdescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokedexdescription_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokedexdescription_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Pokedexdescription_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Pokedexdescription_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Pokedexdescription_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PokedexnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokedexname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokedexname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokedexname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokedexname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokedexname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokedexname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokedexname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokedexname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Pokedexname_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Pokedexname_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Pokedexname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PokedexversiongroupArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokedexversiongroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokedexversiongroup_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokedexversiongroup_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokedexversiongroup_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokedexversiongroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokedexversiongroup_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokedexversiongroup_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokedexversiongroup_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Pokedexversiongroup_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Pokedexversiongroup_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Pokedexversiongroup_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PokemonArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemon_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemon_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemon_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemon_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemon_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemon_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemon_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemon_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Pokemon_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Pokemon_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Pokemon_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PokemonabilityArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonability_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonability_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonability_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonability_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonability_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonability_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Pokemonability_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Pokemonability_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Pokemonability_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PokemonabilitypastArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonabilitypast_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonabilitypast_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonabilitypast_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonabilitypast_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonabilitypast_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonabilitypast_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonabilitypast_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonabilitypast_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Pokemonabilitypast_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Pokemonabilitypast_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Pokemonabilitypast_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PokemoncolorArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemoncolor_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemoncolor_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemoncolor_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemoncolor_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemoncolor_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemoncolor_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemoncolor_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemoncolor_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Pokemoncolor_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Pokemoncolor_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Pokemoncolor_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PokemoncolornameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemoncolorname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemoncolorname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemoncolorname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemoncolorname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemoncolorname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemoncolorname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemoncolorname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemoncolorname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Pokemoncolorname_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Pokemoncolorname_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Pokemoncolorname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PokemoncriesArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemoncries_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemoncries_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemoncries_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemoncries_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemoncries_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemoncries_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemoncries_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemoncries_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Pokemoncries_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Pokemoncries_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Pokemoncries_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PokemondexnumberArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemondexnumber_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemondexnumber_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemondexnumber_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemondexnumber_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemondexnumber_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemondexnumber_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemondexnumber_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemondexnumber_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Pokemondexnumber_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Pokemondexnumber_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Pokemondexnumber_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PokemonegggroupArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonegggroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonegggroup_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonegggroup_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonegggroup_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonegggroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonegggroup_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonegggroup_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonegggroup_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Pokemonegggroup_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Pokemonegggroup_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Pokemonegggroup_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PokemonevolutionArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonevolution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonevolution_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonevolution_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonevolution_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonevolution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonevolution_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonevolution_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonevolution_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Pokemonevolution_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Pokemonevolution_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Pokemonevolution_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PokemonformArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonform_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonform_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonform_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonform_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonform_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonform_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonform_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonform_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Pokemonform_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Pokemonform_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Pokemonform_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PokemonformgenerationArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonformgeneration_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonformgeneration_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonformgeneration_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonformgeneration_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonformgeneration_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonformgeneration_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonformgeneration_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonformgeneration_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Pokemonformgeneration_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Pokemonformgeneration_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Pokemonformgeneration_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PokemonformnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonformname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonformname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonformname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonformname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonformname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonformname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonformname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonformname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Pokemonformname_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Pokemonformname_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Pokemonformname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PokemonformspritesArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonformsprites_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonformsprites_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonformsprites_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonformsprites_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonformsprites_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonformsprites_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonformsprites_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonformsprites_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Pokemonformsprites_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Pokemonformsprites_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Pokemonformsprites_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PokemonformtypeArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonformtype_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonformtype_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonformtype_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonformtype_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonformtype_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonformtype_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonformtype_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonformtype_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Pokemonformtype_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Pokemonformtype_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Pokemonformtype_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PokemongameindexArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemongameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemongameindex_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemongameindex_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemongameindex_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemongameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemongameindex_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemongameindex_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemongameindex_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Pokemongameindex_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Pokemongameindex_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Pokemongameindex_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PokemonhabitatArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonhabitat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonhabitat_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonhabitat_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonhabitat_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonhabitat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonhabitat_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonhabitat_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonhabitat_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Pokemonhabitat_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Pokemonhabitat_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Pokemonhabitat_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PokemonhabitatnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonhabitatname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonhabitatname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonhabitatname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonhabitatname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonhabitatname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonhabitatname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonhabitatname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonhabitatname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Pokemonhabitatname_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Pokemonhabitatname_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Pokemonhabitatname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PokemonitemArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonitem_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonitem_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonitem_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonitem_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonitem_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonitem_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonitem_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonitem_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Pokemonitem_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Pokemonitem_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Pokemonitem_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PokemonmoveArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonmove_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonmove_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonmove_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonmove_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonmove_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonmove_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonmove_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonmove_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Pokemonmove_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Pokemonmove_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Pokemonmove_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PokemonshapeArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonshape_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonshape_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonshape_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonshape_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonshape_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonshape_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonshape_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonshape_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Pokemonshape_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Pokemonshape_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Pokemonshape_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PokemonshapenameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonshapename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonshapename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonshapename_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonshapename_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonshapename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonshapename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonshapename_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonshapename_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Pokemonshapename_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Pokemonshapename_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Pokemonshapename_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PokemonspeciesArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonspecies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonspecies_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonspecies_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonspecies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonspecies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonspecies_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonspecies_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonspecies_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Pokemonspecies_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Pokemonspecies_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Pokemonspecies_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PokemonspeciesdescriptionArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonspeciesdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonspeciesdescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonspeciesdescription_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonspeciesdescription_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonspeciesdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonspeciesdescription_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonspeciesdescription_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonspeciesdescription_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Pokemonspeciesdescription_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Pokemonspeciesdescription_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Pokemonspeciesdescription_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PokemonspeciesflavortextArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonspeciesflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonspeciesflavortext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonspeciesflavortext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonspeciesflavortext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonspeciesflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonspeciesflavortext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonspeciesflavortext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonspeciesflavortext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Pokemonspeciesflavortext_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Pokemonspeciesflavortext_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Pokemonspeciesflavortext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PokemonspeciesnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonspeciesname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonspeciesname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonspeciesname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonspeciesname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonspeciesname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonspeciesname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonspeciesname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonspeciesname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Pokemonspeciesname_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Pokemonspeciesname_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Pokemonspeciesname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PokemonspritesArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonsprites_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonsprites_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonsprites_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonsprites_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonsprites_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonsprites_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonsprites_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonsprites_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Pokemonsprites_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Pokemonsprites_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Pokemonsprites_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PokemonstatArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonstat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonstat_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonstat_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonstat_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemonstat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemonstat_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemonstat_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemonstat_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Pokemonstat_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Pokemonstat_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Pokemonstat_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PokemontypeArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemontype_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemontype_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemontype_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemontype_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemontype_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemontype_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemontype_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemontype_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Pokemontype_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Pokemontype_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Pokemontype_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_PokemontypepastArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemontypepast_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemontypepast_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemontypepast_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemontypepast_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Pokemontypepast_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Pokemontypepast_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Pokemontypepast_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Pokemontypepast_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Pokemontypepast_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Pokemontypepast_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Pokemontypepast_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_RegionArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Region_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Region_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Region_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Region_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Region_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Region_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Region_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Region_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Region_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Region_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Region_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_RegionnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Regionname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Regionname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Regionname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Regionname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Regionname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Regionname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Regionname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Regionname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Regionname_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Regionname_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Regionname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_StatArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Stat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Stat_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Stat_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Stat_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Stat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Stat_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Stat_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Stat_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Stat_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Stat_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Stat_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_StatnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Statname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Statname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Statname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Statname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Statname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Statname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Statname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Statname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Statname_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Statname_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Statname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_SupercontestcomboArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Supercontestcombo_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Supercontestcombo_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Supercontestcombo_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Supercontestcombo_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Supercontestcombo_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Supercontestcombo_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Supercontestcombo_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Supercontestcombo_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Supercontestcombo_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Supercontestcombo_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Supercontestcombo_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_SupercontesteffectArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Supercontesteffect_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Supercontesteffect_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Supercontesteffect_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Supercontesteffect_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Supercontesteffect_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Supercontesteffect_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Supercontesteffect_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Supercontesteffect_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Supercontesteffect_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Supercontesteffect_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Supercontesteffect_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_SupercontesteffectflavortextArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Supercontesteffectflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Supercontesteffectflavortext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Supercontesteffectflavortext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Supercontesteffectflavortext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Supercontesteffectflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Supercontesteffectflavortext_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Supercontesteffectflavortext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Supercontesteffectflavortext_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Supercontesteffectflavortext_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Supercontesteffectflavortext_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Supercontesteffectflavortext_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_TypeArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Type_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Type_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Type_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Type_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Type_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Type_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Type_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Type_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Type_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Type_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Type_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_TypeefficacyArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Typeefficacy_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Typeefficacy_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Typeefficacy_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Typeefficacy_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Typeefficacy_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Typeefficacy_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Typeefficacy_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Typeefficacy_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Typeefficacy_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Typeefficacy_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Typeefficacy_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_TypeefficacypastArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Typeefficacypast_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Typeefficacypast_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Typeefficacypast_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Typeefficacypast_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Typeefficacypast_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Typeefficacypast_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Typeefficacypast_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Typeefficacypast_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Typeefficacypast_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Typeefficacypast_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Typeefficacypast_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_TypegameindexArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Typegameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Typegameindex_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Typegameindex_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Typegameindex_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Typegameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Typegameindex_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Typegameindex_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Typegameindex_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Typegameindex_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Typegameindex_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Typegameindex_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_TypenameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Typename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Typename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Typename_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Typename_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Typename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Typename_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Typename_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Typename_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Typename_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Typename_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Typename_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_VersionArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Version_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Version_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Version_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Version_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Version_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Version_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Version_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Version_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Version_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Version_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Version_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_VersiongroupArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Versiongroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Versiongroup_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Versiongroup_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Versiongroup_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Versiongroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Versiongroup_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Versiongroup_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Versiongroup_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Versiongroup_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Versiongroup_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Versiongroup_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_VersiongroupmovelearnmethodArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Versiongroupmovelearnmethod_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Versiongroupmovelearnmethod_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Versiongroupmovelearnmethod_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Versiongroupmovelearnmethod_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Versiongroupmovelearnmethod_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Versiongroupmovelearnmethod_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Versiongroupmovelearnmethod_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Versiongroupmovelearnmethod_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Versiongroupmovelearnmethod_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Versiongroupmovelearnmethod_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Versiongroupmovelearnmethod_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_VersiongroupregionArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Versiongroupregion_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Versiongroupregion_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Versiongroupregion_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Versiongroupregion_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Versiongroupregion_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Versiongroupregion_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Versiongroupregion_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Versiongroupregion_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Versiongroupregion_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Versiongroupregion_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Versiongroupregion_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_VersionnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Versionname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Versionname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Versionname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Versionname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_V2_Versionname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_V2_Versionname_Order_By>>;
  where?: InputMaybe<Pokemon_V2_Versionname_Bool_Exp>;
};


export type Subscription_RootPokemon_V2_Versionname_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPokemon_V2_Versionname_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Pokemon_V2_Versionname_Stream_Cursor_Input>>;
  where?: InputMaybe<Pokemon_V2_Versionname_Bool_Exp>;
};

/** Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'. */
export type Timestamptz_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['timestamptz']['input']>;
  _gt?: InputMaybe<Scalars['timestamptz']['input']>;
  _gte?: InputMaybe<Scalars['timestamptz']['input']>;
  _in?: InputMaybe<Array<Scalars['timestamptz']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['timestamptz']['input']>;
  _lte?: InputMaybe<Scalars['timestamptz']['input']>;
  _neq?: InputMaybe<Scalars['timestamptz']['input']>;
  _nin?: InputMaybe<Array<Scalars['timestamptz']['input']>>;
};

export type GetPokemonQueryVariables = Exact<{ [key: string]: never; }>;


export type GetPokemonQuery = { __typename?: 'query_root', pokemon_v2_pokemon: Array<{ __typename?: 'pokemon_v2_pokemon', name: string, id: number, weight?: number | null, height?: number | null }>, pokemon_v2_pokemonsprites: Array<{ __typename?: 'pokemon_v2_pokemonsprites', pokemon_id?: number | null, sprites: any }> };


export const GetPokemonDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetPokemon"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pokemon_v2_pokemon"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"9"}},{"kind":"Argument","name":{"kind":"Name","value":"order_by"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"EnumValue","value":"asc"}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"weight"}},{"kind":"Field","name":{"kind":"Name","value":"height"}}]}},{"kind":"Field","name":{"kind":"Name","value":"pokemon_v2_pokemonsprites"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"9"}},{"kind":"Argument","name":{"kind":"Name","value":"order_by"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"pokemon_id"},"value":{"kind":"EnumValue","value":"asc"}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pokemon_id"}},{"kind":"Field","name":{"kind":"Name","value":"sprites"}}]}}]}}]} as unknown as DocumentNode<GetPokemonQuery, GetPokemonQueryVariables>;